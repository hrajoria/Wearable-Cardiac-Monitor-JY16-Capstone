ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"ff.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.ld_word,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	ld_word, %function
  25              	ld_word:
  26              	.LFB0:
  27              		.file 1 "ff.c"
   1:ff.c          **** /*----------------------------------------------------------------------------/
   2:ff.c          **** /  FatFs - Generic FAT Filesystem Module  R0.13a                              /
   3:ff.c          **** /-----------------------------------------------------------------------------/
   4:ff.c          **** /
   5:ff.c          **** / Copyright (C) 2017, ChaN, all right reserved.
   6:ff.c          **** /
   7:ff.c          **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:ff.c          **** / source and binary forms, with or without modification, are permitted provided
   9:ff.c          **** / that the following condition is met:
  10:ff.c          **** /
  11:ff.c          **** / 1. Redistributions of source code must retain the above copyright notice,
  12:ff.c          **** /    this condition and the following disclaimer.
  13:ff.c          **** /
  14:ff.c          **** / This software is provided by the copyright holder and contributors "AS IS"
  15:ff.c          **** / and any warranties related to this software are DISCLAIMED.
  16:ff.c          **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:ff.c          **** / by use of this software.
  18:ff.c          **** /
  19:ff.c          **** /----------------------------------------------------------------------------*/
  20:ff.c          **** 
  21:ff.c          **** 
  22:ff.c          **** #include "ff.h"			/* Declarations of FatFs API */
  23:ff.c          **** #include "diskio.h"		/* Declarations of device I/O functions */
  24:ff.c          **** 
  25:ff.c          **** 
  26:ff.c          **** /*--------------------------------------------------------------------------
  27:ff.c          **** 
  28:ff.c          ****    Module Private Definitions
  29:ff.c          **** 
  30:ff.c          **** ---------------------------------------------------------------------------*/
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 2


  31:ff.c          **** 
  32:ff.c          **** #if FF_DEFINED != 89352	/* Revision ID */
  33:ff.c          **** #error Wrong include file (ff.h).
  34:ff.c          **** #endif
  35:ff.c          **** 
  36:ff.c          **** 
  37:ff.c          **** /* Character code support macros */
  38:ff.c          **** #define IsUpper(c)		((c) >= 'A' && (c) <= 'Z')
  39:ff.c          **** #define IsLower(c)		((c) >= 'a' && (c) <= 'z')
  40:ff.c          **** #define IsDigit(c)		((c) >= '0' && (c) <= '9')
  41:ff.c          **** #define IsSurrogate(c)	((c) >= 0xD800 && (c) <= 0xDFFF)
  42:ff.c          **** #define IsSurrogateH(c)	((c) >= 0xD800 && (c) <= 0xDBFF)
  43:ff.c          **** #define IsSurrogateL(c)	((c) >= 0xDC00 && (c) <= 0xDFFF)
  44:ff.c          **** 
  45:ff.c          **** 
  46:ff.c          **** /* Additional file attribute bits for internal use */
  47:ff.c          **** #define AM_VOL		0x08	/* Volume label */
  48:ff.c          **** #define AM_LFN		0x0F	/* LFN entry */
  49:ff.c          **** #define AM_MASK		0x3F	/* Mask of defined bits */
  50:ff.c          **** 
  51:ff.c          **** 
  52:ff.c          **** /* Additional file access control and file status flags for internal use */
  53:ff.c          **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
  54:ff.c          **** #define FA_MODIFIED	0x40	/* File has been modified */
  55:ff.c          **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
  56:ff.c          **** 
  57:ff.c          **** 
  58:ff.c          **** /* Name status flags in fn[11] */
  59:ff.c          **** #define NSFLAG		11		/* Index of the name status byte */
  60:ff.c          **** #define NS_LOSS		0x01	/* Out of 8.3 format */
  61:ff.c          **** #define NS_LFN		0x02	/* Force to create LFN entry */
  62:ff.c          **** #define NS_LAST		0x04	/* Last segment */
  63:ff.c          **** #define NS_BODY		0x08	/* Lower case flag (body) */
  64:ff.c          **** #define NS_EXT		0x10	/* Lower case flag (ext) */
  65:ff.c          **** #define NS_DOT		0x20	/* Dot entry */
  66:ff.c          **** #define NS_NOLFN	0x40	/* Do not find LFN */
  67:ff.c          **** #define NS_NONAME	0x80	/* Not followed */
  68:ff.c          **** 
  69:ff.c          **** 
  70:ff.c          **** /* Limits and boundaries */
  71:ff.c          **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
  72:ff.c          **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
  73:ff.c          **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but right for real DOS/Windows
  74:ff.c          **** #define MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but right for real DOS/Window
  75:ff.c          **** #define MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
  76:ff.c          **** #define MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
  77:ff.c          **** 
  78:ff.c          **** 
  79:ff.c          **** /* FatFs refers the FAT structure as simple byte array instead of structure member
  80:ff.c          **** / because the C structure is not binary compatible between different platforms */
  81:ff.c          **** 
  82:ff.c          **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
  83:ff.c          **** #define BS_OEMName			3		/* OEM name (8-byte) */
  84:ff.c          **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
  85:ff.c          **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
  86:ff.c          **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
  87:ff.c          **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 3


  88:ff.c          **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT [entry] (WORD) */
  89:ff.c          **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
  90:ff.c          **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
  91:ff.c          **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
  92:ff.c          **** #define BPB_SecPerTrk		24		/* Number of sectors per track for int13h [sector] (WORD) */
  93:ff.c          **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
  94:ff.c          **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
  95:ff.c          **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
  96:ff.c          **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
  97:ff.c          **** #define BS_NTres			37		/* WindowsNT error flag (BYTE) */
  98:ff.c          **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
  99:ff.c          **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 100:ff.c          **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 101:ff.c          **** #define BS_FilSysType		54		/* Filesystem type string (8-byte) */
 102:ff.c          **** #define BS_BootCode			62		/* Boot code (448-byte) */
 103:ff.c          **** #define BS_55AA				510		/* Signature word (WORD) */
 104:ff.c          **** 
 105:ff.c          **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 106:ff.c          **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 107:ff.c          **** #define BPB_FSVer32			42		/* FAT32: Filesystem version (WORD) */
 108:ff.c          **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 109:ff.c          **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 110:ff.c          **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 111:ff.c          **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 112:ff.c          **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 113:ff.c          **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 114:ff.c          **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 115:ff.c          **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 116:ff.c          **** #define BS_FilSysType32		82		/* FAT32: Filesystem type string (8-byte) */
 117:ff.c          **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 118:ff.c          **** 
 119:ff.c          **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 120:ff.c          **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
 121:ff.c          **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 122:ff.c          **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 123:ff.c          **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 124:ff.c          **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 125:ff.c          **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 126:ff.c          **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 127:ff.c          **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 128:ff.c          **** #define BPB_FSVerEx			104		/* exFAT: Filesystem version (WORD) */
 129:ff.c          **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (WORD) */
 130:ff.c          **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 131:ff.c          **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 132:ff.c          **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 133:ff.c          **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 134:ff.c          **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 135:ff.c          **** #define BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 136:ff.c          **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 137:ff.c          **** 
 138:ff.c          **** #define DIR_Name			0		/* Short file name (11-byte) */
 139:ff.c          **** #define DIR_Attr			11		/* Attribute (BYTE) */
 140:ff.c          **** #define DIR_NTres			12		/* Lower case flag (BYTE) */
 141:ff.c          **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 142:ff.c          **** #define DIR_CrtTime			14		/* Created time (DWORD) */
 143:ff.c          **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 144:ff.c          **** #define DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 4


 145:ff.c          **** #define DIR_ModTime			22		/* Modified time (DWORD) */
 146:ff.c          **** #define DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 147:ff.c          **** #define DIR_FileSize		28		/* File size (DWORD) */
 148:ff.c          **** #define LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 149:ff.c          **** #define LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 150:ff.c          **** #define LDIR_Type			12		/* LFN: Entry type (BYTE) */
 151:ff.c          **** #define LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 152:ff.c          **** #define LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 153:ff.c          **** #define XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 154:ff.c          **** #define XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 155:ff.c          **** #define XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 156:ff.c          **** #define XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 157:ff.c          **** #define XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 158:ff.c          **** #define XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 159:ff.c          **** #define XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 160:ff.c          **** #define XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 161:ff.c          **** #define XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 162:ff.c          **** #define XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 163:ff.c          **** #define XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 164:ff.c          **** #define XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 165:ff.c          **** #define XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 166:ff.c          **** #define XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 167:ff.c          **** #define XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 168:ff.c          **** #define XDIR_GenFlags		33		/* exFAT: General secondary flags (BYTE) */
 169:ff.c          **** #define XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 170:ff.c          **** #define XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 171:ff.c          **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 172:ff.c          **** #define XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 173:ff.c          **** #define XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 174:ff.c          **** 
 175:ff.c          **** #define SZDIRE				32		/* Size of a directory entry */
 176:ff.c          **** #define DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
 177:ff.c          **** #define RDDEM				0x05	/* Replacement of the character collides with DDEM */
 178:ff.c          **** #define LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 179:ff.c          **** 
 180:ff.c          **** #define FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 181:ff.c          **** #define FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 182:ff.c          **** #define FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 183:ff.c          **** #define FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 184:ff.c          **** 
 185:ff.c          **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 186:ff.c          **** #define SZ_PTE				16		/* MBR: Size of a partition table entry */
 187:ff.c          **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 188:ff.c          **** #define PTE_StHead			1		/* MBR PTE: Start head */
 189:ff.c          **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 190:ff.c          **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 191:ff.c          **** #define PTE_System			4		/* MBR PTE: System ID */
 192:ff.c          **** #define PTE_EdHead			5		/* MBR PTE: End head */
 193:ff.c          **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 194:ff.c          **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 195:ff.c          **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 196:ff.c          **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 197:ff.c          **** 
 198:ff.c          **** 
 199:ff.c          **** /* Post process on fatal error in the file operations */
 200:ff.c          **** #define ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 201:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 5


 202:ff.c          **** 
 203:ff.c          **** /* Re-entrancy related */
 204:ff.c          **** #if FF_FS_REENTRANT
 205:ff.c          **** #if FF_USE_LFN == 1
 206:ff.c          **** #error Static LFN work area cannot be used at thread-safe configuration
 207:ff.c          **** #endif
 208:ff.c          **** #define LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 209:ff.c          **** #else
 210:ff.c          **** #define LEAVE_FF(fs, res)	return res
 211:ff.c          **** #endif
 212:ff.c          **** 
 213:ff.c          **** 
 214:ff.c          **** /* Definitions of volume - physical location conversion */
 215:ff.c          **** #if FF_MULTI_PARTITION
 216:ff.c          **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 217:ff.c          **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 218:ff.c          **** #else
 219:ff.c          **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 220:ff.c          **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 221:ff.c          **** #endif
 222:ff.c          **** 
 223:ff.c          **** 
 224:ff.c          **** /* Definitions of sector size */
 225:ff.c          **** #if (FF_MAX_SS < FF_MIN_SS) || (FF_MAX_SS != 512 && FF_MAX_SS != 1024 && FF_MAX_SS != 2048 && FF_MA
 226:ff.c          **** #error Wrong sector size configuration
 227:ff.c          **** #endif
 228:ff.c          **** #if FF_MAX_SS == FF_MIN_SS
 229:ff.c          **** #define SS(fs)	((UINT)FF_MAX_SS)	/* Fixed sector size */
 230:ff.c          **** #else
 231:ff.c          **** #define SS(fs)	((fs)->ssize)	/* Variable sector size */
 232:ff.c          **** #endif
 233:ff.c          **** 
 234:ff.c          **** 
 235:ff.c          **** /* Timestamp */
 236:ff.c          **** #if FF_FS_NORTC == 1
 237:ff.c          **** #if FF_NORTC_YEAR < 1980 || FF_NORTC_YEAR > 2107 || FF_NORTC_MON < 1 || FF_NORTC_MON > 12 || FF_NOR
 238:ff.c          **** #error Invalid FF_FS_NORTC settings
 239:ff.c          **** #endif
 240:ff.c          **** #define GET_FATTIME()	((DWORD)(FF_NORTC_YEAR - 1980) << 25 | (DWORD)FF_NORTC_MON << 21 | (DWORD)FF_
 241:ff.c          **** #else
 242:ff.c          **** #define GET_FATTIME()	get_fattime()
 243:ff.c          **** #endif
 244:ff.c          **** 
 245:ff.c          **** 
 246:ff.c          **** /* File lock controls */
 247:ff.c          **** #if FF_FS_LOCK != 0
 248:ff.c          **** #if FF_FS_READONLY
 249:ff.c          **** #error FF_FS_LOCK must be 0 at read-only configuration
 250:ff.c          **** #endif
 251:ff.c          **** typedef struct {
 252:ff.c          **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 253:ff.c          **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 254:ff.c          **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 255:ff.c          **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 256:ff.c          **** } FILESEM;
 257:ff.c          **** #endif
 258:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 6


 259:ff.c          **** 
 260:ff.c          **** /* SBCS up-case tables (\x80-\xFF) */
 261:ff.c          **** #define TBL_CT437  {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
 262:ff.c          **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 263:ff.c          **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 264:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 265:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 266:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 267:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 268:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 269:ff.c          **** #define TBL_CT720  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 270:ff.c          **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 271:ff.c          **** 					0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 272:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 273:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 274:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 275:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 276:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 277:ff.c          **** #define TBL_CT737  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 278:ff.c          **** 					0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 279:ff.c          **** 					0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 280:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 281:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 282:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 283:ff.c          **** 					0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 284:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 285:ff.c          **** #define TBL_CT771  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 286:ff.c          **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 287:ff.c          **** 					0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 288:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 289:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 290:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 291:ff.c          **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 292:ff.c          **** 					0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 293:ff.c          **** #define TBL_CT775  {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F
 294:ff.c          **** 					0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 295:ff.c          **** 					0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 296:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 297:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 298:ff.c          **** 					0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 299:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 300:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 301:ff.c          **** #define TBL_CT850  {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41
 302:ff.c          **** 					0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 303:ff.c          **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 304:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 305:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 306:ff.c          **** 					0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 307:ff.c          **** 					0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 308:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 309:ff.c          **** #define TBL_CT852  {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F
 310:ff.c          **** 					0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 311:ff.c          **** 					0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 312:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 313:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 314:ff.c          **** 					0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 315:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 7


 316:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
 317:ff.c          **** #define TBL_CT855  {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F
 318:ff.c          **** 					0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 319:ff.c          **** 					0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 320:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 321:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 322:ff.c          **** 					0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 323:ff.c          **** 					0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 324:ff.c          **** 					0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 325:ff.c          **** #define TBL_CT857  {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F
 326:ff.c          **** 					0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 327:ff.c          **** 					0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 328:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 329:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 330:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 331:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 332:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 333:ff.c          **** #define TBL_CT860  {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F
 334:ff.c          **** 					0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 335:ff.c          **** 					0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 336:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 337:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 338:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 339:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 340:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 341:ff.c          **** #define TBL_CT861  {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F
 342:ff.c          **** 					0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 343:ff.c          **** 					0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 344:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 345:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 346:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 347:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 348:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 349:ff.c          **** #define TBL_CT862  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 350:ff.c          **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 351:ff.c          **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 352:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 353:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 354:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 355:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 356:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 357:ff.c          **** #define TBL_CT863  {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F
 358:ff.c          **** 					0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 359:ff.c          **** 					0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 360:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 361:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 362:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 363:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 364:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 365:ff.c          **** #define TBL_CT864  {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
 366:ff.c          **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 367:ff.c          **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 368:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 369:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 370:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 371:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 372:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 8


 373:ff.c          **** #define TBL_CT865  {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
 374:ff.c          **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 375:ff.c          **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 376:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 377:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 378:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 379:ff.c          **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 380:ff.c          **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 381:ff.c          **** #define TBL_CT866  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 382:ff.c          **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 383:ff.c          **** 					0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 384:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 385:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 386:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 387:ff.c          **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 388:ff.c          **** 					0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 389:ff.c          **** #define TBL_CT869  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 390:ff.c          **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 391:ff.c          **** 					0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 392:ff.c          **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 393:ff.c          **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 394:ff.c          **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 395:ff.c          **** 					0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 396:ff.c          **** 					0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 397:ff.c          **** 
 398:ff.c          **** 
 399:ff.c          **** /* DBCS code range |----- 1st byte -----|  |----------- 2nd byte -----------| */
 400:ff.c          **** #define TBL_DC932 {0x81, 0x9F, 0xE0, 0xFC, 0x40, 0x7E, 0x80, 0xFC, 0x00, 0x00}
 401:ff.c          **** #define TBL_DC936 {0x81, 0xFE, 0x00, 0x00, 0x40, 0x7E, 0x80, 0xFE, 0x00, 0x00}
 402:ff.c          **** #define TBL_DC949 {0x81, 0xFE, 0x00, 0x00, 0x41, 0x5A, 0x61, 0x7A, 0x81, 0xFE}
 403:ff.c          **** #define TBL_DC950 {0x81, 0xFE, 0x00, 0x00, 0x40, 0x7E, 0xA1, 0xFE, 0x00, 0x00}
 404:ff.c          **** 
 405:ff.c          **** 
 406:ff.c          **** /* Macros for table definitions */
 407:ff.c          **** #define MERGE_2STR(a, b) a ## b
 408:ff.c          **** #define MKCVTBL(hd, cp) MERGE_2STR(hd, cp)
 409:ff.c          **** 
 410:ff.c          **** 
 411:ff.c          **** 
 412:ff.c          **** 
 413:ff.c          **** /*--------------------------------------------------------------------------
 414:ff.c          **** 
 415:ff.c          ****    Module Private Work Area
 416:ff.c          **** 
 417:ff.c          **** ---------------------------------------------------------------------------*/
 418:ff.c          **** /* Remark: Variables defined here without initial value shall be guaranteed
 419:ff.c          **** /  zero/null at start-up. If not, the linker option or start-up routine is
 420:ff.c          **** /  not compliance with C standard. */
 421:ff.c          **** 
 422:ff.c          **** /*--------------------------------*/
 423:ff.c          **** /* File/Volume controls           */
 424:ff.c          **** /*--------------------------------*/
 425:ff.c          **** 
 426:ff.c          **** #if FF_VOLUMES < 1 || FF_VOLUMES > 10
 427:ff.c          **** #error Wrong FF_VOLUMES setting
 428:ff.c          **** #endif
 429:ff.c          **** static FATFS *FatFs[FF_VOLUMES];	/* Pointer to the filesystem objects (logical drives) */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 9


 430:ff.c          **** static WORD Fsid;					/* File system mount ID */
 431:ff.c          **** 
 432:ff.c          **** #if FF_FS_RPATH != 0 && FF_VOLUMES >= 2
 433:ff.c          **** static BYTE CurrVol;				/* Current drive */
 434:ff.c          **** #endif
 435:ff.c          **** 
 436:ff.c          **** #if FF_FS_LOCK != 0
 437:ff.c          **** static FILESEM Files[FF_FS_LOCK];	/* Open object lock semaphores */
 438:ff.c          **** #endif
 439:ff.c          **** 
 440:ff.c          **** 
 441:ff.c          **** 
 442:ff.c          **** /*--------------------------------*/
 443:ff.c          **** /* LFN/Directory working buffer   */
 444:ff.c          **** /*--------------------------------*/
 445:ff.c          **** 
 446:ff.c          **** #if FF_USE_LFN == 0		/* Non-LFN configuration */
 447:ff.c          **** #if FF_FS_EXFAT
 448:ff.c          **** #error LFN must be enabled when enable exFAT
 449:ff.c          **** #endif
 450:ff.c          **** #define DEF_NAMBUF
 451:ff.c          **** #define INIT_NAMBUF(fs)
 452:ff.c          **** #define FREE_NAMBUF()
 453:ff.c          **** #define LEAVE_MKFS(res)	return res
 454:ff.c          **** 
 455:ff.c          **** #else					/* LFN configurations */
 456:ff.c          **** #if FF_MAX_LFN < 12 || FF_MAX_LFN > 255
 457:ff.c          **** #error Wrong setting of FF_MAX_LFN
 458:ff.c          **** #endif
 459:ff.c          **** #if FF_LFN_BUF < 12 || FF_SFN_BUF < 12 || FF_LFN_BUF < FF_SFN_BUF
 460:ff.c          **** #error Wrong setting of FF_LFN_BUF or FF_SFN_BUF
 461:ff.c          **** #endif
 462:ff.c          **** #if FF_LFN_UNICODE < 0 || FF_LFN_UNICODE > 2
 463:ff.c          **** #error Wrong setting of FF_LFN_UNICODE
 464:ff.c          **** #endif
 465:ff.c          **** static const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* FAT: Offset of LFN characters 
 466:ff.c          **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)	/* exFAT: Size of directory entry block scratchpad b
 467:ff.c          **** 
 468:ff.c          **** #if FF_USE_LFN == 1		/* LFN enabled with static working buffer */
 469:ff.c          **** #if FF_FS_EXFAT
 470:ff.c          **** static BYTE	DirBuf[MAXDIRB(FF_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 471:ff.c          **** #endif
 472:ff.c          **** static WCHAR LfnBuf[FF_MAX_LFN + 1];		/* LFN working buffer */
 473:ff.c          **** #define DEF_NAMBUF
 474:ff.c          **** #define INIT_NAMBUF(fs)
 475:ff.c          **** #define FREE_NAMBUF()
 476:ff.c          **** #define LEAVE_MKFS(res)	return res
 477:ff.c          **** 
 478:ff.c          **** #elif FF_USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 479:ff.c          **** #if FF_FS_EXFAT
 480:ff.c          **** #define DEF_NAMBUF		WCHAR lbuf[FF_MAX_LFN+1]; BYTE dbuf[MAXDIRB(FF_MAX_LFN)];	/* LFN working buffer
 481:ff.c          **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 482:ff.c          **** #define FREE_NAMBUF()
 483:ff.c          **** #else
 484:ff.c          **** #define DEF_NAMBUF		WCHAR lbuf[FF_MAX_LFN+1];	/* LFN working buffer */
 485:ff.c          **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 486:ff.c          **** #define FREE_NAMBUF()
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 10


 487:ff.c          **** #endif
 488:ff.c          **** #define LEAVE_MKFS(res)	return res
 489:ff.c          **** 
 490:ff.c          **** #elif FF_USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 491:ff.c          **** #if FF_FS_EXFAT
 492:ff.c          **** #define DEF_NAMBUF		WCHAR *lfn;	/* Pointer to LFN working buffer and directory entry block scratchp
 493:ff.c          **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((FF_MAX_LFN+1)*2 + MAXDIRB(FF_MAX_LFN)); if (!lfn) LEAV
 494:ff.c          **** #define FREE_NAMBUF()	ff_memfree(lfn)
 495:ff.c          **** #else
 496:ff.c          **** #define DEF_NAMBUF		WCHAR *lfn;	/* Pointer to LFN working buffer */
 497:ff.c          **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((FF_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH
 498:ff.c          **** #define FREE_NAMBUF()	ff_memfree(lfn)
 499:ff.c          **** #endif
 500:ff.c          **** #define LEAVE_MKFS(res)	{ if (!work) ff_memfree(buf); return res; }
 501:ff.c          **** #define MAX_MALLOC	0x8000
 502:ff.c          **** 
 503:ff.c          **** #else
 504:ff.c          **** #error Wrong setting of FF_USE_LFN
 505:ff.c          **** 
 506:ff.c          **** #endif	/* FF_USE_LFN == 1 */
 507:ff.c          **** #endif	/* FF_USE_LFN == 0 */
 508:ff.c          **** 
 509:ff.c          **** 
 510:ff.c          **** 
 511:ff.c          **** /*--------------------------------*/
 512:ff.c          **** /* Code conversion tables         */
 513:ff.c          **** /*--------------------------------*/
 514:ff.c          **** 
 515:ff.c          **** #if FF_CODE_PAGE == 0		/* Run-time code page configuration */
 516:ff.c          **** #define CODEPAGE CodePage
 517:ff.c          **** static WORD CodePage;	/* Current code page */
 518:ff.c          **** static const BYTE *ExCvt, *DbcTbl;	/* Pointer to current SBCS up-case table and DBCS code range tab
 519:ff.c          **** static const BYTE Ct437[] = TBL_CT437;
 520:ff.c          **** static const BYTE Ct720[] = TBL_CT720;
 521:ff.c          **** static const BYTE Ct737[] = TBL_CT737;
 522:ff.c          **** static const BYTE Ct771[] = TBL_CT771;
 523:ff.c          **** static const BYTE Ct775[] = TBL_CT775;
 524:ff.c          **** static const BYTE Ct850[] = TBL_CT850;
 525:ff.c          **** static const BYTE Ct852[] = TBL_CT852;
 526:ff.c          **** static const BYTE Ct855[] = TBL_CT855;
 527:ff.c          **** static const BYTE Ct857[] = TBL_CT857;
 528:ff.c          **** static const BYTE Ct860[] = TBL_CT860;
 529:ff.c          **** static const BYTE Ct861[] = TBL_CT861;
 530:ff.c          **** static const BYTE Ct862[] = TBL_CT862;
 531:ff.c          **** static const BYTE Ct863[] = TBL_CT863;
 532:ff.c          **** static const BYTE Ct864[] = TBL_CT864;
 533:ff.c          **** static const BYTE Ct865[] = TBL_CT865;
 534:ff.c          **** static const BYTE Ct866[] = TBL_CT866;
 535:ff.c          **** static const BYTE Ct869[] = TBL_CT869;
 536:ff.c          **** static const BYTE Dc932[] = TBL_DC932;
 537:ff.c          **** static const BYTE Dc936[] = TBL_DC936;
 538:ff.c          **** static const BYTE Dc949[] = TBL_DC949;
 539:ff.c          **** static const BYTE Dc950[] = TBL_DC950;
 540:ff.c          **** 
 541:ff.c          **** #elif FF_CODE_PAGE < 900	/* Static code page configuration (SBCS) */
 542:ff.c          **** #define CODEPAGE FF_CODE_PAGE
 543:ff.c          **** static const BYTE ExCvt[] = MKCVTBL(TBL_CT, FF_CODE_PAGE);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 11


 544:ff.c          **** 
 545:ff.c          **** #else					/* Static code page configuration (DBCS) */
 546:ff.c          **** #define CODEPAGE FF_CODE_PAGE
 547:ff.c          **** static const BYTE DbcTbl[] = MKCVTBL(TBL_DC, FF_CODE_PAGE);
 548:ff.c          **** 
 549:ff.c          **** #endif
 550:ff.c          **** 
 551:ff.c          **** 
 552:ff.c          **** 
 553:ff.c          **** 
 554:ff.c          **** /*--------------------------------------------------------------------------
 555:ff.c          **** 
 556:ff.c          ****    Module Private Functions
 557:ff.c          **** 
 558:ff.c          **** ---------------------------------------------------------------------------*/
 559:ff.c          **** 
 560:ff.c          **** 
 561:ff.c          **** /*-----------------------------------------------------------------------*/
 562:ff.c          **** /* Load/Store multi-byte word in the FAT structure                       */
 563:ff.c          **** /*-----------------------------------------------------------------------*/
 564:ff.c          **** 
 565:ff.c          **** static
 566:ff.c          **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 567:ff.c          **** {
  28              		.loc 1 567 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 568:ff.c          **** 	WORD rv;
 569:ff.c          **** 
 570:ff.c          **** 	rv = ptr[1];
  34              		.loc 1 570 0
  35 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
  36              	.LVL1:
 571:ff.c          **** 	rv = rv << 8 | ptr[0];
  37              		.loc 1 571 0
  38 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  39              	.LVL2:
 572:ff.c          **** 	return rv;
 573:ff.c          **** }
  40              		.loc 1 573 0
  41 0004 40EA0220 		orr	r0, r0, r2, lsl #8
  42              	.LVL3:
  43 0008 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE0:
  46              		.size	ld_word, .-ld_word
  47 000a 00BF     		.section	.text.ld_dword,"ax",%progbits
  48              		.align	2
  49              		.thumb
  50              		.thumb_func
  51              		.type	ld_dword, %function
  52              	ld_dword:
  53              	.LFB1:
 574:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 12


 575:ff.c          **** static
 576:ff.c          **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 577:ff.c          **** {
  54              		.loc 1 577 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL4:
 578:ff.c          **** 	DWORD rv;
 579:ff.c          **** 
 580:ff.c          **** 	rv = ptr[3];
  60              		.loc 1 580 0
  61 0000 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
  62              	.LVL5:
 581:ff.c          **** 	rv = rv << 8 | ptr[2];
  63              		.loc 1 581 0
  64 0002 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  65 0004 43EA0222 		orr	r2, r3, r2, lsl #8
  66              	.LVL6:
 582:ff.c          **** 	rv = rv << 8 | ptr[1];
  67              		.loc 1 582 0
  68 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  69 000a 43EA0223 		orr	r3, r3, r2, lsl #8
  70              	.LVL7:
 583:ff.c          **** 	rv = rv << 8 | ptr[0];
  71              		.loc 1 583 0
  72 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  73              	.LVL8:
 584:ff.c          **** 	return rv;
 585:ff.c          **** }
  74              		.loc 1 585 0
  75 0010 40EA0320 		orr	r0, r0, r3, lsl #8
  76              	.LVL9:
  77 0014 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE1:
  80              		.size	ld_dword, .-ld_dword
  81 0016 00BF     		.section	.text.st_word,"ax",%progbits
  82              		.align	2
  83              		.thumb
  84              		.thumb_func
  85              		.type	st_word, %function
  86              	st_word:
  87              	.LFB2:
 586:ff.c          **** 
 587:ff.c          **** #if FF_FS_EXFAT
 588:ff.c          **** static
 589:ff.c          **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 590:ff.c          **** {
 591:ff.c          **** 	QWORD rv;
 592:ff.c          **** 
 593:ff.c          **** 	rv = ptr[7];
 594:ff.c          **** 	rv = rv << 8 | ptr[6];
 595:ff.c          **** 	rv = rv << 8 | ptr[5];
 596:ff.c          **** 	rv = rv << 8 | ptr[4];
 597:ff.c          **** 	rv = rv << 8 | ptr[3];
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 13


 598:ff.c          **** 	rv = rv << 8 | ptr[2];
 599:ff.c          **** 	rv = rv << 8 | ptr[1];
 600:ff.c          **** 	rv = rv << 8 | ptr[0];
 601:ff.c          **** 	return rv;
 602:ff.c          **** }
 603:ff.c          **** #endif
 604:ff.c          **** 
 605:ff.c          **** #if !FF_FS_READONLY
 606:ff.c          **** static
 607:ff.c          **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 608:ff.c          **** {
  88              		.loc 1 608 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL10:
 609:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
  94              		.loc 1 609 0
  95 0000 0170     		strb	r1, [r0]
  96              	.LVL11:
 610:ff.c          **** 	*ptr++ = (BYTE)val;
  97              		.loc 1 610 0
  98 0002 090A     		lsrs	r1, r1, #8
  99              	.LVL12:
 100 0004 4170     		strb	r1, [r0, #1]
 101 0006 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE2:
 104              		.size	st_word, .-st_word
 105              		.section	.text.st_dword,"ax",%progbits
 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 109              		.type	st_dword, %function
 110              	st_dword:
 111              	.LFB3:
 611:ff.c          **** }
 612:ff.c          **** 
 613:ff.c          **** static
 614:ff.c          **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 615:ff.c          **** {
 112              		.loc 1 615 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL13:
 616:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 118              		.loc 1 616 0
 119 0000 0170     		strb	r1, [r0]
 120              	.LVL14:
 617:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 121              		.loc 1 617 0
 122 0002 C1F30723 		ubfx	r3, r1, #8, #8
 123 0006 4370     		strb	r3, [r0, #1]
 124              	.LVL15:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 14


 618:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 125              		.loc 1 618 0
 126 0008 C1F30743 		ubfx	r3, r1, #16, #8
 127 000c 8370     		strb	r3, [r0, #2]
 128              	.LVL16:
 619:ff.c          **** 	*ptr++ = (BYTE)val;
 129              		.loc 1 619 0
 130 000e 090E     		lsrs	r1, r1, #24
 131              	.LVL17:
 132 0010 C170     		strb	r1, [r0, #3]
 133 0012 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE3:
 136              		.size	st_dword, .-st_dword
 137              		.section	.text.mem_cpy,"ax",%progbits
 138              		.align	2
 139              		.thumb
 140              		.thumb_func
 141              		.type	mem_cpy, %function
 142              	mem_cpy:
 143              	.LFB4:
 620:ff.c          **** }
 621:ff.c          **** 
 622:ff.c          **** #if FF_FS_EXFAT
 623:ff.c          **** static
 624:ff.c          **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 625:ff.c          **** {
 626:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 627:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 628:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 629:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 630:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 631:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 632:ff.c          **** 	*ptr++ = (BYTE)val; val >>= 8;
 633:ff.c          **** 	*ptr++ = (BYTE)val;
 634:ff.c          **** }
 635:ff.c          **** #endif
 636:ff.c          **** #endif	/* !FF_FS_READONLY */
 637:ff.c          **** 
 638:ff.c          **** 
 639:ff.c          **** 
 640:ff.c          **** /*-----------------------------------------------------------------------*/
 641:ff.c          **** /* String functions                                                      */
 642:ff.c          **** /*-----------------------------------------------------------------------*/
 643:ff.c          **** 
 644:ff.c          **** /* Copy memory to memory */
 645:ff.c          **** static
 646:ff.c          **** void mem_cpy (void* dst, const void* src, UINT cnt)
 647:ff.c          **** {
 144              		.loc 1 647 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149              	.LVL18:
 648:ff.c          **** 	BYTE *d = (BYTE*)dst;
 649:ff.c          **** 	const BYTE *s = (const BYTE*)src;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 15


 650:ff.c          **** 
 651:ff.c          **** 	if (cnt != 0) {
 150              		.loc 1 651 0
 151 0000 1346     		mov	r3, r2
 152 0002 2AB1     		cbz	r2, .L5
 153              	.LVL19:
 154              	.L7:
 652:ff.c          **** 		do {
 653:ff.c          **** 			*d++ = *s++;
 155              		.loc 1 653 0 discriminator 1
 156 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 157 0006 0270     		strb	r2, [r0]
 158              	.LVL20:
 159 0008 0130     		adds	r0, r0, #1
 160              	.LVL21:
 161 000a 0131     		adds	r1, r1, #1
 162              	.LVL22:
 654:ff.c          **** 		} while (--cnt);
 163              		.loc 1 654 0 discriminator 1
 164 000c 013B     		subs	r3, r3, #1
 165              	.LVL23:
 166 000e F9D1     		bne	.L7
 167              	.L5:
 168 0010 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE4:
 171              		.size	mem_cpy, .-mem_cpy
 172 0012 00BF     		.section	.text.mem_set,"ax",%progbits
 173              		.align	2
 174              		.thumb
 175              		.thumb_func
 176              		.type	mem_set, %function
 177              	mem_set:
 178              	.LFB5:
 655:ff.c          **** 	}
 656:ff.c          **** }
 657:ff.c          **** 
 658:ff.c          **** 
 659:ff.c          **** /* Fill memory block */
 660:ff.c          **** static
 661:ff.c          **** void mem_set (void* dst, int val, UINT cnt)
 662:ff.c          **** {
 179              		.loc 1 662 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL24:
 185              	.L9:
 663:ff.c          **** 	BYTE *d = (BYTE*)dst;
 664:ff.c          **** 
 665:ff.c          **** 	do {
 666:ff.c          **** 		*d++ = (BYTE)val;
 186              		.loc 1 666 0 discriminator 1
 187 0000 0170     		strb	r1, [r0]
 188              	.LVL25:
 189 0002 0130     		adds	r0, r0, #1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 16


 190              	.LVL26:
 667:ff.c          **** 	} while (--cnt);
 191              		.loc 1 667 0 discriminator 1
 192 0004 013A     		subs	r2, r2, #1
 193              	.LVL27:
 194 0006 FBD1     		bne	.L9
 668:ff.c          **** }
 195              		.loc 1 668 0
 196 0008 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE5:
 199              		.size	mem_set, .-mem_set
 200 000a 00BF     		.section	.text.mem_cmp,"ax",%progbits
 201              		.align	2
 202              		.thumb
 203              		.thumb_func
 204              		.type	mem_cmp, %function
 205              	mem_cmp:
 206              	.LFB6:
 669:ff.c          **** 
 670:ff.c          **** 
 671:ff.c          **** /* Compare memory block */
 672:ff.c          **** static
 673:ff.c          **** int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
 674:ff.c          **** {
 207              		.loc 1 674 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL28:
 213 0000 30B4     		push	{r4, r5}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 4, -8
 216              		.cfi_offset 5, -4
 217              	.LVL29:
 218              	.L12:
 675:ff.c          **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 676:ff.c          **** 	int r = 0;
 677:ff.c          **** 
 678:ff.c          **** 	do {
 679:ff.c          **** 		r = *d++ - *s++;
 219              		.loc 1 679 0 discriminator 2
 220 0002 451C     		adds	r5, r0, #1
 221              	.LVL30:
 222 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 223              	.LVL31:
 224 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 225 0008 1B1A     		subs	r3, r3, r0
 226              	.LVL32:
 680:ff.c          **** 	} while (--cnt && r == 0);
 227              		.loc 1 680 0 discriminator 2
 228 000a 013A     		subs	r2, r2, #1
 229              	.LVL33:
 230 000c 04D0     		beq	.L11
 231 000e 4C1C     		adds	r4, r1, #1
 232              	.LVL34:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 17


 679:ff.c          **** 	} while (--cnt && r == 0);
 233              		.loc 1 679 0 discriminator 1
 234 0010 2846     		mov	r0, r5
 235 0012 2146     		mov	r1, r4
 236              		.loc 1 680 0 discriminator 1
 237 0014 002B     		cmp	r3, #0
 238 0016 F4D0     		beq	.L12
 239              	.LVL35:
 240              	.L11:
 681:ff.c          **** 
 682:ff.c          **** 	return r;
 683:ff.c          **** }
 241              		.loc 1 683 0
 242 0018 1846     		mov	r0, r3
 243 001a 30BC     		pop	{r4, r5}
 244              		.cfi_restore 5
 245              		.cfi_restore 4
 246              		.cfi_def_cfa_offset 0
 247              	.LVL36:
 248 001c 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE6:
 251              		.size	mem_cmp, .-mem_cmp
 252 001e 00BF     		.section	.text.chk_chr,"ax",%progbits
 253              		.align	2
 254              		.thumb
 255              		.thumb_func
 256              		.type	chk_chr, %function
 257              	chk_chr:
 258              	.LFB7:
 684:ff.c          **** 
 685:ff.c          **** 
 686:ff.c          **** /* Check if chr is contained in the string */
 687:ff.c          **** static
 688:ff.c          **** int chk_chr (const char* str, int chr)	/* NZ:contained, ZR:not contained */
 689:ff.c          **** {
 259              		.loc 1 689 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL37:
 690:ff.c          **** 	while (*str && *str != chr) str++;
 265              		.loc 1 690 0
 266 0000 00E0     		b	.L15
 267              	.L17:
 268              		.loc 1 690 0 is_stmt 0 discriminator 3
 269 0002 0130     		adds	r0, r0, #1
 270              	.LVL38:
 271              	.L15:
 272              		.loc 1 690 0 discriminator 1
 273 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 274 0006 0BB1     		cbz	r3, .L16
 275              		.loc 1 690 0 discriminator 2
 276 0008 8B42     		cmp	r3, r1
 277 000a FAD1     		bne	.L17
 278              	.L16:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 18


 691:ff.c          **** 	return *str;
 692:ff.c          **** }
 279              		.loc 1 692 0 is_stmt 1
 280 000c 1846     		mov	r0, r3
 281              	.LVL39:
 282 000e 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE7:
 285              		.size	chk_chr, .-chk_chr
 286              		.section	.text.dbc_1st,"ax",%progbits
 287              		.align	2
 288              		.thumb
 289              		.thumb_func
 290              		.type	dbc_1st, %function
 291              	dbc_1st:
 292              	.LFB8:
 693:ff.c          **** 
 694:ff.c          **** 
 695:ff.c          **** /* Test if the character is DBC 1st byte */
 696:ff.c          **** static
 697:ff.c          **** int dbc_1st (BYTE c)
 698:ff.c          **** {
 293              		.loc 1 698 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298              	.LVL40:
 699:ff.c          **** #if FF_CODE_PAGE == 0		/* Variable code page */
 700:ff.c          **** 	if (DbcTbl && c >= DbcTbl[0]) {
 701:ff.c          **** 		if (c <= DbcTbl[1]) return 1;					/* 1st byte range 1 */
 702:ff.c          **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;	/* 1st byte range 2 */
 703:ff.c          **** 	}
 704:ff.c          **** #elif FF_CODE_PAGE >= 900	/* DBCS fixed code page */
 705:ff.c          **** 	if (c >= DbcTbl[0]) {
 299              		.loc 1 705 0
 300 0000 8028     		cmp	r0, #128
 301 0002 07D9     		bls	.L20
 706:ff.c          **** 		if (c <= DbcTbl[1]) return 1;
 302              		.loc 1 706 0
 303 0004 9F28     		cmp	r0, #159
 304 0006 07D9     		bls	.L21
 707:ff.c          **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 305              		.loc 1 707 0
 306 0008 DF28     		cmp	r0, #223
 307 000a 07D9     		bls	.L22
 308              		.loc 1 707 0 is_stmt 0 discriminator 1
 309 000c FC28     		cmp	r0, #252
 310 000e 07D9     		bls	.L23
 708:ff.c          **** 	}
 709:ff.c          **** #else						/* SBCS fixed code page */
 710:ff.c          **** 	if (c != 0) return 0;	/* Always false */
 711:ff.c          **** #endif
 712:ff.c          **** 	return 0;
 311              		.loc 1 712 0 is_stmt 1
 312 0010 0020     		movs	r0, #0
 313              	.LVL41:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 19


 314 0012 7047     		bx	lr
 315              	.LVL42:
 316              	.L20:
 317 0014 0020     		movs	r0, #0
 318              	.LVL43:
 319 0016 7047     		bx	lr
 320              	.LVL44:
 321              	.L21:
 706:ff.c          **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 322              		.loc 1 706 0
 323 0018 0120     		movs	r0, #1
 324              	.LVL45:
 325 001a 7047     		bx	lr
 326              	.LVL46:
 327              	.L22:
 328              		.loc 1 712 0
 329 001c 0020     		movs	r0, #0
 330              	.LVL47:
 331 001e 7047     		bx	lr
 332              	.LVL48:
 333              	.L23:
 707:ff.c          **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 334              		.loc 1 707 0
 335 0020 0120     		movs	r0, #1
 336              	.LVL49:
 713:ff.c          **** }
 337              		.loc 1 713 0
 338 0022 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE8:
 341              		.size	dbc_1st, .-dbc_1st
 342              		.section	.text.dbc_2nd,"ax",%progbits
 343              		.align	2
 344              		.thumb
 345              		.thumb_func
 346              		.type	dbc_2nd, %function
 347              	dbc_2nd:
 348              	.LFB9:
 714:ff.c          **** 
 715:ff.c          **** 
 716:ff.c          **** /* Test if the character is DBC 2nd byte */
 717:ff.c          **** static
 718:ff.c          **** int dbc_2nd (BYTE c)
 719:ff.c          **** {
 349              		.loc 1 719 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LVL50:
 720:ff.c          **** #if FF_CODE_PAGE == 0		/* Variable code page */
 721:ff.c          **** 	if (DbcTbl && c >= DbcTbl[4]) {
 722:ff.c          **** 		if (c <= DbcTbl[5]) return 1;					/* 2nd byte range 1 */
 723:ff.c          **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;	/* 2nd byte range 2 */
 724:ff.c          **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;	/* 2nd byte range 3 */
 725:ff.c          **** 	}
 726:ff.c          **** #elif FF_CODE_PAGE >= 900	/* DBCS fixed code page */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 20


 727:ff.c          **** 	if (c >= DbcTbl[4]) {
 355              		.loc 1 727 0
 356 0000 3F28     		cmp	r0, #63
 357 0002 08D9     		bls	.L27
 728:ff.c          **** 		if (c <= DbcTbl[5]) return 1;
 358              		.loc 1 728 0
 359 0004 7E28     		cmp	r0, #126
 360 0006 08D9     		bls	.L28
 729:ff.c          **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 361              		.loc 1 729 0
 362 0008 8028     		cmp	r0, #128
 363 000a 01D3     		bcc	.L26
 364              		.loc 1 729 0 is_stmt 0 discriminator 1
 365 000c FC28     		cmp	r0, #252
 366 000e 06D9     		bls	.L29
 367              	.L26:
 730:ff.c          **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 368              		.loc 1 730 0 is_stmt 1 discriminator 1
 369 0010 38B1     		cbz	r0, .L30
 731:ff.c          **** 	}
 732:ff.c          **** #else						/* SBCS fixed code page */
 733:ff.c          **** 	if (c != 0) return 0;	/* Always false */
 734:ff.c          **** #endif
 735:ff.c          **** 	return 0;
 370              		.loc 1 735 0
 371 0012 0020     		movs	r0, #0
 372              	.LVL51:
 373 0014 7047     		bx	lr
 374              	.LVL52:
 375              	.L27:
 376 0016 0020     		movs	r0, #0
 377              	.LVL53:
 378 0018 7047     		bx	lr
 379              	.LVL54:
 380              	.L28:
 728:ff.c          **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 381              		.loc 1 728 0
 382 001a 0120     		movs	r0, #1
 383              	.LVL55:
 384 001c 7047     		bx	lr
 385              	.LVL56:
 386              	.L29:
 729:ff.c          **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 387              		.loc 1 729 0
 388 001e 0120     		movs	r0, #1
 389              	.LVL57:
 390 0020 7047     		bx	lr
 391              	.LVL58:
 392              	.L30:
 730:ff.c          **** 	}
 393              		.loc 1 730 0
 394 0022 0120     		movs	r0, #1
 395              	.LVL59:
 736:ff.c          **** }
 396              		.loc 1 736 0
 397 0024 7047     		bx	lr
 398              		.cfi_endproc
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 21


 399              	.LFE9:
 400              		.size	dbc_2nd, .-dbc_2nd
 401 0026 00BF     		.section	.text.clst2sect,"ax",%progbits
 402              		.align	2
 403              		.thumb
 404              		.thumb_func
 405              		.type	clst2sect, %function
 406              	clst2sect:
 407              	.LFB13:
 737:ff.c          **** 
 738:ff.c          **** 
 739:ff.c          **** #if FF_USE_LFN
 740:ff.c          **** 
 741:ff.c          **** /* Get a character from TCHAR string in defined API encodeing */
 742:ff.c          **** static
 743:ff.c          **** DWORD tchar2uni (		/* Returns character in UTF-16 encoding (>=0x10000 on double encoding unit, 0xFF
 744:ff.c          **** 	const TCHAR** str	/* Pointer to pointer to TCHAR string in configured encoding */
 745:ff.c          **** )
 746:ff.c          **** {
 747:ff.c          **** 	DWORD uc;
 748:ff.c          **** 	const TCHAR *p = *str;
 749:ff.c          **** 
 750:ff.c          **** #if FF_LFN_UNICODE == 1		/* UTF-16 input */
 751:ff.c          **** 	WCHAR wc;
 752:ff.c          **** 
 753:ff.c          **** 	uc = *p++;
 754:ff.c          **** 	if (IsSurrogate(uc)) {	/* Surrogate? */
 755:ff.c          **** 		wc = *p++;		/* Get low surrogate */
 756:ff.c          **** 		if (!IsSurrogateH(uc) || !IsSurrogateL(wc)) return 0xFFFFFFFF;	/* Wrong surrogate? */
 757:ff.c          **** 		uc = uc << 16 | wc;
 758:ff.c          **** 	}
 759:ff.c          **** 
 760:ff.c          **** #elif FF_LFN_UNICODE == 2	/* UTF-8 input */
 761:ff.c          **** 	BYTE b;
 762:ff.c          **** 	int nf;
 763:ff.c          **** 
 764:ff.c          **** 	uc = (BYTE)*p++;	/* Get a byte */
 765:ff.c          **** 	if (uc & 0x80) {	/* Multiple byte code? */
 766:ff.c          **** 		if ((uc & 0xE0) == 0xC0) {	/* 2-byte sequence? */
 767:ff.c          **** 			uc &= 0x1F; nf = 1;
 768:ff.c          **** 		} else {
 769:ff.c          **** 			if ((uc & 0xF0) == 0xE0) {	/* 3-byte sequence? */
 770:ff.c          **** 				uc &= 0x0F; nf = 2;
 771:ff.c          **** 			} else {
 772:ff.c          **** 				if ((uc & 0xF8) == 0xF0) {	/* 4-byte sequence? */
 773:ff.c          **** 					uc &= 0x07; nf = 3;
 774:ff.c          **** 				} else {					/* Wrong sequence */
 775:ff.c          **** 					return 0xFFFFFFFF;
 776:ff.c          **** 				}
 777:ff.c          **** 			}
 778:ff.c          **** 		}
 779:ff.c          **** 		do {	/* Get trailing bytes */
 780:ff.c          **** 			b = (BYTE)*p++;
 781:ff.c          **** 			if ((b & 0xC0) != 0x80) return 0xFFFFFFFF;	/* Wrong sequence? */
 782:ff.c          **** 			uc = uc << 6 | (b & 0x3F);
 783:ff.c          **** 		} while (--nf != 0);
 784:ff.c          **** 		if (uc < 0x80 || IsSurrogate(uc) || uc >= 0x110000) return 0xFFFFFFFF;	/* Wrong code? */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 22


 785:ff.c          **** 		if (uc >= 0x10000) uc = 0xD800DC00 | ((uc - 0x10000) << 6 & 0x3FF0000) | (uc & 0x3FF);	/* Make a 
 786:ff.c          **** 	}
 787:ff.c          **** 
 788:ff.c          **** #else		/* ANSI/OEM input */
 789:ff.c          **** 	BYTE b;
 790:ff.c          **** 	WCHAR wc;
 791:ff.c          **** 
 792:ff.c          **** 	wc = (BYTE)*p++;			/* Get a byte */
 793:ff.c          **** 	if (dbc_1st((BYTE)wc)) {	/* Is it a DBC 1st byte? */
 794:ff.c          **** 		b = (BYTE)*p++;			/* Get 2nd byte */
 795:ff.c          **** 		if (!dbc_2nd(b)) return 0xFFFFFFFF;	/* Invalid code? */
 796:ff.c          **** 		wc = (wc << 8) + b;		/* Make a DBC */
 797:ff.c          **** 	}
 798:ff.c          **** 	if (wc != 0) {
 799:ff.c          **** 		wc = ff_oem2uni(wc, CODEPAGE);	/* ANSI/OEM ==> Unicode */
 800:ff.c          **** 		if (wc == 0) return 0xFFFFFFFF;	/* Invalid code? */
 801:ff.c          **** 	}
 802:ff.c          **** 	uc = wc;
 803:ff.c          **** 
 804:ff.c          **** #endif
 805:ff.c          **** 	*str = p;	/* Next read pointer */
 806:ff.c          **** 	return uc;
 807:ff.c          **** }
 808:ff.c          **** 
 809:ff.c          **** 
 810:ff.c          **** /* Output a TCHAR string in defined API encoding */
 811:ff.c          **** static
 812:ff.c          **** BYTE put_utf (	/* Returns number of encoding units written (0:buffer overflow or wrong encoding) */
 813:ff.c          **** 	DWORD chr,	/* UTF-16 encoded character (Double encoding unit char if >=0x10000) */
 814:ff.c          **** 	TCHAR* buf,	/* Output buffer */
 815:ff.c          **** 	UINT szb	/* Size of the buffer */
 816:ff.c          **** )
 817:ff.c          **** {
 818:ff.c          **** #if FF_LFN_UNICODE == 1	/* UTF-16 output */
 819:ff.c          **** 	WCHAR hs, wc;
 820:ff.c          **** 
 821:ff.c          **** 	hs = (WCHAR)(chr >> 16);
 822:ff.c          **** 	wc = (WCHAR)chr;
 823:ff.c          **** 	if (hs == 0) {	/* Single encoding unit? */
 824:ff.c          **** 		if (szb < 1 || IsSurrogate(wc)) return 0;	/* Buffer overflow or wrong code? */
 825:ff.c          **** 		*buf = wc;
 826:ff.c          **** 		return 1;
 827:ff.c          **** 	}
 828:ff.c          **** 	if (szb < 2 || !IsSurrogateH(hs) || !IsSurrogateL(wc)) return 0;	/* Buffer overflow or wrong surro
 829:ff.c          **** 	*buf++ = hs;
 830:ff.c          **** 	*buf++ = wc;
 831:ff.c          **** 	return 2;
 832:ff.c          **** 
 833:ff.c          **** #elif FF_LFN_UNICODE == 2	/* UTF-8 output */
 834:ff.c          **** 	DWORD hc;
 835:ff.c          **** 
 836:ff.c          **** 	if (chr < 0x80) {	/* Single byte code? */
 837:ff.c          **** 		if (szb < 1) return 0;	/* Buffer overflow? */
 838:ff.c          **** 		*buf = (TCHAR)chr;
 839:ff.c          **** 		return 1;
 840:ff.c          **** 	}
 841:ff.c          **** 	if (chr < 0x800) {	/* 2-byte sequence? */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 23


 842:ff.c          **** 		if (szb < 2) return 0;	/* Buffer overflow? */
 843:ff.c          **** 		*buf++ = (TCHAR)(0xC0 | (chr >> 6 & 0x1F));
 844:ff.c          **** 		*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
 845:ff.c          **** 		return 2;
 846:ff.c          **** 	}
 847:ff.c          **** 	if (chr < 0x10000) {	/* 3-byte sequence? */
 848:ff.c          **** 		if (szb < 3 || IsSurrogate(chr)) return 0;	/* Buffer overflow or wrong code? */
 849:ff.c          **** 		*buf++ = (TCHAR)(0xE0 | (chr >> 12 & 0x0F));
 850:ff.c          **** 		*buf++ = (TCHAR)(0x80 | (chr >> 6 & 0x3F));
 851:ff.c          **** 		*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
 852:ff.c          **** 		return 3;
 853:ff.c          **** 	}
 854:ff.c          **** 	/* 4-byte sequence */
 855:ff.c          **** 	if (szb < 4) return 0;	/* Buffer overflow? */
 856:ff.c          **** 	hc = ((chr & 0xFFFF0000) - 0xD8000000) >> 6;	/* Get high 10 bits */
 857:ff.c          **** 	chr = (chr & 0xFFFF) - 0xDC00;					/* Get low 10 bits */
 858:ff.c          **** 	if (hc >= 0x100000 || chr >= 0x400) return 0;	/* Wrong surrogate? */
 859:ff.c          **** 	chr = (hc | chr) + 0x10000;
 860:ff.c          **** 	*buf++ = (TCHAR)(0xF0 | (chr >> 18 & 0x07));
 861:ff.c          **** 	*buf++ = (TCHAR)(0x80 | (chr >> 12 & 0x3F));
 862:ff.c          **** 	*buf++ = (TCHAR)(0x80 | (chr >> 6 & 0x3F));
 863:ff.c          **** 	*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
 864:ff.c          **** 	return 4;
 865:ff.c          **** 
 866:ff.c          **** #else						/* ANSI/OEM output */
 867:ff.c          **** 	WCHAR wc;
 868:ff.c          **** 
 869:ff.c          **** 	wc = ff_uni2oem(chr, CODEPAGE);
 870:ff.c          **** 	if (wc >= 0x100) {	/* Is this a DBC? */
 871:ff.c          **** 		if (szb < 2) return 0;
 872:ff.c          **** 		*buf++ = (char)(wc >> 8);	/* Store DBC 1st byte */
 873:ff.c          **** 		*buf++ = (TCHAR)wc;			/* Store DBC 2nd byte */
 874:ff.c          **** 		return 2;
 875:ff.c          **** 	}
 876:ff.c          **** 	if (wc == 0 || szb < 1) return 0;	/* Invalid char or buffer overflow? */
 877:ff.c          **** 	*buf++ = (TCHAR)wc;					/* Store the character */
 878:ff.c          **** 	return 1;
 879:ff.c          **** #endif
 880:ff.c          **** }
 881:ff.c          **** #endif	/* FF_USE_LFN */
 882:ff.c          **** 
 883:ff.c          **** 
 884:ff.c          **** #if FF_FS_REENTRANT
 885:ff.c          **** /*-----------------------------------------------------------------------*/
 886:ff.c          **** /* Request/Release grant to access the volume                            */
 887:ff.c          **** /*-----------------------------------------------------------------------*/
 888:ff.c          **** static
 889:ff.c          **** int lock_fs (		/* 1:Ok, 0:timeout */
 890:ff.c          **** 	FATFS* fs		/* Filesystem object */
 891:ff.c          **** )
 892:ff.c          **** {
 893:ff.c          **** 	return ff_req_grant(fs->sobj);
 894:ff.c          **** }
 895:ff.c          **** 
 896:ff.c          **** 
 897:ff.c          **** static
 898:ff.c          **** void unlock_fs (
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 24


 899:ff.c          **** 	FATFS* fs,		/* Filesystem object */
 900:ff.c          **** 	FRESULT res		/* Result code to be returned */
 901:ff.c          **** )
 902:ff.c          **** {
 903:ff.c          **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 904:ff.c          **** 		ff_rel_grant(fs->sobj);
 905:ff.c          **** 	}
 906:ff.c          **** }
 907:ff.c          **** 
 908:ff.c          **** #endif
 909:ff.c          **** 
 910:ff.c          **** 
 911:ff.c          **** 
 912:ff.c          **** #if FF_FS_LOCK != 0
 913:ff.c          **** /*-----------------------------------------------------------------------*/
 914:ff.c          **** /* File lock control functions                                           */
 915:ff.c          **** /*-----------------------------------------------------------------------*/
 916:ff.c          **** 
 917:ff.c          **** static
 918:ff.c          **** FRESULT chk_lock (	/* Check if the file can be accessed */
 919:ff.c          **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 920:ff.c          **** 	int acc			/* Desired access type (0:Read mode open, 1:Write mode open, 2:Delete or rename) */
 921:ff.c          **** )
 922:ff.c          **** {
 923:ff.c          **** 	UINT i, be;
 924:ff.c          **** 
 925:ff.c          **** 	/* Search open object table for the object */
 926:ff.c          **** 	be = 0;
 927:ff.c          **** 	for (i = 0; i < FF_FS_LOCK; i++) {
 928:ff.c          **** 		if (Files[i].fs) {	/* Existing entry */
 929:ff.c          **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matches with an open object */
 930:ff.c          **** 				Files[i].clu == dp->obj.sclust &&
 931:ff.c          **** 				Files[i].ofs == dp->dptr) break;
 932:ff.c          **** 		} else {			/* Blank entry */
 933:ff.c          **** 			be = 1;
 934:ff.c          **** 		}
 935:ff.c          **** 	}
 936:ff.c          **** 	if (i == FF_FS_LOCK) {	/* The object has not been opened */
 937:ff.c          **** 		return (!be && acc != 2) ? FR_TOO_MANY_OPEN_FILES : FR_OK;	/* Is there a blank entry for new obje
 938:ff.c          **** 	}
 939:ff.c          **** 
 940:ff.c          **** 	/* The object was opened. Reject any open against writing file and all write mode open */
 941:ff.c          **** 	return (acc != 0 || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 942:ff.c          **** }
 943:ff.c          **** 
 944:ff.c          **** 
 945:ff.c          **** static
 946:ff.c          **** int enq_lock (void)	/* Check if an entry is available for a new object */
 947:ff.c          **** {
 948:ff.c          **** 	UINT i;
 949:ff.c          **** 
 950:ff.c          **** 	for (i = 0; i < FF_FS_LOCK && Files[i].fs; i++) ;
 951:ff.c          **** 	return (i == FF_FS_LOCK) ? 0 : 1;
 952:ff.c          **** }
 953:ff.c          **** 
 954:ff.c          **** 
 955:ff.c          **** static
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 25


 956:ff.c          **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 957:ff.c          **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 958:ff.c          **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 959:ff.c          **** )
 960:ff.c          **** {
 961:ff.c          **** 	UINT i;
 962:ff.c          **** 
 963:ff.c          **** 
 964:ff.c          **** 	for (i = 0; i < FF_FS_LOCK; i++) {	/* Find the object */
 965:ff.c          **** 		if (Files[i].fs == dp->obj.fs &&
 966:ff.c          **** 			Files[i].clu == dp->obj.sclust &&
 967:ff.c          **** 			Files[i].ofs == dp->dptr) break;
 968:ff.c          **** 	}
 969:ff.c          **** 
 970:ff.c          **** 	if (i == FF_FS_LOCK) {				/* Not opened. Register it as new. */
 971:ff.c          **** 		for (i = 0; i < FF_FS_LOCK && Files[i].fs; i++) ;
 972:ff.c          **** 		if (i == FF_FS_LOCK) return 0;	/* No free entry to register (int err) */
 973:ff.c          **** 		Files[i].fs = dp->obj.fs;
 974:ff.c          **** 		Files[i].clu = dp->obj.sclust;
 975:ff.c          **** 		Files[i].ofs = dp->dptr;
 976:ff.c          **** 		Files[i].ctr = 0;
 977:ff.c          **** 	}
 978:ff.c          **** 
 979:ff.c          **** 	if (acc >= 1 && Files[i].ctr) return 0;	/* Access violation (int err) */
 980:ff.c          **** 
 981:ff.c          **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 982:ff.c          **** 
 983:ff.c          **** 	return i + 1;	/* Index number origin from 1 */
 984:ff.c          **** }
 985:ff.c          **** 
 986:ff.c          **** 
 987:ff.c          **** static
 988:ff.c          **** FRESULT dec_lock (	/* Decrement object open counter */
 989:ff.c          **** 	UINT i			/* Semaphore index (1..) */
 990:ff.c          **** )
 991:ff.c          **** {
 992:ff.c          **** 	WORD n;
 993:ff.c          **** 	FRESULT res;
 994:ff.c          **** 
 995:ff.c          **** 
 996:ff.c          **** 	if (--i < FF_FS_LOCK) {	/* Index number origin from 0 */
 997:ff.c          **** 		n = Files[i].ctr;
 998:ff.c          **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 999:ff.c          **** 		if (n > 0) n--;				/* Decrement read mode open count */
1000:ff.c          **** 		Files[i].ctr = n;
1001:ff.c          **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
1002:ff.c          **** 		res = FR_OK;
1003:ff.c          **** 	} else {
1004:ff.c          **** 		res = FR_INT_ERR;			/* Invalid index nunber */
1005:ff.c          **** 	}
1006:ff.c          **** 	return res;
1007:ff.c          **** }
1008:ff.c          **** 
1009:ff.c          **** 
1010:ff.c          **** static
1011:ff.c          **** void clear_lock (	/* Clear lock entries of the volume */
1012:ff.c          **** 	FATFS *fs
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 26


1013:ff.c          **** )
1014:ff.c          **** {
1015:ff.c          **** 	UINT i;
1016:ff.c          **** 
1017:ff.c          **** 	for (i = 0; i < FF_FS_LOCK; i++) {
1018:ff.c          **** 		if (Files[i].fs == fs) Files[i].fs = 0;
1019:ff.c          **** 	}
1020:ff.c          **** }
1021:ff.c          **** 
1022:ff.c          **** #endif	/* FF_FS_LOCK != 0 */
1023:ff.c          **** 
1024:ff.c          **** 
1025:ff.c          **** 
1026:ff.c          **** /*-----------------------------------------------------------------------*/
1027:ff.c          **** /* Move/Flush disk access window in the filesystem object                */
1028:ff.c          **** /*-----------------------------------------------------------------------*/
1029:ff.c          **** #if !FF_FS_READONLY
1030:ff.c          **** static
1031:ff.c          **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
1032:ff.c          **** 	FATFS* fs			/* Filesystem object */
1033:ff.c          **** )
1034:ff.c          **** {
1035:ff.c          **** 	FRESULT res = FR_OK;
1036:ff.c          **** 
1037:ff.c          **** 
1038:ff.c          **** 	if (fs->wflag) {	/* Is the disk access window dirty */
1039:ff.c          **** 		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
1040:ff.c          **** 			fs->wflag = 0;	/* Clear window dirty flag */
1041:ff.c          **** 			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
1042:ff.c          **** 				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it t
1043:ff.c          **** 			}
1044:ff.c          **** 		} else {
1045:ff.c          **** 			res = FR_DISK_ERR;
1046:ff.c          **** 		}
1047:ff.c          **** 	}
1048:ff.c          **** 	return res;
1049:ff.c          **** }
1050:ff.c          **** #endif
1051:ff.c          **** 
1052:ff.c          **** 
1053:ff.c          **** static
1054:ff.c          **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERR */
1055:ff.c          **** 	FATFS* fs,			/* Filesystem object */
1056:ff.c          **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
1057:ff.c          **** )
1058:ff.c          **** {
1059:ff.c          **** 	FRESULT res = FR_OK;
1060:ff.c          **** 
1061:ff.c          **** 
1062:ff.c          **** 	if (sector != fs->winsect) {	/* Window offset changed? */
1063:ff.c          **** #if !FF_FS_READONLY
1064:ff.c          **** 		res = sync_window(fs);		/* Write-back changes */
1065:ff.c          **** #endif
1066:ff.c          **** 		if (res == FR_OK) {			/* Fill sector window with new data */
1067:ff.c          **** 			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
1068:ff.c          **** 				sector = 0xFFFFFFFF;	/* Invalidate window if read data is not valid */
1069:ff.c          **** 				res = FR_DISK_ERR;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 27


1070:ff.c          **** 			}
1071:ff.c          **** 			fs->winsect = sector;
1072:ff.c          **** 		}
1073:ff.c          **** 	}
1074:ff.c          **** 	return res;
1075:ff.c          **** }
1076:ff.c          **** 
1077:ff.c          **** 
1078:ff.c          **** 
1079:ff.c          **** 
1080:ff.c          **** #if !FF_FS_READONLY
1081:ff.c          **** /*-----------------------------------------------------------------------*/
1082:ff.c          **** /* Synchronize filesystem and data on the storage                        */
1083:ff.c          **** /*-----------------------------------------------------------------------*/
1084:ff.c          **** 
1085:ff.c          **** static
1086:ff.c          **** FRESULT sync_fs (	/* Returns FR_OK or FR_DISK_ERR */
1087:ff.c          **** 	FATFS* fs		/* Filesystem object */
1088:ff.c          **** )
1089:ff.c          **** {
1090:ff.c          **** 	FRESULT res;
1091:ff.c          **** 
1092:ff.c          **** 
1093:ff.c          **** 	res = sync_window(fs);
1094:ff.c          **** 	if (res == FR_OK) {
1095:ff.c          **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
1096:ff.c          **** 			/* Create FSInfo structure */
1097:ff.c          **** 			mem_set(fs->win, 0, SS(fs));
1098:ff.c          **** 			st_word(fs->win + BS_55AA, 0xAA55);
1099:ff.c          **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
1100:ff.c          **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
1101:ff.c          **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
1102:ff.c          **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
1103:ff.c          **** 			/* Write it into the FSInfo sector */
1104:ff.c          **** 			fs->winsect = fs->volbase + 1;
1105:ff.c          **** 			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
1106:ff.c          **** 			fs->fsi_flag = 0;
1107:ff.c          **** 		}
1108:ff.c          **** 		/* Make sure that no pending write process in the lower layer */
1109:ff.c          **** 		if (disk_ioctl(fs->pdrv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
1110:ff.c          **** 	}
1111:ff.c          **** 
1112:ff.c          **** 	return res;
1113:ff.c          **** }
1114:ff.c          **** 
1115:ff.c          **** #endif
1116:ff.c          **** 
1117:ff.c          **** 
1118:ff.c          **** 
1119:ff.c          **** /*-----------------------------------------------------------------------*/
1120:ff.c          **** /* Get physical sector number from cluster number                        */
1121:ff.c          **** /*-----------------------------------------------------------------------*/
1122:ff.c          **** 
1123:ff.c          **** static
1124:ff.c          **** DWORD clst2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
1125:ff.c          **** 	FATFS* fs,		/* Filesystem object */
1126:ff.c          **** 	DWORD clst		/* Cluster# to be converted */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 28


1127:ff.c          **** )
1128:ff.c          **** {
 408              		.loc 1 1128 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413              	.LVL60:
1129:ff.c          **** 	clst -= 2;		/* Cluster number is origin from 2 */
 414              		.loc 1 1129 0
 415 0000 0239     		subs	r1, r1, #2
 416              	.LVL61:
1130:ff.c          **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
 417              		.loc 1 1130 0
 418 0002 4369     		ldr	r3, [r0, #20]
 419 0004 023B     		subs	r3, r3, #2
 420 0006 9942     		cmp	r1, r3
 421 0008 04D2     		bcs	.L33
1131:ff.c          **** 	return fs->database + fs->csize * clst;		/* Start sector number of the cluster */
 422              		.loc 1 1131 0
 423 000a 826A     		ldr	r2, [r0, #40]
 424 000c 4389     		ldrh	r3, [r0, #10]
 425 000e 01FB0320 		mla	r0, r1, r3, r2
 426              	.LVL62:
 427 0012 7047     		bx	lr
 428              	.LVL63:
 429              	.L33:
1130:ff.c          **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
 430              		.loc 1 1130 0
 431 0014 0020     		movs	r0, #0
 432              	.LVL64:
1132:ff.c          **** }
 433              		.loc 1 1132 0
 434 0016 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE13:
 437              		.size	clst2sect, .-clst2sect
 438              		.section	.text.ld_clust,"ax",%progbits
 439              		.align	2
 440              		.thumb
 441              		.thumb_func
 442              		.type	ld_clust, %function
 443              	ld_clust:
 444              	.LFB22:
1133:ff.c          **** 
1134:ff.c          **** 
1135:ff.c          **** 
1136:ff.c          **** 
1137:ff.c          **** /*-----------------------------------------------------------------------*/
1138:ff.c          **** /* FAT access - Read value of a FAT entry                                */
1139:ff.c          **** /*-----------------------------------------------------------------------*/
1140:ff.c          **** 
1141:ff.c          **** static
1142:ff.c          **** DWORD get_fat (		/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1143:ff.c          **** 	FFOBJID* obj,	/* Corresponding object */
1144:ff.c          **** 	DWORD clst		/* Cluster number to get the value */
1145:ff.c          **** )
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 29


1146:ff.c          **** {
1147:ff.c          **** 	UINT wc, bc;
1148:ff.c          **** 	DWORD val;
1149:ff.c          **** 	FATFS *fs = obj->fs;
1150:ff.c          **** 
1151:ff.c          **** 
1152:ff.c          **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1153:ff.c          **** 		val = 1;	/* Internal error */
1154:ff.c          **** 
1155:ff.c          **** 	} else {
1156:ff.c          **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1157:ff.c          **** 
1158:ff.c          **** 		switch (fs->fs_type) {
1159:ff.c          **** 		case FS_FAT12 :
1160:ff.c          **** 			bc = (UINT)clst; bc += bc / 2;
1161:ff.c          **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1162:ff.c          **** 			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
1163:ff.c          **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1164:ff.c          **** 			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
1165:ff.c          **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
1166:ff.c          **** 			break;
1167:ff.c          **** 
1168:ff.c          **** 		case FS_FAT16 :
1169:ff.c          **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1170:ff.c          **** 			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
1171:ff.c          **** 			break;
1172:ff.c          **** 
1173:ff.c          **** 		case FS_FAT32 :
1174:ff.c          **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1175:ff.c          **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upp
1176:ff.c          **** 			break;
1177:ff.c          **** #if FF_FS_EXFAT
1178:ff.c          **** 		case FS_EXFAT :
1179:ff.c          **** 			if (obj->objsize != 0) {
1180:ff.c          **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1181:ff.c          **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1182:ff.c          **** 
1183:ff.c          **** 				if (obj->stat == 2 && cofs <= clen) {	/* Is it a contiguous chain? */
1184:ff.c          **** 					val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* No data on the FAT, generate the value */
1185:ff.c          **** 					break;
1186:ff.c          **** 				}
1187:ff.c          **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1188:ff.c          **** 					val = clst + 1; 	/* Generate the value */
1189:ff.c          **** 					break;
1190:ff.c          **** 				}
1191:ff.c          **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1192:ff.c          **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1193:ff.c          **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1194:ff.c          **** 					} else {
1195:ff.c          **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1196:ff.c          **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1197:ff.c          **** 					}
1198:ff.c          **** 					break;
1199:ff.c          **** 				}
1200:ff.c          **** 			}
1201:ff.c          **** 			/* go to default */
1202:ff.c          **** #endif
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 30


1203:ff.c          **** 		default:
1204:ff.c          **** 			val = 1;	/* Internal error */
1205:ff.c          **** 		}
1206:ff.c          **** 	}
1207:ff.c          **** 
1208:ff.c          **** 	return val;
1209:ff.c          **** }
1210:ff.c          **** 
1211:ff.c          **** 
1212:ff.c          **** 
1213:ff.c          **** 
1214:ff.c          **** #if !FF_FS_READONLY
1215:ff.c          **** /*-----------------------------------------------------------------------*/
1216:ff.c          **** /* FAT access - Change value of a FAT entry                              */
1217:ff.c          **** /*-----------------------------------------------------------------------*/
1218:ff.c          **** 
1219:ff.c          **** static
1220:ff.c          **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1221:ff.c          **** 	FATFS* fs,		/* Corresponding filesystem object */
1222:ff.c          **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1223:ff.c          **** 	DWORD val		/* New value to be set to the entry */
1224:ff.c          **** )
1225:ff.c          **** {
1226:ff.c          **** 	UINT bc;
1227:ff.c          **** 	BYTE *p;
1228:ff.c          **** 	FRESULT res = FR_INT_ERR;
1229:ff.c          **** 
1230:ff.c          **** 
1231:ff.c          **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1232:ff.c          **** 		switch (fs->fs_type) {
1233:ff.c          **** 		case FS_FAT12 :
1234:ff.c          **** 			bc = (UINT)clst; bc += bc / 2;	/* bc: byte offset of the entry */
1235:ff.c          **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1236:ff.c          **** 			if (res != FR_OK) break;
1237:ff.c          **** 			p = fs->win + bc++ % SS(fs);
1238:ff.c          **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Put 1st byte */
1239:ff.c          **** 			fs->wflag = 1;
1240:ff.c          **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1241:ff.c          **** 			if (res != FR_OK) break;
1242:ff.c          **** 			p = fs->win + bc % SS(fs);
1243:ff.c          **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte 
1244:ff.c          **** 			fs->wflag = 1;
1245:ff.c          **** 			break;
1246:ff.c          **** 
1247:ff.c          **** 		case FS_FAT16 :
1248:ff.c          **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1249:ff.c          **** 			if (res != FR_OK) break;
1250:ff.c          **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
1251:ff.c          **** 			fs->wflag = 1;
1252:ff.c          **** 			break;
1253:ff.c          **** 
1254:ff.c          **** 		case FS_FAT32 :
1255:ff.c          **** #if FF_FS_EXFAT
1256:ff.c          **** 		case FS_EXFAT :
1257:ff.c          **** #endif
1258:ff.c          **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1259:ff.c          **** 			if (res != FR_OK) break;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 31


1260:ff.c          **** 			if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1261:ff.c          **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1262:ff.c          **** 			}
1263:ff.c          **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1264:ff.c          **** 			fs->wflag = 1;
1265:ff.c          **** 			break;
1266:ff.c          **** 		}
1267:ff.c          **** 	}
1268:ff.c          **** 	return res;
1269:ff.c          **** }
1270:ff.c          **** 
1271:ff.c          **** #endif /* !FF_FS_READONLY */
1272:ff.c          **** 
1273:ff.c          **** 
1274:ff.c          **** 
1275:ff.c          **** 
1276:ff.c          **** #if FF_FS_EXFAT && !FF_FS_READONLY
1277:ff.c          **** /*-----------------------------------------------------------------------*/
1278:ff.c          **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1279:ff.c          **** /*-----------------------------------------------------------------------*/
1280:ff.c          **** 
1281:ff.c          **** /*--------------------------------------*/
1282:ff.c          **** /* Find a contiguous free cluster block */
1283:ff.c          **** /*--------------------------------------*/
1284:ff.c          **** 
1285:ff.c          **** static
1286:ff.c          **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1287:ff.c          **** 	FATFS* fs,	/* Filesystem object */
1288:ff.c          **** 	DWORD clst,	/* Cluster number to scan from */
1289:ff.c          **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1290:ff.c          **** )
1291:ff.c          **** {
1292:ff.c          **** 	BYTE bm, bv;
1293:ff.c          **** 	UINT i;
1294:ff.c          **** 	DWORD val, scl, ctr;
1295:ff.c          **** 
1296:ff.c          **** 
1297:ff.c          **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1298:ff.c          **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1299:ff.c          **** 	scl = val = clst; ctr = 0;
1300:ff.c          **** 	for (;;) {
1301:ff.c          **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1302:ff.c          **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1303:ff.c          **** 		do {
1304:ff.c          **** 			do {
1305:ff.c          **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1306:ff.c          **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1307:ff.c          **** 					val = 0; bm = 0; i = SS(fs);
1308:ff.c          **** 				}
1309:ff.c          **** 				if (bv == 0) {	/* Is it a free cluster? */
1310:ff.c          **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1311:ff.c          **** 				} else {
1312:ff.c          **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1313:ff.c          **** 				}
1314:ff.c          **** 				if (val == clst) return 0;	/* All cluster scanned? */
1315:ff.c          **** 			} while (bm != 0);
1316:ff.c          **** 			bm = 1;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 32


1317:ff.c          **** 		} while (++i < SS(fs));
1318:ff.c          **** 	}
1319:ff.c          **** }
1320:ff.c          **** 
1321:ff.c          **** 
1322:ff.c          **** /*----------------------------------------*/
1323:ff.c          **** /* Set/Clear a block of allocation bitmap */
1324:ff.c          **** /*----------------------------------------*/
1325:ff.c          **** 
1326:ff.c          **** static
1327:ff.c          **** FRESULT change_bitmap (
1328:ff.c          **** 	FATFS* fs,	/* Filesystem object */
1329:ff.c          **** 	DWORD clst,	/* Cluster number to change from */
1330:ff.c          **** 	DWORD ncl,	/* Number of clusters to be changed */
1331:ff.c          **** 	int bv		/* bit value to be set (0 or 1) */
1332:ff.c          **** )
1333:ff.c          **** {
1334:ff.c          **** 	BYTE bm;
1335:ff.c          **** 	UINT i;
1336:ff.c          **** 	DWORD sect;
1337:ff.c          **** 
1338:ff.c          **** 
1339:ff.c          **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1340:ff.c          **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1341:ff.c          **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1342:ff.c          **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
1343:ff.c          **** 	for (;;) {
1344:ff.c          **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1345:ff.c          **** 		do {
1346:ff.c          **** 			do {
1347:ff.c          **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1348:ff.c          **** 				fs->win[i] ^= bm;	/* Flip the bit */
1349:ff.c          **** 				fs->wflag = 1;
1350:ff.c          **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1351:ff.c          **** 			} while (bm <<= 1);		/* Next bit */
1352:ff.c          **** 			bm = 1;
1353:ff.c          **** 		} while (++i < SS(fs));		/* Next byte */
1354:ff.c          **** 		i = 0;
1355:ff.c          **** 	}
1356:ff.c          **** }
1357:ff.c          **** 
1358:ff.c          **** 
1359:ff.c          **** /*---------------------------------------------*/
1360:ff.c          **** /* Fill the first fragment of the FAT chain    */
1361:ff.c          **** /*---------------------------------------------*/
1362:ff.c          **** 
1363:ff.c          **** static
1364:ff.c          **** FRESULT fill_first_frag (
1365:ff.c          **** 	FFOBJID* obj	/* Pointer to the corresponding object */
1366:ff.c          **** )
1367:ff.c          **** {
1368:ff.c          **** 	FRESULT res;
1369:ff.c          **** 	DWORD cl, n;
1370:ff.c          **** 
1371:ff.c          **** 
1372:ff.c          **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented' in this session? */
1373:ff.c          **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 33


1374:ff.c          **** 			res = put_fat(obj->fs, cl, cl + 1);
1375:ff.c          **** 			if (res != FR_OK) return res;
1376:ff.c          **** 		}
1377:ff.c          **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1378:ff.c          **** 	}
1379:ff.c          **** 	return FR_OK;
1380:ff.c          **** }
1381:ff.c          **** 
1382:ff.c          **** 
1383:ff.c          **** /*---------------------------------------------*/
1384:ff.c          **** /* Fill the last fragment of the FAT chain     */
1385:ff.c          **** /*---------------------------------------------*/
1386:ff.c          **** 
1387:ff.c          **** static
1388:ff.c          **** FRESULT fill_last_frag (
1389:ff.c          **** 	FFOBJID* obj,	/* Pointer to the corresponding object */
1390:ff.c          **** 	DWORD lcl,		/* Last cluster of the fragment */
1391:ff.c          **** 	DWORD term		/* Value to set the last FAT entry */
1392:ff.c          **** )
1393:ff.c          **** {
1394:ff.c          **** 	FRESULT res;
1395:ff.c          **** 
1396:ff.c          **** 
1397:ff.c          **** 	while (obj->n_frag > 0) {	/* Create the chain of last fragment */
1398:ff.c          **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1399:ff.c          **** 		if (res != FR_OK) return res;
1400:ff.c          **** 		obj->n_frag--;
1401:ff.c          **** 	}
1402:ff.c          **** 	return FR_OK;
1403:ff.c          **** }
1404:ff.c          **** 
1405:ff.c          **** #endif	/* FF_FS_EXFAT && !FF_FS_READONLY */
1406:ff.c          **** 
1407:ff.c          **** 
1408:ff.c          **** 
1409:ff.c          **** #if !FF_FS_READONLY
1410:ff.c          **** /*-----------------------------------------------------------------------*/
1411:ff.c          **** /* FAT handling - Remove a cluster chain                                 */
1412:ff.c          **** /*-----------------------------------------------------------------------*/
1413:ff.c          **** static
1414:ff.c          **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1415:ff.c          **** 	FFOBJID* obj,		/* Corresponding object */
1416:ff.c          **** 	DWORD clst,			/* Cluster to remove a chain from */
1417:ff.c          **** 	DWORD pclst			/* Previous cluster of clst (0:entire chain) */
1418:ff.c          **** )
1419:ff.c          **** {
1420:ff.c          **** 	FRESULT res = FR_OK;
1421:ff.c          **** 	DWORD nxt;
1422:ff.c          **** 	FATFS *fs = obj->fs;
1423:ff.c          **** #if FF_FS_EXFAT || FF_USE_TRIM
1424:ff.c          **** 	DWORD scl = clst, ecl = clst;
1425:ff.c          **** #endif
1426:ff.c          **** #if FF_USE_TRIM
1427:ff.c          **** 	DWORD rt[2];
1428:ff.c          **** #endif
1429:ff.c          **** 
1430:ff.c          **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 34


1431:ff.c          **** 
1432:ff.c          **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1433:ff.c          **** 	if (pclst != 0 && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1434:ff.c          **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1435:ff.c          **** 		if (res != FR_OK) return res;
1436:ff.c          **** 	}
1437:ff.c          **** 
1438:ff.c          **** 	/* Remove the chain */
1439:ff.c          **** 	do {
1440:ff.c          **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1441:ff.c          **** 		if (nxt == 0) break;				/* Empty cluster? */
1442:ff.c          **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1443:ff.c          **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1444:ff.c          **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1445:ff.c          **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1446:ff.c          **** 			if (res != FR_OK) return res;
1447:ff.c          **** 		}
1448:ff.c          **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1449:ff.c          **** 			fs->free_clst++;
1450:ff.c          **** 			fs->fsi_flag |= 1;
1451:ff.c          **** 		}
1452:ff.c          **** #if FF_FS_EXFAT || FF_USE_TRIM
1453:ff.c          **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1454:ff.c          **** 			ecl = nxt;
1455:ff.c          **** 		} else {				/* End of contiguous cluster block */
1456:ff.c          **** #if FF_FS_EXFAT
1457:ff.c          **** 			if (fs->fs_type == FS_EXFAT) {
1458:ff.c          **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1459:ff.c          **** 				if (res != FR_OK) return res;
1460:ff.c          **** 			}
1461:ff.c          **** #endif
1462:ff.c          **** #if FF_USE_TRIM
1463:ff.c          **** 			rt[0] = clst2sect(fs, scl);					/* Start of data area freed */
1464:ff.c          **** 			rt[1] = clst2sect(fs, ecl) + fs->csize - 1;	/* End of data area freed */
1465:ff.c          **** 			disk_ioctl(fs->pdrv, CTRL_TRIM, rt);		/* Inform device the data in the block is no longer needed
1466:ff.c          **** #endif
1467:ff.c          **** 			scl = ecl = nxt;
1468:ff.c          **** 		}
1469:ff.c          **** #endif
1470:ff.c          **** 		clst = nxt;					/* Next cluster */
1471:ff.c          **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1472:ff.c          **** 
1473:ff.c          **** #if FF_FS_EXFAT
1474:ff.c          **** 	/* Some post processes for chain status */
1475:ff.c          **** 	if (fs->fs_type == FS_EXFAT) {
1476:ff.c          **** 		if (pclst == 0) {	/* Has the entire chain been removed? */
1477:ff.c          **** 			obj->stat = 0;		/* Change the chain status 'initial' */
1478:ff.c          **** 		} else {
1479:ff.c          **** 			if (obj->stat == 0) {	/* Is it a fragmented chain from the beginning of this session? */
1480:ff.c          **** 				clst = obj->sclust;		/* Follow the chain to check if it gets contiguous */
1481:ff.c          **** 				while (clst != pclst) {
1482:ff.c          **** 					nxt = get_fat(obj, clst);
1483:ff.c          **** 					if (nxt < 2) return FR_INT_ERR;
1484:ff.c          **** 					if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
1485:ff.c          **** 					if (nxt != clst + 1) break;	/* Not contiguous? */
1486:ff.c          **** 					clst++;
1487:ff.c          **** 				}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 35


1488:ff.c          **** 				if (clst == pclst) {	/* Has the chain got contiguous again? */
1489:ff.c          **** 					obj->stat = 2;		/* Change the chain status 'contiguous' */
1490:ff.c          **** 				}
1491:ff.c          **** 			} else {
1492:ff.c          **** 				if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Was the 
1493:ff.c          **** 					obj->stat = 2;	/* Change the chain status 'contiguous' */
1494:ff.c          **** 				}
1495:ff.c          **** 			}
1496:ff.c          **** 		}
1497:ff.c          **** 	}
1498:ff.c          **** #endif
1499:ff.c          **** 	return FR_OK;
1500:ff.c          **** }
1501:ff.c          **** 
1502:ff.c          **** 
1503:ff.c          **** 
1504:ff.c          **** 
1505:ff.c          **** /*-----------------------------------------------------------------------*/
1506:ff.c          **** /* FAT handling - Stretch a chain or Create a new chain                  */
1507:ff.c          **** /*-----------------------------------------------------------------------*/
1508:ff.c          **** static
1509:ff.c          **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1510:ff.c          **** 	FFOBJID* obj,		/* Corresponding object */
1511:ff.c          **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1512:ff.c          **** )
1513:ff.c          **** {
1514:ff.c          **** 	DWORD cs, ncl, scl;
1515:ff.c          **** 	FRESULT res;
1516:ff.c          **** 	FATFS *fs = obj->fs;
1517:ff.c          **** 
1518:ff.c          **** 
1519:ff.c          **** 	if (clst == 0) {	/* Create a new chain */
1520:ff.c          **** 		scl = fs->last_clst;				/* Suggested cluster to start to find */
1521:ff.c          **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1522:ff.c          **** 	}
1523:ff.c          **** 	else {				/* Stretch a chain */
1524:ff.c          **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1525:ff.c          **** 		if (cs < 2) return 1;				/* Test for insanity */
1526:ff.c          **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
1527:ff.c          **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1528:ff.c          **** 		scl = clst;							/* Cluster to start to find */
1529:ff.c          **** 	}
1530:ff.c          **** 	if (fs->free_clst == 0) return 0;		/* No free cluster */
1531:ff.c          **** 
1532:ff.c          **** #if FF_FS_EXFAT
1533:ff.c          **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1534:ff.c          **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1535:ff.c          **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1536:ff.c          **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1537:ff.c          **** 		if (res == FR_INT_ERR) return 1;
1538:ff.c          **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1539:ff.c          **** 		if (clst == 0) {							/* Is it a new chain? */
1540:ff.c          **** 			obj->stat = 2;							/* Set status 'contiguous' */
1541:ff.c          **** 		} else {									/* It is a stretched chain */
1542:ff.c          **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1543:ff.c          **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1544:ff.c          **** 				obj->stat = 3;						/* Change status 'just fragmented' */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 36


1545:ff.c          **** 			}
1546:ff.c          **** 		}
1547:ff.c          **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1548:ff.c          **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1549:ff.c          **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1550:ff.c          **** 			} else {				/* New fragment */
1551:ff.c          **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1552:ff.c          **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1553:ff.c          **** 				if (res == FR_OK) obj->n_frag = 1;
1554:ff.c          **** 			}
1555:ff.c          **** 		}
1556:ff.c          **** 	} else
1557:ff.c          **** #endif
1558:ff.c          **** 	{	/* On the FAT/FAT32 volume */
1559:ff.c          **** 		ncl = 0;
1560:ff.c          **** 		if (scl == clst) {						/* Stretching an existing chain? */
1561:ff.c          **** 			ncl = scl + 1;						/* Test if next cluster is free */
1562:ff.c          **** 			if (ncl >= fs->n_fatent) ncl = 2;
1563:ff.c          **** 			cs = get_fat(obj, ncl);				/* Get next cluster status */
1564:ff.c          **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
1565:ff.c          **** 			if (cs != 0) {						/* Not free? */
1566:ff.c          **** 				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
1567:ff.c          **** 				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
1568:ff.c          **** 				ncl = 0;
1569:ff.c          **** 			}
1570:ff.c          **** 		}
1571:ff.c          **** 		if (ncl == 0) {	/* The new cluster cannot be contiguous and find another fragment */
1572:ff.c          **** 			ncl = scl;	/* Start cluster */
1573:ff.c          **** 			for (;;) {
1574:ff.c          **** 				ncl++;							/* Next cluster */
1575:ff.c          **** 				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1576:ff.c          **** 					ncl = 2;
1577:ff.c          **** 					if (ncl > scl) return 0;	/* No free cluster found? */
1578:ff.c          **** 				}
1579:ff.c          **** 				cs = get_fat(obj, ncl);			/* Get the cluster status */
1580:ff.c          **** 				if (cs == 0) break;				/* Found a free cluster? */
1581:ff.c          **** 				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
1582:ff.c          **** 				if (ncl == scl) return 0;		/* No free cluster found? */
1583:ff.c          **** 			}
1584:ff.c          **** 		}
1585:ff.c          **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);		/* Mark the new cluster 'EOC' */
1586:ff.c          **** 		if (res == FR_OK && clst != 0) {
1587:ff.c          **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
1588:ff.c          **** 		}
1589:ff.c          **** 	}
1590:ff.c          **** 
1591:ff.c          **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1592:ff.c          **** 		fs->last_clst = ncl;
1593:ff.c          **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1594:ff.c          **** 		fs->fsi_flag |= 1;
1595:ff.c          **** 	} else {
1596:ff.c          **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1597:ff.c          **** 	}
1598:ff.c          **** 
1599:ff.c          **** 	return ncl;		/* Return new cluster number or error status */
1600:ff.c          **** }
1601:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 37


1602:ff.c          **** #endif /* !FF_FS_READONLY */
1603:ff.c          **** 
1604:ff.c          **** 
1605:ff.c          **** 
1606:ff.c          **** 
1607:ff.c          **** #if FF_USE_FASTSEEK
1608:ff.c          **** /*-----------------------------------------------------------------------*/
1609:ff.c          **** /* FAT handling - Convert offset into cluster with link map table        */
1610:ff.c          **** /*-----------------------------------------------------------------------*/
1611:ff.c          **** 
1612:ff.c          **** static
1613:ff.c          **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1614:ff.c          **** 	FIL* fp,		/* Pointer to the file object */
1615:ff.c          **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1616:ff.c          **** )
1617:ff.c          **** {
1618:ff.c          **** 	DWORD cl, ncl, *tbl;
1619:ff.c          **** 	FATFS *fs = fp->obj.fs;
1620:ff.c          **** 
1621:ff.c          **** 
1622:ff.c          **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
1623:ff.c          **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
1624:ff.c          **** 	for (;;) {
1625:ff.c          **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
1626:ff.c          **** 		if (ncl == 0) return 0;	/* End of table? (error) */
1627:ff.c          **** 		if (cl < ncl) break;	/* In this fragment? */
1628:ff.c          **** 		cl -= ncl; tbl++;		/* Next fragment */
1629:ff.c          **** 	}
1630:ff.c          **** 	return cl + *tbl;	/* Return the cluster number */
1631:ff.c          **** }
1632:ff.c          **** 
1633:ff.c          **** #endif	/* FF_USE_FASTSEEK */
1634:ff.c          **** 
1635:ff.c          **** 
1636:ff.c          **** 
1637:ff.c          **** 
1638:ff.c          **** /*-----------------------------------------------------------------------*/
1639:ff.c          **** /* Directory handling - Fill a cluster with zeros                        */
1640:ff.c          **** /*-----------------------------------------------------------------------*/
1641:ff.c          **** 
1642:ff.c          **** #if !FF_FS_READONLY
1643:ff.c          **** static
1644:ff.c          **** FRESULT dir_clear (	/* Returns FR_OK or FR_DISK_ERR */
1645:ff.c          **** 	FATFS *fs,		/* Filesystem object */
1646:ff.c          **** 	DWORD clst		/* Directory table to clear */
1647:ff.c          **** )
1648:ff.c          **** {
1649:ff.c          **** 	DWORD sect;
1650:ff.c          **** 	UINT n, szb;
1651:ff.c          **** 	BYTE *ibuf;
1652:ff.c          **** 
1653:ff.c          **** 
1654:ff.c          **** 	if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1655:ff.c          **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
1656:ff.c          **** 	fs->winsect = sect;				/* Set window to top of the cluster */
1657:ff.c          **** 	mem_set(fs->win, 0, SS(fs));	/* Clear window buffer */
1658:ff.c          **** #if FF_USE_LFN == 3		/* Quick table clear by using multi-secter write */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 38


1659:ff.c          **** 	/* Allocate a temporary buffer */
1660:ff.c          **** 	for (szb = ((DWORD)fs->csize * SS(fs) >= MAX_MALLOC) ? MAX_MALLOC : fs->csize * SS(fs); szb > SS(f
1661:ff.c          **** 	if (szb > SS(fs)) {		/* Buffer allocated? */
1662:ff.c          **** 		mem_set(ibuf, 0, szb);
1663:ff.c          **** 		szb /= SS(fs);		/* Bytes -> Sectors */
1664:ff.c          **** 		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* 
1665:ff.c          **** 		ff_memfree(ibuf);
1666:ff.c          **** 	} else
1667:ff.c          **** #endif
1668:ff.c          **** 	{
1669:ff.c          **** 		ibuf = fs->win; szb = 1;	/* Use window buffer (single-sector writes may take a time) */
1670:ff.c          **** 		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* 
1671:ff.c          **** 	}
1672:ff.c          **** 	return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
1673:ff.c          **** }
1674:ff.c          **** #endif	/* !FF_FS_READONLY */
1675:ff.c          **** 
1676:ff.c          **** 
1677:ff.c          **** 
1678:ff.c          **** 
1679:ff.c          **** /*-----------------------------------------------------------------------*/
1680:ff.c          **** /* Directory handling - Set directory index                              */
1681:ff.c          **** /*-----------------------------------------------------------------------*/
1682:ff.c          **** 
1683:ff.c          **** static
1684:ff.c          **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
1685:ff.c          **** 	DIR* dp,		/* Pointer to directory object */
1686:ff.c          **** 	DWORD ofs		/* Offset of directory table */
1687:ff.c          **** )
1688:ff.c          **** {
1689:ff.c          **** 	DWORD csz, clst;
1690:ff.c          **** 	FATFS *fs = dp->obj.fs;
1691:ff.c          **** 
1692:ff.c          **** 
1693:ff.c          **** 	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIR
1694:ff.c          **** 		return FR_INT_ERR;
1695:ff.c          **** 	}
1696:ff.c          **** 	dp->dptr = ofs;				/* Set current offset */
1697:ff.c          **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1698:ff.c          **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1699:ff.c          **** 		clst = fs->dirbase;
1700:ff.c          **** 		if (FF_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1701:ff.c          **** 	}
1702:ff.c          **** 
1703:ff.c          **** 	if (clst == 0) {	/* Static table (root-directory on the FAT volume) */
1704:ff.c          **** 		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
1705:ff.c          **** 		dp->sect = fs->dirbase;
1706:ff.c          **** 
1707:ff.c          **** 	} else {			/* Dynamic table (sub-directory or root-directory on the FAT32/exFAT volume) */
1708:ff.c          **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1709:ff.c          **** 		while (ofs >= csz) {				/* Follow cluster chain */
1710:ff.c          **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1711:ff.c          **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1712:ff.c          **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1713:ff.c          **** 			ofs -= csz;
1714:ff.c          **** 		}
1715:ff.c          **** 		dp->sect = clst2sect(fs, clst);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 39


1716:ff.c          **** 	}
1717:ff.c          **** 	dp->clust = clst;					/* Current cluster# */
1718:ff.c          **** 	if (dp->sect == 0) return FR_INT_ERR;
1719:ff.c          **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1720:ff.c          **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1721:ff.c          **** 
1722:ff.c          **** 	return FR_OK;
1723:ff.c          **** }
1724:ff.c          **** 
1725:ff.c          **** 
1726:ff.c          **** 
1727:ff.c          **** 
1728:ff.c          **** /*-----------------------------------------------------------------------*/
1729:ff.c          **** /* Directory handling - Move directory table index next                  */
1730:ff.c          **** /*-----------------------------------------------------------------------*/
1731:ff.c          **** 
1732:ff.c          **** static
1733:ff.c          **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1734:ff.c          **** 	DIR* dp,		/* Pointer to the directory object */
1735:ff.c          **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1736:ff.c          **** )
1737:ff.c          **** {
1738:ff.c          **** 	DWORD ofs, clst;
1739:ff.c          **** 	FATFS *fs = dp->obj.fs;
1740:ff.c          **** 
1741:ff.c          **** 
1742:ff.c          **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1743:ff.c          **** 	if (dp->sect == 0 || ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DI
1744:ff.c          **** 
1745:ff.c          **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1746:ff.c          **** 		dp->sect++;				/* Next sector */
1747:ff.c          **** 
1748:ff.c          **** 		if (dp->clust == 0) {	/* Static table */
1749:ff.c          **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1750:ff.c          **** 				dp->sect = 0; return FR_NO_FILE;
1751:ff.c          **** 			}
1752:ff.c          **** 		}
1753:ff.c          **** 		else {					/* Dynamic table */
1754:ff.c          **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
1755:ff.c          **** 				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
1756:ff.c          **** 				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
1757:ff.c          **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1758:ff.c          **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
1759:ff.c          **** #if !FF_FS_READONLY
1760:ff.c          **** 					if (!stretch) {								/* If no stretch, report EOT */
1761:ff.c          **** 						dp->sect = 0; return FR_NO_FILE;
1762:ff.c          **** 					}
1763:ff.c          **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1764:ff.c          **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1765:ff.c          **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1766:ff.c          **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1767:ff.c          **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
1768:ff.c          **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
1769:ff.c          **** #else
1770:ff.c          **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1771:ff.c          **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1772:ff.c          **** #endif
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 40


1773:ff.c          **** 				}
1774:ff.c          **** 				dp->clust = clst;		/* Initialize data for new cluster */
1775:ff.c          **** 				dp->sect = clst2sect(fs, clst);
1776:ff.c          **** 			}
1777:ff.c          **** 		}
1778:ff.c          **** 	}
1779:ff.c          **** 	dp->dptr = ofs;						/* Current entry */
1780:ff.c          **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1781:ff.c          **** 
1782:ff.c          **** 	return FR_OK;
1783:ff.c          **** }
1784:ff.c          **** 
1785:ff.c          **** 
1786:ff.c          **** 
1787:ff.c          **** 
1788:ff.c          **** #if !FF_FS_READONLY
1789:ff.c          **** /*-----------------------------------------------------------------------*/
1790:ff.c          **** /* Directory handling - Reserve a block of directory entries             */
1791:ff.c          **** /*-----------------------------------------------------------------------*/
1792:ff.c          **** 
1793:ff.c          **** static
1794:ff.c          **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1795:ff.c          **** 	DIR* dp,		/* Pointer to the directory object */
1796:ff.c          **** 	UINT nent		/* Number of contiguous entries to allocate */
1797:ff.c          **** )
1798:ff.c          **** {
1799:ff.c          **** 	FRESULT res;
1800:ff.c          **** 	UINT n;
1801:ff.c          **** 	FATFS *fs = dp->obj.fs;
1802:ff.c          **** 
1803:ff.c          **** 
1804:ff.c          **** 	res = dir_sdi(dp, 0);
1805:ff.c          **** 	if (res == FR_OK) {
1806:ff.c          **** 		n = 0;
1807:ff.c          **** 		do {
1808:ff.c          **** 			res = move_window(fs, dp->sect);
1809:ff.c          **** 			if (res != FR_OK) break;
1810:ff.c          **** #if FF_FS_EXFAT
1811:ff.c          **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1812:ff.c          **** #else
1813:ff.c          **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1814:ff.c          **** #endif
1815:ff.c          **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1816:ff.c          **** 			} else {
1817:ff.c          **** 				n = 0;					/* Not a blank entry. Restart to search */
1818:ff.c          **** 			}
1819:ff.c          **** 			res = dir_next(dp, 1);
1820:ff.c          **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1821:ff.c          **** 	}
1822:ff.c          **** 
1823:ff.c          **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1824:ff.c          **** 	return res;
1825:ff.c          **** }
1826:ff.c          **** 
1827:ff.c          **** #endif	/* !FF_FS_READONLY */
1828:ff.c          **** 
1829:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 41


1830:ff.c          **** 
1831:ff.c          **** 
1832:ff.c          **** /*-----------------------------------------------------------------------*/
1833:ff.c          **** /* FAT: Directory handling - Load/Store start cluster number             */
1834:ff.c          **** /*-----------------------------------------------------------------------*/
1835:ff.c          **** 
1836:ff.c          **** static
1837:ff.c          **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1838:ff.c          **** 	FATFS* fs,		/* Pointer to the fs object */
1839:ff.c          **** 	const BYTE* dir	/* Pointer to the key entry */
1840:ff.c          **** )
1841:ff.c          **** {
 445              		.loc 1 1841 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              	.LVL65:
 450 0000 70B5     		push	{r4, r5, r6, lr}
 451              		.cfi_def_cfa_offset 16
 452              		.cfi_offset 4, -16
 453              		.cfi_offset 5, -12
 454              		.cfi_offset 6, -8
 455              		.cfi_offset 14, -4
 456 0002 0646     		mov	r6, r0
 457 0004 0D46     		mov	r5, r1
1842:ff.c          **** 	DWORD cl;
1843:ff.c          **** 
1844:ff.c          **** 	cl = ld_word(dir + DIR_FstClusLO);
 458              		.loc 1 1844 0
 459 0006 01F11A00 		add	r0, r1, #26
 460              	.LVL66:
 461 000a FFF7FEFF 		bl	ld_word
 462              	.LVL67:
 463 000e 0446     		mov	r4, r0
 464              	.LVL68:
1845:ff.c          **** 	if (fs->fs_type == FS_FAT32) {
 465              		.loc 1 1845 0
 466 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 467 0012 032B     		cmp	r3, #3
 468 0014 05D1     		bne	.L35
1846:ff.c          **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 469              		.loc 1 1846 0
 470 0016 05F11400 		add	r0, r5, #20
 471              	.LVL69:
 472 001a FFF7FEFF 		bl	ld_word
 473              	.LVL70:
 474 001e 44EA0040 		orr	r0, r4, r0, lsl #16
 475              	.LVL71:
 476              	.L35:
1847:ff.c          **** 	}
1848:ff.c          **** 
1849:ff.c          **** 	return cl;
1850:ff.c          **** }
 477              		.loc 1 1850 0
 478 0022 70BD     		pop	{r4, r5, r6, pc}
 479              		.cfi_endproc
 480              	.LFE22:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 42


 481              		.size	ld_clust, .-ld_clust
 482              		.section	.text.st_clust,"ax",%progbits
 483              		.align	2
 484              		.thumb
 485              		.thumb_func
 486              		.type	st_clust, %function
 487              	st_clust:
 488              	.LFB23:
1851:ff.c          **** 
1852:ff.c          **** 
1853:ff.c          **** #if !FF_FS_READONLY
1854:ff.c          **** static
1855:ff.c          **** void st_clust (
1856:ff.c          **** 	FATFS* fs,	/* Pointer to the fs object */
1857:ff.c          **** 	BYTE* dir,	/* Pointer to the key entry */
1858:ff.c          **** 	DWORD cl	/* Value to be set */
1859:ff.c          **** )
1860:ff.c          **** {
 489              		.loc 1 1860 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              	.LVL72:
 494 0000 70B5     		push	{r4, r5, r6, lr}
 495              		.cfi_def_cfa_offset 16
 496              		.cfi_offset 4, -16
 497              		.cfi_offset 5, -12
 498              		.cfi_offset 6, -8
 499              		.cfi_offset 14, -4
 500 0002 0646     		mov	r6, r0
 501 0004 0C46     		mov	r4, r1
 502 0006 1546     		mov	r5, r2
1861:ff.c          **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 503              		.loc 1 1861 0
 504 0008 91B2     		uxth	r1, r2
 505              	.LVL73:
 506 000a 04F11A00 		add	r0, r4, #26
 507              	.LVL74:
 508 000e FFF7FEFF 		bl	st_word
 509              	.LVL75:
1862:ff.c          **** 	if (fs->fs_type == FS_FAT32) {
 510              		.loc 1 1862 0
 511 0012 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 512 0014 032B     		cmp	r3, #3
 513 0016 04D1     		bne	.L37
1863:ff.c          **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 514              		.loc 1 1863 0
 515 0018 290C     		lsrs	r1, r5, #16
 516 001a 04F11400 		add	r0, r4, #20
 517 001e FFF7FEFF 		bl	st_word
 518              	.LVL76:
 519              	.L37:
 520 0022 70BD     		pop	{r4, r5, r6, pc}
 521              		.cfi_endproc
 522              	.LFE23:
 523              		.size	st_clust, .-st_clust
 524              		.section	.text.get_fileinfo,"ax",%progbits
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 43


 525              		.align	2
 526              		.thumb
 527              		.thumb_func
 528              		.type	get_fileinfo, %function
 529              	get_fileinfo:
 530              	.LFB28:
1864:ff.c          **** 	}
1865:ff.c          **** }
1866:ff.c          **** #endif
1867:ff.c          **** 
1868:ff.c          **** 
1869:ff.c          **** 
1870:ff.c          **** #if FF_USE_LFN
1871:ff.c          **** /*--------------------------------------------------------*/
1872:ff.c          **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1873:ff.c          **** /*--------------------------------------------------------*/
1874:ff.c          **** static
1875:ff.c          **** int cmp_lfn (				/* 1:matched, 0:not matched */
1876:ff.c          **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1877:ff.c          **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1878:ff.c          **** )
1879:ff.c          **** {
1880:ff.c          **** 	UINT i, s;
1881:ff.c          **** 	WCHAR wc, uc;
1882:ff.c          **** 
1883:ff.c          **** 
1884:ff.c          **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1885:ff.c          **** 
1886:ff.c          **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1887:ff.c          **** 
1888:ff.c          **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1889:ff.c          **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1890:ff.c          **** 		if (wc != 0) {
1891:ff.c          **** 			if (i >= FF_MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1892:ff.c          **** 				return 0;					/* Not matched */
1893:ff.c          **** 			}
1894:ff.c          **** 			wc = uc;
1895:ff.c          **** 		} else {
1896:ff.c          **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1897:ff.c          **** 		}
1898:ff.c          **** 	}
1899:ff.c          **** 
1900:ff.c          **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1901:ff.c          **** 
1902:ff.c          **** 	return 1;		/* The part of LFN matched */
1903:ff.c          **** }
1904:ff.c          **** 
1905:ff.c          **** 
1906:ff.c          **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 || FF_USE_LABEL || FF_FS_EXFAT
1907:ff.c          **** /*-----------------------------------------------------*/
1908:ff.c          **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1909:ff.c          **** /*-----------------------------------------------------*/
1910:ff.c          **** static
1911:ff.c          **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1912:ff.c          **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1913:ff.c          **** 	BYTE* dir			/* Pointer to the LFN entry */
1914:ff.c          **** )
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 44


1915:ff.c          **** {
1916:ff.c          **** 	UINT i, s;
1917:ff.c          **** 	WCHAR wc, uc;
1918:ff.c          **** 
1919:ff.c          **** 
1920:ff.c          **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1921:ff.c          **** 
1922:ff.c          **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1923:ff.c          **** 
1924:ff.c          **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1925:ff.c          **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1926:ff.c          **** 		if (wc != 0) {
1927:ff.c          **** 			if (i >= FF_MAX_LFN) return 0;	/* Buffer overflow? */
1928:ff.c          **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1929:ff.c          **** 		} else {
1930:ff.c          **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1931:ff.c          **** 		}
1932:ff.c          **** 	}
1933:ff.c          **** 
1934:ff.c          **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1935:ff.c          **** 		if (i >= FF_MAX_LFN) return 0;		/* Buffer overflow? */
1936:ff.c          **** 		lfnbuf[i] = 0;
1937:ff.c          **** 	}
1938:ff.c          **** 
1939:ff.c          **** 	return 1;		/* The part of LFN is valid */
1940:ff.c          **** }
1941:ff.c          **** #endif
1942:ff.c          **** 
1943:ff.c          **** 
1944:ff.c          **** #if !FF_FS_READONLY
1945:ff.c          **** /*-----------------------------------------*/
1946:ff.c          **** /* FAT-LFN: Create an entry of LFN entries */
1947:ff.c          **** /*-----------------------------------------*/
1948:ff.c          **** static
1949:ff.c          **** void put_lfn (
1950:ff.c          **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1951:ff.c          **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1952:ff.c          **** 	BYTE ord,			/* LFN order (1-20) */
1953:ff.c          **** 	BYTE sum			/* Checksum of the corresponding SFN */
1954:ff.c          **** )
1955:ff.c          **** {
1956:ff.c          **** 	UINT i, s;
1957:ff.c          **** 	WCHAR wc;
1958:ff.c          **** 
1959:ff.c          **** 
1960:ff.c          **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1961:ff.c          **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1962:ff.c          **** 	dir[LDIR_Type] = 0;
1963:ff.c          **** 	st_word(dir + LDIR_FstClusLO, 0);
1964:ff.c          **** 
1965:ff.c          **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1966:ff.c          **** 	s = wc = 0;
1967:ff.c          **** 	do {
1968:ff.c          **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1969:ff.c          **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1970:ff.c          **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1971:ff.c          **** 	} while (++s < 13);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 45


1972:ff.c          **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1973:ff.c          **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1974:ff.c          **** }
1975:ff.c          **** 
1976:ff.c          **** #endif	/* !FF_FS_READONLY */
1977:ff.c          **** #endif	/* FF_USE_LFN */
1978:ff.c          **** 
1979:ff.c          **** 
1980:ff.c          **** 
1981:ff.c          **** #if FF_USE_LFN && !FF_FS_READONLY
1982:ff.c          **** /*-----------------------------------------------------------------------*/
1983:ff.c          **** /* FAT-LFN: Create a Numbered SFN                                        */
1984:ff.c          **** /*-----------------------------------------------------------------------*/
1985:ff.c          **** 
1986:ff.c          **** static
1987:ff.c          **** void gen_numname (
1988:ff.c          **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1989:ff.c          **** 	const BYTE* src,	/* Pointer to SFN */
1990:ff.c          **** 	const WCHAR* lfn,	/* Pointer to LFN */
1991:ff.c          **** 	UINT seq			/* Sequence number */
1992:ff.c          **** )
1993:ff.c          **** {
1994:ff.c          **** 	BYTE ns[8], c;
1995:ff.c          **** 	UINT i, j;
1996:ff.c          **** 	WCHAR wc;
1997:ff.c          **** 	DWORD sr;
1998:ff.c          **** 
1999:ff.c          **** 
2000:ff.c          **** 	mem_cpy(dst, src, 11);
2001:ff.c          **** 
2002:ff.c          **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
2003:ff.c          **** 		sr = seq;
2004:ff.c          **** 		while (*lfn) {	/* Create a CRC */
2005:ff.c          **** 			wc = *lfn++;
2006:ff.c          **** 			for (i = 0; i < 16; i++) {
2007:ff.c          **** 				sr = (sr << 1) + (wc & 1);
2008:ff.c          **** 				wc >>= 1;
2009:ff.c          **** 				if (sr & 0x10000) sr ^= 0x11021;
2010:ff.c          **** 			}
2011:ff.c          **** 		}
2012:ff.c          **** 		seq = (UINT)sr;
2013:ff.c          **** 	}
2014:ff.c          **** 
2015:ff.c          **** 	/* itoa (hexdecimal) */
2016:ff.c          **** 	i = 7;
2017:ff.c          **** 	do {
2018:ff.c          **** 		c = (BYTE)((seq % 16) + '0');
2019:ff.c          **** 		if (c > '9') c += 7;
2020:ff.c          **** 		ns[i--] = c;
2021:ff.c          **** 		seq /= 16;
2022:ff.c          **** 	} while (seq);
2023:ff.c          **** 	ns[i] = '~';
2024:ff.c          **** 
2025:ff.c          **** 	/* Append the number to the SFN body */
2026:ff.c          **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
2027:ff.c          **** 		if (dbc_1st(dst[j])) {
2028:ff.c          **** 			if (j == i - 1) break;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 46


2029:ff.c          **** 			j++;
2030:ff.c          **** 		}
2031:ff.c          **** 	}
2032:ff.c          **** 	do {
2033:ff.c          **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
2034:ff.c          **** 	} while (j < 8);
2035:ff.c          **** }
2036:ff.c          **** #endif	/* FF_USE_LFN && !FF_FS_READONLY */
2037:ff.c          **** 
2038:ff.c          **** 
2039:ff.c          **** 
2040:ff.c          **** #if FF_USE_LFN
2041:ff.c          **** /*-----------------------------------------------------------------------*/
2042:ff.c          **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
2043:ff.c          **** /*-----------------------------------------------------------------------*/
2044:ff.c          **** 
2045:ff.c          **** static
2046:ff.c          **** BYTE sum_sfn (
2047:ff.c          **** 	const BYTE* dir		/* Pointer to the SFN entry */
2048:ff.c          **** )
2049:ff.c          **** {
2050:ff.c          **** 	BYTE sum = 0;
2051:ff.c          **** 	UINT n = 11;
2052:ff.c          **** 
2053:ff.c          **** 	do {
2054:ff.c          **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
2055:ff.c          **** 	} while (--n);
2056:ff.c          **** 	return sum;
2057:ff.c          **** }
2058:ff.c          **** 
2059:ff.c          **** #endif	/* FF_USE_LFN */
2060:ff.c          **** 
2061:ff.c          **** 
2062:ff.c          **** 
2063:ff.c          **** #if FF_FS_EXFAT
2064:ff.c          **** /*-----------------------------------------------------------------------*/
2065:ff.c          **** /* exFAT: Checksum                                                       */
2066:ff.c          **** /*-----------------------------------------------------------------------*/
2067:ff.c          **** 
2068:ff.c          **** static
2069:ff.c          **** WORD xdir_sum (			/* Get checksum of the directoly entry block */
2070:ff.c          **** 	const BYTE* dir		/* Directory entry block to be calculated */
2071:ff.c          **** )
2072:ff.c          **** {
2073:ff.c          **** 	UINT i, szblk;
2074:ff.c          **** 	WORD sum;
2075:ff.c          **** 
2076:ff.c          **** 
2077:ff.c          **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
2078:ff.c          **** 	for (i = sum = 0; i < szblk; i++) {
2079:ff.c          **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
2080:ff.c          **** 			i++;
2081:ff.c          **** 		} else {
2082:ff.c          **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
2083:ff.c          **** 		}
2084:ff.c          **** 	}
2085:ff.c          **** 	return sum;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 47


2086:ff.c          **** }
2087:ff.c          **** 
2088:ff.c          **** 
2089:ff.c          **** 
2090:ff.c          **** static
2091:ff.c          **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
2092:ff.c          **** 	const WCHAR* name	/* File name to be calculated */
2093:ff.c          **** )
2094:ff.c          **** {
2095:ff.c          **** 	WCHAR chr;
2096:ff.c          **** 	WORD sum = 0;
2097:ff.c          **** 
2098:ff.c          **** 
2099:ff.c          **** 	while ((chr = *name++) != 0) {
2100:ff.c          **** 		chr = (WCHAR)ff_wtoupper(chr);		/* File name needs to be upper-case converted */
2101:ff.c          **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
2102:ff.c          **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
2103:ff.c          **** 	}
2104:ff.c          **** 	return sum;
2105:ff.c          **** }
2106:ff.c          **** 
2107:ff.c          **** 
2108:ff.c          **** #if !FF_FS_READONLY && FF_USE_MKFS
2109:ff.c          **** static
2110:ff.c          **** DWORD xsum32 (
2111:ff.c          **** 	BYTE  dat,	/* Byte to be calculated */
2112:ff.c          **** 	DWORD sum	/* Previous sum */
2113:ff.c          **** )
2114:ff.c          **** {
2115:ff.c          **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
2116:ff.c          **** 	return sum;
2117:ff.c          **** }
2118:ff.c          **** #endif
2119:ff.c          **** 
2120:ff.c          **** 
2121:ff.c          **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2
2122:ff.c          **** /*------------------------------------------------------*/
2123:ff.c          **** /* exFAT: Get object information from a directory block */
2124:ff.c          **** /*------------------------------------------------------*/
2125:ff.c          **** 
2126:ff.c          **** static
2127:ff.c          **** void get_xfileinfo (
2128:ff.c          **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
2129:ff.c          **** 	FILINFO* fno		/* Buffer to store the extracted file information */
2130:ff.c          **** )
2131:ff.c          **** {
2132:ff.c          **** 	WCHAR wc, hs;
2133:ff.c          **** 	UINT di, si, nc;
2134:ff.c          **** 
2135:ff.c          **** 	/* Get file name from the entry block */
2136:ff.c          **** 	si = SZDIRE * 2;	/* 1st C1 entry */
2137:ff.c          **** 	nc = hs = di = 0;
2138:ff.c          **** 	while (nc < dirb[XDIR_NumName]) {
2139:ff.c          **** 		if (si >= MAXDIRB(FF_MAX_LFN)) { di = 0; break; }	/* Truncated directory block? */
2140:ff.c          **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
2141:ff.c          **** 		wc = ld_word(dirb + si); si += 2; nc++;	/* Get a character */
2142:ff.c          **** 		if (hs == 0 && IsSurrogate(wc)) {	/* Is it a surrogate? */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 48


2143:ff.c          **** 			hs = wc; continue;	/* Get low surrogate */
2144:ff.c          **** 		}
2145:ff.c          **** 		wc = put_utf((DWORD)hs << 16 | wc, &fno->fname[di], FF_LFN_BUF - di);	/* Store it in UTF-16 or UT
2146:ff.c          **** 		if (wc == 0) { di = 0; break; }	/* Buffer overflow or wrong encoding? */
2147:ff.c          **** 		di += wc;
2148:ff.c          **** 		hs = 0;
2149:ff.c          **** 	}
2150:ff.c          **** 	if (hs != 0) di = 0;					/* Broken surrogate pair? */
2151:ff.c          **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
2152:ff.c          **** 	fno->fname[di] = 0;						/* Terminate the name */
2153:ff.c          **** 	fno->altname[0] = 0;					/* exFAT does not have SFN */
2154:ff.c          **** 
2155:ff.c          **** 	fno->fattrib = dirb[XDIR_Attr];			/* Attribute */
2156:ff.c          **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
2157:ff.c          **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
2158:ff.c          **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
2159:ff.c          **** }
2160:ff.c          **** 
2161:ff.c          **** #endif	/* FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 */
2162:ff.c          **** 
2163:ff.c          **** 
2164:ff.c          **** /*-----------------------------------*/
2165:ff.c          **** /* exFAT: Get a directry entry block */
2166:ff.c          **** /*-----------------------------------*/
2167:ff.c          **** 
2168:ff.c          **** static
2169:ff.c          **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
2170:ff.c          **** 	DIR* dp			/* Reading direcotry object pointing top of the entry block to load */
2171:ff.c          **** )
2172:ff.c          **** {
2173:ff.c          **** 	FRESULT res;
2174:ff.c          **** 	UINT i, sz_ent;
2175:ff.c          **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
2176:ff.c          **** 
2177:ff.c          **** 
2178:ff.c          **** 	/* Load 85 entry */
2179:ff.c          **** 	res = move_window(dp->obj.fs, dp->sect);
2180:ff.c          **** 	if (res != FR_OK) return res;
2181:ff.c          **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;	/* Invalid order */
2182:ff.c          **** 	mem_cpy(dirb + 0 * SZDIRE, dp->dir, SZDIRE);
2183:ff.c          **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
2184:ff.c          **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
2185:ff.c          **** 
2186:ff.c          **** 	/* Load C0 entry */
2187:ff.c          **** 	res = dir_next(dp, 0);
2188:ff.c          **** 	if (res == FR_NO_FILE) res = FR_INT_ERR;	/* It cannot be */
2189:ff.c          **** 	if (res != FR_OK) return res;
2190:ff.c          **** 	res = move_window(dp->obj.fs, dp->sect);
2191:ff.c          **** 	if (res != FR_OK) return res;
2192:ff.c          **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;	/* Invalid order */
2193:ff.c          **** 	mem_cpy(dirb + 1 * SZDIRE, dp->dir, SZDIRE);
2194:ff.c          **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2195:ff.c          **** 
2196:ff.c          **** 	/* Load C1 entries */
2197:ff.c          **** 	i = 2 * SZDIRE;	/* C1 offset to load */
2198:ff.c          **** 	do {
2199:ff.c          **** 		res = dir_next(dp, 0);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 49


2200:ff.c          **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;	/* It cannot be */
2201:ff.c          **** 		if (res != FR_OK) return res;
2202:ff.c          **** 		res = move_window(dp->obj.fs, dp->sect);
2203:ff.c          **** 		if (res != FR_OK) return res;
2204:ff.c          **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;	/* Invalid order */
2205:ff.c          **** 		if (i < MAXDIRB(FF_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2206:ff.c          **** 	} while ((i += SZDIRE) < sz_ent);
2207:ff.c          **** 
2208:ff.c          **** 	/* Sanity check (do it for only accessible object) */
2209:ff.c          **** 	if (i <= MAXDIRB(FF_MAX_LFN)) {
2210:ff.c          **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2211:ff.c          **** 	}
2212:ff.c          **** 	return FR_OK;
2213:ff.c          **** }
2214:ff.c          **** 
2215:ff.c          **** 
2216:ff.c          **** /*------------------------------------------------------------------*/
2217:ff.c          **** /* exFAT: Initialize object allocation info with loaded entry block */
2218:ff.c          **** /*------------------------------------------------------------------*/
2219:ff.c          **** 
2220:ff.c          **** static
2221:ff.c          **** void init_alloc_info (
2222:ff.c          **** 	FATFS* fs,		/* Filesystem object */
2223:ff.c          **** 	FFOBJID* obj	/* Object allocation information to be initialized */
2224:ff.c          **** )
2225:ff.c          **** {
2226:ff.c          **** 	obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Start cluster */
2227:ff.c          **** 	obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);	/* Size */
2228:ff.c          **** 	obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;				/* Allocation status */
2229:ff.c          **** 	obj->n_frag = 0;										/* No last fragment info */
2230:ff.c          **** }
2231:ff.c          **** 
2232:ff.c          **** 
2233:ff.c          **** 
2234:ff.c          **** #if !FF_FS_READONLY || FF_FS_RPATH != 0
2235:ff.c          **** /*------------------------------------------------*/
2236:ff.c          **** /* exFAT: Load the object's directory entry block */
2237:ff.c          **** /*------------------------------------------------*/
2238:ff.c          **** static
2239:ff.c          **** FRESULT load_obj_xdir (	
2240:ff.c          **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2241:ff.c          **** 	const FFOBJID* obj	/* Object with its containing directory information */
2242:ff.c          **** )
2243:ff.c          **** {
2244:ff.c          **** 	FRESULT res;
2245:ff.c          **** 
2246:ff.c          **** 	/* Open object containing directory */
2247:ff.c          **** 	dp->obj.fs = obj->fs;
2248:ff.c          **** 	dp->obj.sclust = obj->c_scl;
2249:ff.c          **** 	dp->obj.stat = (BYTE)obj->c_size;
2250:ff.c          **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2251:ff.c          **** 	dp->obj.n_frag = 0;
2252:ff.c          **** 	dp->blk_ofs = obj->c_ofs;
2253:ff.c          **** 
2254:ff.c          **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2255:ff.c          **** 	if (res == FR_OK) {
2256:ff.c          **** 		res = load_xdir(dp);		/* Load the object's entry block */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 50


2257:ff.c          **** 	}
2258:ff.c          **** 	return res;
2259:ff.c          **** }
2260:ff.c          **** #endif
2261:ff.c          **** 
2262:ff.c          **** 
2263:ff.c          **** #if !FF_FS_READONLY
2264:ff.c          **** /*----------------------------------------*/
2265:ff.c          **** /* exFAT: Store the directory entry block */
2266:ff.c          **** /*----------------------------------------*/
2267:ff.c          **** static
2268:ff.c          **** FRESULT store_xdir (
2269:ff.c          **** 	DIR* dp				/* Pointer to the direcotry object */
2270:ff.c          **** )
2271:ff.c          **** {
2272:ff.c          **** 	FRESULT res;
2273:ff.c          **** 	UINT nent;
2274:ff.c          **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2275:ff.c          **** 
2276:ff.c          **** 	/* Create set sum */
2277:ff.c          **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2278:ff.c          **** 	nent = dirb[XDIR_NumSec] + 1;
2279:ff.c          **** 
2280:ff.c          **** 	/* Store the direcotry entry block to the directory */
2281:ff.c          **** 	res = dir_sdi(dp, dp->blk_ofs);
2282:ff.c          **** 	while (res == FR_OK) {
2283:ff.c          **** 		res = move_window(dp->obj.fs, dp->sect);
2284:ff.c          **** 		if (res != FR_OK) break;
2285:ff.c          **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2286:ff.c          **** 		dp->obj.fs->wflag = 1;
2287:ff.c          **** 		if (--nent == 0) break;
2288:ff.c          **** 		dirb += SZDIRE;
2289:ff.c          **** 		res = dir_next(dp, 0);
2290:ff.c          **** 	}
2291:ff.c          **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2292:ff.c          **** }
2293:ff.c          **** 
2294:ff.c          **** 
2295:ff.c          **** 
2296:ff.c          **** /*-------------------------------------------*/
2297:ff.c          **** /* exFAT: Create a new directory enrty block */
2298:ff.c          **** /*-------------------------------------------*/
2299:ff.c          **** 
2300:ff.c          **** static
2301:ff.c          **** void create_xdir (
2302:ff.c          **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2303:ff.c          **** 	const WCHAR* lfn	/* Pointer to the object name */
2304:ff.c          **** )
2305:ff.c          **** {
2306:ff.c          **** 	UINT i;
2307:ff.c          **** 	BYTE nc1, nlen;
2308:ff.c          **** 	WCHAR wc;
2309:ff.c          **** 
2310:ff.c          **** 
2311:ff.c          **** 	/* Create 85,C0 entry */
2312:ff.c          **** 	mem_set(dirb, 0, 2 * SZDIRE);
2313:ff.c          **** 	dirb[0 * SZDIRE + XDIR_Type] = 0x85;	/* 85 entry */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 51


2314:ff.c          **** 	dirb[1 * SZDIRE + XDIR_Type] = 0xC0;	/* C0 entry */
2315:ff.c          **** 
2316:ff.c          **** 	/* Create C1 entries */
2317:ff.c          **** 	i = SZDIRE * 2;	/* Top of C1 entries */
2318:ff.c          **** 	nlen = nc1 = 0; wc = 1;
2319:ff.c          **** 	do {
2320:ff.c          **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2321:ff.c          **** 		do {	/* Fill name field */
2322:ff.c          **** 			if (wc != 0 && (wc = lfn[nlen]) != 0) nlen++;	/* Get a character if exist */
2323:ff.c          **** 			st_word(dirb + i, wc); 		/* Store it */
2324:ff.c          **** 			i += 2;
2325:ff.c          **** 		} while (i % SZDIRE != 0);
2326:ff.c          **** 		nc1++;
2327:ff.c          **** 	} while (lfn[nlen]);	/* Fill next entry if any char follows */
2328:ff.c          **** 
2329:ff.c          **** 	dirb[XDIR_NumName] = nlen;		/* Set name length */
2330:ff.c          **** 	dirb[XDIR_NumSec] = 1 + nc1;	/* Set secondary count (C0 + C1s) */
2331:ff.c          **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2332:ff.c          **** }
2333:ff.c          **** 
2334:ff.c          **** #endif	/* !FF_FS_READONLY */
2335:ff.c          **** #endif	/* FF_FS_EXFAT */
2336:ff.c          **** 
2337:ff.c          **** 
2338:ff.c          **** 
2339:ff.c          **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 || FF_USE_LABEL || FF_FS_EXFAT
2340:ff.c          **** /*-----------------------------------------------------------------------*/
2341:ff.c          **** /* Read an object from the directory                                     */
2342:ff.c          **** /*-----------------------------------------------------------------------*/
2343:ff.c          **** 
2344:ff.c          **** #define dir_read_file(dp) dir_read(dp, 0)
2345:ff.c          **** #define dir_read_label(dp) dir_read(dp, 1)
2346:ff.c          **** 
2347:ff.c          **** static
2348:ff.c          **** FRESULT dir_read (
2349:ff.c          **** 	DIR* dp,		/* Pointer to the directory object */
2350:ff.c          **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2351:ff.c          **** )
2352:ff.c          **** {
2353:ff.c          **** 	FRESULT res = FR_NO_FILE;
2354:ff.c          **** 	FATFS *fs = dp->obj.fs;
2355:ff.c          **** 	BYTE a, c;
2356:ff.c          **** #if FF_USE_LFN
2357:ff.c          **** 	BYTE ord = 0xFF, sum = 0xFF;
2358:ff.c          **** #endif
2359:ff.c          **** 
2360:ff.c          **** 	while (dp->sect) {
2361:ff.c          **** 		res = move_window(fs, dp->sect);
2362:ff.c          **** 		if (res != FR_OK) break;
2363:ff.c          **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2364:ff.c          **** 		if (c == 0) {
2365:ff.c          **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2366:ff.c          **** 		}
2367:ff.c          **** #if FF_FS_EXFAT
2368:ff.c          **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2369:ff.c          **** 			if (FF_USE_LABEL && vol) {
2370:ff.c          **** 				if (c == 0x83) break;	/* Volume label entry? */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 52


2371:ff.c          **** 			} else {
2372:ff.c          **** 				if (c == 0x85) {		/* Start of the file entry block? */
2373:ff.c          **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2374:ff.c          **** 					res = load_xdir(dp);	/* Load the entry block */
2375:ff.c          **** 					if (res == FR_OK) {
2376:ff.c          **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2377:ff.c          **** 					}
2378:ff.c          **** 					break;
2379:ff.c          **** 				}
2380:ff.c          **** 			}
2381:ff.c          **** 		} else
2382:ff.c          **** #endif
2383:ff.c          **** 		{	/* On the FAT/FAT32 volume */
2384:ff.c          **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2385:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
2386:ff.c          **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2387:ff.c          **** 				ord = 0xFF;
2388:ff.c          **** 			} else {
2389:ff.c          **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2390:ff.c          **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2391:ff.c          **** 						sum = dp->dir[LDIR_Chksum];
2392:ff.c          **** 						c &= (BYTE)~LLEF; ord = c;
2393:ff.c          **** 						dp->blk_ofs = dp->dptr;
2394:ff.c          **** 					}
2395:ff.c          **** 					/* Check LFN validity and capture it */
2396:ff.c          **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2397:ff.c          **** 				} else {					/* An SFN entry is found */
2398:ff.c          **** 					if (ord != 0 || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2399:ff.c          **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2400:ff.c          **** 					}
2401:ff.c          **** 					break;
2402:ff.c          **** 				}
2403:ff.c          **** 			}
2404:ff.c          **** #else		/* Non LFN configuration */
2405:ff.c          **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2406:ff.c          **** 				break;
2407:ff.c          **** 			}
2408:ff.c          **** #endif
2409:ff.c          **** 		}
2410:ff.c          **** 		res = dir_next(dp, 0);		/* Next entry */
2411:ff.c          **** 		if (res != FR_OK) break;
2412:ff.c          **** 	}
2413:ff.c          **** 
2414:ff.c          **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2415:ff.c          **** 	return res;
2416:ff.c          **** }
2417:ff.c          **** 
2418:ff.c          **** #endif	/* FF_FS_MINIMIZE <= 1 || FF_USE_LABEL || FF_FS_RPATH >= 2 */
2419:ff.c          **** 
2420:ff.c          **** 
2421:ff.c          **** 
2422:ff.c          **** /*-----------------------------------------------------------------------*/
2423:ff.c          **** /* Directory handling - Find an object in the directory                  */
2424:ff.c          **** /*-----------------------------------------------------------------------*/
2425:ff.c          **** 
2426:ff.c          **** static
2427:ff.c          **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 53


2428:ff.c          **** 	DIR* dp			/* Pointer to the directory object with the file name */
2429:ff.c          **** )
2430:ff.c          **** {
2431:ff.c          **** 	FRESULT res;
2432:ff.c          **** 	FATFS *fs = dp->obj.fs;
2433:ff.c          **** 	BYTE c;
2434:ff.c          **** #if FF_USE_LFN
2435:ff.c          **** 	BYTE a, ord, sum;
2436:ff.c          **** #endif
2437:ff.c          **** 
2438:ff.c          **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2439:ff.c          **** 	if (res != FR_OK) return res;
2440:ff.c          **** #if FF_FS_EXFAT
2441:ff.c          **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2442:ff.c          **** 		BYTE nc;
2443:ff.c          **** 		UINT di, ni;
2444:ff.c          **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2445:ff.c          **** 
2446:ff.c          **** 		while ((res = dir_read_file(dp)) == FR_OK) {	/* Read an item */
2447:ff.c          **** #if FF_MAX_LFN < 255
2448:ff.c          **** 			if (fs->dirbuf[XDIR_NumName] > FF_MAX_LFN) continue;			/* Skip comparison if inaccessible object
2449:ff.c          **** #endif
2450:ff.c          **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2451:ff.c          **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2452:ff.c          **** 				if ((di % SZDIRE) == 0) di += 2;
2453:ff.c          **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2454:ff.c          **** 			}
2455:ff.c          **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2456:ff.c          **** 		}
2457:ff.c          **** 		return res;
2458:ff.c          **** 	}
2459:ff.c          **** #endif
2460:ff.c          **** 	/* On the FAT/FAT32 volume */
2461:ff.c          **** #if FF_USE_LFN
2462:ff.c          **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2463:ff.c          **** #endif
2464:ff.c          **** 	do {
2465:ff.c          **** 		res = move_window(fs, dp->sect);
2466:ff.c          **** 		if (res != FR_OK) break;
2467:ff.c          **** 		c = dp->dir[DIR_Name];
2468:ff.c          **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2469:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
2470:ff.c          **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2471:ff.c          **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2472:ff.c          **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2473:ff.c          **** 		} else {
2474:ff.c          **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2475:ff.c          **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2476:ff.c          **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2477:ff.c          **** 						sum = dp->dir[LDIR_Chksum];
2478:ff.c          **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2479:ff.c          **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2480:ff.c          **** 					}
2481:ff.c          **** 					/* Check validity of the LFN entry and compare it with given name */
2482:ff.c          **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2483:ff.c          **** 				}
2484:ff.c          **** 			} else {					/* An SFN entry is found */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 54


2485:ff.c          **** 				if (ord == 0 && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2486:ff.c          **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2487:ff.c          **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2488:ff.c          **** 			}
2489:ff.c          **** 		}
2490:ff.c          **** #else		/* Non LFN configuration */
2491:ff.c          **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2492:ff.c          **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2493:ff.c          **** #endif
2494:ff.c          **** 		res = dir_next(dp, 0);	/* Next entry */
2495:ff.c          **** 	} while (res == FR_OK);
2496:ff.c          **** 
2497:ff.c          **** 	return res;
2498:ff.c          **** }
2499:ff.c          **** 
2500:ff.c          **** 
2501:ff.c          **** 
2502:ff.c          **** 
2503:ff.c          **** #if !FF_FS_READONLY
2504:ff.c          **** /*-----------------------------------------------------------------------*/
2505:ff.c          **** /* Register an object to the directory                                   */
2506:ff.c          **** /*-----------------------------------------------------------------------*/
2507:ff.c          **** 
2508:ff.c          **** static
2509:ff.c          **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2510:ff.c          **** 	DIR* dp				/* Target directory with object name to be created */
2511:ff.c          **** )
2512:ff.c          **** {
2513:ff.c          **** 	FRESULT res;
2514:ff.c          **** 	FATFS *fs = dp->obj.fs;
2515:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
2516:ff.c          **** 	UINT n, nlen, nent;
2517:ff.c          **** 	BYTE sn[12], sum;
2518:ff.c          **** 
2519:ff.c          **** 
2520:ff.c          **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2521:ff.c          **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2522:ff.c          **** 
2523:ff.c          **** #if FF_FS_EXFAT
2524:ff.c          **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2525:ff.c          **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2526:ff.c          **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2527:ff.c          **** 		if (res != FR_OK) return res;
2528:ff.c          **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2529:ff.c          **** 
2530:ff.c          **** 		if (dp->obj.stat & 4) {			/* Has the directory been stretched? */
2531:ff.c          **** 			dp->obj.stat &= ~4;
2532:ff.c          **** 			res = fill_first_frag(&dp->obj);	/* Fill the first fragment on the FAT if needed */
2533:ff.c          **** 			if (res != FR_OK) return res;
2534:ff.c          **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill the last fragment on the FAT if n
2535:ff.c          **** 			if (res != FR_OK) return res;
2536:ff.c          **** 			if (dp->obj.sclust != 0) {		/* Is it a sub directory? */
2537:ff.c          **** 				DIR dj;
2538:ff.c          **** 
2539:ff.c          **** 				res = load_obj_xdir(&dj, &dp->obj);	/* Load the object status */
2540:ff.c          **** 				if (res != FR_OK) return res;
2541:ff.c          **** 				dp->obj.objsize += (DWORD)fs->csize * SS(fs);			/* Increase the directory size by cluster size 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 55


2542:ff.c          **** 				st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);	/* Update the allocation status */
2543:ff.c          **** 				st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2544:ff.c          **** 				fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2545:ff.c          **** 				res = store_xdir(&dj);				/* Store the object status */
2546:ff.c          **** 				if (res != FR_OK) return res;
2547:ff.c          **** 			}
2548:ff.c          **** 		}
2549:ff.c          **** 
2550:ff.c          **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2551:ff.c          **** 		return FR_OK;
2552:ff.c          **** 	}
2553:ff.c          **** #endif
2554:ff.c          **** 	/* On the FAT/FAT32 volume */
2555:ff.c          **** 	mem_cpy(sn, dp->fn, 12);
2556:ff.c          **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2557:ff.c          **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2558:ff.c          **** 		for (n = 1; n < 100; n++) {
2559:ff.c          **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2560:ff.c          **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2561:ff.c          **** 			if (res != FR_OK) break;
2562:ff.c          **** 		}
2563:ff.c          **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2564:ff.c          **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2565:ff.c          **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2566:ff.c          **** 	}
2567:ff.c          **** 
2568:ff.c          **** 	/* Create an SFN with/without LFNs. */
2569:ff.c          **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2570:ff.c          **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2571:ff.c          **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2572:ff.c          **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2573:ff.c          **** 		if (res == FR_OK) {
2574:ff.c          **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2575:ff.c          **** 			do {					/* Store LFN entries in bottom first */
2576:ff.c          **** 				res = move_window(fs, dp->sect);
2577:ff.c          **** 				if (res != FR_OK) break;
2578:ff.c          **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2579:ff.c          **** 				fs->wflag = 1;
2580:ff.c          **** 				res = dir_next(dp, 0);	/* Next entry */
2581:ff.c          **** 			} while (res == FR_OK && --nent);
2582:ff.c          **** 		}
2583:ff.c          **** 	}
2584:ff.c          **** 
2585:ff.c          **** #else	/* Non LFN configuration */
2586:ff.c          **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2587:ff.c          **** 
2588:ff.c          **** #endif
2589:ff.c          **** 
2590:ff.c          **** 	/* Set SFN entry */
2591:ff.c          **** 	if (res == FR_OK) {
2592:ff.c          **** 		res = move_window(fs, dp->sect);
2593:ff.c          **** 		if (res == FR_OK) {
2594:ff.c          **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2595:ff.c          **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2596:ff.c          **** #if FF_USE_LFN
2597:ff.c          **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2598:ff.c          **** #endif
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 56


2599:ff.c          **** 			fs->wflag = 1;
2600:ff.c          **** 		}
2601:ff.c          **** 	}
2602:ff.c          **** 
2603:ff.c          **** 	return res;
2604:ff.c          **** }
2605:ff.c          **** 
2606:ff.c          **** #endif /* !FF_FS_READONLY */
2607:ff.c          **** 
2608:ff.c          **** 
2609:ff.c          **** 
2610:ff.c          **** #if !FF_FS_READONLY && FF_FS_MINIMIZE == 0
2611:ff.c          **** /*-----------------------------------------------------------------------*/
2612:ff.c          **** /* Remove an object from the directory                                   */
2613:ff.c          **** /*-----------------------------------------------------------------------*/
2614:ff.c          **** 
2615:ff.c          **** static
2616:ff.c          **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2617:ff.c          **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2618:ff.c          **** )
2619:ff.c          **** {
2620:ff.c          **** 	FRESULT res;
2621:ff.c          **** 	FATFS *fs = dp->obj.fs;
2622:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
2623:ff.c          **** 	DWORD last = dp->dptr;
2624:ff.c          **** 
2625:ff.c          **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2626:ff.c          **** 	if (res == FR_OK) {
2627:ff.c          **** 		do {
2628:ff.c          **** 			res = move_window(fs, dp->sect);
2629:ff.c          **** 			if (res != FR_OK) break;
2630:ff.c          **** 			if (FF_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2631:ff.c          **** 				dp->dir[XDIR_Type] &= 0x7F;	/* Clear the entry InUse flag. */
2632:ff.c          **** 			} else {									/* On the FAT/FAT32 volume */
2633:ff.c          **** 				dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'. */
2634:ff.c          **** 			}
2635:ff.c          **** 			fs->wflag = 1;
2636:ff.c          **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2637:ff.c          **** 			res = dir_next(dp, 0);	/* Next entry */
2638:ff.c          **** 		} while (res == FR_OK);
2639:ff.c          **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2640:ff.c          **** 	}
2641:ff.c          **** #else			/* Non LFN configuration */
2642:ff.c          **** 
2643:ff.c          **** 	res = move_window(fs, dp->sect);
2644:ff.c          **** 	if (res == FR_OK) {
2645:ff.c          **** 		dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'.*/
2646:ff.c          **** 		fs->wflag = 1;
2647:ff.c          **** 	}
2648:ff.c          **** #endif
2649:ff.c          **** 
2650:ff.c          **** 	return res;
2651:ff.c          **** }
2652:ff.c          **** 
2653:ff.c          **** #endif /* !FF_FS_READONLY && FF_FS_MINIMIZE == 0 */
2654:ff.c          **** 
2655:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 57


2656:ff.c          **** 
2657:ff.c          **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2
2658:ff.c          **** /*-----------------------------------------------------------------------*/
2659:ff.c          **** /* Get file information from directory entry                             */
2660:ff.c          **** /*-----------------------------------------------------------------------*/
2661:ff.c          **** 
2662:ff.c          **** static
2663:ff.c          **** void get_fileinfo (
2664:ff.c          **** 	DIR* dp,		/* Pointer to the directory object */
2665:ff.c          **** 	FILINFO* fno	/* Pointer to the file information to be filled */
2666:ff.c          **** )
2667:ff.c          **** {
 531              		.loc 1 2667 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              	.LVL77:
2668:ff.c          **** 	UINT si, di;
2669:ff.c          **** #if FF_USE_LFN
2670:ff.c          **** 	WCHAR wc, hs;
2671:ff.c          **** 	FATFS *fs = dp->obj.fs;
2672:ff.c          **** #else
2673:ff.c          **** 	TCHAR c;
2674:ff.c          **** #endif
2675:ff.c          **** 
2676:ff.c          **** 
2677:ff.c          **** 	fno->fname[0] = 0;			/* Invaidate file info */
 536              		.loc 1 2677 0
 537 0000 0023     		movs	r3, #0
 538 0002 4B72     		strb	r3, [r1, #9]
2678:ff.c          **** 	if (dp->sect == 0) return;	/* Exit if read pointer has reached end of directory */
 539              		.loc 1 2678 0
 540 0004 8369     		ldr	r3, [r0, #24]
 541 0006 7BB3     		cbz	r3, .L49
2667:ff.c          **** 	UINT si, di;
 542              		.loc 1 2667 0
 543 0008 70B5     		push	{r4, r5, r6, lr}
 544              		.cfi_def_cfa_offset 16
 545              		.cfi_offset 4, -16
 546              		.cfi_offset 5, -12
 547              		.cfi_offset 6, -8
 548              		.cfi_offset 14, -4
 549 000a 0024     		movs	r4, #0
 550 000c 2346     		mov	r3, r4
 551 000e 11E0     		b	.L42
 552              	.LVL78:
 553              	.L46:
2679:ff.c          **** 
2680:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
2681:ff.c          **** #if FF_FS_EXFAT
2682:ff.c          **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2683:ff.c          **** 		get_xfileinfo(fs->dirbuf, fno);
2684:ff.c          **** 		return;
2685:ff.c          **** 	} else
2686:ff.c          **** #endif
2687:ff.c          **** 	{	/* On the FAT/FAT32 volume */
2688:ff.c          **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 58


2689:ff.c          **** 			si = di = hs = 0;
2690:ff.c          **** 			while (fs->lfnbuf[si] != 0) {
2691:ff.c          **** 				wc = fs->lfnbuf[si++];		/* Get an LFN character (UTF-16) */
2692:ff.c          **** 				if (hs == 0 && IsSurrogate(wc)) {	/* Is it a surrogate? */
2693:ff.c          **** 					hs = wc; continue;		/* Get low surrogate */
2694:ff.c          **** 				}
2695:ff.c          **** 				wc = put_utf((DWORD)hs << 16 | wc, &fno->fname[di], FF_LFN_BUF - di);	/* Store it in UTF-16 or 
2696:ff.c          **** 				if (wc == 0) { di = 0; break; }	/* Invalid char or buffer overflow? */
2697:ff.c          **** 				di += wc;
2698:ff.c          **** 				hs = 0;
2699:ff.c          **** 			}
2700:ff.c          **** 			if (hs != 0) di = 0;	/* Broken surrogate pair? */
2701:ff.c          **** 			fno->fname[di] = 0;		/* Terminate the LFN (null string means LFN is invalid) */
2702:ff.c          **** 		}
2703:ff.c          **** 	}
2704:ff.c          **** 
2705:ff.c          **** 	si = di = 0;
2706:ff.c          **** 	while (si < 11) {		/* Get SFN from SFN entry */
2707:ff.c          **** 		wc = dp->dir[si++];			/* Get a char */
2708:ff.c          **** 		if (wc == ' ') continue;	/* Skip padding spaces */
2709:ff.c          **** 		if (wc == RDDEM) wc = DDEM;	/* Restore replaced DDEM character */
2710:ff.c          **** 		if (si == 9 && di < FF_SFN_BUF) fno->altname[di++] = '.';	/* Insert a . if extension is exist */
2711:ff.c          **** #if FF_LFN_UNICODE >= 1	/* Unicode output */
2712:ff.c          **** 		if (dbc_1st((BYTE)wc) && si != 8 && si != 11 && dbc_2nd(dp->dir[si])) {	/* Make a DBC if needed *
2713:ff.c          **** 			wc = wc << 8 | dp->dir[si++];
2714:ff.c          **** 		}
2715:ff.c          **** 		wc = ff_oem2uni(wc, CODEPAGE);		/* ANSI/OEM -> Unicode */
2716:ff.c          **** 		if (wc == 0) { di = 0; break; }		/* Wrong char in the current code page? */
2717:ff.c          **** 		wc = put_utf(wc, &fno->altname[di], FF_SFN_BUF - di);	/* Store it in UTF-16 or UTF-8 */
2718:ff.c          **** 		if (wc == 0) { di = 0; break; }		/* Buffer overflow? */
2719:ff.c          **** 		di += wc;
2720:ff.c          **** #else					/* ANSI/OEM output */
2721:ff.c          **** 		fno->altname[di++] = (TCHAR)wc;	/* Store it without any conversion */
2722:ff.c          **** #endif
2723:ff.c          **** 	}
2724:ff.c          **** 	fno->altname[di] = 0;	/* Terminate the SFN  (null string means SFN is invalid) */
2725:ff.c          **** 
2726:ff.c          **** 	if (fno->fname[0] == 0) {	/* If LFN is invalid, altname[] needs to be copied to fname[] */
2727:ff.c          **** 		if (di == 0) {	/* If LFN and SFN both are invalid, this object is inaccesible */
2728:ff.c          **** 			fno->fname[di++] = '?';
2729:ff.c          **** 		} else {
2730:ff.c          **** 			for (si = di = 0; fno->altname[si]; si++, di++) {	/* Copy altname[] to fname[] with case informa
2731:ff.c          **** 				wc = (WCHAR)fno->altname[si];
2732:ff.c          **** 				if (IsUpper(wc) && (dp->dir[DIR_NTres] & ((si >= 9) ? NS_EXT : NS_BODY))) wc += 0x20;
2733:ff.c          **** 				fno->fname[di] = (TCHAR)wc;
2734:ff.c          **** 			}
2735:ff.c          **** 		}
2736:ff.c          **** 		fno->fname[di] = 0;	/* Terminate the LFN */
2737:ff.c          **** 		if (!dp->dir[DIR_NTres]) fno->altname[0] = 0;	/* Altname is not needed if neither LFN nor case in
2738:ff.c          **** 	}
2739:ff.c          **** 
2740:ff.c          **** #else	/* Non-LFN configuration */
2741:ff.c          **** 	si = di = 0;
2742:ff.c          **** 	while (si < 11) {		/* Copy name body and extension */
2743:ff.c          **** 		c = (TCHAR)dp->dir[si++];
 554              		.loc 1 2743 0
 555 0010 C569     		ldr	r5, [r0, #28]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 59


 556 0012 5A1C     		adds	r2, r3, #1
 557              	.LVL79:
 558 0014 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 559              	.LVL80:
2744:ff.c          **** 		if (c == ' ') continue;		/* Skip padding spaces */
 560              		.loc 1 2744 0
 561 0016 202B     		cmp	r3, #32
 562 0018 0BD0     		beq	.L43
2745:ff.c          **** 		if (c == RDDEM) c = DDEM;	/* Restore replaced DDEM character */
 563              		.loc 1 2745 0
 564 001a 052B     		cmp	r3, #5
 565 001c 00D1     		bne	.L44
 566 001e E523     		movs	r3, #229
 567              	.LVL81:
 568              	.L44:
2746:ff.c          **** 		if (si == 9) fno->fname[di++] = '.';/* Insert a . if extension is exist */
 569              		.loc 1 2746 0
 570 0020 092A     		cmp	r2, #9
 571 0022 03D1     		bne	.L45
 572              	.LVL82:
 573              		.loc 1 2746 0 is_stmt 0 discriminator 1
 574 0024 0D19     		adds	r5, r1, r4
 575 0026 2E26     		movs	r6, #46
 576 0028 6E72     		strb	r6, [r5, #9]
 577 002a 0134     		adds	r4, r4, #1
 578              	.LVL83:
 579              	.L45:
2747:ff.c          **** 		fno->fname[di++] = c;
 580              		.loc 1 2747 0 is_stmt 1
 581 002c 0D19     		adds	r5, r1, r4
 582 002e 6B72     		strb	r3, [r5, #9]
 583 0030 0134     		adds	r4, r4, #1
 584              	.LVL84:
 585              	.L43:
 586 0032 1346     		mov	r3, r2
 587              	.LVL85:
 588              	.L42:
2742:ff.c          **** 		c = (TCHAR)dp->dir[si++];
 589              		.loc 1 2742 0
 590 0034 0A2B     		cmp	r3, #10
 591 0036 EBD9     		bls	.L46
 592 0038 0E46     		mov	r6, r1
 593 003a 0546     		mov	r5, r0
2748:ff.c          **** 	}
2749:ff.c          **** 	fno->fname[di] = 0;
 594              		.loc 1 2749 0
 595 003c 0C44     		add	r4, r4, r1
 596              	.LVL86:
 597 003e 0023     		movs	r3, #0
 598              	.LVL87:
 599 0040 6372     		strb	r3, [r4, #9]
2750:ff.c          **** #endif
2751:ff.c          **** 
2752:ff.c          **** 	fno->fattrib = dp->dir[DIR_Attr];					/* Attribute */
 600              		.loc 1 2752 0
 601 0042 C369     		ldr	r3, [r0, #28]
 602 0044 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 60


 603 0046 0B72     		strb	r3, [r1, #8]
2753:ff.c          **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);		/* Size */
 604              		.loc 1 2753 0
 605 0048 C069     		ldr	r0, [r0, #28]
 606              	.LVL88:
 607 004a 1C30     		adds	r0, r0, #28
 608 004c FFF7FEFF 		bl	ld_dword
 609              	.LVL89:
 610 0050 3060     		str	r0, [r6]
2754:ff.c          **** 	fno->ftime = ld_word(dp->dir + DIR_ModTime + 0);	/* Time */
 611              		.loc 1 2754 0
 612 0052 E869     		ldr	r0, [r5, #28]
 613 0054 1630     		adds	r0, r0, #22
 614 0056 FFF7FEFF 		bl	ld_word
 615              	.LVL90:
 616 005a F080     		strh	r0, [r6, #6]	@ movhi
2755:ff.c          **** 	fno->fdate = ld_word(dp->dir + DIR_ModTime + 2);	/* Date */
 617              		.loc 1 2755 0
 618 005c E869     		ldr	r0, [r5, #28]
 619 005e 1830     		adds	r0, r0, #24
 620 0060 FFF7FEFF 		bl	ld_word
 621              	.LVL91:
 622 0064 B080     		strh	r0, [r6, #4]	@ movhi
 623 0066 70BD     		pop	{r4, r5, r6, pc}
 624              	.LVL92:
 625              	.L49:
 626              		.cfi_def_cfa_offset 0
 627              		.cfi_restore 4
 628              		.cfi_restore 5
 629              		.cfi_restore 6
 630              		.cfi_restore 14
 631 0068 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE28:
 634              		.size	get_fileinfo, .-get_fileinfo
 635 006a 00BF     		.section	.text.create_name,"ax",%progbits
 636              		.align	2
 637              		.thumb
 638              		.thumb_func
 639              		.type	create_name, %function
 640              	create_name:
 641              	.LFB29:
2756:ff.c          **** }
2757:ff.c          **** 
2758:ff.c          **** #endif /* FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 */
2759:ff.c          **** 
2760:ff.c          **** 
2761:ff.c          **** 
2762:ff.c          **** #if FF_USE_FIND && FF_FS_MINIMIZE <= 1
2763:ff.c          **** /*-----------------------------------------------------------------------*/
2764:ff.c          **** /* Pattern matching                                                      */
2765:ff.c          **** /*-----------------------------------------------------------------------*/
2766:ff.c          **** 
2767:ff.c          **** static
2768:ff.c          **** DWORD get_achar (		/* Get a character and advances ptr */
2769:ff.c          **** 	const TCHAR** ptr	/* Pointer to pointer to the ANSI/OEM or Unicode string */
2770:ff.c          **** )
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 61


2771:ff.c          **** {
2772:ff.c          **** 	DWORD chr;
2773:ff.c          **** 
2774:ff.c          **** 
2775:ff.c          **** #if FF_USE_LFN && FF_LFN_UNICODE >= 1	/* Unicode input */
2776:ff.c          **** 	chr = tchar2uni(ptr);
2777:ff.c          **** 	if (chr == 0xFFFFFFFF) chr = 0;		/* Wrong UTF encoding is recognized as end of the string */
2778:ff.c          **** 	chr = ff_wtoupper(chr);
2779:ff.c          **** 
2780:ff.c          **** #else									/* ANSI/OEM input */
2781:ff.c          **** 	chr = (BYTE)*(*ptr)++;				/* Get a byte */
2782:ff.c          **** 	if (IsLower(chr)) chr -= 0x20;		/* To upper ASCII char */
2783:ff.c          **** #if FF_CODE_PAGE == 0
2784:ff.c          **** 	if (ExCvt && chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2785:ff.c          **** #elif FF_CODE_PAGE < 900
2786:ff.c          **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2787:ff.c          **** #endif
2788:ff.c          **** #if FF_CODE_PAGE == 0 || FF_CODE_PAGE >= 900
2789:ff.c          **** 	if (dbc_1st((BYTE)chr)) {	/* Get DBC 2nd byte if needed */
2790:ff.c          **** 		chr = dbc_2nd((BYTE)**ptr) ? chr << 8 | (BYTE)*(*ptr)++ : 0;
2791:ff.c          **** 	}
2792:ff.c          **** #endif
2793:ff.c          **** 
2794:ff.c          **** #endif
2795:ff.c          **** 	return chr;
2796:ff.c          **** }
2797:ff.c          **** 
2798:ff.c          **** 
2799:ff.c          **** static
2800:ff.c          **** int pattern_matching (	/* 0:not matched, 1:matched */
2801:ff.c          **** 	const TCHAR* pat,	/* Matching pattern */
2802:ff.c          **** 	const TCHAR* nam,	/* String to be tested */
2803:ff.c          **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2804:ff.c          **** 	int inf				/* Infinite search (* specified) */
2805:ff.c          **** )
2806:ff.c          **** {
2807:ff.c          **** 	const TCHAR *pp, *np;
2808:ff.c          **** 	DWORD pc, nc;
2809:ff.c          **** 	int nm, nx;
2810:ff.c          **** 
2811:ff.c          **** 
2812:ff.c          **** 	while (skip--) {				/* Pre-skip name chars */
2813:ff.c          **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2814:ff.c          **** 	}
2815:ff.c          **** 	if (*pat == 0 && inf) return 1;	/* (short circuit) */
2816:ff.c          **** 
2817:ff.c          **** 	do {
2818:ff.c          **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2819:ff.c          **** 		for (;;) {
2820:ff.c          **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2821:ff.c          **** 				nm = nx = 0;
2822:ff.c          **** 				do {				/* Analyze the wildcard block */
2823:ff.c          **** 					if (*pp++ == '?') nm++; else nx = 1;
2824:ff.c          **** 				} while (*pp == '?' || *pp == '*');
2825:ff.c          **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2826:ff.c          **** 				nc = *np; break;	/* Branch mismatched */
2827:ff.c          **** 			}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 62


2828:ff.c          **** 			pc = get_achar(&pp);	/* Get a pattern char */
2829:ff.c          **** 			nc = get_achar(&np);	/* Get a name char */
2830:ff.c          **** 			if (pc != nc) break;	/* Branch mismatched? */
2831:ff.c          **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2832:ff.c          **** 		}
2833:ff.c          **** 		get_achar(&nam);			/* nam++ */
2834:ff.c          **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2835:ff.c          **** 
2836:ff.c          **** 	return 0;
2837:ff.c          **** }
2838:ff.c          **** 
2839:ff.c          **** #endif /* FF_USE_FIND && FF_FS_MINIMIZE <= 1 */
2840:ff.c          **** 
2841:ff.c          **** 
2842:ff.c          **** 
2843:ff.c          **** /*-----------------------------------------------------------------------*/
2844:ff.c          **** /* Pick a top segment and create the object name in directory form       */
2845:ff.c          **** /*-----------------------------------------------------------------------*/
2846:ff.c          **** 
2847:ff.c          **** static
2848:ff.c          **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2849:ff.c          **** 	DIR* dp,			/* Pointer to the directory object */
2850:ff.c          **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2851:ff.c          **** )
2852:ff.c          **** {
 642              		.loc 1 2852 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 8
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL93:
 647 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 648              		.cfi_def_cfa_offset 36
 649              		.cfi_offset 4, -36
 650              		.cfi_offset 5, -32
 651              		.cfi_offset 6, -28
 652              		.cfi_offset 7, -24
 653              		.cfi_offset 8, -20
 654              		.cfi_offset 9, -16
 655              		.cfi_offset 10, -12
 656              		.cfi_offset 11, -8
 657              		.cfi_offset 14, -4
 658 0004 83B0     		sub	sp, sp, #12
 659              		.cfi_def_cfa_offset 48
 660 0006 0190     		str	r0, [sp, #4]
 661 0008 8B46     		mov	fp, r1
2853:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
2854:ff.c          **** 	BYTE b, cf;
2855:ff.c          **** 	WCHAR wc, *lfn;
2856:ff.c          **** 	DWORD uc;
2857:ff.c          **** 	UINT i, ni, si, di;
2858:ff.c          **** 	const TCHAR *p;
2859:ff.c          **** 
2860:ff.c          **** 
2861:ff.c          **** 	/* Create LFN into LFN working buffer */
2862:ff.c          **** 	p = *path; lfn = dp->obj.fs->lfnbuf; di = 0;
2863:ff.c          **** 	for (;;) {
2864:ff.c          **** 		uc = tchar2uni(&p);			/* Get a character */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 63


2865:ff.c          **** 		if (uc == 0xFFFFFFFF) return FR_INVALID_NAME;		/* Invalid code or UTF decode error */
2866:ff.c          **** 		if (uc >= 0x10000) lfn[di++] = (WCHAR)(uc >> 16);	/* Store high surrogate if needed */
2867:ff.c          **** 		wc = (WCHAR)uc;
2868:ff.c          **** 		if (wc < ' ' || wc == '/' || wc == '\\') break;	/* Break if end of the path or a separator is fou
2869:ff.c          **** 		if (wc < 0x80 && chk_chr("\"*:<>\?|\x7F", wc)) return FR_INVALID_NAME;	/* Reject illegal characte
2870:ff.c          **** 		if (di >= FF_MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2871:ff.c          **** 		lfn[di++] = wc;					/* Store the Unicode character */
2872:ff.c          **** 	}
2873:ff.c          **** 	while (*p == '/' || *p == '\\') p++;	/* Skip duplicated separators if exist */
2874:ff.c          **** 	*path = p;							/* Return pointer to the next segment */
2875:ff.c          **** 	cf = (wc < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
2876:ff.c          **** 
2877:ff.c          **** #if FF_FS_RPATH != 0
2878:ff.c          **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2879:ff.c          **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2880:ff.c          **** 		lfn[di] = 0;
2881:ff.c          **** 		for (i = 0; i < 11; i++) {		/* Create dot name for SFN entry */
2882:ff.c          **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2883:ff.c          **** 		}
2884:ff.c          **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2885:ff.c          **** 		return FR_OK;
2886:ff.c          **** 	}
2887:ff.c          **** #endif
2888:ff.c          **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2889:ff.c          **** 		wc = lfn[di - 1];
2890:ff.c          **** 		if (wc != ' ' && wc != '.') break;
2891:ff.c          **** 		di--;
2892:ff.c          **** 	}
2893:ff.c          **** 	lfn[di] = 0;							/* LFN is created into the working buffer */
2894:ff.c          **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject null name */
2895:ff.c          **** 
2896:ff.c          **** 	/* Create SFN in directory form */
2897:ff.c          **** 	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
2898:ff.c          **** 	if (si > 0 || lfn[si] == '.') cf |= NS_LOSS | NS_LFN;	/* Is there any leading space or dot? */
2899:ff.c          **** 	while (di > 0 && lfn[di - 1] != '.') di--;	/* Find last dot (di<=si: no extension) */
2900:ff.c          **** 
2901:ff.c          **** 	mem_set(dp->fn, ' ', 11);
2902:ff.c          **** 	i = b = 0; ni = 8;
2903:ff.c          **** 	for (;;) {
2904:ff.c          **** 		wc = lfn[si++];					/* Get an LFN character */
2905:ff.c          **** 		if (wc == 0) break;				/* Break on end of the LFN */
2906:ff.c          **** 		if (wc == ' ' || (wc == '.' && si != di)) {	/* Remove embedded spaces and dots */
2907:ff.c          **** 			cf |= NS_LOSS | NS_LFN;
2908:ff.c          **** 			continue;
2909:ff.c          **** 		}
2910:ff.c          **** 
2911:ff.c          **** 		if (i >= ni || si == di) {		/* End of field? */
2912:ff.c          **** 			if (ni == 11) {				/* Name extension overflow? */
2913:ff.c          **** 				cf |= NS_LOSS | NS_LFN;
2914:ff.c          **** 				break;
2915:ff.c          **** 			}
2916:ff.c          **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Name body overflow? */
2917:ff.c          **** 			if (si > di) break;						/* No name extension? */
2918:ff.c          **** 			si = di; i = 8; ni = 11; b <<= 2;		/* Enter name extension */
2919:ff.c          **** 			continue;
2920:ff.c          **** 		}
2921:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 64


2922:ff.c          **** 		if (wc >= 0x80) {	/* Is this a non-ASCII character? */
2923:ff.c          **** 			cf |= NS_LFN;	/* LFN entry needs to be created */
2924:ff.c          **** #if FF_CODE_PAGE == 0
2925:ff.c          **** 			if (ExCvt) {	/* At SBCS */
2926:ff.c          **** 				wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
2927:ff.c          **** 				if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
2928:ff.c          **** 			} else {		/* At DBCS */
2929:ff.c          **** 				wc = ff_uni2oem(ff_wtoupper(wc), CODEPAGE);	/* Unicode ==> Upper convert ==> ANSI/OEM code */
2930:ff.c          **** 			}
2931:ff.c          **** #elif FF_CODE_PAGE < 900	/* SBCS cfg */
2932:ff.c          **** 			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
2933:ff.c          **** 			if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
2934:ff.c          **** #else						/* DBCS cfg */
2935:ff.c          **** 			wc = ff_uni2oem(ff_wtoupper(wc), CODEPAGE);	/* Unicode ==> Upper convert ==> ANSI/OEM code */
2936:ff.c          **** #endif
2937:ff.c          **** 		}
2938:ff.c          **** 
2939:ff.c          **** 		if (wc >= 0x100) {				/* Is this a DBC? */
2940:ff.c          **** 			if (i >= ni - 1) {			/* Field overflow? */
2941:ff.c          **** 				cf |= NS_LOSS | NS_LFN;
2942:ff.c          **** 				i = ni; continue;		/* Next field */
2943:ff.c          **** 			}
2944:ff.c          **** 			dp->fn[i++] = (BYTE)(wc >> 8);	/* Put 1st byte */
2945:ff.c          **** 		} else {						/* SBC */
2946:ff.c          **** 			if (wc == 0 || chk_chr("+,;=[]", wc)) {	/* Replace illegal characters for SFN if needed */
2947:ff.c          **** 				wc = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2948:ff.c          **** 			} else {
2949:ff.c          **** 				if (IsUpper(wc)) {		/* ASCII upper case? */
2950:ff.c          **** 					b |= 2;
2951:ff.c          **** 				}
2952:ff.c          **** 				if (IsLower(wc)) {		/* ASCII lower case? */
2953:ff.c          **** 					b |= 1; wc -= 0x20;
2954:ff.c          **** 				}
2955:ff.c          **** 			}
2956:ff.c          **** 		}
2957:ff.c          **** 		dp->fn[i++] = (BYTE)wc;
2958:ff.c          **** 	}
2959:ff.c          **** 
2960:ff.c          **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2961:ff.c          **** 
2962:ff.c          **** 	if (ni == 8) b <<= 2;				/* Shift capital flags if no extension */
2963:ff.c          **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* LFN entry needs to be created if co
2964:ff.c          **** 	if (!(cf & NS_LFN)) {				/* When LFN is in 8.3 format without extended character, NT flags are cre
2965:ff.c          **** 		if (b & 0x01) cf |= NS_EXT;		/* NT flag (Extension has small capital letters only) */
2966:ff.c          **** 		if (b & 0x04) cf |= NS_BODY;	/* NT flag (Body has small capital letters only) */
2967:ff.c          **** 	}
2968:ff.c          **** 
2969:ff.c          **** 	dp->fn[NSFLAG] = cf;	/* SFN is created into dp->fn[] */
2970:ff.c          **** 
2971:ff.c          **** 	return FR_OK;
2972:ff.c          **** 
2973:ff.c          **** 
2974:ff.c          **** #else	/* FF_USE_LFN : Non-LFN configuration */
2975:ff.c          **** 	BYTE c, d, *sfn;
2976:ff.c          **** 	UINT ni, si, i;
2977:ff.c          **** 	const char *p;
2978:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 65


2979:ff.c          **** 	/* Create file name in directory form */
2980:ff.c          **** 	p = *path; sfn = dp->fn;
 662              		.loc 1 2980 0
 663 000a D1F80080 		ldr	r8, [r1]
 664              	.LVL94:
 665 000e 00F1200A 		add	r10, r0, #32
 666              	.LVL95:
2981:ff.c          **** 	mem_set(sfn, ' ', 11);
 667              		.loc 1 2981 0
 668 0012 0B22     		movs	r2, #11
 669 0014 2021     		movs	r1, #32
 670              	.LVL96:
 671 0016 5046     		mov	r0, r10
 672              	.LVL97:
 673 0018 FFF7FEFF 		bl	mem_set
 674              	.LVL98:
2982:ff.c          **** 	si = i = 0; ni = 8;
 675              		.loc 1 2982 0
 676 001c 0025     		movs	r5, #0
 677 001e 2F46     		mov	r7, r5
 678 0020 4FF00809 		mov	r9, #8
 679              	.LVL99:
 680              	.L51:
2983:ff.c          **** #if FF_FS_RPATH != 0
2984:ff.c          **** 	if (p[si] == '.') { /* Is this a dot entry? */
2985:ff.c          **** 		for (;;) {
2986:ff.c          **** 			c = (BYTE)p[si++];
2987:ff.c          **** 			if (c != '.' || si >= 3) break;
2988:ff.c          **** 			sfn[i++] = c;
2989:ff.c          **** 		}
2990:ff.c          **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2991:ff.c          **** 		*path = p + si;								/* Return pointer to the next segment */
2992:ff.c          **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2993:ff.c          **** 		return FR_OK;
2994:ff.c          **** 	}
2995:ff.c          **** #endif
2996:ff.c          **** 	for (;;) {
2997:ff.c          **** 		c = (BYTE)p[si++];				/* Get a byte */
 681              		.loc 1 2997 0
 682 0024 7E1C     		adds	r6, r7, #1
 683              	.LVL100:
 684 0026 18F80740 		ldrb	r4, [r8, r7]	@ zero_extendqisi2
 685              	.LVL101:
2998:ff.c          **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 686              		.loc 1 2998 0
 687 002a 202C     		cmp	r4, #32
 688 002c 41D9     		bls	.L52
2999:ff.c          **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 689              		.loc 1 2999 0
 690 002e 2F2C     		cmp	r4, #47
 691 0030 03D0     		beq	.L53
 692              		.loc 1 2999 0 is_stmt 0 discriminator 1
 693 0032 5C2C     		cmp	r4, #92
 694 0034 08D1     		bne	.L71
 695 0036 00E0     		b	.L53
 696              	.L55:
3000:ff.c          **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 66


 697              		.loc 1 3000 0 is_stmt 1 discriminator 4
 698 0038 0136     		adds	r6, r6, #1
 699              	.LVL102:
 700              	.L53:
 701              		.loc 1 3000 0 is_stmt 0 discriminator 1
 702 003a 18F80630 		ldrb	r3, [r8, r6]	@ zero_extendqisi2
 703 003e 2F2B     		cmp	r3, #47
 704 0040 FAD0     		beq	.L55
 705              		.loc 1 3000 0 discriminator 3
 706 0042 5C2B     		cmp	r3, #92
 707 0044 F8D0     		beq	.L55
 708 0046 34E0     		b	.L52
 709              	.L71:
3001:ff.c          **** 			break;
3002:ff.c          **** 		}
3003:ff.c          **** 		if (c == '.' || i >= ni) {		/* End of body or field overflow? */
 710              		.loc 1 3003 0 is_stmt 1
 711 0048 2E2C     		cmp	r4, #46
 712 004a 01D0     		beq	.L56
 713              		.loc 1 3003 0 is_stmt 0 discriminator 1
 714 004c A945     		cmp	r9, r5
 715 004e 09D8     		bhi	.L57
 716              	.L56:
3004:ff.c          **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Field overflow or invalid dot? */
 717              		.loc 1 3004 0 is_stmt 1
 718 0050 B9F10B0F 		cmp	r9, #11
 719 0054 44D0     		beq	.L64
 720              		.loc 1 3004 0 is_stmt 0 discriminator 2
 721 0056 2E2C     		cmp	r4, #46
 722 0058 44D1     		bne	.L65
2997:ff.c          **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 723              		.loc 1 2997 0 is_stmt 1
 724 005a 3746     		mov	r7, r6
3005:ff.c          **** 			i = 8; ni = 11;				/* Enter file extension field */
 725              		.loc 1 3005 0
 726 005c 0825     		movs	r5, #8
 727              	.LVL103:
 728 005e 4FF00B09 		mov	r9, #11
 729              	.LVL104:
 730 0062 DFE7     		b	.L51
 731              	.LVL105:
 732              	.L57:
3006:ff.c          **** 			continue;
3007:ff.c          **** 		}
3008:ff.c          **** #if FF_CODE_PAGE == 0
3009:ff.c          **** 		if (ExCvt && c >= 0x80) {		/* Is SBC extended character? */
3010:ff.c          **** 			c = ExCvt[c & 0x7F];		/* To upper SBC extended character */
3011:ff.c          **** 		}
3012:ff.c          **** #elif FF_CODE_PAGE < 900
3013:ff.c          **** 		if (c >= 0x80) {				/* Is SBC extended character? */
3014:ff.c          **** 			c = ExCvt[c & 0x7F];		/* To upper SBC extended character */
3015:ff.c          **** 		}
3016:ff.c          **** #endif
3017:ff.c          **** 		if (dbc_1st(c)) {				/* Check if it is a DBC 1st byte */
 733              		.loc 1 3017 0
 734 0064 2046     		mov	r0, r4
 735 0066 FFF7FEFF 		bl	dbc_1st
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 67


 736              	.LVL106:
 737 006a 88B1     		cbz	r0, .L60
3018:ff.c          **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
 738              		.loc 1 3018 0
 739 006c 0237     		adds	r7, r7, #2
 740              	.LVL107:
 741 006e 18F80660 		ldrb	r6, [r8, r6]	@ zero_extendqisi2
 742              	.LVL108:
3019:ff.c          **** 			if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
 743              		.loc 1 3019 0
 744 0072 3046     		mov	r0, r6
 745 0074 FFF7FEFF 		bl	dbc_2nd
 746              	.LVL109:
 747 0078 B0B3     		cbz	r0, .L66
 748              		.loc 1 3019 0 is_stmt 0 discriminator 2
 749 007a 09F1FF33 		add	r3, r9, #-1
 750 007e 9D42     		cmp	r5, r3
 751 0080 34D2     		bcs	.L67
3020:ff.c          **** 			sfn[i++] = c;
 752              		.loc 1 3020 0 is_stmt 1
 753 0082 6B1C     		adds	r3, r5, #1
 754              	.LVL110:
 755 0084 0AF80540 		strb	r4, [r10, r5]
 756              	.LVL111:
3021:ff.c          **** 			sfn[i++] = d;
 757              		.loc 1 3021 0
 758 0088 0AF80360 		strb	r6, [r10, r3]
 759 008c 0235     		adds	r5, r5, #2
 760              	.LVL112:
 761 008e C9E7     		b	.L51
 762              	.LVL113:
 763              	.L60:
3022:ff.c          **** 		} else {						/* SBC */
3023:ff.c          **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
 764              		.loc 1 3023 0
 765 0090 2146     		mov	r1, r4
 766 0092 1A48     		ldr	r0, .L73
 767 0094 FFF7FEFF 		bl	chk_chr
 768              	.LVL114:
 769 0098 50BB     		cbnz	r0, .L68
3024:ff.c          **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 770              		.loc 1 3024 0
 771 009a A4F16103 		sub	r3, r4, #97
 772 009e DBB2     		uxtb	r3, r3
 773 00a0 192B     		cmp	r3, #25
 774 00a2 01D8     		bhi	.L61
 775              		.loc 1 3024 0 is_stmt 0 discriminator 1
 776 00a4 203C     		subs	r4, r4, #32
 777              	.LVL115:
 778 00a6 E4B2     		uxtb	r4, r4
 779              	.LVL116:
 780              	.L61:
3025:ff.c          **** 			sfn[i++] = c;
 781              		.loc 1 3025 0 is_stmt 1
 782 00a8 0AF80540 		strb	r4, [r10, r5]
 783 00ac 0135     		adds	r5, r5, #1
 784              	.LVL117:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 68


2997:ff.c          **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 785              		.loc 1 2997 0
 786 00ae 3746     		mov	r7, r6
 787 00b0 B8E7     		b	.L51
 788              	.L52:
3026:ff.c          **** 		}
3027:ff.c          **** 	}
3028:ff.c          **** 	*path = p + si;						/* Return pointer to the next segment */
 789              		.loc 1 3028 0
 790 00b2 4644     		add	r6, r6, r8
 791              	.LVL118:
 792 00b4 CBF80060 		str	r6, [fp]
3029:ff.c          **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 793              		.loc 1 3029 0
 794 00b8 E5B1     		cbz	r5, .L69
3030:ff.c          **** 
3031:ff.c          **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
 795              		.loc 1 3031 0
 796 00ba 019B     		ldr	r3, [sp, #4]
 797 00bc 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 798 00c0 E52B     		cmp	r3, #229
 799 00c2 03D1     		bne	.L62
 800              		.loc 1 3031 0 is_stmt 0 discriminator 1
 801 00c4 0523     		movs	r3, #5
 802 00c6 019A     		ldr	r2, [sp, #4]
 803 00c8 82F82030 		strb	r3, [r2, #32]
 804              	.L62:
3032:ff.c          **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 805              		.loc 1 3032 0 is_stmt 1
 806 00cc 202C     		cmp	r4, #32
 807 00ce 01D8     		bhi	.L70
 808 00d0 0423     		movs	r3, #4
 809 00d2 00E0     		b	.L63
 810              	.L70:
 811 00d4 0023     		movs	r3, #0
 812              	.L63:
 813              		.loc 1 3032 0 is_stmt 0 discriminator 4
 814 00d6 019A     		ldr	r2, [sp, #4]
 815 00d8 82F82B30 		strb	r3, [r2, #43]
3033:ff.c          **** 
3034:ff.c          **** 	return FR_OK;
 816              		.loc 1 3034 0 is_stmt 1 discriminator 4
 817 00dc 0020     		movs	r0, #0
 818 00de 0AE0     		b	.L58
 819              	.LVL119:
 820              	.L64:
3004:ff.c          **** 			i = 8; ni = 11;				/* Enter file extension field */
 821              		.loc 1 3004 0
 822 00e0 0620     		movs	r0, #6
 823 00e2 08E0     		b	.L58
 824              	.L65:
 825 00e4 0620     		movs	r0, #6
 826 00e6 06E0     		b	.L58
 827              	.LVL120:
 828              	.L66:
3019:ff.c          **** 			sfn[i++] = c;
 829              		.loc 1 3019 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 69


 830 00e8 0620     		movs	r0, #6
 831 00ea 04E0     		b	.L58
 832              	.L67:
 833 00ec 0620     		movs	r0, #6
 834 00ee 02E0     		b	.L58
 835              	.LVL121:
 836              	.L68:
3023:ff.c          **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 837              		.loc 1 3023 0
 838 00f0 0620     		movs	r0, #6
 839 00f2 00E0     		b	.L58
 840              	.LVL122:
 841              	.L69:
3029:ff.c          **** 
 842              		.loc 1 3029 0
 843 00f4 0620     		movs	r0, #6
 844              	.L58:
3035:ff.c          **** #endif /* FF_USE_LFN */
3036:ff.c          **** }
 845              		.loc 1 3036 0
 846 00f6 03B0     		add	sp, sp, #12
 847              		.cfi_def_cfa_offset 36
 848              		@ sp needed
 849 00f8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 850              	.LVL123:
 851              	.L74:
 852              		.align	2
 853              	.L73:
 854 00fc 00000000 		.word	.LC0
 855              		.cfi_endproc
 856              	.LFE29:
 857              		.size	create_name, .-create_name
 858              		.section	.text.get_ldnumber,"ax",%progbits
 859              		.align	2
 860              		.thumb
 861              		.thumb_func
 862              		.type	get_ldnumber, %function
 863              	get_ldnumber:
 864              	.LFB31:
3037:ff.c          **** 
3038:ff.c          **** 
3039:ff.c          **** 
3040:ff.c          **** 
3041:ff.c          **** /*-----------------------------------------------------------------------*/
3042:ff.c          **** /* Follow a file path                                                    */
3043:ff.c          **** /*-----------------------------------------------------------------------*/
3044:ff.c          **** 
3045:ff.c          **** static
3046:ff.c          **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
3047:ff.c          **** 	DIR* dp,			/* Directory object to return last directory and found object */
3048:ff.c          **** 	const TCHAR* path	/* Full-path string to find a file or directory */
3049:ff.c          **** )
3050:ff.c          **** {
3051:ff.c          **** 	FRESULT res;
3052:ff.c          **** 	BYTE ns;
3053:ff.c          **** 	FATFS *fs = dp->obj.fs;
3054:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 70


3055:ff.c          **** 
3056:ff.c          **** #if FF_FS_RPATH != 0
3057:ff.c          **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
3058:ff.c          **** 		dp->obj.sclust = fs->cdir;				/* Start from current directory */
3059:ff.c          **** 	} else
3060:ff.c          **** #endif
3061:ff.c          **** 	{										/* With heading separator */
3062:ff.c          **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
3063:ff.c          **** 		dp->obj.sclust = 0;					/* Start from root directory */
3064:ff.c          **** 	}
3065:ff.c          **** #if FF_FS_EXFAT
3066:ff.c          **** 	dp->obj.n_frag = 0;	/* Invalidate last fragment counter of the object */
3067:ff.c          **** #if FF_FS_RPATH != 0
3068:ff.c          **** 	if (fs->fs_type == FS_EXFAT && dp->obj.sclust) {	/* exFAT: Retrieve the sub-directory's status */
3069:ff.c          **** 		DIR dj;
3070:ff.c          **** 
3071:ff.c          **** 		dp->obj.c_scl = fs->cdc_scl;
3072:ff.c          **** 		dp->obj.c_size = fs->cdc_size;
3073:ff.c          **** 		dp->obj.c_ofs = fs->cdc_ofs;
3074:ff.c          **** 		res = load_obj_xdir(&dj, &dp->obj);
3075:ff.c          **** 		if (res != FR_OK) return res;
3076:ff.c          **** 		dp->obj.objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
3077:ff.c          **** 		dp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3078:ff.c          **** 	}
3079:ff.c          **** #endif
3080:ff.c          **** #endif
3081:ff.c          **** 
3082:ff.c          **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
3083:ff.c          **** 		dp->fn[NSFLAG] = NS_NONAME;
3084:ff.c          **** 		res = dir_sdi(dp, 0);
3085:ff.c          **** 
3086:ff.c          **** 	} else {								/* Follow path */
3087:ff.c          **** 		for (;;) {
3088:ff.c          **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
3089:ff.c          **** 			if (res != FR_OK) break;
3090:ff.c          **** 			res = dir_find(dp);				/* Find an object with the segment name */
3091:ff.c          **** 			ns = dp->fn[NSFLAG];
3092:ff.c          **** 			if (res != FR_OK) {				/* Failed to find the object */
3093:ff.c          **** 				if (res == FR_NO_FILE) {	/* Object is not found */
3094:ff.c          **** 					if (FF_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
3095:ff.c          **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
3096:ff.c          **** 						dp->fn[NSFLAG] = NS_NONAME;
3097:ff.c          **** 						res = FR_OK;
3098:ff.c          **** 					} else {							/* Could not find the object */
3099:ff.c          **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
3100:ff.c          **** 					}
3101:ff.c          **** 				}
3102:ff.c          **** 				break;
3103:ff.c          **** 			}
3104:ff.c          **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
3105:ff.c          **** 			/* Get into the sub-directory */
3106:ff.c          **** 			if (!(dp->obj.attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
3107:ff.c          **** 				res = FR_NO_PATH; break;
3108:ff.c          **** 			}
3109:ff.c          **** #if FF_FS_EXFAT
3110:ff.c          **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
3111:ff.c          **** 				dp->obj.c_scl = dp->obj.sclust;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 71


3112:ff.c          **** 				dp->obj.c_size = ((DWORD)dp->obj.objsize & 0xFFFFFF00) | dp->obj.stat;
3113:ff.c          **** 				dp->obj.c_ofs = dp->blk_ofs;
3114:ff.c          **** 				init_alloc_info(fs, &dp->obj);	/* Open next directory */
3115:ff.c          **** 			} else
3116:ff.c          **** #endif
3117:ff.c          **** 			{
3118:ff.c          **** 				dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
3119:ff.c          **** 			}
3120:ff.c          **** 		}
3121:ff.c          **** 	}
3122:ff.c          **** 
3123:ff.c          **** 	return res;
3124:ff.c          **** }
3125:ff.c          **** 
3126:ff.c          **** 
3127:ff.c          **** 
3128:ff.c          **** 
3129:ff.c          **** /*-----------------------------------------------------------------------*/
3130:ff.c          **** /* Get logical drive number from path name                               */
3131:ff.c          **** /*-----------------------------------------------------------------------*/
3132:ff.c          **** 
3133:ff.c          **** static
3134:ff.c          **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
3135:ff.c          **** 	const TCHAR** path	/* Pointer to pointer to the path name */
3136:ff.c          **** )
3137:ff.c          **** {
 865              		.loc 1 3137 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL124:
3138:ff.c          **** 	const TCHAR *tp, *tt;
3139:ff.c          **** 	UINT i;
3140:ff.c          **** 	int vol = -1;
3141:ff.c          **** #if FF_STR_VOLUME_ID		/* Find string drive id */
3142:ff.c          **** 	static const char* const volid[] = {FF_VOLUME_STRS};
3143:ff.c          **** 	const char *sp;
3144:ff.c          **** 	char c;
3145:ff.c          **** 	TCHAR tc;
3146:ff.c          **** #endif
3147:ff.c          **** 
3148:ff.c          **** 
3149:ff.c          **** 	if (*path != 0) {	/* If the pointer is not a null */
 871              		.loc 1 3149 0
 872 0000 0168     		ldr	r1, [r0]
 873 0002 21B9     		cbnz	r1, .L80
3140:ff.c          **** #if FF_STR_VOLUME_ID		/* Find string drive id */
 874              		.loc 1 3140 0
 875 0004 4FF0FF33 		mov	r3, #-1
 876 0008 16E0     		b	.L86
 877              	.LVL125:
 878              	.L79:
3150:ff.c          **** 		for (tt = *path; (UINT)*tt >= (FF_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find a colon in 
 879              		.loc 1 3150 0 discriminator 4
 880 000a 0132     		adds	r2, r2, #1
 881              	.LVL126:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 72


 882 000c 00E0     		b	.L76
 883              	.LVL127:
 884              	.L80:
 885 000e 0A46     		mov	r2, r1
 886              	.L76:
 887              	.LVL128:
 888              		.loc 1 3150 0 is_stmt 0 discriminator 1
 889 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 890 0012 202B     		cmp	r3, #32
 891 0014 01D9     		bls	.L78
 892              		.loc 1 3150 0 discriminator 3
 893 0016 3A2B     		cmp	r3, #58
 894 0018 F7D1     		bne	.L79
 895              	.L78:
3151:ff.c          **** 		if (*tt == ':') {	/* If a colon is exist in the path name */
 896              		.loc 1 3151 0 is_stmt 1
 897 001a 3A2B     		cmp	r3, #58
 898 001c 0BD1     		bne	.L81
3137:ff.c          **** 	const TCHAR *tp, *tt;
 899              		.loc 1 3137 0
 900 001e 10B4     		push	{r4}
 901              		.cfi_def_cfa_offset 4
 902              		.cfi_offset 4, -4
 903              	.LVL129:
3152:ff.c          **** 			tp = *path;
3153:ff.c          **** 			i = *tp++;
 904              		.loc 1 3153 0
 905 0020 4C1C     		adds	r4, r1, #1
 906              	.LVL130:
 907 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 908              	.LVL131:
3154:ff.c          **** 			if (IsDigit(i) && tp == tt) {	/* Is there a numeric drive id + colon? */
 909              		.loc 1 3154 0
 910 0024 303B     		subs	r3, r3, #48
 911              	.LVL132:
 912 0026 092B     		cmp	r3, #9
 913 0028 08D8     		bhi	.L82
 914              		.loc 1 3154 0 is_stmt 0 discriminator 1
 915 002a A242     		cmp	r2, r4
 916 002c 09D1     		bne	.L83
 917              	.LVL133:
3155:ff.c          **** 				if ((i -= '0') < FF_VOLUMES) {	/* If drive id is found, get the value and strip it */
 918              		.loc 1 3155 0 is_stmt 1
 919 002e 5BB9     		cbnz	r3, .L84
 920              	.LVL134:
3156:ff.c          **** 					vol = (int)i;
3157:ff.c          **** 					*path = ++tt;
 921              		.loc 1 3157 0
 922 0030 0132     		adds	r2, r2, #1
 923              	.LVL135:
 924 0032 0260     		str	r2, [r0]
 925 0034 0AE0     		b	.L77
 926              	.LVL136:
 927              	.L81:
 928              		.cfi_def_cfa_offset 0
 929              		.cfi_restore 4
3158:ff.c          **** 				}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 73


3159:ff.c          **** 			}
3160:ff.c          **** #if FF_STR_VOLUME_ID
3161:ff.c          **** 			 else {	/* No numeric drive number, find string drive id */
3162:ff.c          **** 				i = 0; tt++;
3163:ff.c          **** 				do {
3164:ff.c          **** 					sp = volid[i]; tp = *path;
3165:ff.c          **** 					do {	/* Compare a string drive id with path name */
3166:ff.c          **** 						c = *sp++; tc = *tp++;
3167:ff.c          **** 						if (IsLower(tc)) tc -= 0x20;
3168:ff.c          **** 					} while (c && (TCHAR)c == tc);
3169:ff.c          **** 				} while ((c || tp != tt) && ++i < FF_VOLUMES);	/* Repeat for each id until pattern match */
3170:ff.c          **** 				if (i < FF_VOLUMES) {	/* If a drive id is found, get the value and strip it */
3171:ff.c          **** 					vol = (int)i;
3172:ff.c          **** 					*path = tt;
3173:ff.c          **** 				}
3174:ff.c          **** 			}
3175:ff.c          **** #endif
3176:ff.c          **** 		} else {	/* No volume id and use default drive */
3177:ff.c          **** #if FF_FS_RPATH != 0 && FF_VOLUMES >= 2
3178:ff.c          **** 			vol = CurrVol;	/* Current drive */
3179:ff.c          **** #else
3180:ff.c          **** 			vol = 0;		/* Drive 0 */
 930              		.loc 1 3180 0
 931 0036 0023     		movs	r3, #0
 932              	.LVL137:
 933              	.L86:
3181:ff.c          **** #endif
3182:ff.c          **** 		}
3183:ff.c          **** 	}
3184:ff.c          **** 	return vol;
3185:ff.c          **** }
 934              		.loc 1 3185 0
 935 0038 1846     		mov	r0, r3
 936              	.LVL138:
 937 003a 7047     		bx	lr
 938              	.LVL139:
 939              	.L82:
 940              		.cfi_def_cfa_offset 4
 941              		.cfi_offset 4, -4
3140:ff.c          **** #if FF_STR_VOLUME_ID		/* Find string drive id */
 942              		.loc 1 3140 0
 943 003c 4FF0FF33 		mov	r3, #-1
 944              	.LVL140:
 945 0040 04E0     		b	.L77
 946              	.L83:
 947 0042 4FF0FF33 		mov	r3, #-1
 948 0046 01E0     		b	.L77
 949              	.LVL141:
 950              	.L84:
 951 0048 4FF0FF33 		mov	r3, #-1
 952              	.LVL142:
 953              	.L77:
 954              		.loc 1 3185 0
 955 004c 1846     		mov	r0, r3
 956              	.LVL143:
 957 004e 5DF8044B 		ldr	r4, [sp], #4
 958              		.cfi_restore 4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 74


 959              		.cfi_def_cfa_offset 0
 960              	.LVL144:
 961 0052 7047     		bx	lr
 962              		.cfi_endproc
 963              	.LFE31:
 964              		.size	get_ldnumber, .-get_ldnumber
 965              		.section	.text.validate,"ax",%progbits
 966              		.align	2
 967              		.thumb
 968              		.thumb_func
 969              		.type	validate, %function
 970              	validate:
 971              	.LFB34:
3186:ff.c          **** 
3187:ff.c          **** 
3188:ff.c          **** 
3189:ff.c          **** 
3190:ff.c          **** /*-----------------------------------------------------------------------*/
3191:ff.c          **** /* Load a sector and check if it is an FAT VBR                           */
3192:ff.c          **** /*-----------------------------------------------------------------------*/
3193:ff.c          **** 
3194:ff.c          **** static
3195:ff.c          **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
3196:ff.c          **** 	FATFS* fs,	/* Filesystem object */
3197:ff.c          **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
3198:ff.c          **** )
3199:ff.c          **** {
3200:ff.c          **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
3201:ff.c          **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
3202:ff.c          **** 
3203:ff.c          **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
3204:ff.c          **** 
3205:ff.c          **** #if FF_FS_EXFAT
3206:ff.c          **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Check if exFAT VBR
3207:ff.c          **** #endif
3208:ff.c          **** 	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/
3209:ff.c          **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
3210:ff.c          **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
3211:ff.c          **** 	}
3212:ff.c          **** 	return 2;	/* Valid BS but not FAT */
3213:ff.c          **** }
3214:ff.c          **** 
3215:ff.c          **** 
3216:ff.c          **** 
3217:ff.c          **** 
3218:ff.c          **** /*-----------------------------------------------------------------------*/
3219:ff.c          **** /* Determine logical drive number and mount the volume if needed         */
3220:ff.c          **** /*-----------------------------------------------------------------------*/
3221:ff.c          **** 
3222:ff.c          **** static
3223:ff.c          **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
3224:ff.c          **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
3225:ff.c          **** 	FATFS** rfs,		/* Pointer to pointer to the found filesystem object */
3226:ff.c          **** 	BYTE mode			/* !=0: Check write protection for write access */
3227:ff.c          **** )
3228:ff.c          **** {
3229:ff.c          **** 	BYTE fmt, *pt;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 75


3230:ff.c          **** 	int vol;
3231:ff.c          **** 	DSTATUS stat;
3232:ff.c          **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3233:ff.c          **** 	WORD nrsv;
3234:ff.c          **** 	FATFS *fs;
3235:ff.c          **** 	UINT i;
3236:ff.c          **** 
3237:ff.c          **** 
3238:ff.c          **** 	/* Get logical drive number */
3239:ff.c          **** 	*rfs = 0;
3240:ff.c          **** 	vol = get_ldnumber(path);
3241:ff.c          **** 	if (vol < 0) return FR_INVALID_DRIVE;
3242:ff.c          **** 
3243:ff.c          **** 	/* Check if the filesystem object is valid or not */
3244:ff.c          **** 	fs = FatFs[vol];					/* Get pointer to the filesystem object */
3245:ff.c          **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
3246:ff.c          **** #if FF_FS_REENTRANT
3247:ff.c          **** 	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
3248:ff.c          **** #endif
3249:ff.c          **** 	*rfs = fs;							/* Return pointer to the filesystem object */
3250:ff.c          **** 
3251:ff.c          **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3252:ff.c          **** 	if (fs->fs_type != 0) {				/* If the volume has been mounted */
3253:ff.c          **** 		stat = disk_status(fs->pdrv);
3254:ff.c          **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3255:ff.c          **** 			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3256:ff.c          **** 				return FR_WRITE_PROTECTED;
3257:ff.c          **** 			}
3258:ff.c          **** 			return FR_OK;				/* The filesystem object is valid */
3259:ff.c          **** 		}
3260:ff.c          **** 	}
3261:ff.c          **** 
3262:ff.c          **** 	/* The filesystem object is not valid. */
3263:ff.c          **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the filesystem object)
3264:ff.c          **** 
3265:ff.c          **** 	fs->fs_type = 0;					/* Clear the filesystem object */
3266:ff.c          **** 	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3267:ff.c          **** 	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
3268:ff.c          **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3269:ff.c          **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3270:ff.c          **** 	}
3271:ff.c          **** 	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3272:ff.c          **** 		return FR_WRITE_PROTECTED;
3273:ff.c          **** 	}
3274:ff.c          **** #if FF_MAX_SS != FF_MIN_SS				/* Get sector size (multiple sector size cfg only) */
3275:ff.c          **** 	if (disk_ioctl(fs->pdrv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3276:ff.c          **** 	if (SS(fs) > FF_MAX_SS || SS(fs) < FF_MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3277:ff.c          **** #endif
3278:ff.c          **** 
3279:ff.c          **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3280:ff.c          **** 	bsect = 0;
3281:ff.c          **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3282:ff.c          **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3283:ff.c          **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3284:ff.c          **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3285:ff.c          **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3286:ff.c          **** 		}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 76


3287:ff.c          **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3288:ff.c          **** 		if (i != 0) i--;
3289:ff.c          **** 		do {							/* Find an FAT volume */
3290:ff.c          **** 			bsect = br[i];
3291:ff.c          **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3292:ff.c          **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3293:ff.c          **** 	}
3294:ff.c          **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3295:ff.c          **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3296:ff.c          **** 
3297:ff.c          **** 	/* An FAT volume is found (bsect). Following code initializes the filesystem object */
3298:ff.c          **** 
3299:ff.c          **** #if FF_FS_EXFAT
3300:ff.c          **** 	if (fmt == 1) {
3301:ff.c          **** 		QWORD maxlba;
3302:ff.c          **** 
3303:ff.c          **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3304:ff.c          **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3305:ff.c          **** 
3306:ff.c          **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT version (mus
3307:ff.c          **** 
3308:ff.c          **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3309:ff.c          **** 			return FR_NO_FILESYSTEM;
3310:ff.c          **** 		}
3311:ff.c          **** 
3312:ff.c          **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3313:ff.c          **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3314:ff.c          **** 
3315:ff.c          **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3316:ff.c          **** 
3317:ff.c          **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3318:ff.c          **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
3319:ff.c          **** 
3320:ff.c          **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3321:ff.c          **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3322:ff.c          **** 
3323:ff.c          **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3324:ff.c          **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3325:ff.c          **** 		fs->n_fatent = nclst + 2;
3326:ff.c          **** 
3327:ff.c          **** 		/* Boundaries and Limits */
3328:ff.c          **** 		fs->volbase = bsect;
3329:ff.c          **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3330:ff.c          **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3331:ff.c          **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3332:ff.c          **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3333:ff.c          **** 
3334:ff.c          **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3335:ff.c          **** 		if (move_window(fs, clst2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3336:ff.c          **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3337:ff.c          **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3338:ff.c          **** 		}
3339:ff.c          **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3340:ff.c          **** #if !FF_FS_READONLY
3341:ff.c          **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3342:ff.c          **** #endif
3343:ff.c          **** 		fmt = FS_EXFAT;			/* FAT sub-type */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 77


3344:ff.c          **** 	} else
3345:ff.c          **** #endif	/* FF_FS_EXFAT */
3346:ff.c          **** 	{
3347:ff.c          **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3348:ff.c          **** 
3349:ff.c          **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3350:ff.c          **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3351:ff.c          **** 		fs->fsize = fasize;
3352:ff.c          **** 
3353:ff.c          **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3354:ff.c          **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3355:ff.c          **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3356:ff.c          **** 
3357:ff.c          **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3358:ff.c          **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3359:ff.c          **** 
3360:ff.c          **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3361:ff.c          **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3362:ff.c          **** 
3363:ff.c          **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3364:ff.c          **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3365:ff.c          **** 
3366:ff.c          **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3367:ff.c          **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3368:ff.c          **** 
3369:ff.c          **** 		/* Determine the FAT sub type */
3370:ff.c          **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3371:ff.c          **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3372:ff.c          **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3373:ff.c          **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3374:ff.c          **** 		fmt = 0;
3375:ff.c          **** 		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
3376:ff.c          **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3377:ff.c          **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3378:ff.c          **** 		if (fmt == 0) return FR_NO_FILESYSTEM;
3379:ff.c          **** 
3380:ff.c          **** 		/* Boundaries and Limits */
3381:ff.c          **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3382:ff.c          **** 		fs->volbase = bsect;							/* Volume start sector */
3383:ff.c          **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3384:ff.c          **** 		fs->database = bsect + sysect;					/* Data start sector */
3385:ff.c          **** 		if (fmt == FS_FAT32) {
3386:ff.c          **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3387:ff.c          **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3388:ff.c          **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3389:ff.c          **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3390:ff.c          **** 		} else {
3391:ff.c          **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
3392:ff.c          **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3393:ff.c          **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3394:ff.c          **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3395:ff.c          **** 		}
3396:ff.c          **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3397:ff.c          **** 
3398:ff.c          **** #if !FF_FS_READONLY
3399:ff.c          **** 		/* Get FSInfo if available */
3400:ff.c          **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 78


3401:ff.c          **** 		fs->fsi_flag = 0x80;
3402:ff.c          **** #if (FF_FS_NOFSINFO & 3) != 3
3403:ff.c          **** 		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
3404:ff.c          **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3405:ff.c          **** 			&& move_window(fs, bsect + 1) == FR_OK)
3406:ff.c          **** 		{
3407:ff.c          **** 			fs->fsi_flag = 0;
3408:ff.c          **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
3409:ff.c          **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3410:ff.c          **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3411:ff.c          **** 			{
3412:ff.c          **** #if (FF_FS_NOFSINFO & 1) == 0
3413:ff.c          **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3414:ff.c          **** #endif
3415:ff.c          **** #if (FF_FS_NOFSINFO & 2) == 0
3416:ff.c          **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3417:ff.c          **** #endif
3418:ff.c          **** 			}
3419:ff.c          **** 		}
3420:ff.c          **** #endif	/* (FF_FS_NOFSINFO & 3) != 3 */
3421:ff.c          **** #endif	/* !FF_FS_READONLY */
3422:ff.c          **** 	}
3423:ff.c          **** 
3424:ff.c          **** 	fs->fs_type = fmt;		/* FAT sub-type */
3425:ff.c          **** 	fs->id = ++Fsid;		/* Volume mount ID */
3426:ff.c          **** #if FF_USE_LFN == 1
3427:ff.c          **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3428:ff.c          **** #if FF_FS_EXFAT
3429:ff.c          **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3430:ff.c          **** #endif
3431:ff.c          **** #endif
3432:ff.c          **** #if FF_FS_RPATH != 0
3433:ff.c          **** 	fs->cdir = 0;			/* Initialize current directory */
3434:ff.c          **** #endif
3435:ff.c          **** #if FF_FS_LOCK != 0			/* Clear file lock semaphores */
3436:ff.c          **** 	clear_lock(fs);
3437:ff.c          **** #endif
3438:ff.c          **** 	return FR_OK;
3439:ff.c          **** }
3440:ff.c          **** 
3441:ff.c          **** 
3442:ff.c          **** 
3443:ff.c          **** 
3444:ff.c          **** /*-----------------------------------------------------------------------*/
3445:ff.c          **** /* Check if the file/directory object is valid or not                    */
3446:ff.c          **** /*-----------------------------------------------------------------------*/
3447:ff.c          **** 
3448:ff.c          **** static
3449:ff.c          **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3450:ff.c          **** 	FFOBJID* obj,	/* Pointer to the FFOBJID, the 1st member in the FIL/DIR object, to check validity *
3451:ff.c          **** 	FATFS** rfs		/* Pointer to pointer to the owner filesystem object to return */
3452:ff.c          **** )
3453:ff.c          **** {
 972              		.loc 1 3453 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 79


 976              	.LVL145:
 977 0000 38B5     		push	{r3, r4, r5, lr}
 978              		.cfi_def_cfa_offset 16
 979              		.cfi_offset 3, -16
 980              		.cfi_offset 4, -12
 981              		.cfi_offset 5, -8
 982              		.cfi_offset 14, -4
 983 0002 0D46     		mov	r5, r1
 984              	.LVL146:
3454:ff.c          **** 	FRESULT res = FR_INVALID_OBJECT;
3455:ff.c          **** 
3456:ff.c          **** 
3457:ff.c          **** 	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid
 985              		.loc 1 3457 0
 986 0004 0446     		mov	r4, r0
 987 0006 78B1     		cbz	r0, .L90
 988              		.loc 1 3457 0 is_stmt 0 discriminator 1
 989 0008 0368     		ldr	r3, [r0]
 990 000a 7BB1     		cbz	r3, .L91
 991              		.loc 1 3457 0 discriminator 2
 992 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 993 000e 7AB1     		cbz	r2, .L92
 994              		.loc 1 3457 0 discriminator 3
 995 0010 8188     		ldrh	r1, [r0, #4]
 996              	.LVL147:
 997 0012 DA88     		ldrh	r2, [r3, #6]
 998 0014 9142     		cmp	r1, r2
 999 0016 0DD1     		bne	.L93
3458:ff.c          **** #if FF_FS_REENTRANT
3459:ff.c          **** 		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
3460:ff.c          **** 			if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initializ
3461:ff.c          **** 				res = FR_OK;
3462:ff.c          **** 			} else {
3463:ff.c          **** 				unlock_fs(obj->fs, FR_OK);
3464:ff.c          **** 			}
3465:ff.c          **** 		} else {
3466:ff.c          **** 			res = FR_TIMEOUT;
3467:ff.c          **** 		}
3468:ff.c          **** #else
3469:ff.c          **** 		if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
 1000              		.loc 1 3469 0 is_stmt 1
 1001 0018 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 1002              	.LVL148:
 1003 001a FFF7FEFF 		bl	disk_status
 1004              	.LVL149:
 1005 001e 10F0010F 		tst	r0, #1
 1006 0022 09D0     		beq	.L94
3454:ff.c          **** 	FRESULT res = FR_INVALID_OBJECT;
 1007              		.loc 1 3454 0
 1008 0024 0920     		movs	r0, #9
 1009 0026 08E0     		b	.L88
 1010              	.LVL150:
 1011              	.L90:
 1012 0028 0920     		movs	r0, #9
 1013              	.LVL151:
 1014 002a 06E0     		b	.L88
 1015              	.LVL152:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 80


 1016              	.L91:
 1017 002c 0920     		movs	r0, #9
 1018              	.LVL153:
 1019 002e 04E0     		b	.L88
 1020              	.LVL154:
 1021              	.L92:
 1022 0030 0920     		movs	r0, #9
 1023              	.LVL155:
 1024 0032 02E0     		b	.L88
 1025              	.LVL156:
 1026              	.L93:
 1027 0034 0920     		movs	r0, #9
 1028              	.LVL157:
 1029 0036 00E0     		b	.L88
 1030              	.L94:
3470:ff.c          **** 			res = FR_OK;
 1031              		.loc 1 3470 0
 1032 0038 0020     		movs	r0, #0
 1033              	.L88:
 1034              	.LVL158:
3471:ff.c          **** 		}
3472:ff.c          **** #endif
3473:ff.c          **** 	}
3474:ff.c          **** 	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 1035              		.loc 1 3474 0
 1036 003a 08B9     		cbnz	r0, .L95
 1037              		.loc 1 3474 0 is_stmt 0 discriminator 1
 1038 003c 2368     		ldr	r3, [r4]
 1039 003e 00E0     		b	.L89
 1040              	.L95:
 1041              		.loc 1 3474 0
 1042 0040 0023     		movs	r3, #0
 1043              	.L89:
 1044              		.loc 1 3474 0 discriminator 4
 1045 0042 2B60     		str	r3, [r5]
3475:ff.c          **** 	return res;
3476:ff.c          **** }
 1046              		.loc 1 3476 0 is_stmt 1 discriminator 4
 1047 0044 38BD     		pop	{r3, r4, r5, pc}
 1048              		.cfi_endproc
 1049              	.LFE34:
 1050              		.size	validate, .-validate
 1051 0046 00BF     		.section	.text.sync_window,"ax",%progbits
 1052              		.align	2
 1053              		.thumb
 1054              		.thumb_func
 1055              		.type	sync_window, %function
 1056              	sync_window:
 1057              	.LFB10:
1034:ff.c          **** 	FRESULT res = FR_OK;
 1058              		.loc 1 1034 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              	.LVL159:
 1063 0000 38B5     		push	{r3, r4, r5, lr}
 1064              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 81


 1065              		.cfi_offset 3, -16
 1066              		.cfi_offset 4, -12
 1067              		.cfi_offset 5, -8
 1068              		.cfi_offset 14, -4
 1069              	.LVL160:
1038:ff.c          **** 		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
 1070              		.loc 1 1038 0
 1071 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 1072 0004 E3B1     		cbz	r3, .L99
 1073 0006 0446     		mov	r4, r0
1039:ff.c          **** 			fs->wflag = 0;	/* Clear window dirty flag */
 1074              		.loc 1 1039 0
 1075 0008 00F13005 		add	r5, r0, #48
 1076 000c 0123     		movs	r3, #1
 1077 000e C26A     		ldr	r2, [r0, #44]
 1078 0010 2946     		mov	r1, r5
 1079 0012 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 1080              	.LVL161:
 1081 0014 FFF7FEFF 		bl	disk_write
 1082              	.LVL162:
 1083 0018 A0B9     		cbnz	r0, .L100
1040:ff.c          **** 			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
 1084              		.loc 1 1040 0
 1085 001a 0023     		movs	r3, #0
 1086 001c E370     		strb	r3, [r4, #3]
1041:ff.c          **** 				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it t
 1087              		.loc 1 1041 0
 1088 001e E16A     		ldr	r1, [r4, #44]
 1089 0020 236A     		ldr	r3, [r4, #32]
 1090 0022 CB1A     		subs	r3, r1, r3
 1091 0024 A269     		ldr	r2, [r4, #24]
 1092 0026 9342     		cmp	r3, r2
 1093 0028 0ED2     		bcs	.L101
1042:ff.c          **** 			}
 1094              		.loc 1 1042 0
 1095 002a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1096 002c 022B     		cmp	r3, #2
 1097 002e 0DD1     		bne	.L102
1042:ff.c          **** 			}
 1098              		.loc 1 1042 0 is_stmt 0 discriminator 1
 1099 0030 0123     		movs	r3, #1
 1100 0032 0A44     		add	r2, r2, r1
 1101 0034 2946     		mov	r1, r5
 1102 0036 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1103 0038 FFF7FEFF 		bl	disk_write
 1104              	.LVL163:
1035:ff.c          **** 
 1105              		.loc 1 1035 0 is_stmt 1 discriminator 1
 1106 003c 0020     		movs	r0, #0
 1107 003e 38BD     		pop	{r3, r4, r5, pc}
 1108              	.LVL164:
 1109              	.L99:
1035:ff.c          **** 
 1110              		.loc 1 1035 0 is_stmt 0
 1111 0040 0020     		movs	r0, #0
 1112              	.LVL165:
 1113 0042 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 82


 1114              	.LVL166:
 1115              	.L100:
1045:ff.c          **** 		}
 1116              		.loc 1 1045 0 is_stmt 1
 1117 0044 0120     		movs	r0, #1
 1118 0046 38BD     		pop	{r3, r4, r5, pc}
 1119              	.LVL167:
 1120              	.L101:
1035:ff.c          **** 
 1121              		.loc 1 1035 0
 1122 0048 0020     		movs	r0, #0
 1123 004a 38BD     		pop	{r3, r4, r5, pc}
 1124              	.LVL168:
 1125              	.L102:
 1126 004c 0020     		movs	r0, #0
 1127              	.LVL169:
1049:ff.c          **** #endif
 1128              		.loc 1 1049 0
 1129 004e 38BD     		pop	{r3, r4, r5, pc}
 1130              		.cfi_endproc
 1131              	.LFE10:
 1132              		.size	sync_window, .-sync_window
 1133              		.section	.text.move_window,"ax",%progbits
 1134              		.align	2
 1135              		.thumb
 1136              		.thumb_func
 1137              		.type	move_window, %function
 1138              	move_window:
 1139              	.LFB11:
1058:ff.c          **** 	FRESULT res = FR_OK;
 1140              		.loc 1 1058 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 0
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 1144              	.LVL170:
 1145 0000 70B5     		push	{r4, r5, r6, lr}
 1146              		.cfi_def_cfa_offset 16
 1147              		.cfi_offset 4, -16
 1148              		.cfi_offset 5, -12
 1149              		.cfi_offset 6, -8
 1150              		.cfi_offset 14, -4
 1151              	.LVL171:
1062:ff.c          **** #if !FF_FS_READONLY
 1152              		.loc 1 1062 0
 1153 0002 C36A     		ldr	r3, [r0, #44]
 1154 0004 8B42     		cmp	r3, r1
 1155 0006 12D0     		beq	.L107
 1156 0008 0446     		mov	r4, r0
 1157 000a 0D46     		mov	r5, r1
1064:ff.c          **** #endif
 1158              		.loc 1 1064 0
 1159 000c FFF7FEFF 		bl	sync_window
 1160              	.LVL172:
1066:ff.c          **** 			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
 1161              		.loc 1 1066 0
 1162 0010 0646     		mov	r6, r0
 1163 0012 68B9     		cbnz	r0, .L105
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 83


1067:ff.c          **** 				sector = 0xFFFFFFFF;	/* Invalidate window if read data is not valid */
 1164              		.loc 1 1067 0
 1165 0014 0123     		movs	r3, #1
 1166 0016 2A46     		mov	r2, r5
 1167 0018 04F13001 		add	r1, r4, #48
 1168 001c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1169              	.LVL173:
 1170 001e FFF7FEFF 		bl	disk_read
 1171              	.LVL174:
 1172 0022 10B1     		cbz	r0, .L106
1069:ff.c          **** 			}
 1173              		.loc 1 1069 0
 1174 0024 0126     		movs	r6, #1
1068:ff.c          **** 				res = FR_DISK_ERR;
 1175              		.loc 1 1068 0
 1176 0026 4FF0FF35 		mov	r5, #-1
 1177              	.LVL175:
 1178              	.L106:
1071:ff.c          **** 		}
 1179              		.loc 1 1071 0
 1180 002a E562     		str	r5, [r4, #44]
 1181 002c 00E0     		b	.L105
 1182              	.LVL176:
 1183              	.L107:
1059:ff.c          **** 
 1184              		.loc 1 1059 0
 1185 002e 0026     		movs	r6, #0
 1186              	.LVL177:
 1187              	.L105:
1075:ff.c          **** 
 1188              		.loc 1 1075 0
 1189 0030 3046     		mov	r0, r6
 1190 0032 70BD     		pop	{r4, r5, r6, pc}
 1191              		.cfi_endproc
 1192              	.LFE11:
 1193              		.size	move_window, .-move_window
 1194              		.section	.text.check_fs,"ax",%progbits
 1195              		.align	2
 1196              		.thumb
 1197              		.thumb_func
 1198              		.type	check_fs, %function
 1199              	check_fs:
 1200              	.LFB32:
3199:ff.c          **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1201              		.loc 1 3199 0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205              	.LVL178:
 1206 0000 10B5     		push	{r4, lr}
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 4, -8
 1209              		.cfi_offset 14, -4
 1210 0002 0446     		mov	r4, r0
3200:ff.c          **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1211              		.loc 1 3200 0
 1212 0004 0023     		movs	r3, #0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 84


 1213 0006 C370     		strb	r3, [r0, #3]
 1214 0008 4FF0FF33 		mov	r3, #-1
 1215 000c C362     		str	r3, [r0, #44]
3201:ff.c          **** 
 1216              		.loc 1 3201 0
 1217 000e FFF7FEFF 		bl	move_window
 1218              	.LVL179:
 1219 0012 F0B9     		cbnz	r0, .L113
3203:ff.c          **** 
 1220              		.loc 1 3203 0
 1221 0014 04F22E20 		addw	r0, r4, #558
 1222 0018 FFF7FEFF 		bl	ld_word
 1223              	.LVL180:
 1224 001c 4AF65523 		movw	r3, #43605
 1225 0020 9842     		cmp	r0, r3
 1226 0022 18D1     		bne	.L114
3208:ff.c          **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1227              		.loc 1 3208 0
 1228 0024 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1229 0028 E92B     		cmp	r3, #233
 1230 002a 03D0     		beq	.L112
3208:ff.c          **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1231              		.loc 1 3208 0 is_stmt 0 discriminator 1
 1232 002c EB2B     		cmp	r3, #235
 1233 002e 01D0     		beq	.L112
3208:ff.c          **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1234              		.loc 1 3208 0 discriminator 2
 1235 0030 E82B     		cmp	r3, #232
 1236 0032 12D1     		bne	.L115
 1237              	.L112:
3209:ff.c          **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
 1238              		.loc 1 3209 0 is_stmt 1
 1239 0034 0322     		movs	r2, #3
 1240 0036 0C49     		ldr	r1, .L119
 1241 0038 04F16600 		add	r0, r4, #102
 1242 003c FFF7FEFF 		bl	mem_cmp
 1243              	.LVL181:
 1244 0040 68B1     		cbz	r0, .L116
3210:ff.c          **** 	}
 1245              		.loc 1 3210 0
 1246 0042 0522     		movs	r2, #5
 1247 0044 0949     		ldr	r1, .L119+4
 1248 0046 04F18200 		add	r0, r4, #130
 1249 004a FFF7FEFF 		bl	mem_cmp
 1250              	.LVL182:
 1251 004e 40B9     		cbnz	r0, .L117
 1252 0050 10BD     		pop	{r4, pc}
 1253              	.LVL183:
 1254              	.L113:
3201:ff.c          **** 
 1255              		.loc 1 3201 0
 1256 0052 0420     		movs	r0, #4
 1257 0054 10BD     		pop	{r4, pc}
 1258              	.LVL184:
 1259              	.L114:
3203:ff.c          **** 
 1260              		.loc 1 3203 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 85


 1261 0056 0320     		movs	r0, #3
 1262 0058 10BD     		pop	{r4, pc}
 1263              	.LVL185:
 1264              	.L115:
3212:ff.c          **** }
 1265              		.loc 1 3212 0
 1266 005a 0220     		movs	r0, #2
 1267 005c 10BD     		pop	{r4, pc}
 1268              	.LVL186:
 1269              	.L116:
3209:ff.c          **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
 1270              		.loc 1 3209 0
 1271 005e 0020     		movs	r0, #0
 1272 0060 10BD     		pop	{r4, pc}
 1273              	.LVL187:
 1274              	.L117:
3212:ff.c          **** }
 1275              		.loc 1 3212 0
 1276 0062 0220     		movs	r0, #2
3213:ff.c          **** 
 1277              		.loc 1 3213 0
 1278 0064 10BD     		pop	{r4, pc}
 1279              	.LVL188:
 1280              	.L120:
 1281 0066 00BF     		.align	2
 1282              	.L119:
 1283 0068 10000000 		.word	.LC1
 1284 006c 14000000 		.word	.LC2
 1285              		.cfi_endproc
 1286              	.LFE32:
 1287              		.size	check_fs, .-check_fs
 1288              		.section	.text.find_volume,"ax",%progbits
 1289              		.align	2
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	find_volume, %function
 1293              	find_volume:
 1294              	.LFB33:
3228:ff.c          **** 	BYTE fmt, *pt;
 1295              		.loc 1 3228 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 16
 1298              		@ frame_needed = 0, uses_anonymous_args = 0
 1299              	.LVL189:
 1300 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1301              		.cfi_def_cfa_offset 32
 1302              		.cfi_offset 4, -32
 1303              		.cfi_offset 5, -28
 1304              		.cfi_offset 6, -24
 1305              		.cfi_offset 7, -20
 1306              		.cfi_offset 8, -16
 1307              		.cfi_offset 9, -12
 1308              		.cfi_offset 10, -8
 1309              		.cfi_offset 14, -4
 1310 0004 84B0     		sub	sp, sp, #16
 1311              		.cfi_def_cfa_offset 48
 1312 0006 0E46     		mov	r6, r1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 86


 1313 0008 1746     		mov	r7, r2
3239:ff.c          **** 	vol = get_ldnumber(path);
 1314              		.loc 1 3239 0
 1315 000a 0023     		movs	r3, #0
 1316 000c 0B60     		str	r3, [r1]
3240:ff.c          **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1317              		.loc 1 3240 0
 1318 000e FFF7FEFF 		bl	get_ldnumber
 1319              	.LVL190:
3241:ff.c          **** 
 1320              		.loc 1 3241 0
 1321 0012 051E     		subs	r5, r0, #0
 1322 0014 C0F23381 		blt	.L140
3244:ff.c          **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
 1323              		.loc 1 3244 0
 1324 0018 AF4B     		ldr	r3, .L168
 1325 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1326              	.LVL191:
3245:ff.c          **** #if FF_FS_REENTRANT
 1327              		.loc 1 3245 0
 1328 001e 002C     		cmp	r4, #0
 1329 0020 00F02F81 		beq	.L141
3249:ff.c          **** 
 1330              		.loc 1 3249 0
 1331 0024 3460     		str	r4, [r6]
3251:ff.c          **** 	if (fs->fs_type != 0) {				/* If the volume has been mounted */
 1332              		.loc 1 3251 0
 1333 0026 07F0FE07 		and	r7, r7, #254
 1334              	.LVL192:
3252:ff.c          **** 		stat = disk_status(fs->pdrv);
 1335              		.loc 1 3252 0
 1336 002a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1337 002c 73B1     		cbz	r3, .L123
3253:ff.c          **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1338              		.loc 1 3253 0
 1339 002e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1340              	.LVL193:
 1341 0030 FFF7FEFF 		bl	disk_status
 1342              	.LVL194:
3254:ff.c          **** 			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1343              		.loc 1 3254 0
 1344 0034 10F0010F 		tst	r0, #1
 1345 0038 08D1     		bne	.L123
3255:ff.c          **** 				return FR_WRITE_PROTECTED;
 1346              		.loc 1 3255 0
 1347 003a 002F     		cmp	r7, #0
 1348 003c 00F02381 		beq	.L142
3255:ff.c          **** 				return FR_WRITE_PROTECTED;
 1349              		.loc 1 3255 0 is_stmt 0 discriminator 1
 1350 0040 10F0040F 		tst	r0, #4
 1351 0044 40F02181 		bne	.L143
3258:ff.c          **** 		}
 1352              		.loc 1 3258 0 is_stmt 1
 1353 0048 0020     		movs	r0, #0
 1354              	.LVL195:
 1355 004a 41E1     		b	.L122
 1356              	.L123:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 87


3265:ff.c          **** 	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1357              		.loc 1 3265 0
 1358 004c 0023     		movs	r3, #0
 1359 004e 2370     		strb	r3, [r4]
3266:ff.c          **** 	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
 1360              		.loc 1 3266 0
 1361 0050 E8B2     		uxtb	r0, r5
 1362 0052 6070     		strb	r0, [r4, #1]
3267:ff.c          **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1363              		.loc 1 3267 0
 1364 0054 FFF7FEFF 		bl	disk_initialize
 1365              	.LVL196:
3268:ff.c          **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1366              		.loc 1 3268 0
 1367 0058 10F0010F 		tst	r0, #1
 1368 005c 40F01781 		bne	.L144
3271:ff.c          **** 		return FR_WRITE_PROTECTED;
 1369              		.loc 1 3271 0
 1370 0060 1FB1     		cbz	r7, .L124
3271:ff.c          **** 		return FR_WRITE_PROTECTED;
 1371              		.loc 1 3271 0 is_stmt 0 discriminator 1
 1372 0062 10F0040F 		tst	r0, #4
 1373 0066 40F01481 		bne	.L145
 1374              	.L124:
 1375              	.LVL197:
3281:ff.c          **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1376              		.loc 1 3281 0 is_stmt 1
 1377 006a 0021     		movs	r1, #0
 1378 006c 2046     		mov	r0, r4
 1379              	.LVL198:
 1380 006e FFF7FEFF 		bl	check_fs
 1381              	.LVL199:
3282:ff.c          **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1382              		.loc 1 3282 0
 1383 0072 0228     		cmp	r0, #2
 1384 0074 15D0     		beq	.L146
3280:ff.c          **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1385              		.loc 1 3280 0
 1386 0076 0026     		movs	r6, #0
 1387              	.LVL200:
 1388 0078 28E0     		b	.L126
 1389              	.LVL201:
 1390              	.L128:
3284:ff.c          **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 1391              		.loc 1 3284 0
 1392 007a 04F13000 		add	r0, r4, #48
 1393 007e 2B01     		lsls	r3, r5, #4
 1394 0080 03F5DF73 		add	r3, r3, #446
 1395 0084 1844     		add	r0, r0, r3
 1396              	.LVL202:
3285:ff.c          **** 		}
 1397              		.loc 1 3285 0
 1398 0086 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1399 0088 1BB1     		cbz	r3, .L147
3285:ff.c          **** 		}
 1400              		.loc 1 3285 0 is_stmt 0 discriminator 1
 1401 008a 0830     		adds	r0, r0, #8
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 88


 1402              	.LVL203:
 1403 008c FFF7FEFF 		bl	ld_dword
 1404              	.LVL204:
 1405 0090 00E0     		b	.L127
 1406              	.LVL205:
 1407              	.L147:
3285:ff.c          **** 		}
 1408              		.loc 1 3285 0
 1409 0092 0020     		movs	r0, #0
 1410              	.LVL206:
 1411              	.L127:
3285:ff.c          **** 		}
 1412              		.loc 1 3285 0 discriminator 4
 1413 0094 04AB     		add	r3, sp, #16
 1414 0096 03EB8503 		add	r3, r3, r5, lsl #2
 1415 009a 43F8100C 		str	r0, [r3, #-16]
3283:ff.c          **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1416              		.loc 1 3283 0 is_stmt 1 discriminator 4
 1417 009e 0135     		adds	r5, r5, #1
 1418              	.LVL207:
 1419 00a0 00E0     		b	.L125
 1420              	.LVL208:
 1421              	.L146:
 1422 00a2 0025     		movs	r5, #0
 1423              	.LVL209:
 1424              	.L125:
3283:ff.c          **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1425              		.loc 1 3283 0 is_stmt 0 discriminator 2
 1426 00a4 032D     		cmp	r5, #3
 1427 00a6 E8D9     		bls	.L128
 1428 00a8 0025     		movs	r5, #0
 1429              	.LVL210:
 1430              	.L130:
3290:ff.c          **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 1431              		.loc 1 3290 0 is_stmt 1
 1432 00aa 04AB     		add	r3, sp, #16
 1433 00ac 03EB8503 		add	r3, r3, r5, lsl #2
 1434 00b0 53F8106C 		ldr	r6, [r3, #-16]
 1435              	.LVL211:
3291:ff.c          **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1436              		.loc 1 3291 0
 1437 00b4 26B1     		cbz	r6, .L148
3291:ff.c          **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1438              		.loc 1 3291 0 is_stmt 0 discriminator 1
 1439 00b6 3146     		mov	r1, r6
 1440 00b8 2046     		mov	r0, r4
 1441 00ba FFF7FEFF 		bl	check_fs
 1442              	.LVL212:
 1443 00be 00E0     		b	.L129
 1444              	.L148:
3291:ff.c          **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1445              		.loc 1 3291 0
 1446 00c0 0320     		movs	r0, #3
 1447              	.L129:
 1448              	.LVL213:
3292:ff.c          **** 	}
 1449              		.loc 1 3292 0 is_stmt 1 discriminator 4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 89


 1450 00c2 0128     		cmp	r0, #1
 1451 00c4 02D9     		bls	.L126
3292:ff.c          **** 	}
 1452              		.loc 1 3292 0 is_stmt 0 discriminator 1
 1453 00c6 0135     		adds	r5, r5, #1
 1454              	.LVL214:
 1455 00c8 032D     		cmp	r5, #3
 1456 00ca EED9     		bls	.L130
 1457              	.LVL215:
 1458              	.L126:
3294:ff.c          **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1459              		.loc 1 3294 0 is_stmt 1
 1460 00cc 0428     		cmp	r0, #4
 1461 00ce 00F0E280 		beq	.L149
3295:ff.c          **** 
 1462              		.loc 1 3295 0
 1463 00d2 0128     		cmp	r0, #1
 1464 00d4 00F2E180 		bhi	.L150
3347:ff.c          **** 
 1465              		.loc 1 3347 0
 1466 00d8 04F13B00 		add	r0, r4, #59
 1467              	.LVL216:
 1468 00dc FFF7FEFF 		bl	ld_word
 1469              	.LVL217:
 1470 00e0 B0F5007F 		cmp	r0, #512
 1471 00e4 40F0DB80 		bne	.L151
3349:ff.c          **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1472              		.loc 1 3349 0
 1473 00e8 04F14600 		add	r0, r4, #70
 1474 00ec FFF7FEFF 		bl	ld_word
 1475              	.LVL218:
 1476 00f0 8046     		mov	r8, r0
 1477              	.LVL219:
3350:ff.c          **** 		fs->fsize = fasize;
 1478              		.loc 1 3350 0
 1479 00f2 20B9     		cbnz	r0, .L131
3350:ff.c          **** 		fs->fsize = fasize;
 1480              		.loc 1 3350 0 is_stmt 0 discriminator 1
 1481 00f4 04F15400 		add	r0, r4, #84
 1482              	.LVL220:
 1483 00f8 FFF7FEFF 		bl	ld_dword
 1484              	.LVL221:
 1485 00fc 8046     		mov	r8, r0
 1486              	.LVL222:
 1487              	.L131:
3351:ff.c          **** 
 1488              		.loc 1 3351 0 is_stmt 1
 1489 00fe C4F81880 		str	r8, [r4, #24]
3353:ff.c          **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1490              		.loc 1 3353 0
 1491 0102 94F84090 		ldrb	r9, [r4, #64]	@ zero_extendqisi2
 1492 0106 84F80290 		strb	r9, [r4, #2]
3354:ff.c          **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1493              		.loc 1 3354 0
 1494 010a 09F1FF33 		add	r3, r9, #-1
 1495 010e DBB2     		uxtb	r3, r3
 1496 0110 012B     		cmp	r3, #1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 90


 1497 0112 00F2C680 		bhi	.L152
3355:ff.c          **** 
 1498              		.loc 1 3355 0
 1499 0116 08FB09F9 		mul	r9, r8, r9
 1500              	.LVL223:
3357:ff.c          **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1501              		.loc 1 3357 0
 1502 011a 94F83D50 		ldrb	r5, [r4, #61]	@ zero_extendqisi2
 1503 011e 6581     		strh	r5, [r4, #10]	@ movhi
3358:ff.c          **** 
 1504              		.loc 1 3358 0
 1505 0120 002D     		cmp	r5, #0
 1506 0122 00F0C080 		beq	.L153
3358:ff.c          **** 
 1507              		.loc 1 3358 0 is_stmt 0 discriminator 2
 1508 0126 6B1E     		subs	r3, r5, #1
 1509 0128 1D42     		tst	r5, r3
 1510 012a 40F0BE80 		bne	.L154
3360:ff.c          **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1511              		.loc 1 3360 0 is_stmt 1
 1512 012e 04F14100 		add	r0, r4, #65
 1513 0132 FFF7FEFF 		bl	ld_word
 1514              	.LVL224:
 1515 0136 8246     		mov	r10, r0
 1516 0138 2081     		strh	r0, [r4, #8]	@ movhi
3361:ff.c          **** 
 1517              		.loc 1 3361 0
 1518 013a 10F00F0F 		tst	r0, #15
 1519 013e 40F0B680 		bne	.L155
3363:ff.c          **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1520              		.loc 1 3363 0
 1521 0142 04F14300 		add	r0, r4, #67
 1522 0146 FFF7FEFF 		bl	ld_word
 1523              	.LVL225:
 1524 014a 0746     		mov	r7, r0
 1525              	.LVL226:
3364:ff.c          **** 
 1526              		.loc 1 3364 0
 1527 014c 20B9     		cbnz	r0, .L132
3364:ff.c          **** 
 1528              		.loc 1 3364 0 is_stmt 0 discriminator 1
 1529 014e 04F15000 		add	r0, r4, #80
 1530              	.LVL227:
 1531 0152 FFF7FEFF 		bl	ld_dword
 1532              	.LVL228:
 1533 0156 0746     		mov	r7, r0
 1534              	.LVL229:
 1535              	.L132:
3366:ff.c          **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 1536              		.loc 1 3366 0 is_stmt 1
 1537 0158 04F13E00 		add	r0, r4, #62
 1538              	.LVL230:
 1539 015c FFF7FEFF 		bl	ld_word
 1540              	.LVL231:
3367:ff.c          **** 
 1541              		.loc 1 3367 0
 1542 0160 0346     		mov	r3, r0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 91


 1543 0162 0028     		cmp	r0, #0
 1544 0164 00F0A580 		beq	.L156
3370:ff.c          **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 1545              		.loc 1 3370 0
 1546 0168 09EB0002 		add	r2, r9, r0
 1547 016c 02EB1A12 		add	r2, r2, r10, lsr #4
 1548              	.LVL232:
3371:ff.c          **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 1549              		.loc 1 3371 0
 1550 0170 9742     		cmp	r7, r2
 1551 0172 C0F0A080 		bcc	.L157
3372:ff.c          **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1552              		.loc 1 3372 0
 1553 0176 BF1A     		subs	r7, r7, r2
 1554              	.LVL233:
 1555 0178 B7FBF5F5 		udiv	r5, r7, r5
 1556              	.LVL234:
3373:ff.c          **** 		fmt = 0;
 1557              		.loc 1 3373 0
 1558 017c 002D     		cmp	r5, #0
 1559 017e 00F09C80 		beq	.L158
 1560              	.LVL235:
3375:ff.c          **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1561              		.loc 1 3375 0
 1562 0182 5649     		ldr	r1, .L168+4
 1563 0184 8D42     		cmp	r5, r1
 1564 0186 01D9     		bls	.L159
3374:ff.c          **** 		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
 1565              		.loc 1 3374 0
 1566 0188 0027     		movs	r7, #0
 1567 018a 00E0     		b	.L133
 1568              	.L159:
3375:ff.c          **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1569              		.loc 1 3375 0
 1570 018c 0327     		movs	r7, #3
 1571              	.L133:
 1572              	.LVL236:
3376:ff.c          **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 1573              		.loc 1 3376 0
 1574 018e 4FF6F571 		movw	r1, #65525
 1575 0192 8D42     		cmp	r5, r1
 1576 0194 00D8     		bhi	.L134
 1577 0196 0227     		movs	r7, #2
 1578              	.LVL237:
 1579              	.L134:
3377:ff.c          **** 		if (fmt == 0) return FR_NO_FILESYSTEM;
 1580              		.loc 1 3377 0
 1581 0198 40F6F571 		movw	r1, #4085
 1582 019c 8D42     		cmp	r5, r1
 1583 019e 00D8     		bhi	.L135
 1584 01a0 0127     		movs	r7, #1
 1585              	.LVL238:
 1586              	.L135:
3378:ff.c          **** 
 1587              		.loc 1 3378 0
 1588 01a2 002F     		cmp	r7, #0
 1589 01a4 00F08B80 		beq	.L162
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 92


3381:ff.c          **** 		fs->volbase = bsect;							/* Volume start sector */
 1590              		.loc 1 3381 0
 1591 01a8 0235     		adds	r5, r5, #2
 1592              	.LVL239:
 1593 01aa 6561     		str	r5, [r4, #20]
3382:ff.c          **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 1594              		.loc 1 3382 0
 1595 01ac E661     		str	r6, [r4, #28]
3383:ff.c          **** 		fs->database = bsect + sysect;					/* Data start sector */
 1596              		.loc 1 3383 0
 1597 01ae 3344     		add	r3, r3, r6
 1598 01b0 2362     		str	r3, [r4, #32]
3384:ff.c          **** 		if (fmt == FS_FAT32) {
 1599              		.loc 1 3384 0
 1600 01b2 3244     		add	r2, r2, r6
 1601              	.LVL240:
 1602 01b4 A262     		str	r2, [r4, #40]
3385:ff.c          **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 1603              		.loc 1 3385 0
 1604 01b6 032F     		cmp	r7, #3
 1605 01b8 0FD1     		bne	.L136
3386:ff.c          **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 1606              		.loc 1 3386 0
 1607 01ba 04F15A00 		add	r0, r4, #90
 1608              	.LVL241:
 1609 01be FFF7FEFF 		bl	ld_word
 1610              	.LVL242:
 1611 01c2 0028     		cmp	r0, #0
 1612 01c4 7DD1     		bne	.L163
3387:ff.c          **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 1613              		.loc 1 3387 0
 1614 01c6 BAF1000F 		cmp	r10, #0
 1615 01ca 7CD1     		bne	.L164
3388:ff.c          **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 1616              		.loc 1 3388 0
 1617 01cc 04F15C00 		add	r0, r4, #92
 1618 01d0 FFF7FEFF 		bl	ld_dword
 1619              	.LVL243:
 1620 01d4 6062     		str	r0, [r4, #36]
3389:ff.c          **** 		} else {
 1621              		.loc 1 3389 0
 1622 01d6 AD00     		lsls	r5, r5, #2
 1623              	.LVL244:
 1624 01d8 0EE0     		b	.L137
 1625              	.LVL245:
 1626              	.L136:
3391:ff.c          **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 1627              		.loc 1 3391 0
 1628 01da BAF1000F 		cmp	r10, #0
 1629 01de 74D0     		beq	.L165
3392:ff.c          **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 1630              		.loc 1 3392 0
 1631 01e0 4B44     		add	r3, r3, r9
 1632 01e2 6362     		str	r3, [r4, #36]
3394:ff.c          **** 		}
 1633              		.loc 1 3394 0
 1634 01e4 022F     		cmp	r7, #2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 93


 1635 01e6 01D1     		bne	.L138
3394:ff.c          **** 		}
 1636              		.loc 1 3394 0 is_stmt 0 discriminator 1
 1637 01e8 6D00     		lsls	r5, r5, #1
 1638              	.LVL246:
 1639 01ea 05E0     		b	.L137
 1640              	.LVL247:
 1641              	.L138:
3394:ff.c          **** 		}
 1642              		.loc 1 3394 0 discriminator 2
 1643 01ec 05EB4503 		add	r3, r5, r5, lsl #1
 1644 01f0 05F00105 		and	r5, r5, #1
 1645              	.LVL248:
 1646 01f4 05EB5305 		add	r5, r5, r3, lsr #1
 1647              	.LVL249:
 1648              	.L137:
3396:ff.c          **** 
 1649              		.loc 1 3396 0 is_stmt 1
 1650 01f8 05F2FF15 		addw	r5, r5, #511
 1651              	.LVL250:
 1652 01fc B8EB552F 		cmp	r8, r5, lsr #9
 1653 0200 65D3     		bcc	.L166
3400:ff.c          **** 		fs->fsi_flag = 0x80;
 1654              		.loc 1 3400 0
 1655 0202 4FF0FF33 		mov	r3, #-1
 1656 0206 2361     		str	r3, [r4, #16]
 1657 0208 E360     		str	r3, [r4, #12]
3401:ff.c          **** #if (FF_FS_NOFSINFO & 3) != 3
 1658              		.loc 1 3401 0
 1659 020a 8023     		movs	r3, #128
 1660 020c 2371     		strb	r3, [r4, #4]
3403:ff.c          **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 1661              		.loc 1 3403 0
 1662 020e 032F     		cmp	r7, #3
 1663 0210 2CD1     		bne	.L139
3404:ff.c          **** 			&& move_window(fs, bsect + 1) == FR_OK)
 1664              		.loc 1 3404 0
 1665 0212 04F16000 		add	r0, r4, #96
 1666 0216 FFF7FEFF 		bl	ld_word
 1667              	.LVL251:
 1668 021a 0128     		cmp	r0, #1
 1669 021c 26D1     		bne	.L139
3405:ff.c          **** 		{
 1670              		.loc 1 3405 0
 1671 021e 711C     		adds	r1, r6, #1
 1672 0220 2046     		mov	r0, r4
 1673 0222 FFF7FEFF 		bl	move_window
 1674              	.LVL252:
 1675 0226 08BB     		cbnz	r0, .L139
3407:ff.c          **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
 1676              		.loc 1 3407 0
 1677 0228 0023     		movs	r3, #0
 1678 022a 2371     		strb	r3, [r4, #4]
3408:ff.c          **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 1679              		.loc 1 3408 0
 1680 022c 04F22E20 		addw	r0, r4, #558
 1681 0230 FFF7FEFF 		bl	ld_word
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 94


 1682              	.LVL253:
 1683 0234 4AF65523 		movw	r3, #43605
 1684 0238 9842     		cmp	r0, r3
 1685 023a 17D1     		bne	.L139
3409:ff.c          **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 1686              		.loc 1 3409 0
 1687 023c 04F13000 		add	r0, r4, #48
 1688 0240 FFF7FEFF 		bl	ld_dword
 1689              	.LVL254:
 1690 0244 264B     		ldr	r3, .L168+8
 1691 0246 9842     		cmp	r0, r3
 1692 0248 10D1     		bne	.L139
3410:ff.c          **** 			{
 1693              		.loc 1 3410 0
 1694 024a 04F50570 		add	r0, r4, #532
 1695 024e FFF7FEFF 		bl	ld_dword
 1696              	.LVL255:
 1697 0252 244B     		ldr	r3, .L168+12
 1698 0254 9842     		cmp	r0, r3
 1699 0256 09D1     		bne	.L139
3413:ff.c          **** #endif
 1700              		.loc 1 3413 0
 1701 0258 04F50670 		add	r0, r4, #536
 1702 025c FFF7FEFF 		bl	ld_dword
 1703              	.LVL256:
 1704 0260 2061     		str	r0, [r4, #16]
3416:ff.c          **** #endif
 1705              		.loc 1 3416 0
 1706 0262 04F50770 		add	r0, r4, #540
 1707 0266 FFF7FEFF 		bl	ld_dword
 1708              	.LVL257:
 1709 026a E060     		str	r0, [r4, #12]
 1710              	.L139:
3424:ff.c          **** 	fs->id = ++Fsid;		/* Volume mount ID */
 1711              		.loc 1 3424 0
 1712 026c 2770     		strb	r7, [r4]
3425:ff.c          **** #if FF_USE_LFN == 1
 1713              		.loc 1 3425 0
 1714 026e 1A4A     		ldr	r2, .L168
 1715 0270 9388     		ldrh	r3, [r2, #4]
 1716 0272 0133     		adds	r3, r3, #1
 1717 0274 9BB2     		uxth	r3, r3
 1718 0276 9380     		strh	r3, [r2, #4]	@ movhi
 1719 0278 E380     		strh	r3, [r4, #6]	@ movhi
3438:ff.c          **** }
 1720              		.loc 1 3438 0
 1721 027a 0020     		movs	r0, #0
 1722 027c 28E0     		b	.L122
 1723              	.LVL258:
 1724              	.L140:
3241:ff.c          **** 
 1725              		.loc 1 3241 0
 1726 027e 0B20     		movs	r0, #11
 1727              	.LVL259:
 1728 0280 26E0     		b	.L122
 1729              	.LVL260:
 1730              	.L141:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 95


3245:ff.c          **** #if FF_FS_REENTRANT
 1731              		.loc 1 3245 0
 1732 0282 0C20     		movs	r0, #12
 1733              	.LVL261:
 1734 0284 24E0     		b	.L122
 1735              	.LVL262:
 1736              	.L142:
3258:ff.c          **** 		}
 1737              		.loc 1 3258 0
 1738 0286 0020     		movs	r0, #0
 1739              	.LVL263:
 1740 0288 22E0     		b	.L122
 1741              	.LVL264:
 1742              	.L143:
3256:ff.c          **** 			}
 1743              		.loc 1 3256 0
 1744 028a 0A20     		movs	r0, #10
 1745              	.LVL265:
 1746 028c 20E0     		b	.L122
 1747              	.LVL266:
 1748              	.L144:
3269:ff.c          **** 	}
 1749              		.loc 1 3269 0
 1750 028e 0320     		movs	r0, #3
 1751              	.LVL267:
 1752 0290 1EE0     		b	.L122
 1753              	.LVL268:
 1754              	.L145:
3272:ff.c          **** 	}
 1755              		.loc 1 3272 0
 1756 0292 0A20     		movs	r0, #10
 1757              	.LVL269:
 1758 0294 1CE0     		b	.L122
 1759              	.LVL270:
 1760              	.L149:
3294:ff.c          **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1761              		.loc 1 3294 0
 1762 0296 0120     		movs	r0, #1
 1763              	.LVL271:
 1764 0298 1AE0     		b	.L122
 1765              	.LVL272:
 1766              	.L150:
3295:ff.c          **** 
 1767              		.loc 1 3295 0
 1768 029a 0D20     		movs	r0, #13
 1769              	.LVL273:
 1770 029c 18E0     		b	.L122
 1771              	.L151:
3347:ff.c          **** 
 1772              		.loc 1 3347 0
 1773 029e 0D20     		movs	r0, #13
 1774 02a0 16E0     		b	.L122
 1775              	.LVL274:
 1776              	.L152:
3354:ff.c          **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1777              		.loc 1 3354 0
 1778 02a2 0D20     		movs	r0, #13
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 96


 1779              	.LVL275:
 1780 02a4 14E0     		b	.L122
 1781              	.LVL276:
 1782              	.L153:
3358:ff.c          **** 
 1783              		.loc 1 3358 0
 1784 02a6 0D20     		movs	r0, #13
 1785 02a8 12E0     		b	.L122
 1786              	.L154:
 1787 02aa 0D20     		movs	r0, #13
 1788 02ac 10E0     		b	.L122
 1789              	.L155:
3361:ff.c          **** 
 1790              		.loc 1 3361 0
 1791 02ae 0D20     		movs	r0, #13
 1792 02b0 0EE0     		b	.L122
 1793              	.LVL277:
 1794              	.L156:
3367:ff.c          **** 
 1795              		.loc 1 3367 0
 1796 02b2 0D20     		movs	r0, #13
 1797              	.LVL278:
 1798 02b4 0CE0     		b	.L122
 1799              	.LVL279:
 1800              	.L157:
3371:ff.c          **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 1801              		.loc 1 3371 0
 1802 02b6 0D20     		movs	r0, #13
 1803              	.LVL280:
 1804 02b8 0AE0     		b	.L122
 1805              	.LVL281:
 1806              	.L158:
3373:ff.c          **** 		fmt = 0;
 1807              		.loc 1 3373 0
 1808 02ba 0D20     		movs	r0, #13
 1809              	.LVL282:
 1810 02bc 08E0     		b	.L122
 1811              	.LVL283:
 1812              	.L162:
3378:ff.c          **** 
 1813              		.loc 1 3378 0
 1814 02be 0D20     		movs	r0, #13
 1815              	.LVL284:
 1816 02c0 06E0     		b	.L122
 1817              	.LVL285:
 1818              	.L163:
3386:ff.c          **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 1819              		.loc 1 3386 0
 1820 02c2 0D20     		movs	r0, #13
 1821 02c4 04E0     		b	.L122
 1822              	.L164:
3387:ff.c          **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 1823              		.loc 1 3387 0
 1824 02c6 0D20     		movs	r0, #13
 1825 02c8 02E0     		b	.L122
 1826              	.LVL286:
 1827              	.L165:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 97


3391:ff.c          **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 1828              		.loc 1 3391 0
 1829 02ca 0D20     		movs	r0, #13
 1830              	.LVL287:
 1831 02cc 00E0     		b	.L122
 1832              	.LVL288:
 1833              	.L166:
3396:ff.c          **** 
 1834              		.loc 1 3396 0
 1835 02ce 0D20     		movs	r0, #13
 1836              	.LVL289:
 1837              	.L122:
3439:ff.c          **** 
 1838              		.loc 1 3439 0
 1839 02d0 04B0     		add	sp, sp, #16
 1840              		.cfi_def_cfa_offset 32
 1841              		@ sp needed
 1842 02d2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1843              	.L169:
 1844 02d6 00BF     		.align	2
 1845              	.L168:
 1846 02d8 00000000 		.word	.LANCHOR0
 1847 02dc F5FFFF0F 		.word	268435445
 1848 02e0 52526141 		.word	1096897106
 1849 02e4 72724161 		.word	1631679090
 1850              		.cfi_endproc
 1851              	.LFE33:
 1852              		.size	find_volume, .-find_volume
 1853              		.section	.text.put_fat,"ax",%progbits
 1854              		.align	2
 1855              		.thumb
 1856              		.thumb_func
 1857              		.type	put_fat, %function
 1858              	put_fat:
 1859              	.LFB15:
1225:ff.c          **** 	UINT bc;
 1860              		.loc 1 1225 0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 0
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 1864              	.LVL290:
 1865 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1866              		.cfi_def_cfa_offset 32
 1867              		.cfi_offset 4, -32
 1868              		.cfi_offset 5, -28
 1869              		.cfi_offset 6, -24
 1870              		.cfi_offset 7, -20
 1871              		.cfi_offset 8, -16
 1872              		.cfi_offset 9, -12
 1873              		.cfi_offset 10, -8
 1874              		.cfi_offset 14, -4
 1875              	.LVL291:
1231:ff.c          **** 		switch (fs->fs_type) {
 1876              		.loc 1 1231 0
 1877 0004 0129     		cmp	r1, #1
 1878 0006 75D9     		bls	.L179
1231:ff.c          **** 		switch (fs->fs_type) {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 98


 1879              		.loc 1 1231 0 is_stmt 0 discriminator 1
 1880 0008 4369     		ldr	r3, [r0, #20]
 1881 000a 9942     		cmp	r1, r3
 1882 000c 74D2     		bcs	.L180
 1883 000e 1746     		mov	r7, r2
 1884 0010 0C46     		mov	r4, r1
 1885 0012 0646     		mov	r6, r0
1232:ff.c          **** 		case FS_FAT12 :
 1886              		.loc 1 1232 0 is_stmt 1
 1887 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1888 0016 022B     		cmp	r3, #2
 1889 0018 3ED0     		beq	.L172
 1890 001a 032B     		cmp	r3, #3
 1891 001c 4FD0     		beq	.L173
 1892 001e 012B     		cmp	r3, #1
 1893 0020 6CD1     		bne	.L182
 1894              	.LVL292:
1234:ff.c          **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1895              		.loc 1 1234 0
 1896 0022 01EB5108 		add	r8, r1, r1, lsr #1
 1897              	.LVL293:
1235:ff.c          **** 			if (res != FR_OK) break;
 1898              		.loc 1 1235 0
 1899 0026 016A     		ldr	r1, [r0, #32]
 1900              	.LVL294:
 1901 0028 01EB5821 		add	r1, r1, r8, lsr #9
 1902 002c FFF7FEFF 		bl	move_window
 1903              	.LVL295:
1236:ff.c          **** 			p = fs->win + bc++ % SS(fs);
 1904              		.loc 1 1236 0
 1905 0030 0546     		mov	r5, r0
 1906 0032 0028     		cmp	r0, #0
 1907 0034 63D1     		bne	.L171
1237:ff.c          **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Put 1st byte */
 1908              		.loc 1 1237 0
 1909 0036 06F1300A 		add	r10, r6, #48
 1910 003a 08F10109 		add	r9, r8, #1
 1911              	.LVL296:
 1912 003e C8F30808 		ubfx	r8, r8, #0, #9
 1913              	.LVL297:
1238:ff.c          **** 			fs->wflag = 1;
 1914              		.loc 1 1238 0
 1915 0042 14F00104 		ands	r4, r4, #1
 1916              	.LVL298:
 1917 0046 07D0     		beq	.L175
1238:ff.c          **** 			fs->wflag = 1;
 1918              		.loc 1 1238 0 is_stmt 0 discriminator 1
 1919 0048 1AF80830 		ldrb	r3, [r10, r8]	@ zero_extendqisi2
 1920 004c 03F00F03 		and	r3, r3, #15
 1921 0050 43EA0713 		orr	r3, r3, r7, lsl #4
 1922 0054 DBB2     		uxtb	r3, r3
 1923 0056 00E0     		b	.L176
 1924              	.L175:
1238:ff.c          **** 			fs->wflag = 1;
 1925              		.loc 1 1238 0 discriminator 2
 1926 0058 FBB2     		uxtb	r3, r7
 1927              	.L176:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 99


1238:ff.c          **** 			fs->wflag = 1;
 1928              		.loc 1 1238 0 discriminator 4
 1929 005a 0AF80830 		strb	r3, [r10, r8]
1239:ff.c          **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1930              		.loc 1 1239 0 is_stmt 1 discriminator 4
 1931 005e 0123     		movs	r3, #1
 1932 0060 F370     		strb	r3, [r6, #3]
1240:ff.c          **** 			if (res != FR_OK) break;
 1933              		.loc 1 1240 0 discriminator 4
 1934 0062 316A     		ldr	r1, [r6, #32]
 1935 0064 01EB5921 		add	r1, r1, r9, lsr #9
 1936 0068 3046     		mov	r0, r6
 1937              	.LVL299:
 1938 006a FFF7FEFF 		bl	move_window
 1939              	.LVL300:
1241:ff.c          **** 			p = fs->win + bc % SS(fs);
 1940              		.loc 1 1241 0 discriminator 4
 1941 006e 0546     		mov	r5, r0
 1942 0070 0028     		cmp	r0, #0
 1943 0072 44D1     		bne	.L171
1242:ff.c          **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte 
 1944              		.loc 1 1242 0
 1945 0074 C9F30809 		ubfx	r9, r9, #0, #9
 1946              	.LVL301:
1243:ff.c          **** 			fs->wflag = 1;
 1947              		.loc 1 1243 0
 1948 0078 14B1     		cbz	r4, .L177
1243:ff.c          **** 			fs->wflag = 1;
 1949              		.loc 1 1243 0 is_stmt 0 discriminator 1
 1950 007a C7F30712 		ubfx	r2, r7, #4, #8
 1951 007e 06E0     		b	.L178
 1952              	.L177:
1243:ff.c          **** 			fs->wflag = 1;
 1953              		.loc 1 1243 0 discriminator 2
 1954 0080 1AF80930 		ldrb	r3, [r10, r9]	@ zero_extendqisi2
 1955 0084 23F00F03 		bic	r3, r3, #15
 1956 0088 C7F30322 		ubfx	r2, r7, #8, #4
 1957 008c 1A43     		orrs	r2, r2, r3
 1958              	.L178:
1243:ff.c          **** 			fs->wflag = 1;
 1959              		.loc 1 1243 0 discriminator 4
 1960 008e 0AF80920 		strb	r2, [r10, r9]
1244:ff.c          **** 			break;
 1961              		.loc 1 1244 0 is_stmt 1 discriminator 4
 1962 0092 0123     		movs	r3, #1
 1963 0094 F370     		strb	r3, [r6, #3]
1245:ff.c          **** 
 1964              		.loc 1 1245 0 discriminator 4
 1965 0096 32E0     		b	.L171
 1966              	.LVL302:
 1967              	.L172:
1248:ff.c          **** 			if (res != FR_OK) break;
 1968              		.loc 1 1248 0
 1969 0098 016A     		ldr	r1, [r0, #32]
 1970              	.LVL303:
 1971 009a 01EB1421 		add	r1, r1, r4, lsr #8
 1972 009e FFF7FEFF 		bl	move_window
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 100


 1973              	.LVL304:
1249:ff.c          **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
 1974              		.loc 1 1249 0
 1975 00a2 0546     		mov	r5, r0
 1976 00a4 58BB     		cbnz	r0, .L171
1250:ff.c          **** 			fs->wflag = 1;
 1977              		.loc 1 1250 0
 1978 00a6 06F13000 		add	r0, r6, #48
 1979              	.LVL305:
 1980 00aa 6300     		lsls	r3, r4, #1
 1981 00ac 03F4FF73 		and	r3, r3, #510
 1982 00b0 B9B2     		uxth	r1, r7
 1983 00b2 1844     		add	r0, r0, r3
 1984 00b4 FFF7FEFF 		bl	st_word
 1985              	.LVL306:
1251:ff.c          **** 			break;
 1986              		.loc 1 1251 0
 1987 00b8 0123     		movs	r3, #1
 1988 00ba F370     		strb	r3, [r6, #3]
1252:ff.c          **** 
 1989              		.loc 1 1252 0
 1990 00bc 1FE0     		b	.L171
 1991              	.LVL307:
 1992              	.L173:
1258:ff.c          **** 			if (res != FR_OK) break;
 1993              		.loc 1 1258 0
 1994 00be 016A     		ldr	r1, [r0, #32]
 1995              	.LVL308:
 1996 00c0 01EBD411 		add	r1, r1, r4, lsr #7
 1997 00c4 FFF7FEFF 		bl	move_window
 1998              	.LVL309:
1259:ff.c          **** 			if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 1999              		.loc 1 1259 0
 2000 00c8 0546     		mov	r5, r0
 2001 00ca C0B9     		cbnz	r0, .L171
1261:ff.c          **** 			}
 2002              		.loc 1 1261 0
 2003 00cc 27F07047 		bic	r7, r7, #-268435456
 2004              	.LVL310:
 2005 00d0 06F13003 		add	r3, r6, #48
 2006 00d4 A100     		lsls	r1, r4, #2
 2007 00d6 01F4FE71 		and	r1, r1, #508
 2008 00da 5C18     		adds	r4, r3, r1
 2009              	.LVL311:
 2010 00dc 2046     		mov	r0, r4
 2011              	.LVL312:
 2012 00de FFF7FEFF 		bl	ld_dword
 2013              	.LVL313:
 2014 00e2 00F07041 		and	r1, r0, #-268435456
 2015              	.LVL314:
1263:ff.c          **** 			fs->wflag = 1;
 2016              		.loc 1 1263 0
 2017 00e6 3943     		orrs	r1, r1, r7
 2018              	.LVL315:
 2019 00e8 2046     		mov	r0, r4
 2020 00ea FFF7FEFF 		bl	st_dword
 2021              	.LVL316:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 101


1264:ff.c          **** 			break;
 2022              		.loc 1 1264 0
 2023 00ee 0123     		movs	r3, #1
 2024 00f0 F370     		strb	r3, [r6, #3]
1265:ff.c          **** 		}
 2025              		.loc 1 1265 0
 2026 00f2 04E0     		b	.L171
 2027              	.LVL317:
 2028              	.L179:
1228:ff.c          **** 
 2029              		.loc 1 1228 0
 2030 00f4 0225     		movs	r5, #2
 2031 00f6 02E0     		b	.L171
 2032              	.L180:
 2033 00f8 0225     		movs	r5, #2
 2034 00fa 00E0     		b	.L171
 2035              	.L182:
 2036 00fc 0225     		movs	r5, #2
 2037              	.LVL318:
 2038              	.L171:
1269:ff.c          **** 
 2039              		.loc 1 1269 0
 2040 00fe 2846     		mov	r0, r5
 2041 0100 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2042              		.cfi_endproc
 2043              	.LFE15:
 2044              		.size	put_fat, .-put_fat
 2045              		.section	.text.get_fat,"ax",%progbits
 2046              		.align	2
 2047              		.thumb
 2048              		.thumb_func
 2049              		.type	get_fat, %function
 2050              	get_fat:
 2051              	.LFB14:
1146:ff.c          **** 	UINT wc, bc;
 2052              		.loc 1 1146 0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 0
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 2056              	.LVL319:
 2057 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2058              		.cfi_def_cfa_offset 24
 2059              		.cfi_offset 3, -24
 2060              		.cfi_offset 4, -20
 2061              		.cfi_offset 5, -16
 2062              		.cfi_offset 6, -12
 2063              		.cfi_offset 7, -8
 2064              		.cfi_offset 14, -4
1149:ff.c          **** 
 2065              		.loc 1 1149 0
 2066 0002 0668     		ldr	r6, [r0]
 2067              	.LVL320:
1152:ff.c          **** 		val = 1;	/* Internal error */
 2068              		.loc 1 1152 0
 2069 0004 0129     		cmp	r1, #1
 2070 0006 53D9     		bls	.L190
1152:ff.c          **** 		val = 1;	/* Internal error */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 102


 2071              		.loc 1 1152 0 is_stmt 0 discriminator 1
 2072 0008 7369     		ldr	r3, [r6, #20]
 2073 000a 9942     		cmp	r1, r3
 2074 000c 52D2     		bcs	.L191
 2075 000e 0C46     		mov	r4, r1
 2076              	.LVL321:
1158:ff.c          **** 		case FS_FAT12 :
 2077              		.loc 1 1158 0 is_stmt 1
 2078 0010 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2079 0012 022B     		cmp	r3, #2
 2080 0014 2AD0     		beq	.L186
 2081 0016 032B     		cmp	r3, #3
 2082 0018 38D0     		beq	.L187
 2083 001a 012B     		cmp	r3, #1
 2084 001c 4CD1     		bne	.L197
 2085              	.LVL322:
1160:ff.c          **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2086              		.loc 1 1160 0
 2087 001e 01EB5105 		add	r5, r1, r1, lsr #1
 2088              	.LVL323:
1161:ff.c          **** 			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
 2089              		.loc 1 1161 0
 2090 0022 316A     		ldr	r1, [r6, #32]
 2091              	.LVL324:
 2092 0024 01EB5521 		add	r1, r1, r5, lsr #9
 2093 0028 3046     		mov	r0, r6
 2094              	.LVL325:
 2095 002a FFF7FEFF 		bl	move_window
 2096              	.LVL326:
 2097 002e 0028     		cmp	r0, #0
 2098 0030 44D1     		bne	.L193
1162:ff.c          **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2099              		.loc 1 1162 0
 2100 0032 6F1C     		adds	r7, r5, #1
 2101              	.LVL327:
 2102 0034 C5F30805 		ubfx	r5, r5, #0, #9
 2103 0038 3544     		add	r5, r5, r6
 2104 003a 95F83050 		ldrb	r5, [r5, #48]	@ zero_extendqisi2
 2105              	.LVL328:
1163:ff.c          **** 			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
 2106              		.loc 1 1163 0
 2107 003e 316A     		ldr	r1, [r6, #32]
 2108 0040 01EB5721 		add	r1, r1, r7, lsr #9
 2109 0044 3046     		mov	r0, r6
 2110 0046 FFF7FEFF 		bl	move_window
 2111              	.LVL329:
 2112 004a 0028     		cmp	r0, #0
 2113 004c 39D1     		bne	.L194
1164:ff.c          **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
 2114              		.loc 1 1164 0
 2115 004e C7F30803 		ubfx	r3, r7, #0, #9
 2116 0052 3344     		add	r3, r3, r6
 2117 0054 93F83000 		ldrb	r0, [r3, #48]	@ zero_extendqisi2
 2118 0058 45EA0020 		orr	r0, r5, r0, lsl #8
 2119              	.LVL330:
1165:ff.c          **** 			break;
 2120              		.loc 1 1165 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 103


 2121 005c 14F0010F 		tst	r4, #1
 2122 0060 01D0     		beq	.L189
1165:ff.c          **** 			break;
 2123              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2124 0062 0009     		lsrs	r0, r0, #4
 2125              	.LVL331:
 2126 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2127              	.LVL332:
 2128              	.L189:
1165:ff.c          **** 			break;
 2129              		.loc 1 1165 0 discriminator 2
 2130 0066 C0F30B00 		ubfx	r0, r0, #0, #12
 2131              	.LVL333:
 2132 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2133              	.LVL334:
 2134              	.L186:
1169:ff.c          **** 			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
 2135              		.loc 1 1169 0 is_stmt 1
 2136 006c 316A     		ldr	r1, [r6, #32]
 2137              	.LVL335:
 2138 006e 01EB1421 		add	r1, r1, r4, lsr #8
 2139 0072 3046     		mov	r0, r6
 2140              	.LVL336:
 2141 0074 FFF7FEFF 		bl	move_window
 2142              	.LVL337:
 2143 0078 30BB     		cbnz	r0, .L195
1170:ff.c          **** 			break;
 2144              		.loc 1 1170 0
 2145 007a 06F13000 		add	r0, r6, #48
 2146 007e 6100     		lsls	r1, r4, #1
 2147 0080 01F4FF71 		and	r1, r1, #510
 2148 0084 0844     		add	r0, r0, r1
 2149 0086 FFF7FEFF 		bl	ld_word
 2150              	.LVL338:
1171:ff.c          **** 
 2151              		.loc 1 1171 0
 2152 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2153              	.LVL339:
 2154              	.L187:
1174:ff.c          **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upp
 2155              		.loc 1 1174 0
 2156 008c 316A     		ldr	r1, [r6, #32]
 2157              	.LVL340:
 2158 008e 01EBD411 		add	r1, r1, r4, lsr #7
 2159 0092 3046     		mov	r0, r6
 2160              	.LVL341:
 2161 0094 FFF7FEFF 		bl	move_window
 2162              	.LVL342:
 2163 0098 C8B9     		cbnz	r0, .L196
1175:ff.c          **** 			break;
 2164              		.loc 1 1175 0
 2165 009a 06F13003 		add	r3, r6, #48
 2166 009e A100     		lsls	r1, r4, #2
 2167 00a0 01F4FE70 		and	r0, r1, #508
 2168 00a4 1844     		add	r0, r0, r3
 2169 00a6 FFF7FEFF 		bl	ld_dword
 2170              	.LVL343:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 104


 2171 00aa 20F07040 		bic	r0, r0, #-268435456
 2172              	.LVL344:
1176:ff.c          **** #if FF_FS_EXFAT
 2173              		.loc 1 1176 0
 2174 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2175              	.LVL345:
 2176              	.L190:
1153:ff.c          **** 
 2177              		.loc 1 1153 0
 2178 00b0 0120     		movs	r0, #1
 2179              	.LVL346:
 2180 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2181              	.LVL347:
 2182              	.L191:
 2183 00b4 0120     		movs	r0, #1
 2184              	.LVL348:
 2185 00b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2186              	.LVL349:
 2187              	.L197:
1204:ff.c          **** 		}
 2188              		.loc 1 1204 0
 2189 00b8 0120     		movs	r0, #1
 2190              	.LVL350:
 2191 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2192              	.LVL351:
 2193              	.L193:
1156:ff.c          **** 
 2194              		.loc 1 1156 0
 2195 00bc 4FF0FF30 		mov	r0, #-1
 2196 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2197              	.LVL352:
 2198              	.L194:
 2199 00c2 4FF0FF30 		mov	r0, #-1
 2200 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2201              	.LVL353:
 2202              	.L195:
 2203 00c8 4FF0FF30 		mov	r0, #-1
 2204 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2205              	.LVL354:
 2206              	.L196:
 2207 00ce 4FF0FF30 		mov	r0, #-1
 2208              	.LVL355:
1209:ff.c          **** 
 2209              		.loc 1 1209 0
 2210 00d2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2211              		.cfi_endproc
 2212              	.LFE14:
 2213              		.size	get_fat, .-get_fat
 2214              		.section	.text.dir_sdi,"ax",%progbits
 2215              		.align	2
 2216              		.thumb
 2217              		.thumb_func
 2218              		.type	dir_sdi, %function
 2219              	dir_sdi:
 2220              	.LFB19:
1688:ff.c          **** 	DWORD csz, clst;
 2221              		.loc 1 1688 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 105


 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 0
 2224              		@ frame_needed = 0, uses_anonymous_args = 0
 2225              	.LVL356:
 2226 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2227              		.cfi_def_cfa_offset 24
 2228              		.cfi_offset 4, -24
 2229              		.cfi_offset 5, -20
 2230              		.cfi_offset 6, -16
 2231              		.cfi_offset 7, -12
 2232              		.cfi_offset 8, -8
 2233              		.cfi_offset 14, -4
1690:ff.c          **** 
 2234              		.loc 1 1690 0
 2235 0004 0768     		ldr	r7, [r0]
 2236              	.LVL357:
1693:ff.c          **** 		return FR_INT_ERR;
 2237              		.loc 1 1693 0
 2238 0006 B1F5001F 		cmp	r1, #2097152
 2239 000a 3DD2     		bcs	.L206
 2240 000c 0646     		mov	r6, r0
 2241 000e 0C46     		mov	r4, r1
1693:ff.c          **** 		return FR_INT_ERR;
 2242              		.loc 1 1693 0 is_stmt 0 discriminator 1
 2243 0010 11F01F0F 		tst	r1, #31
 2244 0014 3BD1     		bne	.L207
1696:ff.c          **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2245              		.loc 1 1696 0 is_stmt 1
 2246 0016 3161     		str	r1, [r6, #16]
1697:ff.c          **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2247              		.loc 1 1697 0
 2248 0018 8568     		ldr	r5, [r0, #8]
 2249              	.LVL358:
1698:ff.c          **** 		clst = fs->dirbase;
 2250              		.loc 1 1698 0
 2251 001a 1DB9     		cbnz	r5, .L201
1698:ff.c          **** 		clst = fs->dirbase;
 2252              		.loc 1 1698 0 is_stmt 0 discriminator 1
 2253 001c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2254 001e 022B     		cmp	r3, #2
 2255 0020 00D9     		bls	.L201
1699:ff.c          **** 		if (FF_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2256              		.loc 1 1699 0 is_stmt 1
 2257 0022 7D6A     		ldr	r5, [r7, #36]
 2258              	.LVL359:
 2259              	.L201:
1703:ff.c          **** 		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
 2260              		.loc 1 1703 0
 2261 0024 35B9     		cbnz	r5, .L202
1704:ff.c          **** 		dp->sect = fs->dirbase;
 2262              		.loc 1 1704 0
 2263 0026 3B89     		ldrh	r3, [r7, #8]
 2264 0028 B3EB541F 		cmp	r3, r4, lsr #5
 2265 002c 32D9     		bls	.L208
1705:ff.c          **** 
 2266              		.loc 1 1705 0
 2267 002e 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 106


 2268 0030 B361     		str	r3, [r6, #24]
 2269 0032 1AE0     		b	.L203
 2270              	.L202:
1708:ff.c          **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2271              		.loc 1 1708 0
 2272 0034 B7F80A80 		ldrh	r8, [r7, #10]
 2273 0038 4FEA4828 		lsl	r8, r8, #9
 2274              	.LVL360:
1709:ff.c          **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2275              		.loc 1 1709 0
 2276 003c 0EE0     		b	.L204
 2277              	.LVL361:
 2278              	.L205:
1710:ff.c          **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2279              		.loc 1 1710 0
 2280 003e 2946     		mov	r1, r5
 2281 0040 3046     		mov	r0, r6
 2282 0042 FFF7FEFF 		bl	get_fat
 2283              	.LVL362:
 2284 0046 0546     		mov	r5, r0
 2285              	.LVL363:
1711:ff.c          **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2286              		.loc 1 1711 0
 2287 0048 B0F1FF3F 		cmp	r0, #-1
 2288 004c 25D0     		beq	.L209
1712:ff.c          **** 			ofs -= csz;
 2289              		.loc 1 1712 0
 2290 004e 0128     		cmp	r0, #1
 2291 0050 26D9     		bls	.L210
1712:ff.c          **** 			ofs -= csz;
 2292              		.loc 1 1712 0 is_stmt 0 discriminator 2
 2293 0052 7B69     		ldr	r3, [r7, #20]
 2294 0054 9842     		cmp	r0, r3
 2295 0056 26D2     		bcs	.L211
1713:ff.c          **** 		}
 2296              		.loc 1 1713 0 is_stmt 1
 2297 0058 C8EB0404 		rsb	r4, r8, r4
 2298              	.LVL364:
 2299              	.L204:
1709:ff.c          **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2300              		.loc 1 1709 0
 2301 005c 4445     		cmp	r4, r8
 2302 005e EED2     		bcs	.L205
1715:ff.c          **** 	}
 2303              		.loc 1 1715 0
 2304 0060 2946     		mov	r1, r5
 2305 0062 3846     		mov	r0, r7
 2306 0064 FFF7FEFF 		bl	clst2sect
 2307              	.LVL365:
 2308 0068 B061     		str	r0, [r6, #24]
 2309              	.LVL366:
 2310              	.L203:
1717:ff.c          **** 	if (dp->sect == 0) return FR_INT_ERR;
 2311              		.loc 1 1717 0
 2312 006a 7561     		str	r5, [r6, #20]
1718:ff.c          **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2313              		.loc 1 1718 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 107


 2314 006c B369     		ldr	r3, [r6, #24]
 2315 006e EBB1     		cbz	r3, .L212
1719:ff.c          **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2316              		.loc 1 1719 0
 2317 0070 03EB5423 		add	r3, r3, r4, lsr #9
 2318 0074 B361     		str	r3, [r6, #24]
1720:ff.c          **** 
 2319              		.loc 1 1720 0
 2320 0076 07F13003 		add	r3, r7, #48
 2321 007a C4F30804 		ubfx	r4, r4, #0, #9
 2322              	.LVL367:
 2323 007e 2344     		add	r3, r3, r4
 2324 0080 F361     		str	r3, [r6, #28]
1722:ff.c          **** }
 2325              		.loc 1 1722 0
 2326 0082 0020     		movs	r0, #0
 2327 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2328              	.LVL368:
 2329              	.L206:
1694:ff.c          **** 	}
 2330              		.loc 1 1694 0
 2331 0088 0220     		movs	r0, #2
 2332              	.LVL369:
 2333 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2334              	.LVL370:
 2335              	.L207:
 2336 008e 0220     		movs	r0, #2
 2337              	.LVL371:
 2338 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2339              	.LVL372:
 2340              	.L208:
1704:ff.c          **** 		dp->sect = fs->dirbase;
 2341              		.loc 1 1704 0
 2342 0094 0220     		movs	r0, #2
 2343              	.LVL373:
 2344 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2345              	.LVL374:
 2346              	.L209:
1711:ff.c          **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2347              		.loc 1 1711 0
 2348 009a 0120     		movs	r0, #1
 2349              	.LVL375:
 2350 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2351              	.LVL376:
 2352              	.L210:
1712:ff.c          **** 			ofs -= csz;
 2353              		.loc 1 1712 0
 2354 00a0 0220     		movs	r0, #2
 2355              	.LVL377:
 2356 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2357              	.LVL378:
 2358              	.L211:
 2359 00a6 0220     		movs	r0, #2
 2360              	.LVL379:
 2361 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2362              	.LVL380:
 2363              	.L212:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 108


1718:ff.c          **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2364              		.loc 1 1718 0
 2365 00ac 0220     		movs	r0, #2
1723:ff.c          **** 
 2366              		.loc 1 1723 0
 2367 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2368              		.cfi_endproc
 2369              	.LFE19:
 2370              		.size	dir_sdi, .-dir_sdi
 2371 00b2 00BF     		.section	.text.create_chain,"ax",%progbits
 2372              		.align	2
 2373              		.thumb
 2374              		.thumb_func
 2375              		.type	create_chain, %function
 2376              	create_chain:
 2377              	.LFB17:
1513:ff.c          **** 	DWORD cs, ncl, scl;
 2378              		.loc 1 1513 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382              	.LVL381:
 2383 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2384              		.cfi_def_cfa_offset 24
 2385              		.cfi_offset 4, -24
 2386              		.cfi_offset 5, -20
 2387              		.cfi_offset 6, -16
 2388              		.cfi_offset 7, -12
 2389              		.cfi_offset 8, -8
 2390              		.cfi_offset 14, -4
 2391 0004 0746     		mov	r7, r0
1516:ff.c          **** 
 2392              		.loc 1 1516 0
 2393 0006 0668     		ldr	r6, [r0]
 2394              	.LVL382:
1519:ff.c          **** 		scl = fs->last_clst;				/* Suggested cluster to start to find */
 2395              		.loc 1 1519 0
 2396 0008 8846     		mov	r8, r1
 2397 000a 29B9     		cbnz	r1, .L215
1520:ff.c          **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2398              		.loc 1 1520 0
 2399 000c F568     		ldr	r5, [r6, #12]
 2400              	.LVL383:
1521:ff.c          **** 	}
 2401              		.loc 1 1521 0
 2402 000e 7DB1     		cbz	r5, .L226
1521:ff.c          **** 	}
 2403              		.loc 1 1521 0 is_stmt 0 discriminator 2
 2404 0010 7369     		ldr	r3, [r6, #20]
 2405 0012 9D42     		cmp	r5, r3
 2406 0014 0ED2     		bcs	.L227
 2407 0016 0EE0     		b	.L216
 2408              	.LVL384:
 2409              	.L215:
1524:ff.c          **** 		if (cs < 2) return 1;				/* Test for insanity */
 2410              		.loc 1 1524 0 is_stmt 1
 2411 0018 FFF7FEFF 		bl	get_fat
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 109


 2412              	.LVL385:
1525:ff.c          **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
 2413              		.loc 1 1525 0
 2414 001c 0128     		cmp	r0, #1
 2415 001e 69D9     		bls	.L228
1526:ff.c          **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2416              		.loc 1 1526 0
 2417 0020 B0F1FF3F 		cmp	r0, #-1
 2418 0024 74D0     		beq	.L217
1527:ff.c          **** 		scl = clst;							/* Cluster to start to find */
 2419              		.loc 1 1527 0
 2420 0026 7369     		ldr	r3, [r6, #20]
 2421 0028 9842     		cmp	r0, r3
 2422 002a 71D3     		bcc	.L217
1528:ff.c          **** 	}
 2423              		.loc 1 1528 0
 2424 002c 4546     		mov	r5, r8
 2425 002e 02E0     		b	.L216
 2426              	.LVL386:
 2427              	.L226:
1521:ff.c          **** 	}
 2428              		.loc 1 1521 0
 2429 0030 0125     		movs	r5, #1
 2430              	.LVL387:
 2431 0032 00E0     		b	.L216
 2432              	.LVL388:
 2433              	.L227:
 2434 0034 0125     		movs	r5, #1
 2435              	.LVL389:
 2436              	.L216:
1530:ff.c          **** 
 2437              		.loc 1 1530 0
 2438 0036 3069     		ldr	r0, [r6, #16]
 2439 0038 0028     		cmp	r0, #0
 2440 003a 69D0     		beq	.L217
 2441              	.LVL390:
1560:ff.c          **** 			ncl = scl + 1;						/* Test if next cluster is free */
 2442              		.loc 1 1560 0
 2443 003c 4545     		cmp	r5, r8
 2444 003e 16D1     		bne	.L231
1561:ff.c          **** 			if (ncl >= fs->n_fatent) ncl = 2;
 2445              		.loc 1 1561 0
 2446 0040 6C1C     		adds	r4, r5, #1
 2447              	.LVL391:
1562:ff.c          **** 			cs = get_fat(obj, ncl);				/* Get next cluster status */
 2448              		.loc 1 1562 0
 2449 0042 7369     		ldr	r3, [r6, #20]
 2450 0044 9C42     		cmp	r4, r3
 2451 0046 00D3     		bcc	.L219
 2452 0048 0224     		movs	r4, #2
 2453              	.LVL392:
 2454              	.L219:
1563:ff.c          **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
 2455              		.loc 1 1563 0
 2456 004a 2146     		mov	r1, r4
 2457 004c 3846     		mov	r0, r7
 2458 004e FFF7FEFF 		bl	get_fat
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 110


 2459              	.LVL393:
1564:ff.c          **** 			if (cs != 0) {						/* Not free? */
 2460              		.loc 1 1564 0
 2461 0052 0128     		cmp	r0, #1
 2462 0054 5CD0     		beq	.L217
1564:ff.c          **** 			if (cs != 0) {						/* Not free? */
 2463              		.loc 1 1564 0 is_stmt 0 discriminator 2
 2464 0056 B0F1FF3F 		cmp	r0, #-1
 2465 005a 59D0     		beq	.L217
1565:ff.c          **** 				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
 2466              		.loc 1 1565 0 is_stmt 1
 2467 005c 68B1     		cbz	r0, .L218
1566:ff.c          **** 				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 2468              		.loc 1 1566 0
 2469 005e F368     		ldr	r3, [r6, #12]
 2470              	.LVL394:
1567:ff.c          **** 				ncl = 0;
 2471              		.loc 1 1567 0
 2472 0060 012B     		cmp	r3, #1
 2473 0062 06D9     		bls	.L235
1567:ff.c          **** 				ncl = 0;
 2474              		.loc 1 1567 0 is_stmt 0 discriminator 1
 2475 0064 7269     		ldr	r2, [r6, #20]
 2476 0066 9342     		cmp	r3, r2
 2477 0068 05D3     		bcc	.L236
1568:ff.c          **** 			}
 2478              		.loc 1 1568 0 is_stmt 1
 2479 006a 0024     		movs	r4, #0
 2480              	.LVL395:
 2481 006c 05E0     		b	.L218
 2482              	.LVL396:
 2483              	.L231:
1559:ff.c          **** 		if (scl == clst) {						/* Stretching an existing chain? */
 2484              		.loc 1 1559 0
 2485 006e 0024     		movs	r4, #0
 2486 0070 03E0     		b	.L218
 2487              	.LVL397:
 2488              	.L235:
1568:ff.c          **** 			}
 2489              		.loc 1 1568 0
 2490 0072 0024     		movs	r4, #0
 2491              	.LVL398:
 2492 0074 01E0     		b	.L218
 2493              	.LVL399:
 2494              	.L236:
1567:ff.c          **** 				ncl = 0;
 2495              		.loc 1 1567 0
 2496 0076 1D46     		mov	r5, r3
 2497              	.LVL400:
1568:ff.c          **** 			}
 2498              		.loc 1 1568 0
 2499 0078 0024     		movs	r4, #0
 2500              	.LVL401:
 2501              	.L218:
1571:ff.c          **** 			ncl = scl;	/* Start cluster */
 2502              		.loc 1 1571 0
 2503 007a A4B9     		cbnz	r4, .L220
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 111


 2504 007c 2C46     		mov	r4, r5
 2505              	.LVL402:
 2506              	.L222:
1574:ff.c          **** 				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2507              		.loc 1 1574 0
 2508 007e 0134     		adds	r4, r4, #1
 2509              	.LVL403:
1575:ff.c          **** 					ncl = 2;
 2510              		.loc 1 1575 0
 2511 0080 7369     		ldr	r3, [r6, #20]
 2512 0082 9C42     		cmp	r4, r3
 2513 0084 02D3     		bcc	.L221
 2514              	.LVL404:
1577:ff.c          **** 				}
 2515              		.loc 1 1577 0
 2516 0086 012D     		cmp	r5, #1
 2517 0088 37D9     		bls	.L237
1576:ff.c          **** 					if (ncl > scl) return 0;	/* No free cluster found? */
 2518              		.loc 1 1576 0
 2519 008a 0224     		movs	r4, #2
 2520              	.LVL405:
 2521              	.L221:
1579:ff.c          **** 				if (cs == 0) break;				/* Found a free cluster? */
 2522              		.loc 1 1579 0
 2523 008c 2146     		mov	r1, r4
 2524 008e 3846     		mov	r0, r7
 2525 0090 FFF7FEFF 		bl	get_fat
 2526              	.LVL406:
1580:ff.c          **** 				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
 2527              		.loc 1 1580 0
 2528 0094 38B1     		cbz	r0, .L220
1581:ff.c          **** 				if (ncl == scl) return 0;		/* No free cluster found? */
 2529              		.loc 1 1581 0
 2530 0096 0128     		cmp	r0, #1
 2531 0098 32D0     		beq	.L238
1581:ff.c          **** 				if (ncl == scl) return 0;		/* No free cluster found? */
 2532              		.loc 1 1581 0 is_stmt 0 discriminator 2
 2533 009a B0F1FF3F 		cmp	r0, #-1
 2534 009e 31D0     		beq	.L239
1582:ff.c          **** 			}
 2535              		.loc 1 1582 0 is_stmt 1
 2536 00a0 AC42     		cmp	r4, r5
 2537 00a2 ECD1     		bne	.L222
 2538 00a4 30E0     		b	.L240
 2539              	.LVL407:
 2540              	.L220:
1585:ff.c          **** 		if (res == FR_OK && clst != 0) {
 2541              		.loc 1 1585 0
 2542 00a6 4FF0FF32 		mov	r2, #-1
 2543 00aa 2146     		mov	r1, r4
 2544 00ac 3046     		mov	r0, r6
 2545 00ae FFF7FEFF 		bl	put_fat
 2546              	.LVL408:
1586:ff.c          **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
 2547              		.loc 1 1586 0
 2548 00b2 0346     		mov	r3, r0
 2549 00b4 40B9     		cbnz	r0, .L223
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 112


1586:ff.c          **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
 2550              		.loc 1 1586 0 is_stmt 0 discriminator 1
 2551 00b6 B8F1000F 		cmp	r8, #0
 2552 00ba 05D0     		beq	.L223
1587:ff.c          **** 		}
 2553              		.loc 1 1587 0 is_stmt 1
 2554 00bc 2246     		mov	r2, r4
 2555 00be 4146     		mov	r1, r8
 2556 00c0 3046     		mov	r0, r6
 2557              	.LVL409:
 2558 00c2 FFF7FEFF 		bl	put_fat
 2559              	.LVL410:
 2560 00c6 0346     		mov	r3, r0
 2561              	.LVL411:
 2562              	.L223:
1591:ff.c          **** 		fs->last_clst = ncl;
 2563              		.loc 1 1591 0
 2564 00c8 73B9     		cbnz	r3, .L224
1592:ff.c          **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 2565              		.loc 1 1592 0
 2566 00ca F460     		str	r4, [r6, #12]
1593:ff.c          **** 		fs->fsi_flag |= 1;
 2567              		.loc 1 1593 0
 2568 00cc 3269     		ldr	r2, [r6, #16]
 2569 00ce 7369     		ldr	r3, [r6, #20]
 2570              	.LVL412:
 2571 00d0 023B     		subs	r3, r3, #2
 2572 00d2 9A42     		cmp	r2, r3
 2573 00d4 01D8     		bhi	.L225
1593:ff.c          **** 		fs->fsi_flag |= 1;
 2574              		.loc 1 1593 0 is_stmt 0 discriminator 1
 2575 00d6 013A     		subs	r2, r2, #1
 2576 00d8 3261     		str	r2, [r6, #16]
 2577              	.L225:
1594:ff.c          **** 	} else {
 2578              		.loc 1 1594 0 is_stmt 1
 2579 00da 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 2580 00dc 43F00103 		orr	r3, r3, #1
 2581 00e0 3371     		strb	r3, [r6, #4]
 2582 00e2 2046     		mov	r0, r4
 2583 00e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2584              	.LVL413:
 2585              	.L224:
1596:ff.c          **** 	}
 2586              		.loc 1 1596 0
 2587 00e8 012B     		cmp	r3, #1
 2588 00ea 10D1     		bne	.L241
 2589 00ec 4FF0FF30 		mov	r0, #-1
 2590 00f0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2591              	.LVL414:
 2592              	.L228:
1525:ff.c          **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
 2593              		.loc 1 1525 0
 2594 00f4 0120     		movs	r0, #1
 2595              	.LVL415:
 2596 00f6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2597              	.LVL416:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 113


 2598              	.L237:
1577:ff.c          **** 				}
 2599              		.loc 1 1577 0
 2600 00fa 0020     		movs	r0, #0
 2601 00fc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2602              	.LVL417:
 2603              	.L238:
 2604 0100 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2605              	.LVL418:
 2606              	.L239:
 2607 0104 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2608              	.LVL419:
 2609              	.L240:
1582:ff.c          **** 			}
 2610              		.loc 1 1582 0
 2611 0108 0020     		movs	r0, #0
 2612              	.LVL420:
 2613 010a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2614              	.LVL421:
 2615              	.L241:
1596:ff.c          **** 	}
 2616              		.loc 1 1596 0
 2617 010e 0120     		movs	r0, #1
 2618              	.LVL422:
 2619              	.L217:
1600:ff.c          **** 
 2620              		.loc 1 1600 0
 2621 0110 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2622              		.cfi_endproc
 2623              	.LFE17:
 2624              		.size	create_chain, .-create_chain
 2625              		.section	.text.remove_chain,"ax",%progbits
 2626              		.align	2
 2627              		.thumb
 2628              		.thumb_func
 2629              		.type	remove_chain, %function
 2630              	remove_chain:
 2631              	.LFB16:
1419:ff.c          **** 	FRESULT res = FR_OK;
 2632              		.loc 1 1419 0
 2633              		.cfi_startproc
 2634              		@ args = 0, pretend = 0, frame = 0
 2635              		@ frame_needed = 0, uses_anonymous_args = 0
 2636              	.LVL423:
 2637 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2638              		.cfi_def_cfa_offset 24
 2639              		.cfi_offset 3, -24
 2640              		.cfi_offset 4, -20
 2641              		.cfi_offset 5, -16
 2642              		.cfi_offset 6, -12
 2643              		.cfi_offset 7, -8
 2644              		.cfi_offset 14, -4
 2645 0002 0E46     		mov	r6, r1
 2646              	.LVL424:
1422:ff.c          **** #if FF_FS_EXFAT || FF_USE_TRIM
 2647              		.loc 1 1422 0
 2648 0004 0468     		ldr	r4, [r0]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 114


 2649              	.LVL425:
1430:ff.c          **** 
 2650              		.loc 1 1430 0
 2651 0006 0129     		cmp	r1, #1
 2652 0008 2CD9     		bls	.L248
 2653 000a 0746     		mov	r7, r0
 2654 000c 1146     		mov	r1, r2
 2655              	.LVL426:
1430:ff.c          **** 
 2656              		.loc 1 1430 0 is_stmt 0 discriminator 2
 2657 000e 6369     		ldr	r3, [r4, #20]
 2658 0010 9E42     		cmp	r6, r3
 2659 0012 29D2     		bcs	.L249
1433:ff.c          **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 2660              		.loc 1 1433 0 is_stmt 1
 2661 0014 2AB1     		cbz	r2, .L247
1434:ff.c          **** 		if (res != FR_OK) return res;
 2662              		.loc 1 1434 0
 2663 0016 4FF0FF32 		mov	r2, #-1
 2664              	.LVL427:
 2665 001a 2046     		mov	r0, r4
 2666              	.LVL428:
 2667 001c FFF7FEFF 		bl	put_fat
 2668              	.LVL429:
1435:ff.c          **** 	}
 2669              		.loc 1 1435 0
 2670 0020 20BB     		cbnz	r0, .L250
 2671              	.LVL430:
 2672              	.L247:
1440:ff.c          **** 		if (nxt == 0) break;				/* Empty cluster? */
 2673              		.loc 1 1440 0
 2674 0022 3146     		mov	r1, r6
 2675 0024 3846     		mov	r0, r7
 2676 0026 FFF7FEFF 		bl	get_fat
 2677              	.LVL431:
1441:ff.c          **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 2678              		.loc 1 1441 0
 2679 002a 0546     		mov	r5, r0
 2680 002c F8B1     		cbz	r0, .L251
1442:ff.c          **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 2681              		.loc 1 1442 0
 2682 002e 0128     		cmp	r0, #1
 2683 0030 1FD0     		beq	.L252
1443:ff.c          **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2684              		.loc 1 1443 0
 2685 0032 B0F1FF3F 		cmp	r0, #-1
 2686 0036 1ED0     		beq	.L253
1445:ff.c          **** 			if (res != FR_OK) return res;
 2687              		.loc 1 1445 0
 2688 0038 0022     		movs	r2, #0
 2689 003a 3146     		mov	r1, r6
 2690 003c 2046     		mov	r0, r4
 2691              	.LVL432:
 2692 003e FFF7FEFF 		bl	put_fat
 2693              	.LVL433:
1446:ff.c          **** 		}
 2694              		.loc 1 1446 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 115


 2695 0042 D0B9     		cbnz	r0, .L254
1448:ff.c          **** 			fs->free_clst++;
 2696              		.loc 1 1448 0
 2697 0044 2369     		ldr	r3, [r4, #16]
 2698 0046 6269     		ldr	r2, [r4, #20]
 2699 0048 911E     		subs	r1, r2, #2
 2700 004a 8B42     		cmp	r3, r1
 2701 004c 05D2     		bcs	.L246
1449:ff.c          **** 			fs->fsi_flag |= 1;
 2702              		.loc 1 1449 0
 2703 004e 0133     		adds	r3, r3, #1
 2704 0050 2361     		str	r3, [r4, #16]
1450:ff.c          **** 		}
 2705              		.loc 1 1450 0
 2706 0052 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2707 0054 43F00103 		orr	r3, r3, #1
 2708 0058 2371     		strb	r3, [r4, #4]
 2709              	.L246:
 2710              	.LVL434:
1470:ff.c          **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 2711              		.loc 1 1470 0
 2712 005a 2E46     		mov	r6, r5
1471:ff.c          **** 
 2713              		.loc 1 1471 0
 2714 005c 9542     		cmp	r5, r2
 2715 005e E0D3     		bcc	.L247
1499:ff.c          **** }
 2716              		.loc 1 1499 0
 2717 0060 0020     		movs	r0, #0
 2718              	.LVL435:
 2719 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2720              	.LVL436:
 2721              	.L248:
1430:ff.c          **** 
 2722              		.loc 1 1430 0
 2723 0064 0220     		movs	r0, #2
 2724              	.LVL437:
 2725 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2726              	.LVL438:
 2727              	.L249:
 2728 0068 0220     		movs	r0, #2
 2729              	.LVL439:
 2730 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2731              	.LVL440:
 2732              	.L250:
 2733 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2734              	.LVL441:
 2735              	.L251:
1499:ff.c          **** }
 2736              		.loc 1 1499 0
 2737 006e 0020     		movs	r0, #0
 2738              	.LVL442:
 2739 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2740              	.LVL443:
 2741              	.L252:
1442:ff.c          **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 2742              		.loc 1 1442 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 116


 2743 0072 0220     		movs	r0, #2
 2744              	.LVL444:
 2745 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2746              	.LVL445:
 2747              	.L253:
1443:ff.c          **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2748              		.loc 1 1443 0
 2749 0076 0120     		movs	r0, #1
 2750              	.LVL446:
 2751 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2752              	.LVL447:
 2753              	.L254:
1500:ff.c          **** 
 2754              		.loc 1 1500 0
 2755 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2756              		.cfi_endproc
 2757              	.LFE16:
 2758              		.size	remove_chain, .-remove_chain
 2759              		.section	.text.dir_remove,"ax",%progbits
 2760              		.align	2
 2761              		.thumb
 2762              		.thumb_func
 2763              		.type	dir_remove, %function
 2764              	dir_remove:
 2765              	.LFB27:
2619:ff.c          **** 	FRESULT res;
 2766              		.loc 1 2619 0
 2767              		.cfi_startproc
 2768              		@ args = 0, pretend = 0, frame = 0
 2769              		@ frame_needed = 0, uses_anonymous_args = 0
 2770              	.LVL448:
 2771 0000 38B5     		push	{r3, r4, r5, lr}
 2772              		.cfi_def_cfa_offset 16
 2773              		.cfi_offset 3, -16
 2774              		.cfi_offset 4, -12
 2775              		.cfi_offset 5, -8
 2776              		.cfi_offset 14, -4
 2777 0002 0446     		mov	r4, r0
2621:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
 2778              		.loc 1 2621 0
 2779 0004 0568     		ldr	r5, [r0]
 2780              	.LVL449:
2643:ff.c          **** 	if (res == FR_OK) {
 2781              		.loc 1 2643 0
 2782 0006 8169     		ldr	r1, [r0, #24]
 2783 0008 2846     		mov	r0, r5
 2784              	.LVL450:
 2785 000a FFF7FEFF 		bl	move_window
 2786              	.LVL451:
2644:ff.c          **** 		dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'.*/
 2787              		.loc 1 2644 0
 2788 000e 0346     		mov	r3, r0
 2789 0010 20B9     		cbnz	r0, .L257
2645:ff.c          **** 		fs->wflag = 1;
 2790              		.loc 1 2645 0
 2791 0012 E269     		ldr	r2, [r4, #28]
 2792 0014 E521     		movs	r1, #229
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 117


 2793 0016 1170     		strb	r1, [r2]
2646:ff.c          **** 	}
 2794              		.loc 1 2646 0
 2795 0018 0122     		movs	r2, #1
 2796 001a EA70     		strb	r2, [r5, #3]
 2797              	.L257:
2651:ff.c          **** 
 2798              		.loc 1 2651 0
 2799 001c 1846     		mov	r0, r3
 2800              	.LVL452:
 2801 001e 38BD     		pop	{r3, r4, r5, pc}
 2802              		.cfi_endproc
 2803              	.LFE27:
 2804              		.size	dir_remove, .-dir_remove
 2805              		.section	.text.dir_clear,"ax",%progbits
 2806              		.align	2
 2807              		.thumb
 2808              		.thumb_func
 2809              		.type	dir_clear, %function
 2810              	dir_clear:
 2811              	.LFB18:
1648:ff.c          **** 	DWORD sect;
 2812              		.loc 1 1648 0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 0
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
 2816              	.LVL453:
 2817 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2818              		.cfi_def_cfa_offset 24
 2819              		.cfi_offset 3, -24
 2820              		.cfi_offset 4, -20
 2821              		.cfi_offset 5, -16
 2822              		.cfi_offset 6, -12
 2823              		.cfi_offset 7, -8
 2824              		.cfi_offset 14, -4
 2825 0002 0546     		mov	r5, r0
 2826 0004 0C46     		mov	r4, r1
1654:ff.c          **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
 2827              		.loc 1 1654 0
 2828 0006 FFF7FEFF 		bl	sync_window
 2829              	.LVL454:
 2830 000a 00BB     		cbnz	r0, .L264
1655:ff.c          **** 	fs->winsect = sect;				/* Set window to top of the cluster */
 2831              		.loc 1 1655 0
 2832 000c 2146     		mov	r1, r4
 2833 000e 2846     		mov	r0, r5
 2834 0010 FFF7FEFF 		bl	clst2sect
 2835              	.LVL455:
 2836 0014 0746     		mov	r7, r0
 2837              	.LVL456:
1656:ff.c          **** 	mem_set(fs->win, 0, SS(fs));	/* Clear window buffer */
 2838              		.loc 1 1656 0
 2839 0016 E862     		str	r0, [r5, #44]
1657:ff.c          **** #if FF_USE_LFN == 3		/* Quick table clear by using multi-secter write */
 2840              		.loc 1 1657 0
 2841 0018 05F13006 		add	r6, r5, #48
 2842 001c 4FF40072 		mov	r2, #512
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 118


 2843 0020 0021     		movs	r1, #0
 2844 0022 3046     		mov	r0, r6
 2845              	.LVL457:
 2846 0024 FFF7FEFF 		bl	mem_set
 2847              	.LVL458:
1670:ff.c          **** 	}
 2848              		.loc 1 1670 0
 2849 0028 0024     		movs	r4, #0
 2850              	.LVL459:
 2851 002a 00E0     		b	.L261
 2852              	.LVL460:
 2853              	.L263:
1670:ff.c          **** 	}
 2854              		.loc 1 1670 0 is_stmt 0 discriminator 4
 2855 002c 0134     		adds	r4, r4, #1
 2856              	.LVL461:
 2857              	.L261:
1670:ff.c          **** 	}
 2858              		.loc 1 1670 0 discriminator 1
 2859 002e 6B89     		ldrh	r3, [r5, #10]
 2860 0030 9C42     		cmp	r4, r3
 2861 0032 07D2     		bcs	.L262
1670:ff.c          **** 	}
 2862              		.loc 1 1670 0 discriminator 3
 2863 0034 0123     		movs	r3, #1
 2864 0036 E219     		adds	r2, r4, r7
 2865 0038 3146     		mov	r1, r6
 2866 003a 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 2867 003c FFF7FEFF 		bl	disk_write
 2868              	.LVL462:
 2869 0040 0028     		cmp	r0, #0
 2870 0042 F3D0     		beq	.L263
 2871              	.L262:
1672:ff.c          **** }
 2872              		.loc 1 1672 0 is_stmt 1
 2873 0044 6889     		ldrh	r0, [r5, #10]
 2874 0046 001B     		subs	r0, r0, r4
 2875 0048 18BF     		it	ne
 2876 004a 0120     		movne	r0, #1
 2877 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2878              	.LVL463:
 2879              	.L264:
1654:ff.c          **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
 2880              		.loc 1 1654 0
 2881 004e 0120     		movs	r0, #1
1673:ff.c          **** #endif	/* !FF_FS_READONLY */
 2882              		.loc 1 1673 0
 2883 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2884              		.cfi_endproc
 2885              	.LFE18:
 2886              		.size	dir_clear, .-dir_clear
 2887 0052 00BF     		.section	.text.dir_next,"ax",%progbits
 2888              		.align	2
 2889              		.thumb
 2890              		.thumb_func
 2891              		.type	dir_next, %function
 2892              	dir_next:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 119


 2893              	.LFB20:
1737:ff.c          **** 	DWORD ofs, clst;
 2894              		.loc 1 1737 0
 2895              		.cfi_startproc
 2896              		@ args = 0, pretend = 0, frame = 0
 2897              		@ frame_needed = 0, uses_anonymous_args = 0
 2898              	.LVL464:
 2899 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2900              		.cfi_def_cfa_offset 32
 2901              		.cfi_offset 3, -32
 2902              		.cfi_offset 4, -28
 2903              		.cfi_offset 5, -24
 2904              		.cfi_offset 6, -20
 2905              		.cfi_offset 7, -16
 2906              		.cfi_offset 8, -12
 2907              		.cfi_offset 9, -8
 2908              		.cfi_offset 14, -4
1739:ff.c          **** 
 2909              		.loc 1 1739 0
 2910 0004 0668     		ldr	r6, [r0]
 2911              	.LVL465:
1742:ff.c          **** 	if (dp->sect == 0 || ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DI
 2912              		.loc 1 1742 0
 2913 0006 0369     		ldr	r3, [r0, #16]
 2914 0008 03F12005 		add	r5, r3, #32
 2915              	.LVL466:
1743:ff.c          **** 
 2916              		.loc 1 1743 0
 2917 000c 8369     		ldr	r3, [r0, #24]
 2918 000e 002B     		cmp	r3, #0
 2919 0010 4BD0     		beq	.L272
1743:ff.c          **** 
 2920              		.loc 1 1743 0 is_stmt 0 discriminator 2
 2921 0012 B5F5001F 		cmp	r5, #2097152
 2922 0016 4BD2     		bcs	.L273
 2923 0018 8846     		mov	r8, r1
 2924 001a 0446     		mov	r4, r0
1745:ff.c          **** 		dp->sect++;				/* Next sector */
 2925              		.loc 1 1745 0 is_stmt 1
 2926 001c C5F30807 		ubfx	r7, r5, #0, #9
 2927 0020 002F     		cmp	r7, #0
 2928 0022 3BD1     		bne	.L268
1746:ff.c          **** 
 2929              		.loc 1 1746 0
 2930 0024 0133     		adds	r3, r3, #1
 2931 0026 8361     		str	r3, [r0, #24]
1748:ff.c          **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 2932              		.loc 1 1748 0
 2933 0028 4169     		ldr	r1, [r0, #20]
 2934              	.LVL467:
 2935 002a 41B9     		cbnz	r1, .L269
1749:ff.c          **** 				dp->sect = 0; return FR_NO_FILE;
 2936              		.loc 1 1749 0
 2937 002c 3389     		ldrh	r3, [r6, #8]
 2938 002e B3EB551F 		cmp	r3, r5, lsr #5
 2939 0032 33D8     		bhi	.L268
1750:ff.c          **** 			}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 120


 2940              		.loc 1 1750 0
 2941 0034 0023     		movs	r3, #0
 2942 0036 8361     		str	r3, [r0, #24]
 2943 0038 0420     		movs	r0, #4
 2944              	.LVL468:
 2945 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2946              	.LVL469:
 2947              	.L269:
1754:ff.c          **** 				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
 2948              		.loc 1 1754 0
 2949 003e 7389     		ldrh	r3, [r6, #10]
 2950 0040 013B     		subs	r3, r3, #1
 2951 0042 13EA5523 		ands	r3, r3, r5, lsr #9
 2952 0046 29D1     		bne	.L268
1755:ff.c          **** 				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
 2953              		.loc 1 1755 0
 2954 0048 FFF7FEFF 		bl	get_fat
 2955              	.LVL470:
 2956 004c 8146     		mov	r9, r0
 2957              	.LVL471:
1756:ff.c          **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2958              		.loc 1 1756 0
 2959 004e 0128     		cmp	r0, #1
 2960 0050 31D9     		bls	.L274
1757:ff.c          **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
 2961              		.loc 1 1757 0
 2962 0052 B0F1FF3F 		cmp	r0, #-1
 2963 0056 31D0     		beq	.L275
1758:ff.c          **** #if !FF_FS_READONLY
 2964              		.loc 1 1758 0
 2965 0058 7369     		ldr	r3, [r6, #20]
 2966 005a 9842     		cmp	r0, r3
 2967 005c 17D3     		bcc	.L270
1760:ff.c          **** 						dp->sect = 0; return FR_NO_FILE;
 2968              		.loc 1 1760 0
 2969 005e B8F1000F 		cmp	r8, #0
 2970 0062 04D1     		bne	.L271
1761:ff.c          **** 					}
 2971              		.loc 1 1761 0
 2972 0064 0023     		movs	r3, #0
 2973 0066 A361     		str	r3, [r4, #24]
 2974 0068 0420     		movs	r0, #4
 2975              	.LVL472:
 2976 006a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2977              	.LVL473:
 2978              	.L271:
1763:ff.c          **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 2979              		.loc 1 1763 0
 2980 006e 6169     		ldr	r1, [r4, #20]
 2981 0070 2046     		mov	r0, r4
 2982              	.LVL474:
 2983 0072 FFF7FEFF 		bl	create_chain
 2984              	.LVL475:
1764:ff.c          **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 2985              		.loc 1 1764 0
 2986 0076 8146     		mov	r9, r0
 2987 0078 18B3     		cbz	r0, .L276
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 121


1765:ff.c          **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2988              		.loc 1 1765 0
 2989 007a 0128     		cmp	r0, #1
 2990 007c 24D0     		beq	.L277
1766:ff.c          **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
 2991              		.loc 1 1766 0
 2992 007e B0F1FF3F 		cmp	r0, #-1
 2993 0082 24D0     		beq	.L278
1767:ff.c          **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
 2994              		.loc 1 1767 0
 2995 0084 0146     		mov	r1, r0
 2996 0086 3046     		mov	r0, r6
 2997              	.LVL476:
 2998 0088 FFF7FEFF 		bl	dir_clear
 2999              	.LVL477:
 3000 008c 10BB     		cbnz	r0, .L279
 3001              	.L270:
1774:ff.c          **** 				dp->sect = clst2sect(fs, clst);
 3002              		.loc 1 1774 0
 3003 008e C4F81490 		str	r9, [r4, #20]
1775:ff.c          **** 			}
 3004              		.loc 1 1775 0
 3005 0092 4946     		mov	r1, r9
 3006 0094 3046     		mov	r0, r6
 3007 0096 FFF7FEFF 		bl	clst2sect
 3008              	.LVL478:
 3009 009a A061     		str	r0, [r4, #24]
 3010              	.LVL479:
 3011              	.L268:
1779:ff.c          **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3012              		.loc 1 1779 0
 3013 009c 2561     		str	r5, [r4, #16]
1780:ff.c          **** 
 3014              		.loc 1 1780 0
 3015 009e 3036     		adds	r6, r6, #48
 3016              	.LVL480:
 3017 00a0 3E44     		add	r6, r6, r7
 3018              	.LVL481:
 3019 00a2 E661     		str	r6, [r4, #28]
1782:ff.c          **** }
 3020              		.loc 1 1782 0
 3021 00a4 0020     		movs	r0, #0
 3022 00a6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3023              	.LVL482:
 3024              	.L272:
1743:ff.c          **** 
 3025              		.loc 1 1743 0
 3026 00aa 0420     		movs	r0, #4
 3027              	.LVL483:
 3028 00ac BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3029              	.LVL484:
 3030              	.L273:
 3031 00b0 0420     		movs	r0, #4
 3032              	.LVL485:
 3033 00b2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3034              	.LVL486:
 3035              	.L274:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 122


1756:ff.c          **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3036              		.loc 1 1756 0
 3037 00b6 0220     		movs	r0, #2
 3038              	.LVL487:
 3039 00b8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3040              	.LVL488:
 3041              	.L275:
1757:ff.c          **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
 3042              		.loc 1 1757 0
 3043 00bc 0120     		movs	r0, #1
 3044              	.LVL489:
 3045 00be BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3046              	.LVL490:
 3047              	.L276:
1764:ff.c          **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3048              		.loc 1 1764 0
 3049 00c2 0720     		movs	r0, #7
 3050              	.LVL491:
 3051 00c4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3052              	.LVL492:
 3053              	.L277:
1765:ff.c          **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3054              		.loc 1 1765 0
 3055 00c8 0220     		movs	r0, #2
 3056              	.LVL493:
 3057 00ca BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3058              	.LVL494:
 3059              	.L278:
1766:ff.c          **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
 3060              		.loc 1 1766 0
 3061 00ce 0120     		movs	r0, #1
 3062              	.LVL495:
 3063 00d0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3064              	.LVL496:
 3065              	.L279:
1767:ff.c          **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
 3066              		.loc 1 1767 0
 3067 00d4 0120     		movs	r0, #1
1783:ff.c          **** 
 3068              		.loc 1 1783 0
 3069 00d6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3070              		.cfi_endproc
 3071              	.LFE20:
 3072              		.size	dir_next, .-dir_next
 3073 00da 00BF     		.section	.text.dir_find,"ax",%progbits
 3074              		.align	2
 3075              		.thumb
 3076              		.thumb_func
 3077              		.type	dir_find, %function
 3078              	dir_find:
 3079              	.LFB25:
2430:ff.c          **** 	FRESULT res;
 3080              		.loc 1 2430 0
 3081              		.cfi_startproc
 3082              		@ args = 0, pretend = 0, frame = 0
 3083              		@ frame_needed = 0, uses_anonymous_args = 0
 3084              	.LVL497:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 123


 3085 0000 70B5     		push	{r4, r5, r6, lr}
 3086              		.cfi_def_cfa_offset 16
 3087              		.cfi_offset 4, -16
 3088              		.cfi_offset 5, -12
 3089              		.cfi_offset 6, -8
 3090              		.cfi_offset 14, -4
 3091 0002 0446     		mov	r4, r0
2432:ff.c          **** 	BYTE c;
 3092              		.loc 1 2432 0
 3093 0004 0668     		ldr	r6, [r0]
 3094              	.LVL498:
2438:ff.c          **** 	if (res != FR_OK) return res;
 3095              		.loc 1 2438 0
 3096 0006 0021     		movs	r1, #0
 3097 0008 FFF7FEFF 		bl	dir_sdi
 3098              	.LVL499:
2439:ff.c          **** #if FF_FS_EXFAT
 3099              		.loc 1 2439 0
 3100 000c E8B9     		cbnz	r0, .L285
 3101              	.L284:
2465:ff.c          **** 		if (res != FR_OK) break;
 3102              		.loc 1 2465 0
 3103 000e A169     		ldr	r1, [r4, #24]
 3104 0010 3046     		mov	r0, r6
 3105              	.LVL500:
 3106 0012 FFF7FEFF 		bl	move_window
 3107              	.LVL501:
2466:ff.c          **** 		c = dp->dir[DIR_Name];
 3108              		.loc 1 2466 0
 3109 0016 0546     		mov	r5, r0
 3110 0018 C0B9     		cbnz	r0, .L286
2467:ff.c          **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3111              		.loc 1 2467 0
 3112 001a E069     		ldr	r0, [r4, #28]
 3113              	.LVL502:
 3114 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3115              	.LVL503:
2468:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
 3116              		.loc 1 2468 0
 3117 001e B3B1     		cbz	r3, .L287
2491:ff.c          **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3118              		.loc 1 2491 0
 3119 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3120              	.LVL504:
 3121 0022 03F03F03 		and	r3, r3, #63
 3122 0026 A371     		strb	r3, [r4, #6]
 3123              	.LVL505:
2492:ff.c          **** #endif
 3124              		.loc 1 2492 0
 3125 0028 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3126 002a 13F0080F 		tst	r3, #8
 3127 002e 05D1     		bne	.L283
2492:ff.c          **** #endif
 3128              		.loc 1 2492 0 is_stmt 0 discriminator 1
 3129 0030 0B22     		movs	r2, #11
 3130 0032 04F12001 		add	r1, r4, #32
 3131 0036 FFF7FEFF 		bl	mem_cmp
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 124


 3132              	.LVL506:
 3133 003a 50B1     		cbz	r0, .L288
 3134              	.L283:
2494:ff.c          **** 	} while (res == FR_OK);
 3135              		.loc 1 2494 0 is_stmt 1
 3136 003c 0021     		movs	r1, #0
 3137 003e 2046     		mov	r0, r4
 3138 0040 FFF7FEFF 		bl	dir_next
 3139              	.LVL507:
2495:ff.c          **** 
 3140              		.loc 1 2495 0
 3141 0044 0028     		cmp	r0, #0
 3142 0046 E2D0     		beq	.L284
 3143 0048 70BD     		pop	{r4, r5, r6, pc}
 3144              	.LVL508:
 3145              	.L285:
 3146 004a 70BD     		pop	{r4, r5, r6, pc}
 3147              	.LVL509:
 3148              	.L286:
 3149 004c 70BD     		pop	{r4, r5, r6, pc}
 3150              	.LVL510:
 3151              	.L287:
2468:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
 3152              		.loc 1 2468 0
 3153 004e 0420     		movs	r0, #4
 3154 0050 70BD     		pop	{r4, r5, r6, pc}
 3155              	.LVL511:
 3156              	.L288:
2465:ff.c          **** 		if (res != FR_OK) break;
 3157              		.loc 1 2465 0
 3158 0052 2846     		mov	r0, r5
2498:ff.c          **** 
 3159              		.loc 1 2498 0
 3160 0054 70BD     		pop	{r4, r5, r6, pc}
 3161              		.cfi_endproc
 3162              	.LFE25:
 3163              		.size	dir_find, .-dir_find
 3164 0056 00BF     		.section	.text.follow_path,"ax",%progbits
 3165              		.align	2
 3166              		.thumb
 3167              		.thumb_func
 3168              		.type	follow_path, %function
 3169              	follow_path:
 3170              	.LFB30:
3050:ff.c          **** 	FRESULT res;
 3171              		.loc 1 3050 0
 3172              		.cfi_startproc
 3173              		@ args = 0, pretend = 0, frame = 8
 3174              		@ frame_needed = 0, uses_anonymous_args = 0
 3175              	.LVL512:
 3176 0000 30B5     		push	{r4, r5, lr}
 3177              		.cfi_def_cfa_offset 12
 3178              		.cfi_offset 4, -12
 3179              		.cfi_offset 5, -8
 3180              		.cfi_offset 14, -4
 3181 0002 83B0     		sub	sp, sp, #12
 3182              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 125


 3183 0004 0446     		mov	r4, r0
 3184 0006 0191     		str	r1, [sp, #4]
3053:ff.c          **** 
 3185              		.loc 1 3053 0
 3186 0008 0568     		ldr	r5, [r0]
 3187              	.LVL513:
3062:ff.c          **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3188              		.loc 1 3062 0
 3189 000a 01E0     		b	.L291
 3190              	.L292:
3062:ff.c          **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3191              		.loc 1 3062 0 is_stmt 0 discriminator 4
 3192 000c 0133     		adds	r3, r3, #1
 3193 000e 0193     		str	r3, [sp, #4]
 3194              	.L291:
3062:ff.c          **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3195              		.loc 1 3062 0 discriminator 1
 3196 0010 019B     		ldr	r3, [sp, #4]
 3197 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3198 0014 2F2A     		cmp	r2, #47
 3199 0016 F9D0     		beq	.L292
3062:ff.c          **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3200              		.loc 1 3062 0 discriminator 3
 3201 0018 5C2A     		cmp	r2, #92
 3202 001a F7D0     		beq	.L292
3063:ff.c          **** 	}
 3203              		.loc 1 3063 0 is_stmt 1
 3204 001c 0022     		movs	r2, #0
 3205 001e A260     		str	r2, [r4, #8]
3082:ff.c          **** 		dp->fn[NSFLAG] = NS_NONAME;
 3206              		.loc 1 3082 0
 3207 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3208 0022 1F2B     		cmp	r3, #31
 3209 0024 08D8     		bhi	.L293
3083:ff.c          **** 		res = dir_sdi(dp, 0);
 3210              		.loc 1 3083 0
 3211 0026 8023     		movs	r3, #128
 3212 0028 84F82B30 		strb	r3, [r4, #43]
3084:ff.c          **** 
 3213              		.loc 1 3084 0
 3214 002c 1146     		mov	r1, r2
 3215              	.LVL514:
 3216 002e 2046     		mov	r0, r4
 3217              	.LVL515:
 3218 0030 FFF7FEFF 		bl	dir_sdi
 3219              	.LVL516:
 3220 0034 0346     		mov	r3, r0
 3221              	.LVL517:
 3222 0036 27E0     		b	.L294
 3223              	.LVL518:
 3224              	.L293:
3088:ff.c          **** 			if (res != FR_OK) break;
 3225              		.loc 1 3088 0
 3226 0038 01A9     		add	r1, sp, #4
 3227 003a 2046     		mov	r0, r4
 3228 003c FFF7FEFF 		bl	create_name
 3229              	.LVL519:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 126


3089:ff.c          **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3230              		.loc 1 3089 0
 3231 0040 0346     		mov	r3, r0
 3232 0042 08BB     		cbnz	r0, .L294
3090:ff.c          **** 			ns = dp->fn[NSFLAG];
 3233              		.loc 1 3090 0
 3234 0044 2046     		mov	r0, r4
 3235              	.LVL520:
 3236 0046 FFF7FEFF 		bl	dir_find
 3237              	.LVL521:
3091:ff.c          **** 			if (res != FR_OK) {				/* Failed to find the object */
 3238              		.loc 1 3091 0
 3239 004a 94F82B20 		ldrb	r2, [r4, #43]	@ zero_extendqisi2
 3240              	.LVL522:
3092:ff.c          **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3241              		.loc 1 3092 0
 3242 004e 0346     		mov	r3, r0
 3243 0050 28B1     		cbz	r0, .L295
3093:ff.c          **** 					if (FF_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3244              		.loc 1 3093 0
 3245 0052 0428     		cmp	r0, #4
 3246 0054 18D1     		bne	.L294
3099:ff.c          **** 					}
 3247              		.loc 1 3099 0
 3248 0056 12F0040F 		tst	r2, #4
 3249 005a 12D0     		beq	.L296
 3250 005c 14E0     		b	.L294
 3251              	.L295:
3104:ff.c          **** 			/* Get into the sub-directory */
 3252              		.loc 1 3104 0
 3253 005e 12F0040F 		tst	r2, #4
 3254 0062 11D1     		bne	.L294
3106:ff.c          **** 				res = FR_NO_PATH; break;
 3255              		.loc 1 3106 0
 3256 0064 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3257 0066 13F0100F 		tst	r3, #16
 3258 006a 0CD0     		beq	.L297
3118:ff.c          **** 			}
 3259              		.loc 1 3118 0
 3260 006c 05F13001 		add	r1, r5, #48
 3261 0070 2369     		ldr	r3, [r4, #16]
 3262 0072 C3F30803 		ubfx	r3, r3, #0, #9
 3263 0076 1944     		add	r1, r1, r3
 3264 0078 2846     		mov	r0, r5
 3265              	.LVL523:
 3266 007a FFF7FEFF 		bl	ld_clust
 3267              	.LVL524:
 3268 007e A060     		str	r0, [r4, #8]
3120:ff.c          **** 	}
 3269              		.loc 1 3120 0
 3270 0080 DAE7     		b	.L293
 3271              	.LVL525:
 3272              	.L296:
3099:ff.c          **** 					}
 3273              		.loc 1 3099 0
 3274 0082 0523     		movs	r3, #5
 3275 0084 00E0     		b	.L294
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 127


 3276              	.L297:
3107:ff.c          **** 			}
 3277              		.loc 1 3107 0
 3278 0086 0523     		movs	r3, #5
 3279              	.LVL526:
 3280              	.L294:
3124:ff.c          **** 
 3281              		.loc 1 3124 0
 3282 0088 1846     		mov	r0, r3
 3283 008a 03B0     		add	sp, sp, #12
 3284              		.cfi_def_cfa_offset 12
 3285              		@ sp needed
 3286 008c 30BD     		pop	{r4, r5, pc}
 3287              		.cfi_endproc
 3288              	.LFE30:
 3289              		.size	follow_path, .-follow_path
 3290 008e 00BF     		.section	.text.dir_alloc,"ax",%progbits
 3291              		.align	2
 3292              		.thumb
 3293              		.thumb_func
 3294              		.type	dir_alloc, %function
 3295              	dir_alloc:
 3296              	.LFB21:
1798:ff.c          **** 	FRESULT res;
 3297              		.loc 1 1798 0
 3298              		.cfi_startproc
 3299              		@ args = 0, pretend = 0, frame = 0
 3300              		@ frame_needed = 0, uses_anonymous_args = 0
 3301              	.LVL527:
 3302 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3303              		.cfi_def_cfa_offset 24
 3304              		.cfi_offset 3, -24
 3305              		.cfi_offset 4, -20
 3306              		.cfi_offset 5, -16
 3307              		.cfi_offset 6, -12
 3308              		.cfi_offset 7, -8
 3309              		.cfi_offset 14, -4
 3310 0002 0446     		mov	r4, r0
 3311 0004 0F46     		mov	r7, r1
1801:ff.c          **** 
 3312              		.loc 1 1801 0
 3313 0006 0668     		ldr	r6, [r0]
 3314              	.LVL528:
1804:ff.c          **** 	if (res == FR_OK) {
 3315              		.loc 1 1804 0
 3316 0008 0021     		movs	r1, #0
 3317              	.LVL529:
 3318 000a FFF7FEFF 		bl	dir_sdi
 3319              	.LVL530:
1805:ff.c          **** 		n = 0;
 3320              		.loc 1 1805 0
 3321 000e 0246     		mov	r2, r0
 3322 0010 B8B9     		cbnz	r0, .L300
 3323 0012 0025     		movs	r5, #0
 3324              	.L303:
 3325              	.LVL531:
1808:ff.c          **** 			if (res != FR_OK) break;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 128


 3326              		.loc 1 1808 0
 3327 0014 A169     		ldr	r1, [r4, #24]
 3328 0016 3046     		mov	r0, r6
 3329              	.LVL532:
 3330 0018 FFF7FEFF 		bl	move_window
 3331              	.LVL533:
1809:ff.c          **** #if FF_FS_EXFAT
 3332              		.loc 1 1809 0
 3333 001c 0246     		mov	r2, r0
 3334 001e 80B9     		cbnz	r0, .L300
1813:ff.c          **** #endif
 3335              		.loc 1 1813 0
 3336 0020 E369     		ldr	r3, [r4, #28]
 3337 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3338 0024 E52B     		cmp	r3, #229
 3339 0026 00D0     		beq	.L301
1813:ff.c          **** #endif
 3340              		.loc 1 1813 0 is_stmt 0 discriminator 1
 3341 0028 1BB9     		cbnz	r3, .L305
 3342              	.L301:
1815:ff.c          **** 			} else {
 3343              		.loc 1 1815 0 is_stmt 1
 3344 002a 0135     		adds	r5, r5, #1
 3345              	.LVL534:
 3346 002c BD42     		cmp	r5, r7
 3347 002e 01D1     		bne	.L302
 3348 0030 07E0     		b	.L300
 3349              	.L305:
1817:ff.c          **** 			}
 3350              		.loc 1 1817 0
 3351 0032 0025     		movs	r5, #0
 3352              	.LVL535:
 3353              	.L302:
1819:ff.c          **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3354              		.loc 1 1819 0
 3355 0034 0121     		movs	r1, #1
 3356 0036 2046     		mov	r0, r4
 3357              	.LVL536:
 3358 0038 FFF7FEFF 		bl	dir_next
 3359              	.LVL537:
1820:ff.c          **** 	}
 3360              		.loc 1 1820 0
 3361 003c 0246     		mov	r2, r0
 3362 003e 0028     		cmp	r0, #0
 3363 0040 E8D0     		beq	.L303
 3364              	.LVL538:
 3365              	.L300:
1823:ff.c          **** 	return res;
 3366              		.loc 1 1823 0
 3367 0042 042A     		cmp	r2, #4
 3368 0044 00D1     		bne	.L304
 3369 0046 0722     		movs	r2, #7
 3370              	.LVL539:
 3371              	.L304:
1825:ff.c          **** 
 3372              		.loc 1 1825 0
 3373 0048 1046     		mov	r0, r2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 129


 3374 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3375              		.cfi_endproc
 3376              	.LFE21:
 3377              		.size	dir_alloc, .-dir_alloc
 3378              		.section	.text.dir_register,"ax",%progbits
 3379              		.align	2
 3380              		.thumb
 3381              		.thumb_func
 3382              		.type	dir_register, %function
 3383              	dir_register:
 3384              	.LFB26:
2512:ff.c          **** 	FRESULT res;
 3385              		.loc 1 2512 0
 3386              		.cfi_startproc
 3387              		@ args = 0, pretend = 0, frame = 0
 3388              		@ frame_needed = 0, uses_anonymous_args = 0
 3389              	.LVL540:
 3390 0000 70B5     		push	{r4, r5, r6, lr}
 3391              		.cfi_def_cfa_offset 16
 3392              		.cfi_offset 4, -16
 3393              		.cfi_offset 5, -12
 3394              		.cfi_offset 6, -8
 3395              		.cfi_offset 14, -4
 3396 0002 0446     		mov	r4, r0
2514:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
 3397              		.loc 1 2514 0
 3398 0004 0668     		ldr	r6, [r0]
 3399              	.LVL541:
2586:ff.c          **** 
 3400              		.loc 1 2586 0
 3401 0006 0121     		movs	r1, #1
 3402 0008 FFF7FEFF 		bl	dir_alloc
 3403              	.LVL542:
2591:ff.c          **** 		res = move_window(fs, dp->sect);
 3404              		.loc 1 2591 0
 3405 000c 0546     		mov	r5, r0
 3406 000e 90B9     		cbnz	r0, .L309
2592:ff.c          **** 		if (res == FR_OK) {
 3407              		.loc 1 2592 0
 3408 0010 A169     		ldr	r1, [r4, #24]
 3409 0012 3046     		mov	r0, r6
 3410              	.LVL543:
 3411 0014 FFF7FEFF 		bl	move_window
 3412              	.LVL544:
2593:ff.c          **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3413              		.loc 1 2593 0
 3414 0018 0546     		mov	r5, r0
 3415 001a 60B9     		cbnz	r0, .L309
2594:ff.c          **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3416              		.loc 1 2594 0
 3417 001c 2022     		movs	r2, #32
 3418 001e 0021     		movs	r1, #0
 3419 0020 E069     		ldr	r0, [r4, #28]
 3420              	.LVL545:
 3421 0022 FFF7FEFF 		bl	mem_set
 3422              	.LVL546:
2595:ff.c          **** #if FF_USE_LFN
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 130


 3423              		.loc 1 2595 0
 3424 0026 0B22     		movs	r2, #11
 3425 0028 04F12001 		add	r1, r4, #32
 3426 002c E069     		ldr	r0, [r4, #28]
 3427 002e FFF7FEFF 		bl	mem_cpy
 3428              	.LVL547:
2599:ff.c          **** 		}
 3429              		.loc 1 2599 0
 3430 0032 0123     		movs	r3, #1
 3431 0034 F370     		strb	r3, [r6, #3]
 3432              	.L309:
 3433              	.LVL548:
2604:ff.c          **** 
 3434              		.loc 1 2604 0
 3435 0036 2846     		mov	r0, r5
 3436 0038 70BD     		pop	{r4, r5, r6, pc}
 3437              		.cfi_endproc
 3438              	.LFE26:
 3439              		.size	dir_register, .-dir_register
 3440 003a 00BF     		.section	.text.dir_read,"ax",%progbits
 3441              		.align	2
 3442              		.thumb
 3443              		.thumb_func
 3444              		.type	dir_read, %function
 3445              	dir_read:
 3446              	.LFB24:
2352:ff.c          **** 	FRESULT res = FR_NO_FILE;
 3447              		.loc 1 2352 0
 3448              		.cfi_startproc
 3449              		@ args = 0, pretend = 0, frame = 0
 3450              		@ frame_needed = 0, uses_anonymous_args = 0
 3451              	.LVL549:
 3452 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3453              		.cfi_def_cfa_offset 24
 3454              		.cfi_offset 3, -24
 3455              		.cfi_offset 4, -20
 3456              		.cfi_offset 5, -16
 3457              		.cfi_offset 6, -12
 3458              		.cfi_offset 7, -8
 3459              		.cfi_offset 14, -4
 3460 0002 0446     		mov	r4, r0
 3461 0004 0E46     		mov	r6, r1
 3462              	.LVL550:
2354:ff.c          **** 	BYTE a, c;
 3463              		.loc 1 2354 0
 3464 0006 0568     		ldr	r5, [r0]
 3465              	.LVL551:
2353:ff.c          **** 	FATFS *fs = dp->obj.fs;
 3466              		.loc 1 2353 0
 3467 0008 0427     		movs	r7, #4
2360:ff.c          **** 		res = move_window(fs, dp->sect);
 3468              		.loc 1 2360 0
 3469 000a 1FE0     		b	.L312
 3470              	.LVL552:
 3471              	.L315:
2361:ff.c          **** 		if (res != FR_OK) break;
 3472              		.loc 1 2361 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 131


 3473 000c 2846     		mov	r0, r5
 3474 000e FFF7FEFF 		bl	move_window
 3475              	.LVL553:
2362:ff.c          **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3476              		.loc 1 2362 0
 3477 0012 0746     		mov	r7, r0
 3478 0014 F8B9     		cbnz	r0, .L313
2363:ff.c          **** 		if (c == 0) {
 3479              		.loc 1 2363 0
 3480 0016 E369     		ldr	r3, [r4, #28]
 3481 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3482              	.LVL554:
2364:ff.c          **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3483              		.loc 1 2364 0
 3484 001a DAB1     		cbz	r2, .L317
2384:ff.c          **** #if FF_USE_LFN		/* LFN configuration */
 3485              		.loc 1 2384 0
 3486 001c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3487 001e 03F03F03 		and	r3, r3, #63
 3488              	.LVL555:
 3489 0022 A371     		strb	r3, [r4, #6]
2405:ff.c          **** 				break;
 3490              		.loc 1 2405 0
 3491 0024 E52A     		cmp	r2, #229
 3492 0026 0BD0     		beq	.L314
2405:ff.c          **** 				break;
 3493              		.loc 1 2405 0 is_stmt 0 discriminator 1
 3494 0028 2E2A     		cmp	r2, #46
 3495 002a 09D0     		beq	.L314
2405:ff.c          **** 				break;
 3496              		.loc 1 2405 0 discriminator 2
 3497 002c 0F2B     		cmp	r3, #15
 3498 002e 07D0     		beq	.L314
2405:ff.c          **** 				break;
 3499              		.loc 1 2405 0 discriminator 3
 3500 0030 23F02003 		bic	r3, r3, #32
 3501              	.LVL556:
 3502 0034 082B     		cmp	r3, #8
 3503 0036 14BF     		ite	ne
 3504 0038 0023     		movne	r3, #0
 3505 003a 0123     		moveq	r3, #1
 3506 003c B342     		cmp	r3, r6
 3507 003e 0AD0     		beq	.L313
 3508              	.L314:
2410:ff.c          **** 		if (res != FR_OK) break;
 3509              		.loc 1 2410 0 is_stmt 1
 3510 0040 0021     		movs	r1, #0
 3511 0042 2046     		mov	r0, r4
 3512              	.LVL557:
 3513 0044 FFF7FEFF 		bl	dir_next
 3514              	.LVL558:
2411:ff.c          **** 	}
 3515              		.loc 1 2411 0
 3516 0048 0746     		mov	r7, r0
 3517 004a 20B9     		cbnz	r0, .L313
 3518              	.LVL559:
 3519              	.L312:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 132


2360:ff.c          **** 		res = move_window(fs, dp->sect);
 3520              		.loc 1 2360 0
 3521 004c A169     		ldr	r1, [r4, #24]
 3522 004e 0029     		cmp	r1, #0
 3523 0050 DCD1     		bne	.L315
 3524 0052 00E0     		b	.L313
 3525              	.LVL560:
 3526              	.L317:
2365:ff.c          **** 		}
 3527              		.loc 1 2365 0
 3528 0054 0427     		movs	r7, #4
 3529              	.LVL561:
 3530              	.L313:
2414:ff.c          **** 	return res;
 3531              		.loc 1 2414 0
 3532 0056 0FB1     		cbz	r7, .L316
2414:ff.c          **** 	return res;
 3533              		.loc 1 2414 0 is_stmt 0 discriminator 1
 3534 0058 0023     		movs	r3, #0
 3535 005a A361     		str	r3, [r4, #24]
 3536              	.L316:
2416:ff.c          **** 
 3537              		.loc 1 2416 0 is_stmt 1
 3538 005c 3846     		mov	r0, r7
 3539 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3540              		.cfi_endproc
 3541              	.LFE24:
 3542              		.size	dir_read, .-dir_read
 3543              		.section	.text.sync_fs,"ax",%progbits
 3544              		.align	2
 3545              		.thumb
 3546              		.thumb_func
 3547              		.type	sync_fs, %function
 3548              	sync_fs:
 3549              	.LFB12:
1089:ff.c          **** 	FRESULT res;
 3550              		.loc 1 1089 0
 3551              		.cfi_startproc
 3552              		@ args = 0, pretend = 0, frame = 0
 3553              		@ frame_needed = 0, uses_anonymous_args = 0
 3554              	.LVL562:
 3555 0000 70B5     		push	{r4, r5, r6, lr}
 3556              		.cfi_def_cfa_offset 16
 3557              		.cfi_offset 4, -16
 3558              		.cfi_offset 5, -12
 3559              		.cfi_offset 6, -8
 3560              		.cfi_offset 14, -4
 3561 0002 0446     		mov	r4, r0
1093:ff.c          **** 	if (res == FR_OK) {
 3562              		.loc 1 1093 0
 3563 0004 FFF7FEFF 		bl	sync_window
 3564              	.LVL563:
1094:ff.c          **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
 3565              		.loc 1 1094 0
 3566 0008 0546     		mov	r5, r0
 3567 000a 0028     		cmp	r0, #0
 3568 000c 37D1     		bne	.L320
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 133


1095:ff.c          **** 			/* Create FSInfo structure */
 3569              		.loc 1 1095 0
 3570 000e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3571 0010 032B     		cmp	r3, #3
 3572 0012 2DD1     		bne	.L321
1095:ff.c          **** 			/* Create FSInfo structure */
 3573              		.loc 1 1095 0 is_stmt 0 discriminator 1
 3574 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3575 0016 012B     		cmp	r3, #1
 3576 0018 2AD1     		bne	.L321
1097:ff.c          **** 			st_word(fs->win + BS_55AA, 0xAA55);
 3577              		.loc 1 1097 0 is_stmt 1
 3578 001a 04F13006 		add	r6, r4, #48
 3579 001e 4FF40072 		mov	r2, #512
 3580 0022 0021     		movs	r1, #0
 3581 0024 3046     		mov	r0, r6
 3582              	.LVL564:
 3583 0026 FFF7FEFF 		bl	mem_set
 3584              	.LVL565:
1098:ff.c          **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 3585              		.loc 1 1098 0
 3586 002a 4AF65521 		movw	r1, #43605
 3587 002e 04F22E20 		addw	r0, r4, #558
 3588 0032 FFF7FEFF 		bl	st_word
 3589              	.LVL566:
1099:ff.c          **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
 3590              		.loc 1 1099 0
 3591 0036 1349     		ldr	r1, .L324
 3592 0038 3046     		mov	r0, r6
 3593 003a FFF7FEFF 		bl	st_dword
 3594              	.LVL567:
1100:ff.c          **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 3595              		.loc 1 1100 0
 3596 003e 1249     		ldr	r1, .L324+4
 3597 0040 04F50570 		add	r0, r4, #532
 3598 0044 FFF7FEFF 		bl	st_dword
 3599              	.LVL568:
1101:ff.c          **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 3600              		.loc 1 1101 0
 3601 0048 2169     		ldr	r1, [r4, #16]
 3602 004a 04F50670 		add	r0, r4, #536
 3603 004e FFF7FEFF 		bl	st_dword
 3604              	.LVL569:
1102:ff.c          **** 			/* Write it into the FSInfo sector */
 3605              		.loc 1 1102 0
 3606 0052 E168     		ldr	r1, [r4, #12]
 3607 0054 04F50770 		add	r0, r4, #540
 3608 0058 FFF7FEFF 		bl	st_dword
 3609              	.LVL570:
1104:ff.c          **** 			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 3610              		.loc 1 1104 0
 3611 005c E269     		ldr	r2, [r4, #28]
 3612 005e 0132     		adds	r2, r2, #1
 3613 0060 E262     		str	r2, [r4, #44]
1105:ff.c          **** 			fs->fsi_flag = 0;
 3614              		.loc 1 1105 0
 3615 0062 0123     		movs	r3, #1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 134


 3616 0064 3146     		mov	r1, r6
 3617 0066 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3618 0068 FFF7FEFF 		bl	disk_write
 3619              	.LVL571:
1106:ff.c          **** 		}
 3620              		.loc 1 1106 0
 3621 006c 0023     		movs	r3, #0
 3622 006e 2371     		strb	r3, [r4, #4]
 3623              	.L321:
1109:ff.c          **** 	}
 3624              		.loc 1 1109 0
 3625 0070 0022     		movs	r2, #0
 3626 0072 1146     		mov	r1, r2
 3627 0074 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3628 0076 FFF7FEFF 		bl	disk_ioctl
 3629              	.LVL572:
 3630 007a 00B1     		cbz	r0, .L320
 3631 007c 0125     		movs	r5, #1
 3632              	.L320:
 3633              	.LVL573:
1113:ff.c          **** 
 3634              		.loc 1 1113 0
 3635 007e 2846     		mov	r0, r5
 3636 0080 70BD     		pop	{r4, r5, r6, pc}
 3637              	.LVL574:
 3638              	.L325:
 3639 0082 00BF     		.align	2
 3640              	.L324:
 3641 0084 52526141 		.word	1096897106
 3642 0088 72724161 		.word	1631679090
 3643              		.cfi_endproc
 3644              	.LFE12:
 3645              		.size	sync_fs, .-sync_fs
 3646              		.section	.text.f_mount,"ax",%progbits
 3647              		.align	2
 3648              		.global	f_mount
 3649              		.thumb
 3650              		.thumb_func
 3651              		.type	f_mount, %function
 3652              	f_mount:
 3653              	.LFB35:
3477:ff.c          **** 
3478:ff.c          **** 
3479:ff.c          **** 
3480:ff.c          **** 
3481:ff.c          **** /*---------------------------------------------------------------------------
3482:ff.c          **** 
3483:ff.c          ****    Public Functions (FatFs API)
3484:ff.c          **** 
3485:ff.c          **** ----------------------------------------------------------------------------*/
3486:ff.c          **** 
3487:ff.c          **** 
3488:ff.c          **** 
3489:ff.c          **** /*-----------------------------------------------------------------------*/
3490:ff.c          **** /* Mount/Unmount a Logical Drive                                         */
3491:ff.c          **** /*-----------------------------------------------------------------------*/
3492:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 135


3493:ff.c          **** FRESULT f_mount (
3494:ff.c          **** 	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
3495:ff.c          **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3496:ff.c          **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3497:ff.c          **** )
3498:ff.c          **** {
 3654              		.loc 1 3498 0
 3655              		.cfi_startproc
 3656              		@ args = 0, pretend = 0, frame = 16
 3657              		@ frame_needed = 0, uses_anonymous_args = 0
 3658              	.LVL575:
 3659 0000 10B5     		push	{r4, lr}
 3660              		.cfi_def_cfa_offset 8
 3661              		.cfi_offset 4, -8
 3662              		.cfi_offset 14, -4
 3663 0002 84B0     		sub	sp, sp, #16
 3664              		.cfi_def_cfa_offset 24
 3665 0004 0190     		str	r0, [sp, #4]
 3666 0006 0091     		str	r1, [sp]
 3667 0008 1446     		mov	r4, r2
3499:ff.c          **** 	FATFS *cfs;
3500:ff.c          **** 	int vol;
3501:ff.c          **** 	FRESULT res;
3502:ff.c          **** 	const TCHAR *rp = path;
 3668              		.loc 1 3502 0
 3669 000a 04A8     		add	r0, sp, #16
 3670              	.LVL576:
 3671 000c 40F8041D 		str	r1, [r0, #-4]!
3503:ff.c          **** 
3504:ff.c          **** 
3505:ff.c          **** 	/* Get logical drive number */
3506:ff.c          **** 	vol = get_ldnumber(&rp);
 3672              		.loc 1 3506 0
 3673 0010 FFF7FEFF 		bl	get_ldnumber
 3674              	.LVL577:
3507:ff.c          **** 	if (vol < 0) return FR_INVALID_DRIVE;
 3675              		.loc 1 3507 0
 3676 0014 0028     		cmp	r0, #0
 3677 0016 14DB     		blt	.L330
3508:ff.c          **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3678              		.loc 1 3508 0
 3679 0018 0C4B     		ldr	r3, .L333
 3680 001a 53F82030 		ldr	r3, [r3, r0, lsl #2]
 3681              	.LVL578:
3509:ff.c          **** 
3510:ff.c          **** 	if (cfs) {
 3682              		.loc 1 3510 0
 3683 001e 0BB1     		cbz	r3, .L328
3511:ff.c          **** #if FF_FS_LOCK != 0
3512:ff.c          **** 		clear_lock(cfs);
3513:ff.c          **** #endif
3514:ff.c          **** #if FF_FS_REENTRANT						/* Discard sync object of the current volume */
3515:ff.c          **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3516:ff.c          **** #endif
3517:ff.c          **** 		cfs->fs_type = 0;				/* Clear old fs object */
 3684              		.loc 1 3517 0
 3685 0020 0022     		movs	r2, #0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 136


 3686 0022 1A70     		strb	r2, [r3]
 3687              	.L328:
3518:ff.c          **** 	}
3519:ff.c          **** 
3520:ff.c          **** 	if (fs) {
 3688              		.loc 1 3520 0
 3689 0024 019B     		ldr	r3, [sp, #4]
 3690              	.LVL579:
 3691 0026 0BB1     		cbz	r3, .L329
3521:ff.c          **** 		fs->fs_type = 0;				/* Clear new fs object */
 3692              		.loc 1 3521 0
 3693 0028 0022     		movs	r2, #0
 3694 002a 1A70     		strb	r2, [r3]
 3695              	.L329:
3522:ff.c          **** #if FF_FS_REENTRANT						/* Create sync object for the new volume */
3523:ff.c          **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3524:ff.c          **** #endif
3525:ff.c          **** 	}
3526:ff.c          **** 	FatFs[vol] = fs;					/* Register new fs object */
 3696              		.loc 1 3526 0
 3697 002c 019A     		ldr	r2, [sp, #4]
 3698 002e 074B     		ldr	r3, .L333
 3699 0030 43F82020 		str	r2, [r3, r0, lsl #2]
3527:ff.c          **** 
3528:ff.c          **** 	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
 3700              		.loc 1 3528 0
 3701 0034 3CB1     		cbz	r4, .L331
3529:ff.c          **** 
3530:ff.c          **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
 3702              		.loc 1 3530 0
 3703 0036 0022     		movs	r2, #0
 3704 0038 01A9     		add	r1, sp, #4
 3705              	.LVL580:
 3706 003a 6846     		mov	r0, sp
 3707              	.LVL581:
 3708 003c FFF7FEFF 		bl	find_volume
 3709              	.LVL582:
3531:ff.c          **** 	LEAVE_FF(fs, res);
 3710              		.loc 1 3531 0
 3711 0040 02E0     		b	.L327
 3712              	.LVL583:
 3713              	.L330:
3507:ff.c          **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3714              		.loc 1 3507 0
 3715 0042 0B20     		movs	r0, #11
 3716              	.LVL584:
 3717 0044 00E0     		b	.L327
 3718              	.LVL585:
 3719              	.L331:
3528:ff.c          **** 
 3720              		.loc 1 3528 0
 3721 0046 0020     		movs	r0, #0
 3722              	.LVL586:
 3723              	.L327:
3532:ff.c          **** }
 3724              		.loc 1 3532 0
 3725 0048 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 137


 3726              		.cfi_def_cfa_offset 8
 3727              	.LVL587:
 3728              		@ sp needed
 3729 004a 10BD     		pop	{r4, pc}
 3730              	.LVL588:
 3731              	.L334:
 3732              		.align	2
 3733              	.L333:
 3734 004c 00000000 		.word	.LANCHOR0
 3735              		.cfi_endproc
 3736              	.LFE35:
 3737              		.size	f_mount, .-f_mount
 3738              		.section	.text.f_open,"ax",%progbits
 3739              		.align	2
 3740              		.global	f_open
 3741              		.thumb
 3742              		.thumb_func
 3743              		.type	f_open, %function
 3744              	f_open:
 3745              	.LFB36:
3533:ff.c          **** 
3534:ff.c          **** 
3535:ff.c          **** 
3536:ff.c          **** 
3537:ff.c          **** /*-----------------------------------------------------------------------*/
3538:ff.c          **** /* Open or Create a File                                                 */
3539:ff.c          **** /*-----------------------------------------------------------------------*/
3540:ff.c          **** 
3541:ff.c          **** FRESULT f_open (
3542:ff.c          **** 	FIL* fp,			/* Pointer to the blank file object */
3543:ff.c          **** 	const TCHAR* path,	/* Pointer to the file name */
3544:ff.c          **** 	BYTE mode			/* Access mode and file open mode flags */
3545:ff.c          **** )
3546:ff.c          **** {
 3746              		.loc 1 3546 0
 3747              		.cfi_startproc
 3748              		@ args = 0, pretend = 0, frame = 56
 3749              		@ frame_needed = 0, uses_anonymous_args = 0
 3750              	.LVL589:
 3751 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3752              		.cfi_def_cfa_offset 24
 3753              		.cfi_offset 4, -24
 3754              		.cfi_offset 5, -20
 3755              		.cfi_offset 6, -16
 3756              		.cfi_offset 7, -12
 3757              		.cfi_offset 8, -8
 3758              		.cfi_offset 14, -4
 3759 0004 8EB0     		sub	sp, sp, #56
 3760              		.cfi_def_cfa_offset 80
 3761 0006 0191     		str	r1, [sp, #4]
3547:ff.c          **** 	FRESULT res;
3548:ff.c          **** 	DIR dj;
3549:ff.c          **** 	FATFS *fs;
3550:ff.c          **** #if !FF_FS_READONLY
3551:ff.c          **** 	DWORD dw, cl, bcs, clst, sc;
3552:ff.c          **** 	FSIZE_t ofs;
3553:ff.c          **** #endif
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 138


3554:ff.c          **** 	DEF_NAMBUF
3555:ff.c          **** 
3556:ff.c          **** 
3557:ff.c          **** 	if (!fp) return FR_INVALID_OBJECT;
 3762              		.loc 1 3557 0
 3763 0008 0028     		cmp	r0, #0
 3764 000a 00F0DA80 		beq	.L351
 3765 000e 0546     		mov	r5, r0
 3766 0010 1646     		mov	r6, r2
3558:ff.c          **** 
3559:ff.c          **** 	/* Get logical drive */
3560:ff.c          **** 	mode &= FF_FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN
 3767              		.loc 1 3560 0
 3768 0012 02F03F07 		and	r7, r2, #63
 3769              	.LVL590:
3561:ff.c          **** 	res = find_volume(&path, &fs, mode);
 3770              		.loc 1 3561 0
 3771 0016 3A46     		mov	r2, r7
 3772 0018 02A9     		add	r1, sp, #8
 3773              	.LVL591:
 3774 001a 01A8     		add	r0, sp, #4
 3775              	.LVL592:
 3776 001c FFF7FEFF 		bl	find_volume
 3777              	.LVL593:
3562:ff.c          **** 	if (res == FR_OK) {
 3778              		.loc 1 3562 0
 3779 0020 0446     		mov	r4, r0
 3780 0022 0028     		cmp	r0, #0
 3781 0024 40F0C880 		bne	.L337
3563:ff.c          **** 		dj.obj.fs = fs;
 3782              		.loc 1 3563 0
 3783 0028 029B     		ldr	r3, [sp, #8]
 3784 002a 0393     		str	r3, [sp, #12]
3564:ff.c          **** 		INIT_NAMBUF(fs);
3565:ff.c          **** 		res = follow_path(&dj, path);	/* Follow the file path */
 3785              		.loc 1 3565 0
 3786 002c 0199     		ldr	r1, [sp, #4]
 3787 002e 03A8     		add	r0, sp, #12
 3788              	.LVL594:
 3789 0030 FFF7FEFF 		bl	follow_path
 3790              	.LVL595:
3566:ff.c          **** #if !FF_FS_READONLY	/* Read/Write configuration */
3567:ff.c          **** 		if (res == FR_OK) {
 3791              		.loc 1 3567 0
 3792 0034 0446     		mov	r4, r0
 3793 0036 20B9     		cbnz	r0, .L338
3568:ff.c          **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 3794              		.loc 1 3568 0
 3795 0038 9DF93730 		ldrsb	r3, [sp, #55]
 3796 003c 002B     		cmp	r3, #0
 3797 003e 00DA     		bge	.L338
3569:ff.c          **** 				res = FR_INVALID_NAME;
 3798              		.loc 1 3569 0
 3799 0040 0624     		movs	r4, #6
 3800              	.L338:
 3801              	.LVL596:
3570:ff.c          **** 			}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 139


3571:ff.c          **** #if FF_FS_LOCK != 0
3572:ff.c          **** 			else {
3573:ff.c          **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);		/* Check if the file can be used */
3574:ff.c          **** 			}
3575:ff.c          **** #endif
3576:ff.c          **** 		}
3577:ff.c          **** 		/* Create or Open a file */
3578:ff.c          **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 3802              		.loc 1 3578 0
 3803 0042 16F01C0F 		tst	r6, #28
 3804 0046 4DD0     		beq	.L339
3579:ff.c          **** 			if (res != FR_OK) {					/* No file, create new */
 3805              		.loc 1 3579 0
 3806 0048 44B1     		cbz	r4, .L340
3580:ff.c          **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 3807              		.loc 1 3580 0
 3808 004a 042C     		cmp	r4, #4
 3809 004c 03D1     		bne	.L341
3581:ff.c          **** #if FF_FS_LOCK != 0
3582:ff.c          **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3583:ff.c          **** #else
3584:ff.c          **** 					res = dir_register(&dj);
 3810              		.loc 1 3584 0
 3811 004e 03A8     		add	r0, sp, #12
 3812 0050 FFF7FEFF 		bl	dir_register
 3813              	.LVL597:
 3814 0054 0446     		mov	r4, r0
 3815              	.LVL598:
 3816              	.L341:
3585:ff.c          **** #endif
3586:ff.c          **** 				}
3587:ff.c          **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
 3817              		.loc 1 3587 0
 3818 0056 47F00807 		orr	r7, r7, #8
 3819              	.LVL599:
 3820 005a 0BE0     		b	.L342
 3821              	.L340:
3588:ff.c          **** 			}
3589:ff.c          **** 			else {								/* Any object with the same name is already existing */
3590:ff.c          **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 3822              		.loc 1 3590 0
 3823 005c 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 3824 0060 13F0110F 		tst	r3, #17
 3825 0064 03D1     		bne	.L353
3591:ff.c          **** 					res = FR_DENIED;
3592:ff.c          **** 				} else {
3593:ff.c          **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
 3826              		.loc 1 3593 0
 3827 0066 16F0040F 		tst	r6, #4
 3828 006a 02D1     		bne	.L354
 3829 006c 02E0     		b	.L342
 3830              	.L353:
3591:ff.c          **** 					res = FR_DENIED;
 3831              		.loc 1 3591 0
 3832 006e 0724     		movs	r4, #7
 3833              	.LVL600:
 3834 0070 00E0     		b	.L342
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 140


 3835              	.LVL601:
 3836              	.L354:
 3837              		.loc 1 3593 0
 3838 0072 0824     		movs	r4, #8
 3839              	.LVL602:
 3840              	.L342:
3594:ff.c          **** 				}
3595:ff.c          **** 			}
3596:ff.c          **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
 3841              		.loc 1 3596 0
 3842 0074 002C     		cmp	r4, #0
 3843 0076 45D1     		bne	.L343
 3844              		.loc 1 3596 0 is_stmt 0 discriminator 1
 3845 0078 17F0080F 		tst	r7, #8
 3846 007c 42D0     		beq	.L343
3597:ff.c          **** #if FF_FS_EXFAT
3598:ff.c          **** 				if (fs->fs_type == FS_EXFAT) {
3599:ff.c          **** 					/* Get current allocation info */
3600:ff.c          **** 					fp->obj.fs = fs;
3601:ff.c          **** 					init_alloc_info(fs, &fp->obj);
3602:ff.c          **** 					/* Set directory entry block initial state */
3603:ff.c          **** 					mem_set(fs->dirbuf + 2, 0, 30);		/* Clear 85 entry except for NumSec */
3604:ff.c          **** 					mem_set(fs->dirbuf + 38, 0, 26);	/* Clear C0 entry except for NumName and NameHash */
3605:ff.c          **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;
3606:ff.c          **** 					st_dword(fs->dirbuf + XDIR_CrtTime, GET_FATTIME());
3607:ff.c          **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3608:ff.c          **** 					res = store_xdir(&dj);
3609:ff.c          **** 					if (res == FR_OK && fp->obj.sclust != 0) {	/* Remove the cluster chain if exist */
3610:ff.c          **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3611:ff.c          **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3612:ff.c          **** 					}
3613:ff.c          **** 				} else
3614:ff.c          **** #endif
3615:ff.c          **** 				{
3616:ff.c          **** 					/* Set directory entry initial state */
3617:ff.c          **** 					cl = ld_clust(fs, dj.dir);			/* Get current cluster chain */
 3847              		.loc 1 3617 0 is_stmt 1
 3848 007e 0A9E     		ldr	r6, [sp, #40]
 3849 0080 3146     		mov	r1, r6
 3850 0082 0298     		ldr	r0, [sp, #8]
 3851 0084 FFF7FEFF 		bl	ld_clust
 3852              	.LVL603:
 3853 0088 8046     		mov	r8, r0
 3854              	.LVL604:
3618:ff.c          **** 					st_dword(dj.dir + DIR_CrtTime, GET_FATTIME());	/* Set created time */
 3855              		.loc 1 3618 0
 3856 008a FFF7FEFF 		bl	get_fattime
 3857              	.LVL605:
 3858 008e 0146     		mov	r1, r0
 3859 0090 06F10E00 		add	r0, r6, #14
 3860 0094 FFF7FEFF 		bl	st_dword
 3861              	.LVL606:
3619:ff.c          **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 3862              		.loc 1 3619 0
 3863 0098 2022     		movs	r2, #32
 3864 009a 0A9B     		ldr	r3, [sp, #40]
 3865 009c DA72     		strb	r2, [r3, #11]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 141


3620:ff.c          **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 3866              		.loc 1 3620 0
 3867 009e 0022     		movs	r2, #0
 3868 00a0 0A99     		ldr	r1, [sp, #40]
 3869 00a2 0298     		ldr	r0, [sp, #8]
 3870 00a4 FFF7FEFF 		bl	st_clust
 3871              	.LVL607:
3621:ff.c          **** 					st_dword(dj.dir + DIR_FileSize, 0);
 3872              		.loc 1 3621 0
 3873 00a8 0021     		movs	r1, #0
 3874 00aa 0A98     		ldr	r0, [sp, #40]
 3875 00ac 1C30     		adds	r0, r0, #28
 3876 00ae FFF7FEFF 		bl	st_dword
 3877              	.LVL608:
3622:ff.c          **** 					fs->wflag = 1;
 3878              		.loc 1 3622 0
 3879 00b2 0122     		movs	r2, #1
 3880 00b4 029B     		ldr	r3, [sp, #8]
 3881 00b6 DA70     		strb	r2, [r3, #3]
3623:ff.c          **** 					if (cl != 0) {						/* Remove the cluster chain if exist */
 3882              		.loc 1 3623 0
 3883 00b8 B8F1000F 		cmp	r8, #0
 3884 00bc 22D0     		beq	.L343
3624:ff.c          **** 						dw = fs->winsect;
 3885              		.loc 1 3624 0
 3886 00be 029B     		ldr	r3, [sp, #8]
 3887 00c0 DE6A     		ldr	r6, [r3, #44]
 3888              	.LVL609:
3625:ff.c          **** 						res = remove_chain(&dj.obj, cl, 0);
 3889              		.loc 1 3625 0
 3890 00c2 0022     		movs	r2, #0
 3891 00c4 4146     		mov	r1, r8
 3892 00c6 03A8     		add	r0, sp, #12
 3893 00c8 FFF7FEFF 		bl	remove_chain
 3894              	.LVL610:
3626:ff.c          **** 						if (res == FR_OK) {
 3895              		.loc 1 3626 0
 3896 00cc 0446     		mov	r4, r0
 3897 00ce C8B9     		cbnz	r0, .L343
3627:ff.c          **** 							res = move_window(fs, dw);
 3898              		.loc 1 3627 0
 3899 00d0 3146     		mov	r1, r6
 3900 00d2 0298     		ldr	r0, [sp, #8]
 3901              	.LVL611:
 3902 00d4 FFF7FEFF 		bl	move_window
 3903              	.LVL612:
 3904 00d8 0446     		mov	r4, r0
 3905              	.LVL613:
3628:ff.c          **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 3906              		.loc 1 3628 0
 3907 00da 08F1FF33 		add	r3, r8, #-1
 3908 00de 029A     		ldr	r2, [sp, #8]
 3909 00e0 D360     		str	r3, [r2, #12]
 3910 00e2 0FE0     		b	.L343
 3911              	.LVL614:
 3912              	.L339:
3629:ff.c          **** 						}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 142


3630:ff.c          **** 					}
3631:ff.c          **** 				}
3632:ff.c          **** 			}
3633:ff.c          **** 		}
3634:ff.c          **** 		else {	/* Open an existing file */
3635:ff.c          **** 			if (res == FR_OK) {					/* Is the object exsiting? */
 3913              		.loc 1 3635 0
 3914 00e4 74B9     		cbnz	r4, .L343
3636:ff.c          **** 				if (dj.obj.attr & AM_DIR) {		/* File open against a directory */
 3915              		.loc 1 3636 0
 3916 00e6 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 3917 00ea 13F0100F 		tst	r3, #16
 3918 00ee 06D1     		bne	.L355
3637:ff.c          **** 					res = FR_NO_FILE;
3638:ff.c          **** 				} else {
3639:ff.c          **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* Write mode open against R/O file */
 3919              		.loc 1 3639 0
 3920 00f0 16F0020F 		tst	r6, #2
 3921 00f4 06D0     		beq	.L343
 3922              		.loc 1 3639 0 is_stmt 0 discriminator 1
 3923 00f6 13F0010F 		tst	r3, #1
 3924 00fa 02D1     		bne	.L356
 3925 00fc 02E0     		b	.L343
 3926              	.L355:
3637:ff.c          **** 					res = FR_NO_FILE;
 3927              		.loc 1 3637 0 is_stmt 1
 3928 00fe 0424     		movs	r4, #4
 3929              	.LVL615:
 3930 0100 00E0     		b	.L343
 3931              	.LVL616:
 3932              	.L356:
3640:ff.c          **** 						res = FR_DENIED;
 3933              		.loc 1 3640 0
 3934 0102 0724     		movs	r4, #7
 3935              	.LVL617:
 3936              	.L343:
3641:ff.c          **** 					}
3642:ff.c          **** 				}
3643:ff.c          **** 			}
3644:ff.c          **** 		}
3645:ff.c          **** 		if (res == FR_OK) {
 3937              		.loc 1 3645 0
 3938 0104 4CB9     		cbnz	r4, .L344
3646:ff.c          **** 			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwrit
 3939              		.loc 1 3646 0
 3940 0106 17F0080F 		tst	r7, #8
 3941 010a 01D0     		beq	.L345
 3942              		.loc 1 3646 0 is_stmt 0 discriminator 1
 3943 010c 47F04007 		orr	r7, r7, #64
 3944              	.LVL618:
 3945              	.L345:
3647:ff.c          **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 3946              		.loc 1 3647 0 is_stmt 1
 3947 0110 029B     		ldr	r3, [sp, #8]
 3948 0112 DB6A     		ldr	r3, [r3, #44]
 3949 0114 2B62     		str	r3, [r5, #32]
3648:ff.c          **** 			fp->dir_ptr = dj.dir;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 143


 3950              		.loc 1 3648 0
 3951 0116 0A9B     		ldr	r3, [sp, #40]
 3952 0118 6B62     		str	r3, [r5, #36]
 3953              	.L344:
3649:ff.c          **** #if FF_FS_LOCK != 0
3650:ff.c          **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);	/* Lock the file for this session */
3651:ff.c          **** 			if (fp->obj.lockid == 0) res = FR_INT_ERR;
3652:ff.c          **** #endif
3653:ff.c          **** 		}
3654:ff.c          **** #else		/* R/O configuration */
3655:ff.c          **** 		if (res == FR_OK) {
3656:ff.c          **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Is it origin directory itself? */
3657:ff.c          **** 				res = FR_INVALID_NAME;
3658:ff.c          **** 			} else {
3659:ff.c          **** 				if (dj.obj.attr & AM_DIR) {		/* Is it a directory? */
3660:ff.c          **** 					res = FR_NO_FILE;
3661:ff.c          **** 				}
3662:ff.c          **** 			}
3663:ff.c          **** 		}
3664:ff.c          **** #endif
3665:ff.c          **** 
3666:ff.c          **** 		if (res == FR_OK) {
 3954              		.loc 1 3666 0
 3955 011a 002C     		cmp	r4, #0
 3956 011c 4CD1     		bne	.L337
3667:ff.c          **** #if FF_FS_EXFAT
3668:ff.c          **** 			if (fs->fs_type == FS_EXFAT) {
3669:ff.c          **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3670:ff.c          **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3671:ff.c          **** 				fp->obj.c_ofs = dj.blk_ofs;
3672:ff.c          **** 				init_alloc_info(fs, &fp->obj);
3673:ff.c          **** 			} else
3674:ff.c          **** #endif
3675:ff.c          **** 			{
3676:ff.c          **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
 3957              		.loc 1 3676 0
 3958 011e 029E     		ldr	r6, [sp, #8]
 3959 0120 DDF82880 		ldr	r8, [sp, #40]
 3960 0124 4146     		mov	r1, r8
 3961 0126 3046     		mov	r0, r6
 3962 0128 FFF7FEFF 		bl	ld_clust
 3963              	.LVL619:
 3964 012c A860     		str	r0, [r5, #8]
3677:ff.c          **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 3965              		.loc 1 3677 0
 3966 012e 08F11C00 		add	r0, r8, #28
 3967 0132 FFF7FEFF 		bl	ld_dword
 3968              	.LVL620:
 3969 0136 E860     		str	r0, [r5, #12]
3678:ff.c          **** 			}
3679:ff.c          **** #if FF_USE_FASTSEEK
3680:ff.c          **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3681:ff.c          **** #endif
3682:ff.c          **** 			fp->obj.fs = fs;	 	/* Validate the file object */
 3970              		.loc 1 3682 0
 3971 0138 2E60     		str	r6, [r5]
3683:ff.c          **** 			fp->obj.id = fs->id;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 144


 3972              		.loc 1 3683 0
 3973 013a F388     		ldrh	r3, [r6, #6]
 3974 013c AB80     		strh	r3, [r5, #4]	@ movhi
3684:ff.c          **** 			fp->flag = mode;		/* Set file access mode */
 3975              		.loc 1 3684 0
 3976 013e 2F74     		strb	r7, [r5, #16]
3685:ff.c          **** 			fp->err = 0;			/* Clear error flag */
 3977              		.loc 1 3685 0
 3978 0140 0021     		movs	r1, #0
 3979 0142 6974     		strb	r1, [r5, #17]
3686:ff.c          **** 			fp->sect = 0;			/* Invalidate current data sector */
 3980              		.loc 1 3686 0
 3981 0144 E961     		str	r1, [r5, #28]
3687:ff.c          **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 3982              		.loc 1 3687 0
 3983 0146 6961     		str	r1, [r5, #20]
3688:ff.c          **** #if !FF_FS_READONLY
3689:ff.c          **** #if !FF_FS_TINY
3690:ff.c          **** 			mem_set(fp->buf, 0, FF_MAX_SS);	/* Clear sector buffer */
 3984              		.loc 1 3690 0
 3985 0148 05F12808 		add	r8, r5, #40
 3986 014c 4FF40072 		mov	r2, #512
 3987 0150 4046     		mov	r0, r8
 3988 0152 FFF7FEFF 		bl	mem_set
 3989              	.LVL621:
3691:ff.c          **** #endif
3692:ff.c          **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
 3990              		.loc 1 3692 0
 3991 0156 17F0200F 		tst	r7, #32
 3992 015a 2DD0     		beq	.L337
 3993              		.loc 1 3692 0 is_stmt 0 discriminator 1
 3994 015c EE68     		ldr	r6, [r5, #12]
 3995 015e 5EB3     		cbz	r6, .L337
3693:ff.c          **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 3996              		.loc 1 3693 0 is_stmt 1
 3997 0160 6E61     		str	r6, [r5, #20]
3694:ff.c          **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 3998              		.loc 1 3694 0
 3999 0162 029B     		ldr	r3, [sp, #8]
 4000 0164 5F89     		ldrh	r7, [r3, #10]
 4001              	.LVL622:
 4002 0166 7F02     		lsls	r7, r7, #9
 4003              	.LVL623:
3695:ff.c          **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4004              		.loc 1 3695 0
 4005 0168 A968     		ldr	r1, [r5, #8]
 4006              	.LVL624:
3696:ff.c          **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4007              		.loc 1 3696 0
 4008 016a 0BE0     		b	.L346
 4009              	.L350:
3697:ff.c          **** 					clst = get_fat(&fp->obj, clst);
 4010              		.loc 1 3697 0
 4011 016c 2846     		mov	r0, r5
 4012 016e FFF7FEFF 		bl	get_fat
 4013              	.LVL625:
 4014 0172 0146     		mov	r1, r0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 145


 4015              	.LVL626:
3698:ff.c          **** 					if (clst <= 1) res = FR_INT_ERR;
 4016              		.loc 1 3698 0
 4017 0174 0128     		cmp	r0, #1
 4018 0176 00D8     		bhi	.L347
 4019 0178 0224     		movs	r4, #2
 4020              	.LVL627:
 4021              	.L347:
3699:ff.c          **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4022              		.loc 1 3699 0
 4023 017a B1F1FF3F 		cmp	r1, #-1
 4024 017e 00D1     		bne	.L348
 4025 0180 0124     		movs	r4, #1
 4026              	.LVL628:
 4027              	.L348:
3696:ff.c          **** 					clst = get_fat(&fp->obj, clst);
 4028              		.loc 1 3696 0 discriminator 2
 4029 0182 F61B     		subs	r6, r6, r7
 4030              	.LVL629:
 4031              	.L346:
3696:ff.c          **** 					clst = get_fat(&fp->obj, clst);
 4032              		.loc 1 3696 0 is_stmt 0 discriminator 1
 4033 0184 0CB9     		cbnz	r4, .L349
3696:ff.c          **** 					clst = get_fat(&fp->obj, clst);
 4034              		.loc 1 3696 0 discriminator 3
 4035 0186 BE42     		cmp	r6, r7
 4036 0188 F0D8     		bhi	.L350
 4037              	.L349:
3700:ff.c          **** 				}
3701:ff.c          **** 				fp->clust = clst;
 4038              		.loc 1 3701 0 is_stmt 1
 4039 018a A961     		str	r1, [r5, #24]
3702:ff.c          **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4040              		.loc 1 3702 0
 4041 018c A4B9     		cbnz	r4, .L337
 4042              		.loc 1 3702 0 is_stmt 0 discriminator 1
 4043 018e C6F30803 		ubfx	r3, r6, #0, #9
 4044 0192 8BB1     		cbz	r3, .L337
3703:ff.c          **** 					if ((sc = clst2sect(fs, clst)) == 0) {
 4045              		.loc 1 3703 0 is_stmt 1
 4046 0194 029F     		ldr	r7, [sp, #8]
 4047              	.LVL630:
 4048 0196 3846     		mov	r0, r7
 4049 0198 FFF7FEFF 		bl	clst2sect
 4050              	.LVL631:
 4051 019c 48B1     		cbz	r0, .L359
3704:ff.c          **** 						res = FR_INT_ERR;
3705:ff.c          **** 					} else {
3706:ff.c          **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
 4052              		.loc 1 3706 0
 4053 019e 00EB5622 		add	r2, r0, r6, lsr #9
 4054 01a2 EA61     		str	r2, [r5, #28]
3707:ff.c          **** #if !FF_FS_TINY
3708:ff.c          **** 						if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
 4055              		.loc 1 3708 0
 4056 01a4 0123     		movs	r3, #1
 4057 01a6 4146     		mov	r1, r8
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 146


 4058 01a8 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 4059              	.LVL632:
 4060 01aa FFF7FEFF 		bl	disk_read
 4061              	.LVL633:
 4062 01ae 10B9     		cbnz	r0, .L360
 4063 01b0 02E0     		b	.L337
 4064              	.LVL634:
 4065              	.L359:
3704:ff.c          **** 						res = FR_INT_ERR;
 4066              		.loc 1 3704 0
 4067 01b2 0224     		movs	r4, #2
 4068              	.LVL635:
 4069 01b4 00E0     		b	.L337
 4070              	.LVL636:
 4071              	.L360:
 4072              		.loc 1 3708 0
 4073 01b6 0124     		movs	r4, #1
 4074              	.LVL637:
 4075              	.L337:
3709:ff.c          **** #endif
3710:ff.c          **** 					}
3711:ff.c          **** 				}
3712:ff.c          **** 			}
3713:ff.c          **** #endif
3714:ff.c          **** 		}
3715:ff.c          **** 
3716:ff.c          **** 		FREE_NAMBUF();
3717:ff.c          **** 	}
3718:ff.c          **** 
3719:ff.c          **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
 4076              		.loc 1 3719 0
 4077 01b8 2CB1     		cbz	r4, .L361
 4078              		.loc 1 3719 0 is_stmt 0 discriminator 1
 4079 01ba 0023     		movs	r3, #0
 4080 01bc 2B60     		str	r3, [r5]
3720:ff.c          **** 
3721:ff.c          **** 	LEAVE_FF(fs, res);
 4081              		.loc 1 3721 0 is_stmt 1 discriminator 1
 4082 01be 2046     		mov	r0, r4
 4083 01c0 02E0     		b	.L336
 4084              	.LVL638:
 4085              	.L351:
3557:ff.c          **** 
 4086              		.loc 1 3557 0
 4087 01c2 0920     		movs	r0, #9
 4088              	.LVL639:
 4089 01c4 00E0     		b	.L336
 4090              	.LVL640:
 4091              	.L361:
 4092              		.loc 1 3721 0
 4093 01c6 2046     		mov	r0, r4
 4094              	.LVL641:
 4095              	.L336:
3722:ff.c          **** }
 4096              		.loc 1 3722 0
 4097 01c8 0EB0     		add	sp, sp, #56
 4098              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 147


 4099              		@ sp needed
 4100 01ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4101              		.cfi_endproc
 4102              	.LFE36:
 4103              		.size	f_open, .-f_open
 4104 01ce 00BF     		.section	.text.f_read,"ax",%progbits
 4105              		.align	2
 4106              		.global	f_read
 4107              		.thumb
 4108              		.thumb_func
 4109              		.type	f_read, %function
 4110              	f_read:
 4111              	.LFB37:
3723:ff.c          **** 
3724:ff.c          **** 
3725:ff.c          **** 
3726:ff.c          **** 
3727:ff.c          **** /*-----------------------------------------------------------------------*/
3728:ff.c          **** /* Read File                                                             */
3729:ff.c          **** /*-----------------------------------------------------------------------*/
3730:ff.c          **** 
3731:ff.c          **** FRESULT f_read (
3732:ff.c          **** 	FIL* fp, 	/* Pointer to the file object */
3733:ff.c          **** 	void* buff,	/* Pointer to data buffer */
3734:ff.c          **** 	UINT btr,	/* Number of bytes to read */
3735:ff.c          **** 	UINT* br	/* Pointer to number of bytes read */
3736:ff.c          **** )
3737:ff.c          **** {
 4112              		.loc 1 3737 0
 4113              		.cfi_startproc
 4114              		@ args = 0, pretend = 0, frame = 16
 4115              		@ frame_needed = 0, uses_anonymous_args = 0
 4116              	.LVL642:
 4117 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4118              		.cfi_def_cfa_offset 36
 4119              		.cfi_offset 4, -36
 4120              		.cfi_offset 5, -32
 4121              		.cfi_offset 6, -28
 4122              		.cfi_offset 7, -24
 4123              		.cfi_offset 8, -20
 4124              		.cfi_offset 9, -16
 4125              		.cfi_offset 10, -12
 4126              		.cfi_offset 11, -8
 4127              		.cfi_offset 14, -4
 4128 0004 85B0     		sub	sp, sp, #20
 4129              		.cfi_def_cfa_offset 56
 4130 0006 0446     		mov	r4, r0
 4131 0008 8846     		mov	r8, r1
 4132 000a 1546     		mov	r5, r2
 4133 000c 1F46     		mov	r7, r3
 4134              	.LVL643:
3738:ff.c          **** 	FRESULT res;
3739:ff.c          **** 	FATFS *fs;
3740:ff.c          **** 	DWORD clst, sect;
3741:ff.c          **** 	FSIZE_t remain;
3742:ff.c          **** 	UINT rcnt, cc, csect;
3743:ff.c          **** 	BYTE *rbuff = (BYTE*)buff;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 148


3744:ff.c          **** 
3745:ff.c          **** 
3746:ff.c          **** 	*br = 0;	/* Clear read byte counter */
 4135              		.loc 1 3746 0
 4136 000e 0023     		movs	r3, #0
 4137              	.LVL644:
 4138 0010 3B60     		str	r3, [r7]
3747:ff.c          **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4139              		.loc 1 3747 0
 4140 0012 0190     		str	r0, [sp, #4]
 4141 0014 03A9     		add	r1, sp, #12
 4142              	.LVL645:
 4143 0016 FFF7FEFF 		bl	validate
 4144              	.LVL646:
3748:ff.c          **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4145              		.loc 1 3748 0
 4146 001a 0028     		cmp	r0, #0
 4147 001c 40F0A580 		bne	.L384
 4148              		.loc 1 3748 0 is_stmt 0 discriminator 2
 4149 0020 607C     		ldrb	r0, [r4, #17]	@ zero_extendqisi2
 4150              	.LVL647:
 4151 0022 0028     		cmp	r0, #0
 4152 0024 40F0A380 		bne	.L364
3749:ff.c          **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4153              		.loc 1 3749 0 is_stmt 1
 4154 0028 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4155 002a 13F0010F 		tst	r3, #1
 4156 002e 00F09D80 		beq	.L386
3750:ff.c          **** 	remain = fp->obj.objsize - fp->fptr;
 4157              		.loc 1 3750 0
 4158 0032 E668     		ldr	r6, [r4, #12]
 4159 0034 6369     		ldr	r3, [r4, #20]
 4160 0036 F61A     		subs	r6, r6, r3
 4161              	.LVL648:
3751:ff.c          **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4162              		.loc 1 3751 0
 4163 0038 AE42     		cmp	r6, r5
 4164 003a C0F09180 		bcc	.L366
 4165 003e 2E46     		mov	r6, r5
 4166              	.LVL649:
 4167 0040 8EE0     		b	.L366
 4168              	.LVL650:
 4169              	.L383:
3752:ff.c          **** 
3753:ff.c          **** 	for ( ;  btr;								/* Repeat until all data read */
3754:ff.c          **** 		btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {
3755:ff.c          **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4170              		.loc 1 3755 0
 4171 0042 6369     		ldr	r3, [r4, #20]
 4172 0044 C3F30802 		ubfx	r2, r3, #0, #9
 4173 0048 002A     		cmp	r2, #0
 4174 004a 72D1     		bne	.L367
3756:ff.c          **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 4175              		.loc 1 3756 0
 4176 004c 039A     		ldr	r2, [sp, #12]
 4177 004e B2F80A90 		ldrh	r9, [r2, #10]
 4178 0052 09F1FF39 		add	r9, r9, #-1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 149


 4179              	.LVL651:
3757:ff.c          **** 			if (csect == 0) {					/* On the cluster boundary? */
 4180              		.loc 1 3757 0
 4181 0056 19EA5329 		ands	r9, r9, r3, lsr #9
 4182              	.LVL652:
 4183 005a 12D1     		bne	.L368
3758:ff.c          **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4184              		.loc 1 3758 0
 4185 005c 0BB9     		cbnz	r3, .L369
3759:ff.c          **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 4186              		.loc 1 3759 0
 4187 005e A068     		ldr	r0, [r4, #8]
 4188              	.LVL653:
 4189 0060 03E0     		b	.L370
 4190              	.LVL654:
 4191              	.L369:
3760:ff.c          **** 				} else {						/* Middle or end of the file */
3761:ff.c          **** #if FF_USE_FASTSEEK
3762:ff.c          **** 					if (fp->cltbl) {
3763:ff.c          **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3764:ff.c          **** 					} else
3765:ff.c          **** #endif
3766:ff.c          **** 					{
3767:ff.c          **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
 4192              		.loc 1 3767 0
 4193 0062 A169     		ldr	r1, [r4, #24]
 4194 0064 0198     		ldr	r0, [sp, #4]
 4195 0066 FFF7FEFF 		bl	get_fat
 4196              	.LVL655:
 4197              	.L370:
3768:ff.c          **** 					}
3769:ff.c          **** 				}
3770:ff.c          **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
 4198              		.loc 1 3770 0
 4199 006a 0128     		cmp	r0, #1
 4200 006c 02D8     		bhi	.L371
 4201              		.loc 1 3770 0 is_stmt 0 discriminator 1
 4202 006e 0220     		movs	r0, #2
 4203              	.LVL656:
 4204 0070 6074     		strb	r0, [r4, #17]
 4205 0072 7CE0     		b	.L364
 4206              	.LVL657:
 4207              	.L371:
3771:ff.c          **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4208              		.loc 1 3771 0 is_stmt 1
 4209 0074 B0F1FF3F 		cmp	r0, #-1
 4210 0078 02D1     		bne	.L372
 4211              		.loc 1 3771 0 is_stmt 0 discriminator 1
 4212 007a 0120     		movs	r0, #1
 4213              	.LVL658:
 4214 007c 6074     		strb	r0, [r4, #17]
 4215 007e 76E0     		b	.L364
 4216              	.LVL659:
 4217              	.L372:
3772:ff.c          **** 				fp->clust = clst;				/* Update current cluster */
 4218              		.loc 1 3772 0 is_stmt 1
 4219 0080 A061     		str	r0, [r4, #24]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 150


 4220              	.LVL660:
 4221              	.L368:
3773:ff.c          **** 			}
3774:ff.c          **** 			sect = clst2sect(fs, fp->clust);	/* Get current sector */
 4222              		.loc 1 3774 0
 4223 0082 DDF80CB0 		ldr	fp, [sp, #12]
 4224 0086 A169     		ldr	r1, [r4, #24]
 4225 0088 5846     		mov	r0, fp
 4226 008a FFF7FEFF 		bl	clst2sect
 4227              	.LVL661:
3775:ff.c          **** 			if (sect == 0) ABORT(fs, FR_INT_ERR);
 4228              		.loc 1 3775 0
 4229 008e 8246     		mov	r10, r0
 4230 0090 10B9     		cbnz	r0, .L373
 4231              		.loc 1 3775 0 is_stmt 0 discriminator 1
 4232 0092 0220     		movs	r0, #2
 4233              	.LVL662:
 4234 0094 6074     		strb	r0, [r4, #17]
 4235 0096 6AE0     		b	.L364
 4236              	.LVL663:
 4237              	.L373:
3776:ff.c          **** 			sect += csect;
 4238              		.loc 1 3776 0 is_stmt 1
 4239 0098 CA44     		add	r10, r10, r9
 4240              	.LVL664:
3777:ff.c          **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
3778:ff.c          **** 			if (cc > 0) {						/* Read maximum contiguous sectors directly */
 4241              		.loc 1 3778 0
 4242 009a 750A     		lsrs	r5, r6, #9
 4243              	.LVL665:
 4244 009c 25D0     		beq	.L374
3779:ff.c          **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4245              		.loc 1 3779 0
 4246 009e 09EB0503 		add	r3, r9, r5
 4247 00a2 BBF80A20 		ldrh	r2, [fp, #10]
 4248 00a6 9342     		cmp	r3, r2
 4249 00a8 01D9     		bls	.L375
3780:ff.c          **** 					cc = fs->csize - csect;
 4250              		.loc 1 3780 0
 4251 00aa C9EB0205 		rsb	r5, r9, r2
 4252              	.LVL666:
 4253              	.L375:
3781:ff.c          **** 				}
3782:ff.c          **** 				if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4254              		.loc 1 3782 0
 4255 00ae 2B46     		mov	r3, r5
 4256 00b0 5246     		mov	r2, r10
 4257 00b2 4146     		mov	r1, r8
 4258 00b4 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4259 00b8 FFF7FEFF 		bl	disk_read
 4260              	.LVL667:
 4261 00bc 10B1     		cbz	r0, .L376
 4262              		.loc 1 3782 0 is_stmt 0 discriminator 1
 4263 00be 0120     		movs	r0, #1
 4264 00c0 6074     		strb	r0, [r4, #17]
 4265 00c2 54E0     		b	.L364
 4266              	.L376:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 151


3783:ff.c          **** #if !FF_FS_READONLY && FF_FS_MINIMIZE <= 2		/* Replace one of the read sectors with cached data if 
3784:ff.c          **** #if FF_FS_TINY
3785:ff.c          **** 				if (fs->wflag && fs->winsect - sect < cc) {
3786:ff.c          **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3787:ff.c          **** 				}
3788:ff.c          **** #else
3789:ff.c          **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
 4267              		.loc 1 3789 0 is_stmt 1
 4268 00c4 94F91030 		ldrsb	r3, [r4, #16]
 4269 00c8 002B     		cmp	r3, #0
 4270 00ca 0CDA     		bge	.L377
 4271              		.loc 1 3789 0 is_stmt 0 discriminator 1
 4272 00cc E069     		ldr	r0, [r4, #28]
 4273 00ce CAEB0000 		rsb	r0, r10, r0
 4274 00d2 8542     		cmp	r5, r0
 4275 00d4 07D9     		bls	.L377
3790:ff.c          **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4276              		.loc 1 3790 0 is_stmt 1
 4277 00d6 4FF40072 		mov	r2, #512
 4278 00da 04F12801 		add	r1, r4, #40
 4279 00de 08EB4020 		add	r0, r8, r0, lsl #9
 4280 00e2 FFF7FEFF 		bl	mem_cpy
 4281              	.LVL668:
 4282              	.L377:
3791:ff.c          **** 				}
3792:ff.c          **** #endif
3793:ff.c          **** #endif
3794:ff.c          **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
 4283              		.loc 1 3794 0
 4284 00e6 6D02     		lsls	r5, r5, #9
 4285              	.LVL669:
3795:ff.c          **** 				continue;
 4286              		.loc 1 3795 0
 4287 00e8 32E0     		b	.L378
 4288              	.LVL670:
 4289              	.L374:
3796:ff.c          **** 			}
3797:ff.c          **** #if !FF_FS_TINY
3798:ff.c          **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
 4290              		.loc 1 3798 0
 4291 00ea E269     		ldr	r2, [r4, #28]
 4292 00ec 9245     		cmp	r10, r2
 4293 00ee 1ED0     		beq	.L379
3799:ff.c          **** #if !FF_FS_READONLY
3800:ff.c          **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
 4294              		.loc 1 3800 0
 4295 00f0 94F91030 		ldrsb	r3, [r4, #16]
 4296 00f4 002B     		cmp	r3, #0
 4297 00f6 0EDA     		bge	.L380
3801:ff.c          **** 					if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4298              		.loc 1 3801 0
 4299 00f8 0123     		movs	r3, #1
 4300 00fa 04F12801 		add	r1, r4, #40
 4301 00fe 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4302 0102 FFF7FEFF 		bl	disk_write
 4303              	.LVL671:
 4304 0106 10B1     		cbz	r0, .L381
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 152


 4305              		.loc 1 3801 0 is_stmt 0 discriminator 1
 4306 0108 0120     		movs	r0, #1
 4307 010a 6074     		strb	r0, [r4, #17]
 4308 010c 2FE0     		b	.L364
 4309              	.L381:
3802:ff.c          **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4310              		.loc 1 3802 0 is_stmt 1
 4311 010e 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4312 0110 03F07F03 		and	r3, r3, #127
 4313 0114 2374     		strb	r3, [r4, #16]
 4314              	.L380:
3803:ff.c          **** 				}
3804:ff.c          **** #endif
3805:ff.c          **** 				if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cac
 4315              		.loc 1 3805 0
 4316 0116 0123     		movs	r3, #1
 4317 0118 5246     		mov	r2, r10
 4318 011a 04F12801 		add	r1, r4, #40
 4319 011e 0398     		ldr	r0, [sp, #12]
 4320 0120 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4321 0122 FFF7FEFF 		bl	disk_read
 4322              	.LVL672:
 4323 0126 10B1     		cbz	r0, .L379
 4324              		.loc 1 3805 0 is_stmt 0 discriminator 1
 4325 0128 0120     		movs	r0, #1
 4326 012a 6074     		strb	r0, [r4, #17]
 4327 012c 1FE0     		b	.L364
 4328              	.L379:
3806:ff.c          **** 			}
3807:ff.c          **** #endif
3808:ff.c          **** 			fp->sect = sect;
 4329              		.loc 1 3808 0 is_stmt 1
 4330 012e C4F81CA0 		str	r10, [r4, #28]
 4331              	.LVL673:
 4332              	.L367:
3809:ff.c          **** 		}
3810:ff.c          **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
 4333              		.loc 1 3810 0
 4334 0132 6369     		ldr	r3, [r4, #20]
 4335 0134 C3F30803 		ubfx	r3, r3, #0, #9
 4336 0138 C3F50075 		rsb	r5, r3, #512
 4337              	.LVL674:
3811:ff.c          **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4338              		.loc 1 3811 0
 4339 013c AE42     		cmp	r6, r5
 4340 013e 00D2     		bcs	.L382
 4341 0140 3546     		mov	r5, r6
 4342              	.LVL675:
 4343              	.L382:
3812:ff.c          **** #if FF_FS_TINY
3813:ff.c          **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3814:ff.c          **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3815:ff.c          **** #else
3816:ff.c          **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
 4344              		.loc 1 3816 0
 4345 0142 04F12801 		add	r1, r4, #40
 4346 0146 2A46     		mov	r2, r5
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 153


 4347 0148 1944     		add	r1, r1, r3
 4348 014a 4046     		mov	r0, r8
 4349 014c FFF7FEFF 		bl	mem_cpy
 4350              	.LVL676:
 4351              	.L378:
3754:ff.c          **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4352              		.loc 1 3754 0
 4353 0150 761B     		subs	r6, r6, r5
 4354              	.LVL677:
 4355 0152 3B68     		ldr	r3, [r7]
 4356 0154 2B44     		add	r3, r3, r5
 4357 0156 3B60     		str	r3, [r7]
 4358 0158 A844     		add	r8, r8, r5
 4359              	.LVL678:
 4360 015a 6369     		ldr	r3, [r4, #20]
 4361 015c 1D44     		add	r5, r5, r3
 4362              	.LVL679:
 4363 015e 6561     		str	r5, [r4, #20]
 4364              	.LVL680:
 4365              	.L366:
3753:ff.c          **** 		btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {
 4366              		.loc 1 3753 0
 4367 0160 002E     		cmp	r6, #0
 4368 0162 7FF46EAF 		bne	.L383
3817:ff.c          **** #endif
3818:ff.c          **** 	}
3819:ff.c          **** 
3820:ff.c          **** 	LEAVE_FF(fs, FR_OK);
 4369              		.loc 1 3820 0
 4370 0166 0020     		movs	r0, #0
 4371 0168 01E0     		b	.L364
 4372              	.LVL681:
 4373              	.L384:
 4374 016a 00E0     		b	.L364
 4375              	.L386:
3749:ff.c          **** 	remain = fp->obj.objsize - fp->fptr;
 4376              		.loc 1 3749 0
 4377 016c 0720     		movs	r0, #7
 4378              	.LVL682:
 4379              	.L364:
3821:ff.c          **** }
 4380              		.loc 1 3821 0
 4381 016e 05B0     		add	sp, sp, #20
 4382              		.cfi_def_cfa_offset 36
 4383              		@ sp needed
 4384 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4385              		.cfi_endproc
 4386              	.LFE37:
 4387              		.size	f_read, .-f_read
 4388              		.section	.text.f_write,"ax",%progbits
 4389              		.align	2
 4390              		.global	f_write
 4391              		.thumb
 4392              		.thumb_func
 4393              		.type	f_write, %function
 4394              	f_write:
 4395              	.LFB38:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 154


3822:ff.c          **** 
3823:ff.c          **** 
3824:ff.c          **** 
3825:ff.c          **** 
3826:ff.c          **** #if !FF_FS_READONLY
3827:ff.c          **** /*-----------------------------------------------------------------------*/
3828:ff.c          **** /* Write File                                                            */
3829:ff.c          **** /*-----------------------------------------------------------------------*/
3830:ff.c          **** 
3831:ff.c          **** FRESULT f_write (
3832:ff.c          **** 	FIL* fp,			/* Pointer to the file object */
3833:ff.c          **** 	const void* buff,	/* Pointer to the data to be written */
3834:ff.c          **** 	UINT btw,			/* Number of bytes to write */
3835:ff.c          **** 	UINT* bw			/* Pointer to number of bytes written */
3836:ff.c          **** )
3837:ff.c          **** {
 4396              		.loc 1 3837 0
 4397              		.cfi_startproc
 4398              		@ args = 0, pretend = 0, frame = 16
 4399              		@ frame_needed = 0, uses_anonymous_args = 0
 4400              	.LVL683:
 4401 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4402              		.cfi_def_cfa_offset 36
 4403              		.cfi_offset 4, -36
 4404              		.cfi_offset 5, -32
 4405              		.cfi_offset 6, -28
 4406              		.cfi_offset 7, -24
 4407              		.cfi_offset 8, -20
 4408              		.cfi_offset 9, -16
 4409              		.cfi_offset 10, -12
 4410              		.cfi_offset 11, -8
 4411              		.cfi_offset 14, -4
 4412 0004 85B0     		sub	sp, sp, #20
 4413              		.cfi_def_cfa_offset 56
 4414 0006 0446     		mov	r4, r0
 4415 0008 8846     		mov	r8, r1
 4416 000a 1646     		mov	r6, r2
 4417 000c 1F46     		mov	r7, r3
 4418              	.LVL684:
3838:ff.c          **** 	FRESULT res;
3839:ff.c          **** 	FATFS *fs;
3840:ff.c          **** 	DWORD clst, sect;
3841:ff.c          **** 	UINT wcnt, cc, csect;
3842:ff.c          **** 	const BYTE *wbuff = (const BYTE*)buff;
3843:ff.c          **** 
3844:ff.c          **** 
3845:ff.c          **** 	*bw = 0;	/* Clear write byte counter */
 4419              		.loc 1 3845 0
 4420 000e 0023     		movs	r3, #0
 4421              	.LVL685:
 4422 0010 3B60     		str	r3, [r7]
3846:ff.c          **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 4423              		.loc 1 3846 0
 4424 0012 0190     		str	r0, [sp, #4]
 4425 0014 03A9     		add	r1, sp, #12
 4426              	.LVL686:
 4427 0016 FFF7FEFF 		bl	validate
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 155


 4428              	.LVL687:
3847:ff.c          **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4429              		.loc 1 3847 0
 4430 001a 0028     		cmp	r0, #0
 4431 001c 40F0C180 		bne	.L411
 4432              		.loc 1 3847 0 is_stmt 0 discriminator 2
 4433 0020 607C     		ldrb	r0, [r4, #17]	@ zero_extendqisi2
 4434              	.LVL688:
 4435 0022 0028     		cmp	r0, #0
 4436 0024 40F0BF80 		bne	.L390
3848:ff.c          **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 4437              		.loc 1 3848 0 is_stmt 1
 4438 0028 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4439 002a 13F0020F 		tst	r3, #2
 4440 002e 00F0B980 		beq	.L413
3849:ff.c          **** 
3850:ff.c          **** 	/* Check fptr wrap-around (file size cannot reach 4 GiB at FAT volume) */
3851:ff.c          **** 	if ((!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
 4441              		.loc 1 3851 0
 4442 0032 6369     		ldr	r3, [r4, #20]
 4443 0034 F342     		cmn	r3, r6
 4444 0036 C0F0AB80 		bcc	.L392
3852:ff.c          **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 4445              		.loc 1 3852 0
 4446 003a DE43     		mvns	r6, r3
 4447              	.LVL689:
 4448 003c A8E0     		b	.L392
 4449              	.LVL690:
 4450              	.L410:
3853:ff.c          **** 	}
3854:ff.c          **** 
3855:ff.c          **** 	for ( ;  btw;							/* Repeat until all data written */
3856:ff.c          **** 		btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.
3857:ff.c          **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 4451              		.loc 1 3857 0
 4452 003e 6369     		ldr	r3, [r4, #20]
 4453 0040 C3F30802 		ubfx	r2, r3, #0, #9
 4454 0044 002A     		cmp	r2, #0
 4455 0046 40F08380 		bne	.L393
3858:ff.c          **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 4456              		.loc 1 3858 0
 4457 004a 039A     		ldr	r2, [sp, #12]
 4458 004c B2F80A90 		ldrh	r9, [r2, #10]
 4459 0050 09F1FF39 		add	r9, r9, #-1
 4460              	.LVL691:
3859:ff.c          **** 			if (csect == 0) {				/* On the cluster boundary? */
 4461              		.loc 1 3859 0
 4462 0054 19EA5329 		ands	r9, r9, r3, lsr #9
 4463              	.LVL692:
 4464 0058 1DD1     		bne	.L394
3860:ff.c          **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 4465              		.loc 1 3860 0
 4466 005a 33B9     		cbnz	r3, .L395
3861:ff.c          **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 4467              		.loc 1 3861 0
 4468 005c A068     		ldr	r0, [r4, #8]
 4469              	.LVL693:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 156


3862:ff.c          **** 					if (clst == 0) {		/* If no cluster is allocated, */
 4470              		.loc 1 3862 0
 4471 005e 40B9     		cbnz	r0, .L396
3863:ff.c          **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 4472              		.loc 1 3863 0
 4473 0060 0021     		movs	r1, #0
 4474 0062 0198     		ldr	r0, [sp, #4]
 4475              	.LVL694:
 4476 0064 FFF7FEFF 		bl	create_chain
 4477              	.LVL695:
 4478 0068 03E0     		b	.L396
 4479              	.LVL696:
 4480              	.L395:
3864:ff.c          **** 					}
3865:ff.c          **** 				} else {					/* On the middle or end of the file */
3866:ff.c          **** #if FF_USE_FASTSEEK
3867:ff.c          **** 					if (fp->cltbl) {
3868:ff.c          **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3869:ff.c          **** 					} else
3870:ff.c          **** #endif
3871:ff.c          **** 					{
3872:ff.c          **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 4481              		.loc 1 3872 0
 4482 006a A169     		ldr	r1, [r4, #24]
 4483 006c 0198     		ldr	r0, [sp, #4]
 4484 006e FFF7FEFF 		bl	create_chain
 4485              	.LVL697:
 4486              	.L396:
3873:ff.c          **** 					}
3874:ff.c          **** 				}
3875:ff.c          **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 4487              		.loc 1 3875 0
 4488 0072 0028     		cmp	r0, #0
 4489 0074 00F08F80 		beq	.L397
3876:ff.c          **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 4490              		.loc 1 3876 0
 4491 0078 0128     		cmp	r0, #1
 4492 007a 02D1     		bne	.L398
 4493              		.loc 1 3876 0 is_stmt 0 discriminator 1
 4494 007c 0220     		movs	r0, #2
 4495              	.LVL698:
 4496 007e 6074     		strb	r0, [r4, #17]
 4497 0080 91E0     		b	.L390
 4498              	.LVL699:
 4499              	.L398:
3877:ff.c          **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4500              		.loc 1 3877 0 is_stmt 1
 4501 0082 B0F1FF3F 		cmp	r0, #-1
 4502 0086 02D1     		bne	.L399
 4503              		.loc 1 3877 0 is_stmt 0 discriminator 1
 4504 0088 0120     		movs	r0, #1
 4505              	.LVL700:
 4506 008a 6074     		strb	r0, [r4, #17]
 4507 008c 8BE0     		b	.L390
 4508              	.LVL701:
 4509              	.L399:
3878:ff.c          **** 				fp->clust = clst;			/* Update current cluster */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 157


 4510              		.loc 1 3878 0 is_stmt 1
 4511 008e A061     		str	r0, [r4, #24]
3879:ff.c          **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 4512              		.loc 1 3879 0
 4513 0090 A368     		ldr	r3, [r4, #8]
 4514 0092 03B9     		cbnz	r3, .L394
 4515              		.loc 1 3879 0 is_stmt 0 discriminator 1
 4516 0094 A060     		str	r0, [r4, #8]
 4517              	.LVL702:
 4518              	.L394:
3880:ff.c          **** 			}
3881:ff.c          **** #if FF_FS_TINY
3882:ff.c          **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3883:ff.c          **** #else
3884:ff.c          **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
 4519              		.loc 1 3884 0 is_stmt 1
 4520 0096 94F91030 		ldrsb	r3, [r4, #16]
 4521 009a 002B     		cmp	r3, #0
 4522 009c 0FDA     		bge	.L400
3885:ff.c          **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4523              		.loc 1 3885 0
 4524 009e 0123     		movs	r3, #1
 4525 00a0 E269     		ldr	r2, [r4, #28]
 4526 00a2 04F12801 		add	r1, r4, #40
 4527 00a6 0398     		ldr	r0, [sp, #12]
 4528 00a8 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4529 00aa FFF7FEFF 		bl	disk_write
 4530              	.LVL703:
 4531 00ae 10B1     		cbz	r0, .L401
 4532              		.loc 1 3885 0 is_stmt 0 discriminator 1
 4533 00b0 0120     		movs	r0, #1
 4534 00b2 6074     		strb	r0, [r4, #17]
 4535 00b4 77E0     		b	.L390
 4536              	.L401:
3886:ff.c          **** 				fp->flag &= (BYTE)~FA_DIRTY;
 4537              		.loc 1 3886 0 is_stmt 1
 4538 00b6 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4539 00b8 03F07F03 		and	r3, r3, #127
 4540 00bc 2374     		strb	r3, [r4, #16]
 4541              	.L400:
3887:ff.c          **** 			}
3888:ff.c          **** #endif
3889:ff.c          **** 			sect = clst2sect(fs, fp->clust);	/* Get current sector */
 4542              		.loc 1 3889 0
 4543 00be DDF80CB0 		ldr	fp, [sp, #12]
 4544 00c2 A169     		ldr	r1, [r4, #24]
 4545 00c4 5846     		mov	r0, fp
 4546 00c6 FFF7FEFF 		bl	clst2sect
 4547              	.LVL704:
3890:ff.c          **** 			if (sect == 0) ABORT(fs, FR_INT_ERR);
 4548              		.loc 1 3890 0
 4549 00ca 8246     		mov	r10, r0
 4550 00cc 10B9     		cbnz	r0, .L402
 4551              		.loc 1 3890 0 is_stmt 0 discriminator 1
 4552 00ce 0220     		movs	r0, #2
 4553              	.LVL705:
 4554 00d0 6074     		strb	r0, [r4, #17]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 158


 4555 00d2 68E0     		b	.L390
 4556              	.LVL706:
 4557              	.L402:
3891:ff.c          **** 			sect += csect;
 4558              		.loc 1 3891 0 is_stmt 1
 4559 00d4 CA44     		add	r10, r10, r9
 4560              	.LVL707:
3892:ff.c          **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
3893:ff.c          **** 			if (cc > 0) {					/* Write maximum contiguous sectors directly */
 4561              		.loc 1 3893 0
 4562 00d6 750A     		lsrs	r5, r6, #9
 4563              	.LVL708:
 4564 00d8 25D0     		beq	.L403
3894:ff.c          **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4565              		.loc 1 3894 0
 4566 00da 09EB0503 		add	r3, r9, r5
 4567 00de BBF80A20 		ldrh	r2, [fp, #10]
 4568 00e2 9342     		cmp	r3, r2
 4569 00e4 01D9     		bls	.L404
3895:ff.c          **** 					cc = fs->csize - csect;
 4570              		.loc 1 3895 0
 4571 00e6 C9EB0205 		rsb	r5, r9, r2
 4572              	.LVL709:
 4573              	.L404:
3896:ff.c          **** 				}
3897:ff.c          **** 				if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4574              		.loc 1 3897 0
 4575 00ea 2B46     		mov	r3, r5
 4576 00ec 5246     		mov	r2, r10
 4577 00ee 4146     		mov	r1, r8
 4578 00f0 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4579 00f4 FFF7FEFF 		bl	disk_write
 4580              	.LVL710:
 4581 00f8 10B1     		cbz	r0, .L405
 4582              		.loc 1 3897 0 is_stmt 0 discriminator 1
 4583 00fa 0120     		movs	r0, #1
 4584 00fc 6074     		strb	r0, [r4, #17]
 4585 00fe 52E0     		b	.L390
 4586              	.L405:
3898:ff.c          **** #if FF_FS_MINIMIZE <= 2
3899:ff.c          **** #if FF_FS_TINY
3900:ff.c          **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3901:ff.c          **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3902:ff.c          **** 					fs->wflag = 0;
3903:ff.c          **** 				}
3904:ff.c          **** #else
3905:ff.c          **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
 4587              		.loc 1 3905 0 is_stmt 1
 4588 0100 E169     		ldr	r1, [r4, #28]
 4589 0102 CAEB0101 		rsb	r1, r10, r1
 4590 0106 8D42     		cmp	r5, r1
 4591 0108 0BD9     		bls	.L406
3906:ff.c          **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 4592              		.loc 1 3906 0
 4593 010a 4FF40072 		mov	r2, #512
 4594 010e 08EB4121 		add	r1, r8, r1, lsl #9
 4595 0112 04F12800 		add	r0, r4, #40
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 159


 4596 0116 FFF7FEFF 		bl	mem_cpy
 4597              	.LVL711:
3907:ff.c          **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4598              		.loc 1 3907 0
 4599 011a 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4600 011c 03F07F03 		and	r3, r3, #127
 4601 0120 2374     		strb	r3, [r4, #16]
 4602              	.L406:
3908:ff.c          **** 				}
3909:ff.c          **** #endif
3910:ff.c          **** #endif
3911:ff.c          **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
 4603              		.loc 1 3911 0
 4604 0122 6D02     		lsls	r5, r5, #9
 4605              	.LVL712:
3912:ff.c          **** 				continue;
 4606              		.loc 1 3912 0
 4607 0124 27E0     		b	.L407
 4608              	.LVL713:
 4609              	.L403:
3913:ff.c          **** 			}
3914:ff.c          **** #if FF_FS_TINY
3915:ff.c          **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3916:ff.c          **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3917:ff.c          **** 				fs->winsect = sect;
3918:ff.c          **** 			}
3919:ff.c          **** #else
3920:ff.c          **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
 4610              		.loc 1 3920 0
 4611 0126 E369     		ldr	r3, [r4, #28]
 4612 0128 9A45     		cmp	r10, r3
 4613 012a 0FD0     		beq	.L408
3921:ff.c          **** 				fp->fptr < fp->obj.objsize &&
 4614              		.loc 1 3921 0 discriminator 1
 4615 012c 6269     		ldr	r2, [r4, #20]
 4616 012e E368     		ldr	r3, [r4, #12]
3920:ff.c          **** 				fp->fptr < fp->obj.objsize &&
 4617              		.loc 1 3920 0 discriminator 1
 4618 0130 9A42     		cmp	r2, r3
 4619 0132 0BD2     		bcs	.L408
3922:ff.c          **** 				disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
 4620              		.loc 1 3922 0
 4621 0134 0123     		movs	r3, #1
 4622 0136 5246     		mov	r2, r10
 4623 0138 04F12801 		add	r1, r4, #40
 4624 013c 9BF80100 		ldrb	r0, [fp, #1]	@ zero_extendqisi2
 4625 0140 FFF7FEFF 		bl	disk_read
 4626              	.LVL714:
3921:ff.c          **** 				fp->fptr < fp->obj.objsize &&
 4627              		.loc 1 3921 0
 4628 0144 10B1     		cbz	r0, .L408
3923:ff.c          **** 					ABORT(fs, FR_DISK_ERR);
 4629              		.loc 1 3923 0
 4630 0146 0120     		movs	r0, #1
 4631 0148 6074     		strb	r0, [r4, #17]
 4632 014a 2CE0     		b	.L390
 4633              	.L408:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 160


3924:ff.c          **** 			}
3925:ff.c          **** #endif
3926:ff.c          **** 			fp->sect = sect;
 4634              		.loc 1 3926 0
 4635 014c C4F81CA0 		str	r10, [r4, #28]
 4636              	.LVL715:
 4637              	.L393:
3927:ff.c          **** 		}
3928:ff.c          **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
 4638              		.loc 1 3928 0
 4639 0150 6369     		ldr	r3, [r4, #20]
 4640 0152 C3F30803 		ubfx	r3, r3, #0, #9
 4641 0156 C3F50075 		rsb	r5, r3, #512
 4642              	.LVL716:
3929:ff.c          **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
 4643              		.loc 1 3929 0
 4644 015a AE42     		cmp	r6, r5
 4645 015c 00D2     		bcs	.L409
 4646 015e 3546     		mov	r5, r6
 4647              	.LVL717:
 4648              	.L409:
3930:ff.c          **** #if FF_FS_TINY
3931:ff.c          **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3932:ff.c          **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3933:ff.c          **** 		fs->wflag = 1;
3934:ff.c          **** #else
3935:ff.c          **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
 4649              		.loc 1 3935 0
 4650 0160 04F12800 		add	r0, r4, #40
 4651 0164 2A46     		mov	r2, r5
 4652 0166 4146     		mov	r1, r8
 4653 0168 1844     		add	r0, r0, r3
 4654 016a FFF7FEFF 		bl	mem_cpy
 4655              	.LVL718:
3936:ff.c          **** 		fp->flag |= FA_DIRTY;
 4656              		.loc 1 3936 0
 4657 016e 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4658 0170 63F07F03 		orn	r3, r3, #127
 4659 0174 2374     		strb	r3, [r4, #16]
 4660              	.L407:
3856:ff.c          **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 4661              		.loc 1 3856 0
 4662 0176 761B     		subs	r6, r6, r5
 4663              	.LVL719:
 4664 0178 3B68     		ldr	r3, [r7]
 4665 017a 2B44     		add	r3, r3, r5
 4666 017c 3B60     		str	r3, [r7]
 4667 017e A844     		add	r8, r8, r5
 4668              	.LVL720:
 4669 0180 6369     		ldr	r3, [r4, #20]
 4670 0182 1D44     		add	r5, r5, r3
 4671              	.LVL721:
 4672 0184 6561     		str	r5, [r4, #20]
 4673 0186 E368     		ldr	r3, [r4, #12]
 4674 0188 9D42     		cmp	r5, r3
 4675 018a 38BF     		it	cc
 4676 018c 1D46     		movcc	r5, r3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 161


 4677 018e E560     		str	r5, [r4, #12]
 4678              	.L392:
3855:ff.c          **** 		btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.
 4679              		.loc 1 3855 0
 4680 0190 002E     		cmp	r6, #0
 4681 0192 7FF454AF 		bne	.L410
 4682              	.L397:
3937:ff.c          **** #endif
3938:ff.c          **** 	}
3939:ff.c          **** 
3940:ff.c          **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
 4683              		.loc 1 3940 0
 4684 0196 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4685 0198 43F04003 		orr	r3, r3, #64
 4686 019c 2374     		strb	r3, [r4, #16]
3941:ff.c          **** 
3942:ff.c          **** 	LEAVE_FF(fs, FR_OK);
 4687              		.loc 1 3942 0
 4688 019e 0020     		movs	r0, #0
 4689 01a0 01E0     		b	.L390
 4690              	.LVL722:
 4691              	.L411:
 4692 01a2 00E0     		b	.L390
 4693              	.L413:
3848:ff.c          **** 
 4694              		.loc 1 3848 0
 4695 01a4 0720     		movs	r0, #7
 4696              	.LVL723:
 4697              	.L390:
3943:ff.c          **** }
 4698              		.loc 1 3943 0
 4699 01a6 05B0     		add	sp, sp, #20
 4700              		.cfi_def_cfa_offset 36
 4701              		@ sp needed
 4702 01a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4703              		.cfi_endproc
 4704              	.LFE38:
 4705              		.size	f_write, .-f_write
 4706              		.section	.text.f_sync,"ax",%progbits
 4707              		.align	2
 4708              		.global	f_sync
 4709              		.thumb
 4710              		.thumb_func
 4711              		.type	f_sync, %function
 4712              	f_sync:
 4713              	.LFB39:
3944:ff.c          **** 
3945:ff.c          **** 
3946:ff.c          **** 
3947:ff.c          **** 
3948:ff.c          **** /*-----------------------------------------------------------------------*/
3949:ff.c          **** /* Synchronize the File                                                  */
3950:ff.c          **** /*-----------------------------------------------------------------------*/
3951:ff.c          **** 
3952:ff.c          **** FRESULT f_sync (
3953:ff.c          **** 	FIL* fp		/* Pointer to the file object */
3954:ff.c          **** )
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 162


3955:ff.c          **** {
 4714              		.loc 1 3955 0
 4715              		.cfi_startproc
 4716              		@ args = 0, pretend = 0, frame = 8
 4717              		@ frame_needed = 0, uses_anonymous_args = 0
 4718              	.LVL724:
 4719 0000 70B5     		push	{r4, r5, r6, lr}
 4720              		.cfi_def_cfa_offset 16
 4721              		.cfi_offset 4, -16
 4722              		.cfi_offset 5, -12
 4723              		.cfi_offset 6, -8
 4724              		.cfi_offset 14, -4
 4725 0002 82B0     		sub	sp, sp, #8
 4726              		.cfi_def_cfa_offset 24
 4727 0004 0446     		mov	r4, r0
3956:ff.c          **** 	FRESULT res;
3957:ff.c          **** 	FATFS *fs;
3958:ff.c          **** 	DWORD tm;
3959:ff.c          **** 	BYTE *dir;
3960:ff.c          **** 
3961:ff.c          **** 
3962:ff.c          **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 4728              		.loc 1 3962 0
 4729 0006 01A9     		add	r1, sp, #4
 4730 0008 FFF7FEFF 		bl	validate
 4731              	.LVL725:
3963:ff.c          **** 	if (res == FR_OK) {
 4732              		.loc 1 3963 0
 4733 000c 0028     		cmp	r0, #0
 4734 000e 3FD1     		bne	.L419
3964:ff.c          **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 4735              		.loc 1 3964 0
 4736 0010 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 4737 0012 12F0400F 		tst	r2, #64
 4738 0016 3CD0     		beq	.L420
3965:ff.c          **** #if !FF_FS_TINY
3966:ff.c          **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
 4739              		.loc 1 3966 0
 4740 0018 12F0800F 		tst	r2, #128
 4741 001c 0CD0     		beq	.L418
3967:ff.c          **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 4742              		.loc 1 3967 0
 4743 001e 0123     		movs	r3, #1
 4744 0020 E269     		ldr	r2, [r4, #28]
 4745 0022 04F12801 		add	r1, r4, #40
 4746 0026 0198     		ldr	r0, [sp, #4]
 4747              	.LVL726:
 4748 0028 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 4749 002a FFF7FEFF 		bl	disk_write
 4750              	.LVL727:
 4751 002e 88BB     		cbnz	r0, .L421
3968:ff.c          **** 				fp->flag &= (BYTE)~FA_DIRTY;
 4752              		.loc 1 3968 0
 4753 0030 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4754 0032 03F07F03 		and	r3, r3, #127
 4755 0036 2374     		strb	r3, [r4, #16]
 4756              	.L418:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 163


3969:ff.c          **** 			}
3970:ff.c          **** #endif
3971:ff.c          **** 			/* Update the directory entry */
3972:ff.c          **** 			tm = GET_FATTIME();				/* Modified time */
 4757              		.loc 1 3972 0
 4758 0038 FFF7FEFF 		bl	get_fattime
 4759              	.LVL728:
 4760 003c 0646     		mov	r6, r0
 4761              	.LVL729:
3973:ff.c          **** #if FF_FS_EXFAT
3974:ff.c          **** 			if (fs->fs_type == FS_EXFAT) {
3975:ff.c          **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3976:ff.c          **** 				if (res == FR_OK) {
3977:ff.c          **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3978:ff.c          **** 				}
3979:ff.c          **** 				if (res == FR_OK) {
3980:ff.c          **** 					DIR dj;
3981:ff.c          **** 					DEF_NAMBUF
3982:ff.c          **** 
3983:ff.c          **** 					INIT_NAMBUF(fs);
3984:ff.c          **** 					res = load_obj_xdir(&dj, &fp->obj);	/* Load directory entry block */
3985:ff.c          **** 					if (res == FR_OK) {
3986:ff.c          **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive attribute to indicate that the file has be
3987:ff.c          **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation information */
3988:ff.c          **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3989:ff.c          **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3990:ff.c          **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3991:ff.c          **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3992:ff.c          **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3993:ff.c          **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3994:ff.c          **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3995:ff.c          **** 						if (res == FR_OK) {
3996:ff.c          **** 							res = sync_fs(fs);
3997:ff.c          **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3998:ff.c          **** 						}
3999:ff.c          **** 					}
4000:ff.c          **** 					FREE_NAMBUF();
4001:ff.c          **** 				}
4002:ff.c          **** 			} else
4003:ff.c          **** #endif
4004:ff.c          **** 			{
4005:ff.c          **** 				res = move_window(fs, fp->dir_sect);
 4762              		.loc 1 4005 0
 4763 003e 216A     		ldr	r1, [r4, #32]
 4764 0040 0198     		ldr	r0, [sp, #4]
 4765              	.LVL730:
 4766 0042 FFF7FEFF 		bl	move_window
 4767              	.LVL731:
4006:ff.c          **** 				if (res == FR_OK) {
 4768              		.loc 1 4006 0
 4769 0046 38BB     		cbnz	r0, .L422
4007:ff.c          **** 					dir = fp->dir_ptr;
 4770              		.loc 1 4007 0
 4771 0048 656A     		ldr	r5, [r4, #36]
 4772              	.LVL732:
4008:ff.c          **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive attribute to indicate that the file has been chan
 4773              		.loc 1 4008 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 164


 4774 004a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 4775 004c 43F02003 		orr	r3, r3, #32
 4776 0050 EB72     		strb	r3, [r5, #11]
4009:ff.c          **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation information  */
 4777              		.loc 1 4009 0
 4778 0052 A268     		ldr	r2, [r4, #8]
 4779 0054 2946     		mov	r1, r5
 4780 0056 2068     		ldr	r0, [r4]
 4781              	.LVL733:
 4782 0058 FFF7FEFF 		bl	st_clust
 4783              	.LVL734:
4010:ff.c          **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 4784              		.loc 1 4010 0
 4785 005c E168     		ldr	r1, [r4, #12]
 4786 005e 05F11C00 		add	r0, r5, #28
 4787 0062 FFF7FEFF 		bl	st_dword
 4788              	.LVL735:
4011:ff.c          **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 4789              		.loc 1 4011 0
 4790 0066 3146     		mov	r1, r6
 4791 0068 05F11600 		add	r0, r5, #22
 4792 006c FFF7FEFF 		bl	st_dword
 4793              	.LVL736:
4012:ff.c          **** 					st_word(dir + DIR_LstAccDate, 0);
 4794              		.loc 1 4012 0
 4795 0070 0021     		movs	r1, #0
 4796 0072 05F11200 		add	r0, r5, #18
 4797 0076 FFF7FEFF 		bl	st_word
 4798              	.LVL737:
4013:ff.c          **** 					fs->wflag = 1;
 4799              		.loc 1 4013 0
 4800 007a 0122     		movs	r2, #1
 4801 007c 019B     		ldr	r3, [sp, #4]
 4802 007e DA70     		strb	r2, [r3, #3]
4014:ff.c          **** 					res = sync_fs(fs);					/* Restore it to the directory */
 4803              		.loc 1 4014 0
 4804 0080 0198     		ldr	r0, [sp, #4]
 4805 0082 FFF7FEFF 		bl	sync_fs
 4806              	.LVL738:
4015:ff.c          **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 4807              		.loc 1 4015 0
 4808 0086 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4809 0088 23F04003 		bic	r3, r3, #64
 4810 008c 2374     		strb	r3, [r4, #16]
 4811 008e 03E0     		b	.L417
 4812              	.LVL739:
 4813              	.L419:
 4814 0090 02E0     		b	.L417
 4815              	.L420:
 4816 0092 01E0     		b	.L417
 4817              	.LVL740:
 4818              	.L421:
3967:ff.c          **** 				fp->flag &= (BYTE)~FA_DIRTY;
 4819              		.loc 1 3967 0
 4820 0094 0120     		movs	r0, #1
 4821 0096 FFE7     		b	.L417
 4822              	.LVL741:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 165


 4823              	.L422:
 4824              	.L417:
4016:ff.c          **** 				}
4017:ff.c          **** 			}
4018:ff.c          **** 		}
4019:ff.c          **** 	}
4020:ff.c          **** 
4021:ff.c          **** 	LEAVE_FF(fs, res);
4022:ff.c          **** }
 4825              		.loc 1 4022 0
 4826 0098 02B0     		add	sp, sp, #8
 4827              		.cfi_def_cfa_offset 16
 4828              		@ sp needed
 4829 009a 70BD     		pop	{r4, r5, r6, pc}
 4830              		.cfi_endproc
 4831              	.LFE39:
 4832              		.size	f_sync, .-f_sync
 4833              		.section	.text.f_close,"ax",%progbits
 4834              		.align	2
 4835              		.global	f_close
 4836              		.thumb
 4837              		.thumb_func
 4838              		.type	f_close, %function
 4839              	f_close:
 4840              	.LFB40:
4023:ff.c          **** 
4024:ff.c          **** #endif /* !FF_FS_READONLY */
4025:ff.c          **** 
4026:ff.c          **** 
4027:ff.c          **** 
4028:ff.c          **** 
4029:ff.c          **** /*-----------------------------------------------------------------------*/
4030:ff.c          **** /* Close File                                                            */
4031:ff.c          **** /*-----------------------------------------------------------------------*/
4032:ff.c          **** 
4033:ff.c          **** FRESULT f_close (
4034:ff.c          **** 	FIL* fp		/* Pointer to the file object to be closed */
4035:ff.c          **** )
4036:ff.c          **** {
 4841              		.loc 1 4036 0
 4842              		.cfi_startproc
 4843              		@ args = 0, pretend = 0, frame = 8
 4844              		@ frame_needed = 0, uses_anonymous_args = 0
 4845              	.LVL742:
 4846 0000 10B5     		push	{r4, lr}
 4847              		.cfi_def_cfa_offset 8
 4848              		.cfi_offset 4, -8
 4849              		.cfi_offset 14, -4
 4850 0002 82B0     		sub	sp, sp, #8
 4851              		.cfi_def_cfa_offset 16
 4852 0004 0446     		mov	r4, r0
4037:ff.c          **** 	FRESULT res;
4038:ff.c          **** 	FATFS *fs;
4039:ff.c          **** 
4040:ff.c          **** #if !FF_FS_READONLY
4041:ff.c          **** 	res = f_sync(fp);					/* Flush cached data */
 4853              		.loc 1 4041 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 166


 4854 0006 FFF7FEFF 		bl	f_sync
 4855              	.LVL743:
4042:ff.c          **** 	if (res == FR_OK)
 4856              		.loc 1 4042 0
 4857 000a 0346     		mov	r3, r0
 4858 000c 38B9     		cbnz	r0, .L425
4043:ff.c          **** #endif
4044:ff.c          **** 	{
4045:ff.c          **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
 4859              		.loc 1 4045 0
 4860 000e 01A9     		add	r1, sp, #4
 4861 0010 2046     		mov	r0, r4
 4862              	.LVL744:
 4863 0012 FFF7FEFF 		bl	validate
 4864              	.LVL745:
4046:ff.c          **** 		if (res == FR_OK) {
 4865              		.loc 1 4046 0
 4866 0016 0346     		mov	r3, r0
 4867 0018 08B9     		cbnz	r0, .L425
4047:ff.c          **** #if FF_FS_LOCK != 0
4048:ff.c          **** 			res = dec_lock(fp->obj.lockid);		/* Decrement file open counter */
4049:ff.c          **** 			if (res == FR_OK) fp->obj.fs = 0;	/* Invalidate file object */
4050:ff.c          **** #else
4051:ff.c          **** 			fp->obj.fs = 0;	/* Invalidate file object */
 4868              		.loc 1 4051 0
 4869 001a 0022     		movs	r2, #0
 4870 001c 2260     		str	r2, [r4]
 4871              	.L425:
 4872              	.LVL746:
4052:ff.c          **** #endif
4053:ff.c          **** #if FF_FS_REENTRANT
4054:ff.c          **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
4055:ff.c          **** #endif
4056:ff.c          **** 		}
4057:ff.c          **** 	}
4058:ff.c          **** 	return res;
4059:ff.c          **** }
 4873              		.loc 1 4059 0
 4874 001e 1846     		mov	r0, r3
 4875 0020 02B0     		add	sp, sp, #8
 4876              		.cfi_def_cfa_offset 8
 4877              		@ sp needed
 4878 0022 10BD     		pop	{r4, pc}
 4879              		.cfi_endproc
 4880              	.LFE40:
 4881              		.size	f_close, .-f_close
 4882              		.section	.text.f_lseek,"ax",%progbits
 4883              		.align	2
 4884              		.global	f_lseek
 4885              		.thumb
 4886              		.thumb_func
 4887              		.type	f_lseek, %function
 4888              	f_lseek:
 4889              	.LFB41:
4060:ff.c          **** 
4061:ff.c          **** 
4062:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 167


4063:ff.c          **** 
4064:ff.c          **** #if FF_FS_RPATH >= 1
4065:ff.c          **** /*-----------------------------------------------------------------------*/
4066:ff.c          **** /* Change Current Directory or Current Drive, Get Current Directory      */
4067:ff.c          **** /*-----------------------------------------------------------------------*/
4068:ff.c          **** 
4069:ff.c          **** #if FF_VOLUMES >= 2
4070:ff.c          **** FRESULT f_chdrive (
4071:ff.c          **** 	const TCHAR* path		/* Drive number */
4072:ff.c          **** )
4073:ff.c          **** {
4074:ff.c          **** 	int vol;
4075:ff.c          **** 
4076:ff.c          **** 
4077:ff.c          **** 	/* Get logical drive number */
4078:ff.c          **** 	vol = get_ldnumber(&path);
4079:ff.c          **** 	if (vol < 0) return FR_INVALID_DRIVE;
4080:ff.c          **** 
4081:ff.c          **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
4082:ff.c          **** 
4083:ff.c          **** 	return FR_OK;
4084:ff.c          **** }
4085:ff.c          **** #endif
4086:ff.c          **** 
4087:ff.c          **** 
4088:ff.c          **** FRESULT f_chdir (
4089:ff.c          **** 	const TCHAR* path	/* Pointer to the directory path */
4090:ff.c          **** )
4091:ff.c          **** {
4092:ff.c          **** 	FRESULT res;
4093:ff.c          **** 	DIR dj;
4094:ff.c          **** 	FATFS *fs;
4095:ff.c          **** 	DEF_NAMBUF
4096:ff.c          **** 
4097:ff.c          **** 	/* Get logical drive */
4098:ff.c          **** 	res = find_volume(&path, &fs, 0);
4099:ff.c          **** 	if (res == FR_OK) {
4100:ff.c          **** 		dj.obj.fs = fs;
4101:ff.c          **** 		INIT_NAMBUF(fs);
4102:ff.c          **** 		res = follow_path(&dj, path);		/* Follow the path */
4103:ff.c          **** 		if (res == FR_OK) {					/* Follow completed */
4104:ff.c          **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4105:ff.c          **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
4106:ff.c          **** #if FF_FS_EXFAT
4107:ff.c          **** 				if (fs->fs_type == FS_EXFAT) {
4108:ff.c          **** 					fs->cdc_scl = dj.obj.c_scl;
4109:ff.c          **** 					fs->cdc_size = dj.obj.c_size;
4110:ff.c          **** 					fs->cdc_ofs = dj.obj.c_ofs;
4111:ff.c          **** 				}
4112:ff.c          **** #endif
4113:ff.c          **** 			} else {
4114:ff.c          **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
4115:ff.c          **** #if FF_FS_EXFAT
4116:ff.c          **** 					if (fs->fs_type == FS_EXFAT) {
4117:ff.c          **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
4118:ff.c          **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
4119:ff.c          **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 168


4120:ff.c          **** 						fs->cdc_ofs = dj.blk_ofs;
4121:ff.c          **** 					} else
4122:ff.c          **** #endif
4123:ff.c          **** 					{
4124:ff.c          **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
4125:ff.c          **** 					}
4126:ff.c          **** 				} else {
4127:ff.c          **** 					res = FR_NO_PATH;		/* Reached but a file */
4128:ff.c          **** 				}
4129:ff.c          **** 			}
4130:ff.c          **** 		}
4131:ff.c          **** 		FREE_NAMBUF();
4132:ff.c          **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4133:ff.c          **** 	}
4134:ff.c          **** 
4135:ff.c          **** 	LEAVE_FF(fs, res);
4136:ff.c          **** }
4137:ff.c          **** 
4138:ff.c          **** 
4139:ff.c          **** #if FF_FS_RPATH >= 2
4140:ff.c          **** FRESULT f_getcwd (
4141:ff.c          **** 	TCHAR* buff,	/* Pointer to the directory path */
4142:ff.c          **** 	UINT len		/* Size of path */
4143:ff.c          **** )
4144:ff.c          **** {
4145:ff.c          **** 	FRESULT res;
4146:ff.c          **** 	DIR dj;
4147:ff.c          **** 	FATFS *fs;
4148:ff.c          **** 	UINT i, n;
4149:ff.c          **** 	DWORD ccl;
4150:ff.c          **** 	TCHAR *tp;
4151:ff.c          **** 	FILINFO fno;
4152:ff.c          **** 	DEF_NAMBUF
4153:ff.c          **** 
4154:ff.c          **** 
4155:ff.c          **** 	*buff = 0;
4156:ff.c          **** 	/* Get logical drive */
4157:ff.c          **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
4158:ff.c          **** 	if (res == FR_OK) {
4159:ff.c          **** 		dj.obj.fs = fs;
4160:ff.c          **** 		INIT_NAMBUF(fs);
4161:ff.c          **** 		i = len;			/* Bottom of buffer (directory stack base) */
4162:ff.c          **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root pat
4163:ff.c          **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
4164:ff.c          **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
4165:ff.c          **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
4166:ff.c          **** 				if (res != FR_OK) break;
4167:ff.c          **** 				res = move_window(fs, dj.sect);
4168:ff.c          **** 				if (res != FR_OK) break;
4169:ff.c          **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
4170:ff.c          **** 				res = dir_sdi(&dj, 0);
4171:ff.c          **** 				if (res != FR_OK) break;
4172:ff.c          **** 				do {							/* Find the entry links to the child directory */
4173:ff.c          **** 					res = dir_read_file(&dj);
4174:ff.c          **** 					if (res != FR_OK) break;
4175:ff.c          **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
4176:ff.c          **** 					res = dir_next(&dj, 0);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 169


4177:ff.c          **** 				} while (res == FR_OK);
4178:ff.c          **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
4179:ff.c          **** 				if (res != FR_OK) break;
4180:ff.c          **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
4181:ff.c          **** 				for (n = 0; fno.fname[n]; n++) ;
4182:ff.c          **** 				if (i < n + 3) {
4183:ff.c          **** 					res = FR_NOT_ENOUGH_CORE; break;
4184:ff.c          **** 				}
4185:ff.c          **** 				while (n) buff[--i] = fno.fname[--n];
4186:ff.c          **** 				buff[--i] = '/';
4187:ff.c          **** 			}
4188:ff.c          **** 		}
4189:ff.c          **** 		tp = buff;
4190:ff.c          **** 		if (res == FR_OK) {
4191:ff.c          **** #if FF_VOLUMES >= 2
4192:ff.c          **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
4193:ff.c          **** 			*tp++ = ':';
4194:ff.c          **** #endif
4195:ff.c          **** 			if (i == len) {					/* Root-directory */
4196:ff.c          **** 				*tp++ = '/';
4197:ff.c          **** 			} else {						/* Sub-directroy */
4198:ff.c          **** 				do		/* Add stacked path str */
4199:ff.c          **** 					*tp++ = buff[i++];
4200:ff.c          **** 				while (i < len);
4201:ff.c          **** 			}
4202:ff.c          **** 		}
4203:ff.c          **** 		*tp = 0;
4204:ff.c          **** 		FREE_NAMBUF();
4205:ff.c          **** 	}
4206:ff.c          **** 
4207:ff.c          **** 	LEAVE_FF(fs, res);
4208:ff.c          **** }
4209:ff.c          **** 
4210:ff.c          **** #endif /* FF_FS_RPATH >= 2 */
4211:ff.c          **** #endif /* FF_FS_RPATH >= 1 */
4212:ff.c          **** 
4213:ff.c          **** 
4214:ff.c          **** 
4215:ff.c          **** #if FF_FS_MINIMIZE <= 2
4216:ff.c          **** /*-----------------------------------------------------------------------*/
4217:ff.c          **** /* Seek File Read/Write Pointer                                          */
4218:ff.c          **** /*-----------------------------------------------------------------------*/
4219:ff.c          **** 
4220:ff.c          **** FRESULT f_lseek (
4221:ff.c          **** 	FIL* fp,		/* Pointer to the file object */
4222:ff.c          **** 	FSIZE_t ofs		/* File pointer from top of file */
4223:ff.c          **** )
4224:ff.c          **** {
 4890              		.loc 1 4224 0
 4891              		.cfi_startproc
 4892              		@ args = 0, pretend = 0, frame = 8
 4893              		@ frame_needed = 0, uses_anonymous_args = 0
 4894              	.LVL747:
 4895 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4896              		.cfi_def_cfa_offset 24
 4897              		.cfi_offset 4, -24
 4898              		.cfi_offset 5, -20
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 170


 4899              		.cfi_offset 6, -16
 4900              		.cfi_offset 7, -12
 4901              		.cfi_offset 8, -8
 4902              		.cfi_offset 14, -4
 4903 0004 82B0     		sub	sp, sp, #8
 4904              		.cfi_def_cfa_offset 32
 4905 0006 0446     		mov	r4, r0
 4906 0008 0D46     		mov	r5, r1
4225:ff.c          **** 	FRESULT res;
4226:ff.c          **** 	FATFS *fs;
4227:ff.c          **** 	DWORD clst, bcs, nsect;
4228:ff.c          **** 	FSIZE_t ifptr;
4229:ff.c          **** #if FF_USE_FASTSEEK
4230:ff.c          **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4231:ff.c          **** #endif
4232:ff.c          **** 
4233:ff.c          **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
 4907              		.loc 1 4233 0
 4908 000a 8046     		mov	r8, r0
 4909 000c 01A9     		add	r1, sp, #4
 4910              	.LVL748:
 4911 000e FFF7FEFF 		bl	validate
 4912              	.LVL749:
4234:ff.c          **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 4913              		.loc 1 4234 0
 4914 0012 0646     		mov	r6, r0
 4915 0014 00B9     		cbnz	r0, .L428
 4916              		.loc 1 4234 0 is_stmt 0 discriminator 1
 4917 0016 667C     		ldrb	r6, [r4, #17]	@ zero_extendqisi2
 4918              	.LVL750:
 4919              	.L428:
4235:ff.c          **** #if FF_FS_EXFAT && !FF_FS_READONLY
4236:ff.c          **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4237:ff.c          **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4238:ff.c          **** 	}
4239:ff.c          **** #endif
4240:ff.c          **** 	if (res != FR_OK) LEAVE_FF(fs, res);
 4920              		.loc 1 4240 0 is_stmt 1
 4921 0018 002E     		cmp	r6, #0
 4922 001a 40F0A680 		bne	.L450
4241:ff.c          **** 
4242:ff.c          **** #if FF_USE_FASTSEEK
4243:ff.c          **** 	if (fp->cltbl) {	/* Fast seek */
4244:ff.c          **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4245:ff.c          **** 			tbl = fp->cltbl;
4246:ff.c          **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4247:ff.c          **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4248:ff.c          **** 			if (cl != 0) {
4249:ff.c          **** 				do {
4250:ff.c          **** 					/* Get a fragment */
4251:ff.c          **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4252:ff.c          **** 					do {
4253:ff.c          **** 						pcl = cl; ncl++;
4254:ff.c          **** 						cl = get_fat(&fp->obj, cl);
4255:ff.c          **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4256:ff.c          **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4257:ff.c          **** 					} while (cl == pcl + 1);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 171


4258:ff.c          **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4259:ff.c          **** 						*tbl++ = ncl; *tbl++ = tcl;
4260:ff.c          **** 					}
4261:ff.c          **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4262:ff.c          **** 			}
4263:ff.c          **** 			*fp->cltbl = ulen;	/* Number of items used */
4264:ff.c          **** 			if (ulen <= tlen) {
4265:ff.c          **** 				*tbl = 0;		/* Terminate table */
4266:ff.c          **** 			} else {
4267:ff.c          **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4268:ff.c          **** 			}
4269:ff.c          **** 		} else {						/* Fast seek */
4270:ff.c          **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4271:ff.c          **** 			fp->fptr = ofs;				/* Set file pointer */
4272:ff.c          **** 			if (ofs > 0) {
4273:ff.c          **** 				fp->clust = clmt_clust(fp, ofs - 1);
4274:ff.c          **** 				dsc = clst2sect(fs, fp->clust);
4275:ff.c          **** 				if (dsc == 0) ABORT(fs, FR_INT_ERR);
4276:ff.c          **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4277:ff.c          **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4278:ff.c          **** #if !FF_FS_TINY
4279:ff.c          **** #if !FF_FS_READONLY
4280:ff.c          **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4281:ff.c          **** 						if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4282:ff.c          **** 						fp->flag &= (BYTE)~FA_DIRTY;
4283:ff.c          **** 					}
4284:ff.c          **** #endif
4285:ff.c          **** 					if (disk_read(fs->pdrv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current se
4286:ff.c          **** #endif
4287:ff.c          **** 					fp->sect = dsc;
4288:ff.c          **** 				}
4289:ff.c          **** 			}
4290:ff.c          **** 		}
4291:ff.c          **** 	} else
4292:ff.c          **** #endif
4293:ff.c          **** 
4294:ff.c          **** 	/* Normal Seek */
4295:ff.c          **** 	{
4296:ff.c          **** #if FF_FS_EXFAT
4297:ff.c          **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4 GiB - 1 if at F
4298:ff.c          **** #endif
4299:ff.c          **** 		if (ofs > fp->obj.objsize && (FF_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, 
 4923              		.loc 1 4299 0
 4924 001e E368     		ldr	r3, [r4, #12]
 4925 0020 AB42     		cmp	r3, r5
 4926 0022 04D2     		bcs	.L430
 4927              		.loc 1 4299 0 is_stmt 0 discriminator 1
 4928 0024 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 4929 0026 12F0020F 		tst	r2, #2
 4930 002a 00D1     		bne	.L430
4300:ff.c          **** 			ofs = fp->obj.objsize;
 4931              		.loc 1 4300 0 is_stmt 1
 4932 002c 1D46     		mov	r5, r3
 4933              	.LVL751:
 4934              	.L430:
4301:ff.c          **** 		}
4302:ff.c          **** 		ifptr = fp->fptr;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 172


 4935              		.loc 1 4302 0
 4936 002e 6369     		ldr	r3, [r4, #20]
 4937              	.LVL752:
4303:ff.c          **** 		fp->fptr = nsect = 0;
 4938              		.loc 1 4303 0
 4939 0030 0022     		movs	r2, #0
 4940 0032 6261     		str	r2, [r4, #20]
4304:ff.c          **** 		if (ofs > 0) {
 4941              		.loc 1 4304 0
 4942 0034 002D     		cmp	r5, #0
 4943 0036 62D0     		beq	.L452
4305:ff.c          **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 4944              		.loc 1 4305 0
 4945 0038 019A     		ldr	r2, [sp, #4]
 4946 003a 5789     		ldrh	r7, [r2, #10]
 4947 003c 7F02     		lsls	r7, r7, #9
 4948              	.LVL753:
4306:ff.c          **** 			if (ifptr > 0 &&
 4949              		.loc 1 4306 0
 4950 003e 6BB1     		cbz	r3, .L432
4307:ff.c          **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 4951              		.loc 1 4307 0 discriminator 1
 4952 0040 6A1E     		subs	r2, r5, #1
 4953 0042 B2FBF7F2 		udiv	r2, r2, r7
 4954 0046 013B     		subs	r3, r3, #1
 4955              	.LVL754:
 4956 0048 B3FBF7F1 		udiv	r1, r3, r7
4306:ff.c          **** 			if (ifptr > 0 &&
 4957              		.loc 1 4306 0 discriminator 1
 4958 004c 8A42     		cmp	r2, r1
 4959 004e 05D3     		bcc	.L432
4308:ff.c          **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 4960              		.loc 1 4308 0
 4961 0050 7A42     		negs	r2, r7
 4962 0052 1340     		ands	r3, r3, r2
 4963              	.LVL755:
 4964 0054 6361     		str	r3, [r4, #20]
4309:ff.c          **** 				ofs -= fp->fptr;
 4965              		.loc 1 4309 0
 4966 0056 ED1A     		subs	r5, r5, r3
 4967              	.LVL756:
4310:ff.c          **** 				clst = fp->clust;
 4968              		.loc 1 4310 0
 4969 0058 A169     		ldr	r1, [r4, #24]
 4970              	.LVL757:
 4971 005a 14E0     		b	.L433
 4972              	.LVL758:
 4973              	.L432:
4311:ff.c          **** 			} else {									/* When seek to back cluster, */
4312:ff.c          **** 				clst = fp->obj.sclust;					/* start from the first cluster */
 4974              		.loc 1 4312 0
 4975 005c A168     		ldr	r1, [r4, #8]
 4976              	.LVL759:
4313:ff.c          **** #if !FF_FS_READONLY
4314:ff.c          **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
 4977              		.loc 1 4314 0
 4978 005e 89B9     		cbnz	r1, .L434
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 173


4315:ff.c          **** 					clst = create_chain(&fp->obj, 0);
 4979              		.loc 1 4315 0
 4980 0060 2046     		mov	r0, r4
 4981 0062 FFF7FEFF 		bl	create_chain
 4982              	.LVL760:
 4983 0066 0146     		mov	r1, r0
 4984              	.LVL761:
4316:ff.c          **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 4985              		.loc 1 4316 0
 4986 0068 0128     		cmp	r0, #1
 4987 006a 03D1     		bne	.L435
 4988              		.loc 1 4316 0 is_stmt 0 discriminator 1
 4989 006c 0226     		movs	r6, #2
 4990              	.LVL762:
 4991 006e 6674     		strb	r6, [r4, #17]
 4992 0070 3046     		mov	r0, r6
 4993              	.LVL763:
 4994 0072 7FE0     		b	.L429
 4995              	.LVL764:
 4996              	.L435:
4317:ff.c          **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4997              		.loc 1 4317 0 is_stmt 1
 4998 0074 B0F1FF3F 		cmp	r0, #-1
 4999 0078 03D1     		bne	.L436
 5000              		.loc 1 4317 0 is_stmt 0 discriminator 1
 5001 007a 0126     		movs	r6, #1
 5002              	.LVL765:
 5003 007c 6674     		strb	r6, [r4, #17]
 5004 007e 3046     		mov	r0, r6
 5005              	.LVL766:
 5006 0080 78E0     		b	.L429
 5007              	.LVL767:
 5008              	.L436:
4318:ff.c          **** 					fp->obj.sclust = clst;
 5009              		.loc 1 4318 0 is_stmt 1
 5010 0082 A060     		str	r0, [r4, #8]
 5011              	.LVL768:
 5012              	.L434:
4319:ff.c          **** 				}
4320:ff.c          **** #endif
4321:ff.c          **** 				fp->clust = clst;
 5013              		.loc 1 4321 0
 5014 0084 A161     		str	r1, [r4, #24]
 5015              	.L433:
4322:ff.c          **** 			}
4323:ff.c          **** 			if (clst != 0) {
 5016              		.loc 1 4323 0
 5017 0086 29BB     		cbnz	r1, .L437
4303:ff.c          **** 		if (ofs > 0) {
 5018              		.loc 1 4303 0
 5019 0088 0025     		movs	r5, #0
 5020              	.LVL769:
 5021 008a 3BE0     		b	.L431
 5022              	.LVL770:
 5023              	.L444:
4324:ff.c          **** 				while (ofs > bcs) {						/* Cluster following loop */
4325:ff.c          **** 					ofs -= bcs; fp->fptr += bcs;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 174


 5024              		.loc 1 4325 0
 5025 008c ED1B     		subs	r5, r5, r7
 5026              	.LVL771:
 5027 008e 6369     		ldr	r3, [r4, #20]
 5028 0090 3B44     		add	r3, r3, r7
 5029 0092 6361     		str	r3, [r4, #20]
4326:ff.c          **** #if !FF_FS_READONLY
4327:ff.c          **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
 5030              		.loc 1 4327 0
 5031 0094 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 5032 0096 13F0020F 		tst	r3, #2
 5033 009a 05D0     		beq	.L438
4328:ff.c          **** 						if (FF_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize
4329:ff.c          **** 							fp->obj.objsize = fp->fptr;
4330:ff.c          **** 							fp->flag |= FA_MODIFIED;
4331:ff.c          **** 						}
4332:ff.c          **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
 5034              		.loc 1 4332 0
 5035 009c 4046     		mov	r0, r8
 5036 009e FFF7FEFF 		bl	create_chain
 5037              	.LVL772:
4333:ff.c          **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 5038              		.loc 1 4333 0
 5039 00a2 0146     		mov	r1, r0
 5040 00a4 20B9     		cbnz	r0, .L440
 5041 00a6 18E0     		b	.L453
 5042              	.LVL773:
 5043              	.L438:
4334:ff.c          **** 							ofs = 0; break;
4335:ff.c          **** 						}
4336:ff.c          **** 					} else
4337:ff.c          **** #endif
4338:ff.c          **** 					{
4339:ff.c          **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
 5044              		.loc 1 4339 0
 5045 00a8 4046     		mov	r0, r8
 5046 00aa FFF7FEFF 		bl	get_fat
 5047              	.LVL774:
 5048 00ae 0146     		mov	r1, r0
 5049              	.LVL775:
 5050              	.L440:
4340:ff.c          **** 					}
4341:ff.c          **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5051              		.loc 1 4341 0
 5052 00b0 B1F1FF3F 		cmp	r1, #-1
 5053 00b4 03D1     		bne	.L441
 5054              		.loc 1 4341 0 is_stmt 0 discriminator 1
 5055 00b6 0126     		movs	r6, #1
 5056              	.LVL776:
 5057 00b8 6674     		strb	r6, [r4, #17]
 5058 00ba 3046     		mov	r0, r6
 5059              	.LVL777:
 5060 00bc 5AE0     		b	.L429
 5061              	.LVL778:
 5062              	.L441:
4342:ff.c          **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 5063              		.loc 1 4342 0 is_stmt 1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 175


 5064 00be 0129     		cmp	r1, #1
 5065 00c0 03D9     		bls	.L442
 5066              		.loc 1 4342 0 is_stmt 0 discriminator 2
 5067 00c2 019B     		ldr	r3, [sp, #4]
 5068 00c4 5B69     		ldr	r3, [r3, #20]
 5069 00c6 9942     		cmp	r1, r3
 5070 00c8 03D3     		bcc	.L443
 5071              	.L442:
 5072              		.loc 1 4342 0 discriminator 3
 5073 00ca 0226     		movs	r6, #2
 5074              	.LVL779:
 5075 00cc 6674     		strb	r6, [r4, #17]
 5076 00ce 3046     		mov	r0, r6
 5077              	.LVL780:
 5078 00d0 50E0     		b	.L429
 5079              	.LVL781:
 5080              	.L443:
4343:ff.c          **** 					fp->clust = clst;
 5081              		.loc 1 4343 0 is_stmt 1
 5082 00d2 A161     		str	r1, [r4, #24]
 5083              	.LVL782:
 5084              	.L437:
4324:ff.c          **** 					ofs -= bcs; fp->fptr += bcs;
 5085              		.loc 1 4324 0
 5086 00d4 BD42     		cmp	r5, r7
 5087 00d6 D9D8     		bhi	.L444
 5088 00d8 00E0     		b	.L439
 5089              	.LVL783:
 5090              	.L453:
4334:ff.c          **** 						}
 5091              		.loc 1 4334 0
 5092 00da 0025     		movs	r5, #0
 5093              	.LVL784:
 5094              	.L439:
4344:ff.c          **** 				}
4345:ff.c          **** 				fp->fptr += ofs;
 5095              		.loc 1 4345 0
 5096 00dc 6369     		ldr	r3, [r4, #20]
 5097 00de 2B44     		add	r3, r3, r5
 5098 00e0 6361     		str	r3, [r4, #20]
4346:ff.c          **** 				if (ofs % SS(fs)) {
 5099              		.loc 1 4346 0
 5100 00e2 C5F30803 		ubfx	r3, r5, #0, #9
 5101 00e6 63B1     		cbz	r3, .L454
4347:ff.c          **** 					nsect = clst2sect(fs, clst);	/* Current sector */
 5102              		.loc 1 4347 0
 5103 00e8 0198     		ldr	r0, [sp, #4]
 5104 00ea FFF7FEFF 		bl	clst2sect
 5105              	.LVL785:
4348:ff.c          **** 					if (nsect == 0) ABORT(fs, FR_INT_ERR);
 5106              		.loc 1 4348 0
 5107 00ee 18B9     		cbnz	r0, .L445
 5108              		.loc 1 4348 0 is_stmt 0 discriminator 1
 5109 00f0 0226     		movs	r6, #2
 5110              	.LVL786:
 5111 00f2 6674     		strb	r6, [r4, #17]
 5112 00f4 3046     		mov	r0, r6
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 176


 5113              	.LVL787:
 5114 00f6 3DE0     		b	.L429
 5115              	.LVL788:
 5116              	.L445:
4349:ff.c          **** 					nsect += (DWORD)(ofs / SS(fs));
 5117              		.loc 1 4349 0 is_stmt 1
 5118 00f8 00EB5525 		add	r5, r0, r5, lsr #9
 5119              	.LVL789:
 5120 00fc 02E0     		b	.L431
 5121              	.LVL790:
 5122              	.L452:
4303:ff.c          **** 		if (ofs > 0) {
 5123              		.loc 1 4303 0
 5124 00fe 0025     		movs	r5, #0
 5125              	.LVL791:
 5126 0100 00E0     		b	.L431
 5127              	.LVL792:
 5128              	.L454:
 5129 0102 0025     		movs	r5, #0
 5130              	.LVL793:
 5131              	.L431:
4350:ff.c          **** 				}
4351:ff.c          **** 			}
4352:ff.c          **** 		}
4353:ff.c          **** 		if (!FF_FS_READONLY && fp->fptr > fp->obj.objsize) {	/* Set file change flag if the file size is 
 5132              		.loc 1 4353 0
 5133 0104 6369     		ldr	r3, [r4, #20]
 5134 0106 E268     		ldr	r2, [r4, #12]
 5135 0108 9342     		cmp	r3, r2
 5136 010a 04D9     		bls	.L446
4354:ff.c          **** 			fp->obj.objsize = fp->fptr;
 5137              		.loc 1 4354 0
 5138 010c E360     		str	r3, [r4, #12]
4355:ff.c          **** 			fp->flag |= FA_MODIFIED;
 5139              		.loc 1 4355 0
 5140 010e 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 5141 0110 42F04002 		orr	r2, r2, #64
 5142 0114 2274     		strb	r2, [r4, #16]
 5143              	.L446:
4356:ff.c          **** 		}
4357:ff.c          **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
 5144              		.loc 1 4357 0
 5145 0116 C3F30803 		ubfx	r3, r3, #0, #9
 5146 011a 43B3     		cbz	r3, .L455
 5147              		.loc 1 4357 0 is_stmt 0 discriminator 1
 5148 011c E269     		ldr	r2, [r4, #28]
 5149 011e 9542     		cmp	r5, r2
 5150 0120 27D0     		beq	.L456
4358:ff.c          **** #if !FF_FS_TINY
4359:ff.c          **** #if !FF_FS_READONLY
4360:ff.c          **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
 5151              		.loc 1 4360 0 is_stmt 1
 5152 0122 94F91030 		ldrsb	r3, [r4, #16]
 5153 0126 002B     		cmp	r3, #0
 5154 0128 0FDA     		bge	.L447
4361:ff.c          **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5155              		.loc 1 4361 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 177


 5156 012a 0123     		movs	r3, #1
 5157 012c 04F12801 		add	r1, r4, #40
 5158 0130 0198     		ldr	r0, [sp, #4]
 5159 0132 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5160 0134 FFF7FEFF 		bl	disk_write
 5161              	.LVL794:
 5162 0138 18B1     		cbz	r0, .L448
 5163              		.loc 1 4361 0 is_stmt 0 discriminator 1
 5164 013a 0126     		movs	r6, #1
 5165              	.LVL795:
 5166 013c 6674     		strb	r6, [r4, #17]
 5167 013e 3046     		mov	r0, r6
 5168 0140 18E0     		b	.L429
 5169              	.LVL796:
 5170              	.L448:
4362:ff.c          **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5171              		.loc 1 4362 0 is_stmt 1
 5172 0142 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 5173 0144 03F07F03 		and	r3, r3, #127
 5174 0148 2374     		strb	r3, [r4, #16]
 5175              	.L447:
4363:ff.c          **** 			}
4364:ff.c          **** #endif
4365:ff.c          **** 			if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cac
 5176              		.loc 1 4365 0
 5177 014a 0123     		movs	r3, #1
 5178 014c 2A46     		mov	r2, r5
 5179 014e 04F12801 		add	r1, r4, #40
 5180 0152 0198     		ldr	r0, [sp, #4]
 5181 0154 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5182 0156 FFF7FEFF 		bl	disk_read
 5183              	.LVL797:
 5184 015a 18B1     		cbz	r0, .L449
 5185              		.loc 1 4365 0 is_stmt 0 discriminator 1
 5186 015c 0126     		movs	r6, #1
 5187              	.LVL798:
 5188 015e 6674     		strb	r6, [r4, #17]
 5189 0160 3046     		mov	r0, r6
 5190 0162 07E0     		b	.L429
 5191              	.LVL799:
 5192              	.L449:
4366:ff.c          **** #endif
4367:ff.c          **** 			fp->sect = nsect;
 5193              		.loc 1 4367 0 is_stmt 1
 5194 0164 E561     		str	r5, [r4, #28]
4368:ff.c          **** 		}
4369:ff.c          **** 	}
4370:ff.c          **** 
4371:ff.c          **** 	LEAVE_FF(fs, res);
 5195              		.loc 1 4371 0
 5196 0166 3046     		mov	r0, r6
 5197 0168 04E0     		b	.L429
 5198              	.LVL800:
 5199              	.L450:
4240:ff.c          **** 
 5200              		.loc 1 4240 0
 5201 016a 3046     		mov	r0, r6
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 178


 5202 016c 02E0     		b	.L429
 5203              	.LVL801:
 5204              	.L455:
 5205              		.loc 1 4371 0
 5206 016e 3046     		mov	r0, r6
 5207 0170 00E0     		b	.L429
 5208              	.L456:
 5209 0172 3046     		mov	r0, r6
 5210              	.LVL802:
 5211              	.L429:
4372:ff.c          **** }
 5212              		.loc 1 4372 0
 5213 0174 02B0     		add	sp, sp, #8
 5214              		.cfi_def_cfa_offset 24
 5215              		@ sp needed
 5216 0176 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5217              		.cfi_endproc
 5218              	.LFE41:
 5219              		.size	f_lseek, .-f_lseek
 5220 017a 00BF     		.section	.text.f_opendir,"ax",%progbits
 5221              		.align	2
 5222              		.global	f_opendir
 5223              		.thumb
 5224              		.thumb_func
 5225              		.type	f_opendir, %function
 5226              	f_opendir:
 5227              	.LFB42:
4373:ff.c          **** 
4374:ff.c          **** 
4375:ff.c          **** 
4376:ff.c          **** #if FF_FS_MINIMIZE <= 1
4377:ff.c          **** /*-----------------------------------------------------------------------*/
4378:ff.c          **** /* Create a Directory Object                                             */
4379:ff.c          **** /*-----------------------------------------------------------------------*/
4380:ff.c          **** 
4381:ff.c          **** FRESULT f_opendir (
4382:ff.c          **** 	DIR* dp,			/* Pointer to directory object to create */
4383:ff.c          **** 	const TCHAR* path	/* Pointer to the directory path */
4384:ff.c          **** )
4385:ff.c          **** {
 5228              		.loc 1 4385 0
 5229              		.cfi_startproc
 5230              		@ args = 0, pretend = 0, frame = 16
 5231              		@ frame_needed = 0, uses_anonymous_args = 0
 5232              	.LVL803:
 5233 0000 30B5     		push	{r4, r5, lr}
 5234              		.cfi_def_cfa_offset 12
 5235              		.cfi_offset 4, -12
 5236              		.cfi_offset 5, -8
 5237              		.cfi_offset 14, -4
 5238 0002 85B0     		sub	sp, sp, #20
 5239              		.cfi_def_cfa_offset 32
 5240 0004 0191     		str	r1, [sp, #4]
4386:ff.c          **** 	FRESULT res;
4387:ff.c          **** 	FATFS *fs;
4388:ff.c          **** 	DEF_NAMBUF
4389:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 179


4390:ff.c          **** 
4391:ff.c          **** 	if (!dp) return FR_INVALID_OBJECT;
 5241              		.loc 1 4391 0
 5242 0006 78B3     		cbz	r0, .L463
 5243 0008 0546     		mov	r5, r0
4392:ff.c          **** 
4393:ff.c          **** 	/* Get logical drive */
4394:ff.c          **** 	res = find_volume(&path, &fs, 0);
 5244              		.loc 1 4394 0
 5245 000a 0022     		movs	r2, #0
 5246 000c 03A9     		add	r1, sp, #12
 5247              	.LVL804:
 5248 000e 01A8     		add	r0, sp, #4
 5249              	.LVL805:
 5250 0010 FFF7FEFF 		bl	find_volume
 5251              	.LVL806:
4395:ff.c          **** 	if (res == FR_OK) {
 5252              		.loc 1 4395 0
 5253 0014 0446     		mov	r4, r0
 5254 0016 10BB     		cbnz	r0, .L460
4396:ff.c          **** 		dp->obj.fs = fs;
 5255              		.loc 1 4396 0
 5256 0018 039B     		ldr	r3, [sp, #12]
 5257 001a 2B60     		str	r3, [r5]
4397:ff.c          **** 		INIT_NAMBUF(fs);
4398:ff.c          **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 5258              		.loc 1 4398 0
 5259 001c 0199     		ldr	r1, [sp, #4]
 5260 001e 2846     		mov	r0, r5
 5261              	.LVL807:
 5262 0020 FFF7FEFF 		bl	follow_path
 5263              	.LVL808:
4399:ff.c          **** 		if (res == FR_OK) {						/* Follow completed */
 5264              		.loc 1 4399 0
 5265 0024 0446     		mov	r4, r0
 5266 0026 B8B9     		cbnz	r0, .L461
4400:ff.c          **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 5267              		.loc 1 4400 0
 5268 0028 95F92B30 		ldrsb	r3, [r5, #43]
 5269 002c 002B     		cmp	r3, #0
 5270 002e 0ADB     		blt	.L462
4401:ff.c          **** 				if (dp->obj.attr & AM_DIR) {		/* This object is a sub-directory */
 5271              		.loc 1 4401 0
 5272 0030 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 5273 0032 13F0100F 		tst	r3, #16
 5274 0036 05D0     		beq	.L464
4402:ff.c          **** #if FF_FS_EXFAT
4403:ff.c          **** 					if (fs->fs_type == FS_EXFAT) {
4404:ff.c          **** 						dp->obj.c_scl = dp->obj.sclust;							/* Get containing directory inforamation */
4405:ff.c          **** 						dp->obj.c_size = ((DWORD)dp->obj.objsize & 0xFFFFFF00) | dp->obj.stat;
4406:ff.c          **** 						dp->obj.c_ofs = dp->blk_ofs;
4407:ff.c          **** 						init_alloc_info(fs, &dp->obj);	/* Get object allocation info */
4408:ff.c          **** 					} else
4409:ff.c          **** #endif
4410:ff.c          **** 					{
4411:ff.c          **** 						dp->obj.sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
 5275              		.loc 1 4411 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 180


 5276 0038 E969     		ldr	r1, [r5, #28]
 5277 003a 0398     		ldr	r0, [sp, #12]
 5278              	.LVL809:
 5279 003c FFF7FEFF 		bl	ld_clust
 5280              	.LVL810:
 5281 0040 A860     		str	r0, [r5, #8]
 5282 0042 00E0     		b	.L462
 5283              	.LVL811:
 5284              	.L464:
4412:ff.c          **** 					}
4413:ff.c          **** 				} else {						/* This object is a file */
4414:ff.c          **** 					res = FR_NO_PATH;
 5285              		.loc 1 4414 0
 5286 0044 0524     		movs	r4, #5
 5287              	.LVL812:
 5288              	.L462:
4415:ff.c          **** 				}
4416:ff.c          **** 			}
4417:ff.c          **** 			if (res == FR_OK) {
 5289              		.loc 1 4417 0
 5290 0046 3CB9     		cbnz	r4, .L461
4418:ff.c          **** 				dp->obj.id = fs->id;
 5291              		.loc 1 4418 0
 5292 0048 039B     		ldr	r3, [sp, #12]
 5293 004a DB88     		ldrh	r3, [r3, #6]
 5294 004c AB80     		strh	r3, [r5, #4]	@ movhi
4419:ff.c          **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 5295              		.loc 1 4419 0
 5296 004e 0021     		movs	r1, #0
 5297 0050 2846     		mov	r0, r5
 5298 0052 FFF7FEFF 		bl	dir_sdi
 5299              	.LVL813:
 5300 0056 0446     		mov	r4, r0
 5301              	.LVL814:
 5302              	.L461:
4420:ff.c          **** #if FF_FS_LOCK != 0
4421:ff.c          **** 				if (res == FR_OK) {
4422:ff.c          **** 					if (dp->obj.sclust != 0) {
4423:ff.c          **** 						dp->obj.lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4424:ff.c          **** 						if (!dp->obj.lockid) res = FR_TOO_MANY_OPEN_FILES;
4425:ff.c          **** 					} else {
4426:ff.c          **** 						dp->obj.lockid = 0;	/* Root directory need not to be locked */
4427:ff.c          **** 					}
4428:ff.c          **** 				}
4429:ff.c          **** #endif
4430:ff.c          **** 			}
4431:ff.c          **** 		}
4432:ff.c          **** 		FREE_NAMBUF();
4433:ff.c          **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 5303              		.loc 1 4433 0
 5304 0058 042C     		cmp	r4, #4
 5305 005a 00D1     		bne	.L460
 5306 005c 0524     		movs	r4, #5
 5307              	.LVL815:
 5308              	.L460:
4434:ff.c          **** 	}
4435:ff.c          **** 	if (res != FR_OK) dp->obj.fs = 0;		/* Invalidate the directory object if function faild */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 181


 5309              		.loc 1 4435 0
 5310 005e 2CB1     		cbz	r4, .L466
 5311              		.loc 1 4435 0 is_stmt 0 discriminator 1
 5312 0060 0023     		movs	r3, #0
 5313 0062 2B60     		str	r3, [r5]
4436:ff.c          **** 
4437:ff.c          **** 	LEAVE_FF(fs, res);
 5314              		.loc 1 4437 0 is_stmt 1 discriminator 1
 5315 0064 2046     		mov	r0, r4
 5316 0066 02E0     		b	.L459
 5317              	.LVL816:
 5318              	.L463:
4391:ff.c          **** 
 5319              		.loc 1 4391 0
 5320 0068 0920     		movs	r0, #9
 5321              	.LVL817:
 5322 006a 00E0     		b	.L459
 5323              	.LVL818:
 5324              	.L466:
 5325              		.loc 1 4437 0
 5326 006c 2046     		mov	r0, r4
 5327              	.LVL819:
 5328              	.L459:
4438:ff.c          **** }
 5329              		.loc 1 4438 0
 5330 006e 05B0     		add	sp, sp, #20
 5331              		.cfi_def_cfa_offset 12
 5332              		@ sp needed
 5333 0070 30BD     		pop	{r4, r5, pc}
 5334              		.cfi_endproc
 5335              	.LFE42:
 5336              		.size	f_opendir, .-f_opendir
 5337 0072 00BF     		.section	.text.f_closedir,"ax",%progbits
 5338              		.align	2
 5339              		.global	f_closedir
 5340              		.thumb
 5341              		.thumb_func
 5342              		.type	f_closedir, %function
 5343              	f_closedir:
 5344              	.LFB43:
4439:ff.c          **** 
4440:ff.c          **** 
4441:ff.c          **** 
4442:ff.c          **** 
4443:ff.c          **** /*-----------------------------------------------------------------------*/
4444:ff.c          **** /* Close Directory                                                       */
4445:ff.c          **** /*-----------------------------------------------------------------------*/
4446:ff.c          **** 
4447:ff.c          **** FRESULT f_closedir (
4448:ff.c          **** 	DIR *dp		/* Pointer to the directory object to be closed */
4449:ff.c          **** )
4450:ff.c          **** {
 5345              		.loc 1 4450 0
 5346              		.cfi_startproc
 5347              		@ args = 0, pretend = 0, frame = 8
 5348              		@ frame_needed = 0, uses_anonymous_args = 0
 5349              	.LVL820:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 182


 5350 0000 10B5     		push	{r4, lr}
 5351              		.cfi_def_cfa_offset 8
 5352              		.cfi_offset 4, -8
 5353              		.cfi_offset 14, -4
 5354 0002 82B0     		sub	sp, sp, #8
 5355              		.cfi_def_cfa_offset 16
 5356 0004 0446     		mov	r4, r0
4451:ff.c          **** 	FRESULT res;
4452:ff.c          **** 	FATFS *fs;
4453:ff.c          **** 
4454:ff.c          **** 
4455:ff.c          **** 	res = validate(&dp->obj, &fs);	/* Check validity of the file object */
 5357              		.loc 1 4455 0
 5358 0006 01A9     		add	r1, sp, #4
 5359 0008 FFF7FEFF 		bl	validate
 5360              	.LVL821:
4456:ff.c          **** 	if (res == FR_OK) {
 5361              		.loc 1 4456 0
 5362 000c 0346     		mov	r3, r0
 5363 000e 08B9     		cbnz	r0, .L469
4457:ff.c          **** #if FF_FS_LOCK != 0
4458:ff.c          **** 		if (dp->obj.lockid) res = dec_lock(dp->obj.lockid);	/* Decrement sub-directory open counter */
4459:ff.c          **** 		if (res == FR_OK) dp->obj.fs = 0;	/* Invalidate directory object */
4460:ff.c          **** #else
4461:ff.c          **** 		dp->obj.fs = 0;	/* Invalidate directory object */
 5364              		.loc 1 4461 0
 5365 0010 0022     		movs	r2, #0
 5366 0012 2260     		str	r2, [r4]
 5367              	.L469:
4462:ff.c          **** #endif
4463:ff.c          **** #if FF_FS_REENTRANT
4464:ff.c          **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4465:ff.c          **** #endif
4466:ff.c          **** 	}
4467:ff.c          **** 	return res;
4468:ff.c          **** }
 5368              		.loc 1 4468 0
 5369 0014 1846     		mov	r0, r3
 5370              	.LVL822:
 5371 0016 02B0     		add	sp, sp, #8
 5372              		.cfi_def_cfa_offset 8
 5373              		@ sp needed
 5374 0018 10BD     		pop	{r4, pc}
 5375              		.cfi_endproc
 5376              	.LFE43:
 5377              		.size	f_closedir, .-f_closedir
 5378 001a 00BF     		.section	.text.f_readdir,"ax",%progbits
 5379              		.align	2
 5380              		.global	f_readdir
 5381              		.thumb
 5382              		.thumb_func
 5383              		.type	f_readdir, %function
 5384              	f_readdir:
 5385              	.LFB44:
4469:ff.c          **** 
4470:ff.c          **** 
4471:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 183


4472:ff.c          **** 
4473:ff.c          **** /*-----------------------------------------------------------------------*/
4474:ff.c          **** /* Read Directory Entries in Sequence                                    */
4475:ff.c          **** /*-----------------------------------------------------------------------*/
4476:ff.c          **** 
4477:ff.c          **** FRESULT f_readdir (
4478:ff.c          **** 	DIR* dp,			/* Pointer to the open directory object */
4479:ff.c          **** 	FILINFO* fno		/* Pointer to file information to return */
4480:ff.c          **** )
4481:ff.c          **** {
 5386              		.loc 1 4481 0
 5387              		.cfi_startproc
 5388              		@ args = 0, pretend = 0, frame = 8
 5389              		@ frame_needed = 0, uses_anonymous_args = 0
 5390              	.LVL823:
 5391 0000 70B5     		push	{r4, r5, r6, lr}
 5392              		.cfi_def_cfa_offset 16
 5393              		.cfi_offset 4, -16
 5394              		.cfi_offset 5, -12
 5395              		.cfi_offset 6, -8
 5396              		.cfi_offset 14, -4
 5397 0002 82B0     		sub	sp, sp, #8
 5398              		.cfi_def_cfa_offset 24
 5399 0004 0546     		mov	r5, r0
 5400 0006 0E46     		mov	r6, r1
4482:ff.c          **** 	FRESULT res;
4483:ff.c          **** 	FATFS *fs;
4484:ff.c          **** 	DEF_NAMBUF
4485:ff.c          **** 
4486:ff.c          **** 
4487:ff.c          **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
 5401              		.loc 1 4487 0
 5402 0008 01A9     		add	r1, sp, #4
 5403              	.LVL824:
 5404 000a FFF7FEFF 		bl	validate
 5405              	.LVL825:
4488:ff.c          **** 	if (res == FR_OK) {
 5406              		.loc 1 4488 0
 5407 000e 0446     		mov	r4, r0
 5408 0010 C8B9     		cbnz	r0, .L472
4489:ff.c          **** 		if (!fno) {
 5409              		.loc 1 4489 0
 5410 0012 2EB9     		cbnz	r6, .L473
4490:ff.c          **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 5411              		.loc 1 4490 0
 5412 0014 0021     		movs	r1, #0
 5413 0016 2846     		mov	r0, r5
 5414              	.LVL826:
 5415 0018 FFF7FEFF 		bl	dir_sdi
 5416              	.LVL827:
 5417 001c 0446     		mov	r4, r0
 5418              	.LVL828:
 5419 001e 12E0     		b	.L472
 5420              	.LVL829:
 5421              	.L473:
4491:ff.c          **** 		} else {
4492:ff.c          **** 			INIT_NAMBUF(fs);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 184


4493:ff.c          **** 			res = dir_read_file(dp);		/* Read an item */
 5422              		.loc 1 4493 0
 5423 0020 0021     		movs	r1, #0
 5424 0022 2846     		mov	r0, r5
 5425              	.LVL830:
 5426 0024 FFF7FEFF 		bl	dir_read
 5427              	.LVL831:
4494:ff.c          **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 5428              		.loc 1 4494 0
 5429 0028 0428     		cmp	r0, #4
 5430 002a 00D0     		beq	.L474
4493:ff.c          **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 5431              		.loc 1 4493 0
 5432 002c 0446     		mov	r4, r0
 5433              	.L474:
 5434              	.LVL832:
4495:ff.c          **** 			if (res == FR_OK) {				/* A valid entry is found */
 5435              		.loc 1 4495 0
 5436 002e 54B9     		cbnz	r4, .L472
4496:ff.c          **** 				get_fileinfo(dp, fno);		/* Get the object information */
 5437              		.loc 1 4496 0
 5438 0030 3146     		mov	r1, r6
 5439 0032 2846     		mov	r0, r5
 5440 0034 FFF7FEFF 		bl	get_fileinfo
 5441              	.LVL833:
4497:ff.c          **** 				res = dir_next(dp, 0);		/* Increment index for next */
 5442              		.loc 1 4497 0
 5443 0038 0021     		movs	r1, #0
 5444 003a 2846     		mov	r0, r5
 5445 003c FFF7FEFF 		bl	dir_next
 5446              	.LVL834:
4498:ff.c          **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 5447              		.loc 1 4498 0
 5448 0040 0428     		cmp	r0, #4
 5449 0042 00D0     		beq	.L472
4497:ff.c          **** 				res = dir_next(dp, 0);		/* Increment index for next */
 5450              		.loc 1 4497 0
 5451 0044 0446     		mov	r4, r0
 5452              	.LVL835:
 5453              	.L472:
4499:ff.c          **** 			}
4500:ff.c          **** 			FREE_NAMBUF();
4501:ff.c          **** 		}
4502:ff.c          **** 	}
4503:ff.c          **** 	LEAVE_FF(fs, res);
4504:ff.c          **** }
 5454              		.loc 1 4504 0
 5455 0046 2046     		mov	r0, r4
 5456 0048 02B0     		add	sp, sp, #8
 5457              		.cfi_def_cfa_offset 16
 5458              		@ sp needed
 5459 004a 70BD     		pop	{r4, r5, r6, pc}
 5460              		.cfi_endproc
 5461              	.LFE44:
 5462              		.size	f_readdir, .-f_readdir
 5463              		.section	.text.f_stat,"ax",%progbits
 5464              		.align	2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 185


 5465              		.global	f_stat
 5466              		.thumb
 5467              		.thumb_func
 5468              		.type	f_stat, %function
 5469              	f_stat:
 5470              	.LFB45:
4505:ff.c          **** 
4506:ff.c          **** 
4507:ff.c          **** 
4508:ff.c          **** #if FF_USE_FIND
4509:ff.c          **** /*-----------------------------------------------------------------------*/
4510:ff.c          **** /* Find Next File                                                        */
4511:ff.c          **** /*-----------------------------------------------------------------------*/
4512:ff.c          **** 
4513:ff.c          **** FRESULT f_findnext (
4514:ff.c          **** 	DIR* dp,		/* Pointer to the open directory object */
4515:ff.c          **** 	FILINFO* fno	/* Pointer to the file information structure */
4516:ff.c          **** )
4517:ff.c          **** {
4518:ff.c          **** 	FRESULT res;
4519:ff.c          **** 
4520:ff.c          **** 
4521:ff.c          **** 	for (;;) {
4522:ff.c          **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4523:ff.c          **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4524:ff.c          **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4525:ff.c          **** #if FF_USE_LFN && FF_USE_FIND == 2
4526:ff.c          **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4527:ff.c          **** #endif
4528:ff.c          **** 	}
4529:ff.c          **** 	return res;
4530:ff.c          **** }
4531:ff.c          **** 
4532:ff.c          **** 
4533:ff.c          **** 
4534:ff.c          **** /*-----------------------------------------------------------------------*/
4535:ff.c          **** /* Find First File                                                       */
4536:ff.c          **** /*-----------------------------------------------------------------------*/
4537:ff.c          **** 
4538:ff.c          **** FRESULT f_findfirst (
4539:ff.c          **** 	DIR* dp,				/* Pointer to the blank directory object */
4540:ff.c          **** 	FILINFO* fno,			/* Pointer to the file information structure */
4541:ff.c          **** 	const TCHAR* path,		/* Pointer to the directory to open */
4542:ff.c          **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4543:ff.c          **** )
4544:ff.c          **** {
4545:ff.c          **** 	FRESULT res;
4546:ff.c          **** 
4547:ff.c          **** 
4548:ff.c          **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4549:ff.c          **** 	res = f_opendir(dp, path);		/* Open the target directory */
4550:ff.c          **** 	if (res == FR_OK) {
4551:ff.c          **** 		res = f_findnext(dp, fno);	/* Find the first item */
4552:ff.c          **** 	}
4553:ff.c          **** 	return res;
4554:ff.c          **** }
4555:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 186


4556:ff.c          **** #endif	/* FF_USE_FIND */
4557:ff.c          **** 
4558:ff.c          **** 
4559:ff.c          **** 
4560:ff.c          **** #if FF_FS_MINIMIZE == 0
4561:ff.c          **** /*-----------------------------------------------------------------------*/
4562:ff.c          **** /* Get File Status                                                       */
4563:ff.c          **** /*-----------------------------------------------------------------------*/
4564:ff.c          **** 
4565:ff.c          **** FRESULT f_stat (
4566:ff.c          **** 	const TCHAR* path,	/* Pointer to the file path */
4567:ff.c          **** 	FILINFO* fno		/* Pointer to file information to return */
4568:ff.c          **** )
4569:ff.c          **** {
 5471              		.loc 1 4569 0
 5472              		.cfi_startproc
 5473              		@ args = 0, pretend = 0, frame = 56
 5474              		@ frame_needed = 0, uses_anonymous_args = 0
 5475              	.LVL836:
 5476 0000 30B5     		push	{r4, r5, lr}
 5477              		.cfi_def_cfa_offset 12
 5478              		.cfi_offset 4, -12
 5479              		.cfi_offset 5, -8
 5480              		.cfi_offset 14, -4
 5481 0002 8FB0     		sub	sp, sp, #60
 5482              		.cfi_def_cfa_offset 72
 5483 0004 0190     		str	r0, [sp, #4]
 5484 0006 0D46     		mov	r5, r1
4570:ff.c          **** 	FRESULT res;
4571:ff.c          **** 	DIR dj;
4572:ff.c          **** 	DEF_NAMBUF
4573:ff.c          **** 
4574:ff.c          **** 
4575:ff.c          **** 	/* Get logical drive */
4576:ff.c          **** 	res = find_volume(&path, &dj.obj.fs, 0);
 5485              		.loc 1 4576 0
 5486 0008 0022     		movs	r2, #0
 5487 000a 03A9     		add	r1, sp, #12
 5488              	.LVL837:
 5489 000c 01A8     		add	r0, sp, #4
 5490              	.LVL838:
 5491 000e FFF7FEFF 		bl	find_volume
 5492              	.LVL839:
4577:ff.c          **** 	if (res == FR_OK) {
 5493              		.loc 1 4577 0
 5494 0012 0446     		mov	r4, r0
 5495 0014 80B9     		cbnz	r0, .L477
4578:ff.c          **** 		INIT_NAMBUF(dj.obj.fs);
4579:ff.c          **** 		res = follow_path(&dj, path);	/* Follow the file path */
 5496              		.loc 1 4579 0
 5497 0016 0199     		ldr	r1, [sp, #4]
 5498 0018 03A8     		add	r0, sp, #12
 5499              	.LVL840:
 5500 001a FFF7FEFF 		bl	follow_path
 5501              	.LVL841:
4580:ff.c          **** 		if (res == FR_OK) {				/* Follow completed */
 5502              		.loc 1 4580 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 187


 5503 001e 0446     		mov	r4, r0
 5504 0020 50B9     		cbnz	r0, .L477
4581:ff.c          **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 5505              		.loc 1 4581 0
 5506 0022 9DF93730 		ldrsb	r3, [sp, #55]
 5507 0026 002B     		cmp	r3, #0
 5508 0028 05DB     		blt	.L478
4582:ff.c          **** 				res = FR_INVALID_NAME;
4583:ff.c          **** 			} else {							/* Found an object */
4584:ff.c          **** 				if (fno) get_fileinfo(&dj, fno);
 5509              		.loc 1 4584 0
 5510 002a 2DB1     		cbz	r5, .L477
 5511              		.loc 1 4584 0 is_stmt 0 discriminator 1
 5512 002c 2946     		mov	r1, r5
 5513 002e 03A8     		add	r0, sp, #12
 5514              	.LVL842:
 5515 0030 FFF7FEFF 		bl	get_fileinfo
 5516              	.LVL843:
 5517 0034 00E0     		b	.L477
 5518              	.LVL844:
 5519              	.L478:
4582:ff.c          **** 				res = FR_INVALID_NAME;
 5520              		.loc 1 4582 0 is_stmt 1
 5521 0036 0624     		movs	r4, #6
 5522              	.LVL845:
 5523              	.L477:
4585:ff.c          **** 			}
4586:ff.c          **** 		}
4587:ff.c          **** 		FREE_NAMBUF();
4588:ff.c          **** 	}
4589:ff.c          **** 
4590:ff.c          **** 	LEAVE_FF(dj.obj.fs, res);
4591:ff.c          **** }
 5524              		.loc 1 4591 0
 5525 0038 2046     		mov	r0, r4
 5526 003a 0FB0     		add	sp, sp, #60
 5527              		.cfi_def_cfa_offset 12
 5528              		@ sp needed
 5529 003c 30BD     		pop	{r4, r5, pc}
 5530              		.cfi_endproc
 5531              	.LFE45:
 5532              		.size	f_stat, .-f_stat
 5533              		.section	.text.f_getfree,"ax",%progbits
 5534              		.align	2
 5535              		.global	f_getfree
 5536              		.thumb
 5537              		.thumb_func
 5538              		.type	f_getfree, %function
 5539              	f_getfree:
 5540              	.LFB46:
4592:ff.c          **** 
4593:ff.c          **** 
4594:ff.c          **** 
4595:ff.c          **** #if !FF_FS_READONLY
4596:ff.c          **** /*-----------------------------------------------------------------------*/
4597:ff.c          **** /* Get Number of Free Clusters                                           */
4598:ff.c          **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 188


4599:ff.c          **** 
4600:ff.c          **** FRESULT f_getfree (
4601:ff.c          **** 	const TCHAR* path,	/* Logical drive number */
4602:ff.c          **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4603:ff.c          **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding filesystem object */
4604:ff.c          **** )
4605:ff.c          **** {
 5541              		.loc 1 4605 0
 5542              		.cfi_startproc
 5543              		@ args = 0, pretend = 0, frame = 32
 5544              		@ frame_needed = 0, uses_anonymous_args = 0
 5545              	.LVL846:
 5546 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5547              		.cfi_def_cfa_offset 32
 5548              		.cfi_offset 4, -32
 5549              		.cfi_offset 5, -28
 5550              		.cfi_offset 6, -24
 5551              		.cfi_offset 7, -20
 5552              		.cfi_offset 8, -16
 5553              		.cfi_offset 9, -12
 5554              		.cfi_offset 10, -8
 5555              		.cfi_offset 14, -4
 5556 0004 88B0     		sub	sp, sp, #32
 5557              		.cfi_def_cfa_offset 64
 5558 0006 0190     		str	r0, [sp, #4]
 5559 0008 8946     		mov	r9, r1
 5560 000a 1446     		mov	r4, r2
4606:ff.c          **** 	FRESULT res;
4607:ff.c          **** 	FATFS *fs;
4608:ff.c          **** 	DWORD nfree, clst, sect, stat;
4609:ff.c          **** 	UINT i;
4610:ff.c          **** 	FFOBJID obj;
4611:ff.c          **** 
4612:ff.c          **** 
4613:ff.c          **** 	/* Get logical drive */
4614:ff.c          **** 	res = find_volume(&path, &fs, 0);
 5561              		.loc 1 4614 0
 5562 000c 0022     		movs	r2, #0
 5563              	.LVL847:
 5564 000e 07A9     		add	r1, sp, #28
 5565              	.LVL848:
 5566 0010 01A8     		add	r0, sp, #4
 5567              	.LVL849:
 5568 0012 FFF7FEFF 		bl	find_volume
 5569              	.LVL850:
4615:ff.c          **** 	if (res == FR_OK) {
 5570              		.loc 1 4615 0
 5571 0016 8046     		mov	r8, r0
 5572 0018 0028     		cmp	r0, #0
 5573 001a 54D1     		bne	.L481
4616:ff.c          **** 		*fatfs = fs;				/* Return ptr to the fs object */
 5574              		.loc 1 4616 0
 5575 001c 079B     		ldr	r3, [sp, #28]
 5576 001e 2360     		str	r3, [r4]
4617:ff.c          **** 		/* If free_clst is valid, return it without full FAT scan */
4618:ff.c          **** 		if (fs->free_clst <= fs->n_fatent - 2) {
 5577              		.loc 1 4618 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 189


 5578 0020 1A69     		ldr	r2, [r3, #16]
 5579 0022 5D69     		ldr	r5, [r3, #20]
 5580 0024 A91E     		subs	r1, r5, #2
 5581 0026 8A42     		cmp	r2, r1
 5582 0028 02D8     		bhi	.L482
4619:ff.c          **** 			*nclst = fs->free_clst;
 5583              		.loc 1 4619 0
 5584 002a C9F80020 		str	r2, [r9]
 5585 002e 4AE0     		b	.L481
 5586              	.L482:
 5587              	.LVL851:
4620:ff.c          **** 		} else {
4621:ff.c          **** 			/* Scan FAT to obtain number of free clusters */
4622:ff.c          **** 			nfree = 0;
4623:ff.c          **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 5588              		.loc 1 4623 0
 5589 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5590 0032 012A     		cmp	r2, #1
 5591 0034 13D1     		bne	.L483
 5592              	.LVL852:
4624:ff.c          **** 				clst = 2; obj.fs = fs;
 5593              		.loc 1 4624 0
 5594 0036 0393     		str	r3, [sp, #12]
 5595 0038 0224     		movs	r4, #2
 5596              	.LVL853:
4622:ff.c          **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 5597              		.loc 1 4622 0
 5598 003a 0026     		movs	r6, #0
 5599              	.LVL854:
 5600              	.L486:
4625:ff.c          **** 				do {
4626:ff.c          **** 					stat = get_fat(&obj, clst);
 5601              		.loc 1 4626 0
 5602 003c 2146     		mov	r1, r4
 5603 003e 03A8     		add	r0, sp, #12
 5604 0040 FFF7FEFF 		bl	get_fat
 5605              	.LVL855:
4627:ff.c          **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 5606              		.loc 1 4627 0
 5607 0044 B0F1FF3F 		cmp	r0, #-1
 5608 0048 30D0     		beq	.L493
4628:ff.c          **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 5609              		.loc 1 4628 0
 5610 004a 0128     		cmp	r0, #1
 5611 004c 31D0     		beq	.L494
4629:ff.c          **** 					if (stat == 0) nfree++;
 5612              		.loc 1 4629 0
 5613 004e 00B9     		cbnz	r0, .L485
 5614              		.loc 1 4629 0 is_stmt 0 discriminator 1
 5615 0050 0136     		adds	r6, r6, #1
 5616              	.LVL856:
 5617              	.L485:
4630:ff.c          **** 				} while (++clst < fs->n_fatent);
 5618              		.loc 1 4630 0 is_stmt 1
 5619 0052 0134     		adds	r4, r4, #1
 5620              	.LVL857:
 5621 0054 079B     		ldr	r3, [sp, #28]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 190


 5622 0056 5B69     		ldr	r3, [r3, #20]
 5623 0058 9C42     		cmp	r4, r3
 5624 005a EFD3     		bcc	.L486
 5625 005c 2BE0     		b	.L484
 5626              	.LVL858:
 5627              	.L483:
4631:ff.c          **** 			} else {
4632:ff.c          **** #if FF_FS_EXFAT
4633:ff.c          **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan allocation bitmap */
4634:ff.c          **** 					BYTE bm;
4635:ff.c          **** 					UINT b;
4636:ff.c          **** 
4637:ff.c          **** 					clst = fs->n_fatent - 2;	/* Number of clusters */
4638:ff.c          **** 					sect = fs->database;		/* Assuming bitmap starts at cluster 2 */
4639:ff.c          **** 					i = 0;						/* Offset in the sector */
4640:ff.c          **** 					do {	/* Counts numbuer of bits with zero in the bitmap */
4641:ff.c          **** 						if (i == 0) {
4642:ff.c          **** 							res = move_window(fs, sect++);
4643:ff.c          **** 							if (res != FR_OK) break;
4644:ff.c          **** 						}
4645:ff.c          **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4646:ff.c          **** 							if (!(bm & 1)) nfree++;
4647:ff.c          **** 							bm >>= 1;
4648:ff.c          **** 						}
4649:ff.c          **** 						i = (i + 1) % SS(fs);
4650:ff.c          **** 					} while (clst);
4651:ff.c          **** 				} else
4652:ff.c          **** #endif
4653:ff.c          **** 				{	/* FAT16/32: Scan WORD/DWORD FAT entries */
4654:ff.c          **** 					clst = fs->n_fatent;	/* Number of entries */
4655:ff.c          **** 					sect = fs->fatbase;		/* Top of the FAT */
 5628              		.loc 1 4655 0
 5629 005e 1F6A     		ldr	r7, [r3, #32]
 5630              	.LVL859:
4656:ff.c          **** 					i = 0;					/* Offset in the sector */
 5631              		.loc 1 4656 0
 5632 0060 0024     		movs	r4, #0
 5633              	.LVL860:
4622:ff.c          **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 5634              		.loc 1 4622 0
 5635 0062 2646     		mov	r6, r4
 5636              	.LVL861:
 5637              	.L492:
4657:ff.c          **** 					do {	/* Counts numbuer of entries with zero in the FAT */
4658:ff.c          **** 						if (i == 0) {
 5638              		.loc 1 4658 0
 5639 0064 44B9     		cbnz	r4, .L487
4659:ff.c          **** 							res = move_window(fs, sect++);
 5640              		.loc 1 4659 0
 5641 0066 07F1010A 		add	r10, r7, #1
 5642              	.LVL862:
 5643 006a 3946     		mov	r1, r7
 5644 006c 0798     		ldr	r0, [sp, #28]
 5645 006e FFF7FEFF 		bl	move_window
 5646              	.LVL863:
4660:ff.c          **** 							if (res != FR_OK) break;
 5647              		.loc 1 4660 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 191


 5648 0072 8046     		mov	r8, r0
 5649 0074 F8B9     		cbnz	r0, .L484
4659:ff.c          **** 							res = move_window(fs, sect++);
 5650              		.loc 1 4659 0
 5651 0076 5746     		mov	r7, r10
 5652              	.LVL864:
 5653              	.L487:
4661:ff.c          **** 						}
4662:ff.c          **** 						if (fs->fs_type == FS_FAT16) {
 5654              		.loc 1 4662 0
 5655 0078 0798     		ldr	r0, [sp, #28]
 5656 007a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 5657 007c 022B     		cmp	r3, #2
 5658 007e 07D1     		bne	.L488
4663:ff.c          **** 							if (ld_word(fs->win + i) == 0) nfree++;
 5659              		.loc 1 4663 0
 5660 0080 3030     		adds	r0, r0, #48
 5661 0082 2044     		add	r0, r0, r4
 5662 0084 FFF7FEFF 		bl	ld_word
 5663              	.LVL865:
 5664 0088 00B9     		cbnz	r0, .L489
 5665              		.loc 1 4663 0 is_stmt 0 discriminator 1
 5666 008a 0136     		adds	r6, r6, #1
 5667              	.LVL866:
 5668              	.L489:
4664:ff.c          **** 							i += 2;
 5669              		.loc 1 4664 0 is_stmt 1
 5670 008c 0234     		adds	r4, r4, #2
 5671              	.LVL867:
 5672 008e 08E0     		b	.L490
 5673              	.L488:
4665:ff.c          **** 						} else {
4666:ff.c          **** 							if ((ld_dword(fs->win + i) & 0x0FFFFFFF) == 0) nfree++;
 5674              		.loc 1 4666 0
 5675 0090 3030     		adds	r0, r0, #48
 5676 0092 2044     		add	r0, r0, r4
 5677 0094 FFF7FEFF 		bl	ld_dword
 5678              	.LVL868:
 5679 0098 20F07040 		bic	r0, r0, #-268435456
 5680 009c 00B9     		cbnz	r0, .L491
 5681              		.loc 1 4666 0 is_stmt 0 discriminator 1
 5682 009e 0136     		adds	r6, r6, #1
 5683              	.LVL869:
 5684              	.L491:
4667:ff.c          **** 							i += 4;
 5685              		.loc 1 4667 0 is_stmt 1
 5686 00a0 0434     		adds	r4, r4, #4
 5687              	.LVL870:
 5688              	.L490:
4668:ff.c          **** 						}
4669:ff.c          **** 						i %= SS(fs);
 5689              		.loc 1 4669 0
 5690 00a2 C4F30804 		ubfx	r4, r4, #0, #9
 5691              	.LVL871:
4670:ff.c          **** 					} while (--clst);
 5692              		.loc 1 4670 0
 5693 00a6 013D     		subs	r5, r5, #1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 192


 5694              	.LVL872:
 5695 00a8 DCD1     		bne	.L492
 5696 00aa 04E0     		b	.L484
 5697              	.LVL873:
 5698              	.L493:
4627:ff.c          **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 5699              		.loc 1 4627 0
 5700 00ac 4FF00108 		mov	r8, #1
 5701 00b0 01E0     		b	.L484
 5702              	.L494:
4628:ff.c          **** 					if (stat == 0) nfree++;
 5703              		.loc 1 4628 0
 5704 00b2 4FF00208 		mov	r8, #2
 5705              	.LVL874:
 5706              	.L484:
4671:ff.c          **** 				}
4672:ff.c          **** 			}
4673:ff.c          **** 			*nclst = nfree;			/* Return the free clusters */
 5707              		.loc 1 4673 0
 5708 00b6 C9F80060 		str	r6, [r9]
4674:ff.c          **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 5709              		.loc 1 4674 0
 5710 00ba 079B     		ldr	r3, [sp, #28]
 5711 00bc 1E61     		str	r6, [r3, #16]
4675:ff.c          **** 			fs->fsi_flag |= 1;		/* FAT32: FSInfo is to be updated */
 5712              		.loc 1 4675 0
 5713 00be 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 5714 00c0 42F00102 		orr	r2, r2, #1
 5715 00c4 1A71     		strb	r2, [r3, #4]
 5716              	.LVL875:
 5717              	.L481:
4676:ff.c          **** 		}
4677:ff.c          **** 	}
4678:ff.c          **** 
4679:ff.c          **** 	LEAVE_FF(fs, res);
4680:ff.c          **** }
 5718              		.loc 1 4680 0
 5719 00c6 4046     		mov	r0, r8
 5720 00c8 08B0     		add	sp, sp, #32
 5721              		.cfi_def_cfa_offset 32
 5722              		@ sp needed
 5723 00ca BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5724              		.cfi_endproc
 5725              	.LFE46:
 5726              		.size	f_getfree, .-f_getfree
 5727 00ce 00BF     		.section	.text.f_truncate,"ax",%progbits
 5728              		.align	2
 5729              		.global	f_truncate
 5730              		.thumb
 5731              		.thumb_func
 5732              		.type	f_truncate, %function
 5733              	f_truncate:
 5734              	.LFB47:
4681:ff.c          **** 
4682:ff.c          **** 
4683:ff.c          **** 
4684:ff.c          **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 193


4685:ff.c          **** /*-----------------------------------------------------------------------*/
4686:ff.c          **** /* Truncate File                                                         */
4687:ff.c          **** /*-----------------------------------------------------------------------*/
4688:ff.c          **** 
4689:ff.c          **** FRESULT f_truncate (
4690:ff.c          **** 	FIL* fp		/* Pointer to the file object */
4691:ff.c          **** )
4692:ff.c          **** {
 5735              		.loc 1 4692 0
 5736              		.cfi_startproc
 5737              		@ args = 0, pretend = 0, frame = 8
 5738              		@ frame_needed = 0, uses_anonymous_args = 0
 5739              	.LVL876:
 5740 0000 30B5     		push	{r4, r5, lr}
 5741              		.cfi_def_cfa_offset 12
 5742              		.cfi_offset 4, -12
 5743              		.cfi_offset 5, -8
 5744              		.cfi_offset 14, -4
 5745 0002 83B0     		sub	sp, sp, #12
 5746              		.cfi_def_cfa_offset 24
 5747 0004 0546     		mov	r5, r0
4693:ff.c          **** 	FRESULT res;
4694:ff.c          **** 	FATFS *fs;
4695:ff.c          **** 	DWORD ncl;
4696:ff.c          **** 
4697:ff.c          **** 
4698:ff.c          **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 5748              		.loc 1 4698 0
 5749 0006 01A9     		add	r1, sp, #4
 5750 0008 FFF7FEFF 		bl	validate
 5751              	.LVL877:
4699:ff.c          **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 5752              		.loc 1 4699 0
 5753 000c 0028     		cmp	r0, #0
 5754 000e 47D1     		bne	.L503
 5755              		.loc 1 4699 0 is_stmt 0 discriminator 2
 5756 0010 6C7C     		ldrb	r4, [r5, #17]	@ zero_extendqisi2
 5757              	.LVL878:
 5758 0012 002C     		cmp	r4, #0
 5759 0014 45D1     		bne	.L504
4700:ff.c          **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5760              		.loc 1 4700 0 is_stmt 1
 5761 0016 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 5762 0018 13F0020F 		tst	r3, #2
 5763 001c 43D0     		beq	.L505
4701:ff.c          **** 
4702:ff.c          **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
 5764              		.loc 1 4702 0
 5765 001e 6B69     		ldr	r3, [r5, #20]
 5766 0020 EA68     		ldr	r2, [r5, #12]
 5767 0022 9342     		cmp	r3, r2
 5768 0024 41D2     		bcs	.L506
4703:ff.c          **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 5769              		.loc 1 4703 0
 5770 0026 43B9     		cbnz	r3, .L498
4704:ff.c          **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 5771              		.loc 1 4704 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 194


 5772 0028 0022     		movs	r2, #0
 5773 002a A968     		ldr	r1, [r5, #8]
 5774 002c 2846     		mov	r0, r5
 5775 002e FFF7FEFF 		bl	remove_chain
 5776              	.LVL879:
 5777 0032 0446     		mov	r4, r0
 5778              	.LVL880:
4705:ff.c          **** 			fp->obj.sclust = 0;
 5779              		.loc 1 4705 0
 5780 0034 0023     		movs	r3, #0
 5781 0036 AB60     		str	r3, [r5, #8]
 5782 0038 15E0     		b	.L499
 5783              	.L498:
4706:ff.c          **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4707:ff.c          **** 			ncl = get_fat(&fp->obj, fp->clust);
 5784              		.loc 1 4707 0
 5785 003a A969     		ldr	r1, [r5, #24]
 5786 003c 2846     		mov	r0, r5
 5787 003e FFF7FEFF 		bl	get_fat
 5788              	.LVL881:
4708:ff.c          **** 			res = FR_OK;
4709:ff.c          **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
 5789              		.loc 1 4709 0
 5790 0042 B0F1FF3F 		cmp	r0, #-1
 5791 0046 00D1     		bne	.L500
 5792 0048 0124     		movs	r4, #1
 5793              	.L500:
 5794              	.LVL882:
4710:ff.c          **** 			if (ncl == 1) res = FR_INT_ERR;
 5795              		.loc 1 4710 0
 5796 004a 0128     		cmp	r0, #1
 5797 004c 00D1     		bne	.L501
 5798 004e 0224     		movs	r4, #2
 5799              	.LVL883:
 5800              	.L501:
4711:ff.c          **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 5801              		.loc 1 4711 0
 5802 0050 4CB9     		cbnz	r4, .L499
 5803              		.loc 1 4711 0 is_stmt 0 discriminator 1
 5804 0052 019B     		ldr	r3, [sp, #4]
 5805 0054 5B69     		ldr	r3, [r3, #20]
 5806 0056 9842     		cmp	r0, r3
 5807 0058 05D2     		bcs	.L499
4712:ff.c          **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 5808              		.loc 1 4712 0 is_stmt 1
 5809 005a AA69     		ldr	r2, [r5, #24]
 5810 005c 0146     		mov	r1, r0
 5811 005e 2846     		mov	r0, r5
 5812              	.LVL884:
 5813 0060 FFF7FEFF 		bl	remove_chain
 5814              	.LVL885:
 5815 0064 0446     		mov	r4, r0
 5816              	.LVL886:
 5817              	.L499:
4713:ff.c          **** 			}
4714:ff.c          **** 		}
4715:ff.c          **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current read/write point */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 195


 5818              		.loc 1 4715 0
 5819 0066 6B69     		ldr	r3, [r5, #20]
 5820 0068 EB60     		str	r3, [r5, #12]
4716:ff.c          **** 		fp->flag |= FA_MODIFIED;
 5821              		.loc 1 4716 0
 5822 006a 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 5823 006c 43F04003 		orr	r3, r3, #64
 5824 0070 2B74     		strb	r3, [r5, #16]
4717:ff.c          **** #if !FF_FS_TINY
4718:ff.c          **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
 5825              		.loc 1 4718 0
 5826 0072 8CB9     		cbnz	r4, .L502
 5827              		.loc 1 4718 0 is_stmt 0 discriminator 1
 5828 0074 13F0800F 		tst	r3, #128
 5829 0078 0ED0     		beq	.L502
4719:ff.c          **** 			if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) {
 5830              		.loc 1 4719 0 is_stmt 1
 5831 007a 0123     		movs	r3, #1
 5832 007c EA69     		ldr	r2, [r5, #28]
 5833 007e 05F12801 		add	r1, r5, #40
 5834 0082 0198     		ldr	r0, [sp, #4]
 5835 0084 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 5836 0086 FFF7FEFF 		bl	disk_write
 5837              	.LVL887:
 5838 008a 20B9     		cbnz	r0, .L509
4720:ff.c          **** 				res = FR_DISK_ERR;
4721:ff.c          **** 			} else {
4722:ff.c          **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5839              		.loc 1 4722 0
 5840 008c 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 5841 008e 03F07F03 		and	r3, r3, #127
 5842 0092 2B74     		strb	r3, [r5, #16]
 5843 0094 00E0     		b	.L502
 5844              	.L509:
4720:ff.c          **** 				res = FR_DISK_ERR;
 5845              		.loc 1 4720 0
 5846 0096 0124     		movs	r4, #1
 5847              	.LVL888:
 5848              	.L502:
4723:ff.c          **** 			}
4724:ff.c          **** 		}
4725:ff.c          **** #endif
4726:ff.c          **** 		if (res != FR_OK) ABORT(fs, res);
 5849              		.loc 1 4726 0
 5850 0098 4CB1     		cbz	r4, .L510
 5851              		.loc 1 4726 0 is_stmt 0 discriminator 1
 5852 009a 6C74     		strb	r4, [r5, #17]
 5853 009c 2046     		mov	r0, r4
 5854 009e 07E0     		b	.L497
 5855              	.LVL889:
 5856              	.L503:
 5857 00a0 06E0     		b	.L497
 5858              	.LVL890:
 5859              	.L504:
4699:ff.c          **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5860              		.loc 1 4699 0 is_stmt 1
 5861 00a2 2046     		mov	r0, r4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 196


 5862 00a4 04E0     		b	.L497
 5863              	.L505:
4700:ff.c          **** 
 5864              		.loc 1 4700 0
 5865 00a6 0720     		movs	r0, #7
 5866 00a8 02E0     		b	.L497
 5867              	.L506:
4699:ff.c          **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5868              		.loc 1 4699 0
 5869 00aa 2046     		mov	r0, r4
 5870 00ac 00E0     		b	.L497
 5871              	.L510:
 5872 00ae 2046     		mov	r0, r4
 5873              	.LVL891:
 5874              	.L497:
4727:ff.c          **** 	}
4728:ff.c          **** 
4729:ff.c          **** 	LEAVE_FF(fs, res);
4730:ff.c          **** }
 5875              		.loc 1 4730 0
 5876 00b0 03B0     		add	sp, sp, #12
 5877              		.cfi_def_cfa_offset 12
 5878              		@ sp needed
 5879 00b2 30BD     		pop	{r4, r5, pc}
 5880              		.cfi_endproc
 5881              	.LFE47:
 5882              		.size	f_truncate, .-f_truncate
 5883              		.section	.text.f_unlink,"ax",%progbits
 5884              		.align	2
 5885              		.global	f_unlink
 5886              		.thumb
 5887              		.thumb_func
 5888              		.type	f_unlink, %function
 5889              	f_unlink:
 5890              	.LFB48:
4731:ff.c          **** 
4732:ff.c          **** 
4733:ff.c          **** 
4734:ff.c          **** 
4735:ff.c          **** /*-----------------------------------------------------------------------*/
4736:ff.c          **** /* Delete a File/Directory                                               */
4737:ff.c          **** /*-----------------------------------------------------------------------*/
4738:ff.c          **** 
4739:ff.c          **** FRESULT f_unlink (
4740:ff.c          **** 	const TCHAR* path		/* Pointer to the file or directory path */
4741:ff.c          **** )
4742:ff.c          **** {
 5891              		.loc 1 4742 0
 5892              		.cfi_startproc
 5893              		@ args = 0, pretend = 0, frame = 104
 5894              		@ frame_needed = 0, uses_anonymous_args = 0
 5895              	.LVL892:
 5896 0000 70B5     		push	{r4, r5, r6, lr}
 5897              		.cfi_def_cfa_offset 16
 5898              		.cfi_offset 4, -16
 5899              		.cfi_offset 5, -12
 5900              		.cfi_offset 6, -8
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 197


 5901              		.cfi_offset 14, -4
 5902 0002 9AB0     		sub	sp, sp, #104
 5903              		.cfi_def_cfa_offset 120
 5904 0004 0190     		str	r0, [sp, #4]
 5905              	.LVL893:
4743:ff.c          **** 	FRESULT res;
4744:ff.c          **** 	DIR dj, sdj;
4745:ff.c          **** 	DWORD dclst = 0;
4746:ff.c          **** 	FATFS *fs;
4747:ff.c          **** #if FF_FS_EXFAT
4748:ff.c          **** 	FFOBJID obj;
4749:ff.c          **** #endif
4750:ff.c          **** 	DEF_NAMBUF
4751:ff.c          **** 
4752:ff.c          **** 
4753:ff.c          **** 	/* Get logical drive */
4754:ff.c          **** 	res = find_volume(&path, &fs, FA_WRITE);
 5906              		.loc 1 4754 0
 5907 0006 0222     		movs	r2, #2
 5908 0008 03A9     		add	r1, sp, #12
 5909 000a 01A8     		add	r0, sp, #4
 5910              	.LVL894:
 5911 000c FFF7FEFF 		bl	find_volume
 5912              	.LVL895:
4755:ff.c          **** 	if (res == FR_OK) {
 5913              		.loc 1 4755 0
 5914 0010 0446     		mov	r4, r0
 5915 0012 0028     		cmp	r0, #0
 5916 0014 47D1     		bne	.L513
4756:ff.c          **** 		dj.obj.fs = fs;
 5917              		.loc 1 4756 0
 5918 0016 039B     		ldr	r3, [sp, #12]
 5919 0018 0F93     		str	r3, [sp, #60]
4757:ff.c          **** 		INIT_NAMBUF(fs);
4758:ff.c          **** 		res = follow_path(&dj, path);		/* Follow the file path */
 5920              		.loc 1 4758 0
 5921 001a 0199     		ldr	r1, [sp, #4]
 5922 001c 0FA8     		add	r0, sp, #60
 5923              	.LVL896:
 5924 001e FFF7FEFF 		bl	follow_path
 5925              	.LVL897:
4759:ff.c          **** 		if (FF_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4760:ff.c          **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4761:ff.c          **** 		}
4762:ff.c          **** #if FF_FS_LOCK != 0
4763:ff.c          **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4764:ff.c          **** #endif
4765:ff.c          **** 		if (res == FR_OK) {					/* The object is accessible */
 5926              		.loc 1 4765 0
 5927 0022 0446     		mov	r4, r0
 5928 0024 0028     		cmp	r0, #0
 5929 0026 3ED1     		bne	.L513
4766:ff.c          **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 5930              		.loc 1 4766 0
 5931 0028 9DF96730 		ldrsb	r3, [sp, #103]
 5932 002c 002B     		cmp	r3, #0
 5933 002e 05DB     		blt	.L518
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 198


4767:ff.c          **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4768:ff.c          **** 			} else {
4769:ff.c          **** 				if (dj.obj.attr & AM_RDO) {
 5934              		.loc 1 4769 0
 5935 0030 9DF84230 		ldrb	r3, [sp, #66]	@ zero_extendqisi2
 5936 0034 13F0010F 		tst	r3, #1
 5937 0038 02D1     		bne	.L519
 5938 003a 02E0     		b	.L514
 5939              	.L518:
4767:ff.c          **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 5940              		.loc 1 4767 0
 5941 003c 0624     		movs	r4, #6
 5942 003e 00E0     		b	.L514
 5943              	.L519:
4770:ff.c          **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 5944              		.loc 1 4770 0
 5945 0040 0724     		movs	r4, #7
 5946              	.L514:
 5947              	.LVL898:
4771:ff.c          **** 				}
4772:ff.c          **** 			}
4773:ff.c          **** 			if (res == FR_OK) {
 5948              		.loc 1 4773 0
 5949 0042 ECB9     		cbnz	r4, .L520
4774:ff.c          **** #if FF_FS_EXFAT
4775:ff.c          **** 				obj.fs = fs;
4776:ff.c          **** 				if (fs->fs_type == FS_EXFAT) {
4777:ff.c          **** 					init_alloc_info(fs, &obj);
4778:ff.c          **** 					dclst = obj.sclust;
4779:ff.c          **** 				} else
4780:ff.c          **** #endif
4781:ff.c          **** 				{
4782:ff.c          **** 					dclst = ld_clust(fs, dj.dir);
 5950              		.loc 1 4782 0
 5951 0044 039E     		ldr	r6, [sp, #12]
 5952 0046 1699     		ldr	r1, [sp, #88]
 5953 0048 3046     		mov	r0, r6
 5954 004a FFF7FEFF 		bl	ld_clust
 5955              	.LVL899:
 5956 004e 0546     		mov	r5, r0
 5957              	.LVL900:
4783:ff.c          **** 				}
4784:ff.c          **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
 5958              		.loc 1 4784 0
 5959 0050 9DF84230 		ldrb	r3, [sp, #66]	@ zero_extendqisi2
 5960 0054 13F0100F 		tst	r3, #16
 5961 0058 13D0     		beq	.L515
4785:ff.c          **** #if FF_FS_RPATH != 0
4786:ff.c          **** 					if (dclst == fs->cdir) {		 	/* Is it the current directory? */
4787:ff.c          **** 						res = FR_DENIED;
4788:ff.c          **** 					} else
4789:ff.c          **** #endif
4790:ff.c          **** 					{
4791:ff.c          **** 						sdj.obj.fs = fs;				/* Open the sub-directory */
 5962              		.loc 1 4791 0
 5963 005a 0496     		str	r6, [sp, #16]
4792:ff.c          **** 						sdj.obj.sclust = dclst;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 199


 5964              		.loc 1 4792 0
 5965 005c 0690     		str	r0, [sp, #24]
4793:ff.c          **** #if FF_FS_EXFAT
4794:ff.c          **** 						if (fs->fs_type == FS_EXFAT) {
4795:ff.c          **** 							sdj.obj.objsize = obj.objsize;
4796:ff.c          **** 							sdj.obj.stat = obj.stat;
4797:ff.c          **** 						}
4798:ff.c          **** #endif
4799:ff.c          **** 						res = dir_sdi(&sdj, 0);
 5966              		.loc 1 4799 0
 5967 005e 0021     		movs	r1, #0
 5968 0060 04A8     		add	r0, sp, #16
 5969              	.LVL901:
 5970 0062 FFF7FEFF 		bl	dir_sdi
 5971              	.LVL902:
4800:ff.c          **** 						if (res == FR_OK) {
 5972              		.loc 1 4800 0
 5973 0066 0446     		mov	r4, r0
 5974 0068 58B9     		cbnz	r0, .L515
4801:ff.c          **** 							res = dir_read_file(&sdj);			/* Test if the directory is empty */
 5975              		.loc 1 4801 0
 5976 006a 0021     		movs	r1, #0
 5977 006c 04A8     		add	r0, sp, #16
 5978              	.LVL903:
 5979 006e FFF7FEFF 		bl	dir_read
 5980              	.LVL904:
4802:ff.c          **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 5981              		.loc 1 4802 0
 5982 0072 0346     		mov	r3, r0
 5983 0074 00B9     		cbnz	r0, .L516
 5984 0076 0723     		movs	r3, #7
 5985              	.L516:
 5986              	.LVL905:
4803:ff.c          **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 5987              		.loc 1 4803 0
 5988 0078 042B     		cmp	r3, #4
 5989 007a 02D0     		beq	.L515
 5990 007c 1C46     		mov	r4, r3
 5991 007e 00E0     		b	.L515
 5992              	.LVL906:
 5993              	.L520:
4745:ff.c          **** 	FATFS *fs;
 5994              		.loc 1 4745 0
 5995 0080 0025     		movs	r5, #0
 5996              	.LVL907:
 5997              	.L515:
4804:ff.c          **** 						}
4805:ff.c          **** 					}
4806:ff.c          **** 				}
4807:ff.c          **** 			}
4808:ff.c          **** 			if (res == FR_OK) {
 5998              		.loc 1 4808 0
 5999 0082 84B9     		cbnz	r4, .L513
4809:ff.c          **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 6000              		.loc 1 4809 0
 6001 0084 0FA8     		add	r0, sp, #60
 6002 0086 FFF7FEFF 		bl	dir_remove
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 200


 6003              	.LVL908:
4810:ff.c          **** 				if (res == FR_OK && dclst != 0) {	/* Remove the cluster chain if exist */
 6004              		.loc 1 4810 0
 6005 008a 0446     		mov	r4, r0
 6006 008c 30B9     		cbnz	r0, .L517
 6007              		.loc 1 4810 0 is_stmt 0 discriminator 1
 6008 008e 2DB1     		cbz	r5, .L517
4811:ff.c          **** #if FF_FS_EXFAT
4812:ff.c          **** 					res = remove_chain(&obj, dclst, 0);
4813:ff.c          **** #else
4814:ff.c          **** 					res = remove_chain(&dj.obj, dclst, 0);
 6009              		.loc 1 4814 0 is_stmt 1
 6010 0090 0022     		movs	r2, #0
 6011 0092 2946     		mov	r1, r5
 6012 0094 0FA8     		add	r0, sp, #60
 6013              	.LVL909:
 6014 0096 FFF7FEFF 		bl	remove_chain
 6015              	.LVL910:
 6016 009a 0446     		mov	r4, r0
 6017              	.LVL911:
 6018              	.L517:
4815:ff.c          **** #endif
4816:ff.c          **** 				}
4817:ff.c          **** 				if (res == FR_OK) res = sync_fs(fs);
 6019              		.loc 1 4817 0
 6020 009c 1CB9     		cbnz	r4, .L513
 6021              		.loc 1 4817 0 is_stmt 0 discriminator 1
 6022 009e 0398     		ldr	r0, [sp, #12]
 6023 00a0 FFF7FEFF 		bl	sync_fs
 6024              	.LVL912:
 6025 00a4 0446     		mov	r4, r0
 6026              	.LVL913:
 6027              	.L513:
4818:ff.c          **** 			}
4819:ff.c          **** 		}
4820:ff.c          **** 		FREE_NAMBUF();
4821:ff.c          **** 	}
4822:ff.c          **** 
4823:ff.c          **** 	LEAVE_FF(fs, res);
4824:ff.c          **** }
 6028              		.loc 1 4824 0 is_stmt 1
 6029 00a6 2046     		mov	r0, r4
 6030 00a8 1AB0     		add	sp, sp, #104
 6031              		.cfi_def_cfa_offset 16
 6032              		@ sp needed
 6033 00aa 70BD     		pop	{r4, r5, r6, pc}
 6034              		.cfi_endproc
 6035              	.LFE48:
 6036              		.size	f_unlink, .-f_unlink
 6037              		.section	.text.f_mkdir,"ax",%progbits
 6038              		.align	2
 6039              		.global	f_mkdir
 6040              		.thumb
 6041              		.thumb_func
 6042              		.type	f_mkdir, %function
 6043              	f_mkdir:
 6044              	.LFB49:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 201


4825:ff.c          **** 
4826:ff.c          **** 
4827:ff.c          **** 
4828:ff.c          **** 
4829:ff.c          **** /*-----------------------------------------------------------------------*/
4830:ff.c          **** /* Create a Directory                                                    */
4831:ff.c          **** /*-----------------------------------------------------------------------*/
4832:ff.c          **** 
4833:ff.c          **** FRESULT f_mkdir (
4834:ff.c          **** 	const TCHAR* path		/* Pointer to the directory path */
4835:ff.c          **** )
4836:ff.c          **** {
 6045              		.loc 1 4836 0
 6046              		.cfi_startproc
 6047              		@ args = 0, pretend = 0, frame = 56
 6048              		@ frame_needed = 0, uses_anonymous_args = 0
 6049              	.LVL914:
 6050 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6051              		.cfi_def_cfa_offset 32
 6052              		.cfi_offset 4, -32
 6053              		.cfi_offset 5, -28
 6054              		.cfi_offset 6, -24
 6055              		.cfi_offset 7, -20
 6056              		.cfi_offset 8, -16
 6057              		.cfi_offset 9, -12
 6058              		.cfi_offset 10, -8
 6059              		.cfi_offset 14, -4
 6060 0004 8EB0     		sub	sp, sp, #56
 6061              		.cfi_def_cfa_offset 88
 6062 0006 0190     		str	r0, [sp, #4]
4837:ff.c          **** 	FRESULT res;
4838:ff.c          **** 	DIR dj;
4839:ff.c          **** 	FATFS *fs;
4840:ff.c          **** 	BYTE *dir;
4841:ff.c          **** 	DWORD dcl, pcl, tm;
4842:ff.c          **** 	DEF_NAMBUF
4843:ff.c          **** 
4844:ff.c          **** 
4845:ff.c          **** 	/* Get logical drive */
4846:ff.c          **** 	res = find_volume(&path, &fs, FA_WRITE);
 6063              		.loc 1 4846 0
 6064 0008 0222     		movs	r2, #2
 6065 000a 02A9     		add	r1, sp, #8
 6066 000c 01A8     		add	r0, sp, #4
 6067              	.LVL915:
 6068 000e FFF7FEFF 		bl	find_volume
 6069              	.LVL916:
4847:ff.c          **** 	if (res == FR_OK) {
 6070              		.loc 1 4847 0
 6071 0012 0446     		mov	r4, r0
 6072 0014 0028     		cmp	r0, #0
 6073 0016 78D1     		bne	.L524
4848:ff.c          **** 		dj.obj.fs = fs;
 6074              		.loc 1 4848 0
 6075 0018 029B     		ldr	r3, [sp, #8]
 6076 001a 0393     		str	r3, [sp, #12]
4849:ff.c          **** 		INIT_NAMBUF(fs);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 202


4850:ff.c          **** 		res = follow_path(&dj, path);			/* Follow the file path */
 6077              		.loc 1 4850 0
 6078 001c 0199     		ldr	r1, [sp, #4]
 6079 001e 03A8     		add	r0, sp, #12
 6080              	.LVL917:
 6081 0020 FFF7FEFF 		bl	follow_path
 6082              	.LVL918:
4851:ff.c          **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 6083              		.loc 1 4851 0
 6084 0024 0346     		mov	r3, r0
 6085 0026 00B9     		cbnz	r0, .L525
 6086 0028 0823     		movs	r3, #8
 6087              	.L525:
 6088              	.LVL919:
4852:ff.c          **** 		if (FF_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4853:ff.c          **** 			res = FR_INVALID_NAME;
4854:ff.c          **** 		}
4855:ff.c          **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
 6089              		.loc 1 4855 0
 6090 002a 042B     		cmp	r3, #4
 6091 002c 6CD1     		bne	.L534
4856:ff.c          **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 6092              		.loc 1 4856 0
 6093 002e 0021     		movs	r1, #0
 6094 0030 03A8     		add	r0, sp, #12
 6095 0032 FFF7FEFF 		bl	create_chain
 6096              	.LVL920:
4857:ff.c          **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 6097              		.loc 1 4857 0
 6098 0036 029A     		ldr	r2, [sp, #8]
 6099 0038 5389     		ldrh	r3, [r2, #10]
 6100 003a 5B02     		lsls	r3, r3, #9
 6101 003c 0693     		str	r3, [sp, #24]
 6102              	.LVL921:
4858:ff.c          **** 			res = FR_OK;
4859:ff.c          **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
 6103              		.loc 1 4859 0
 6104 003e 0546     		mov	r5, r0
 6105 0040 00B9     		cbnz	r0, .L526
 6106 0042 0724     		movs	r4, #7
 6107              	.L526:
 6108              	.LVL922:
4860:ff.c          **** 			if (dcl == 1) res = FR_INT_ERR;
 6109              		.loc 1 4860 0
 6110 0044 012D     		cmp	r5, #1
 6111 0046 00D1     		bne	.L527
 6112 0048 0224     		movs	r4, #2
 6113              	.LVL923:
 6114              	.L527:
4861:ff.c          **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 6115              		.loc 1 4861 0
 6116 004a B5F1FF3F 		cmp	r5, #-1
 6117 004e 00D1     		bne	.L528
 6118 0050 0124     		movs	r4, #1
 6119              	.LVL924:
 6120              	.L528:
4862:ff.c          **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 203


 6121              		.loc 1 4862 0
 6122 0052 1CB9     		cbnz	r4, .L529
 6123              		.loc 1 4862 0 is_stmt 0 discriminator 1
 6124 0054 1046     		mov	r0, r2
 6125              	.LVL925:
 6126 0056 FFF7FEFF 		bl	sync_window
 6127              	.LVL926:
 6128 005a 0446     		mov	r4, r0
 6129              	.LVL927:
 6130              	.L529:
4863:ff.c          **** 			tm = GET_FATTIME();
 6131              		.loc 1 4863 0 is_stmt 1
 6132 005c FFF7FEFF 		bl	get_fattime
 6133              	.LVL928:
 6134 0060 0746     		mov	r7, r0
 6135              	.LVL929:
4864:ff.c          **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 6136              		.loc 1 4864 0
 6137 0062 7CBB     		cbnz	r4, .L530
4865:ff.c          **** 				res = dir_clear(fs, dcl);		/* Clean up the new table */
 6138              		.loc 1 4865 0
 6139 0064 2946     		mov	r1, r5
 6140 0066 0298     		ldr	r0, [sp, #8]
 6141              	.LVL930:
 6142 0068 FFF7FEFF 		bl	dir_clear
 6143              	.LVL931:
4866:ff.c          **** 				if (res == FR_OK && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT)) {	/* Create dot entries (FAT onl
 6144              		.loc 1 4866 0
 6145 006c 0446     		mov	r4, r0
 6146 006e 48BB     		cbnz	r0, .L530
4867:ff.c          **** 					dir = fs->win;
 6147              		.loc 1 4867 0
 6148 0070 029E     		ldr	r6, [sp, #8]
 6149 0072 06F13008 		add	r8, r6, #48
 6150              	.LVL932:
4868:ff.c          **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
 6151              		.loc 1 4868 0
 6152 0076 0B22     		movs	r2, #11
 6153 0078 2021     		movs	r1, #32
 6154 007a 4046     		mov	r0, r8
 6155              	.LVL933:
 6156 007c FFF7FEFF 		bl	mem_set
 6157              	.LVL934:
4869:ff.c          **** 					dir[DIR_Name] = '.';
 6158              		.loc 1 4869 0
 6159 0080 4FF02E0A 		mov	r10, #46
 6160 0084 86F830A0 		strb	r10, [r6, #48]
4870:ff.c          **** 					dir[DIR_Attr] = AM_DIR;
 6161              		.loc 1 4870 0
 6162 0088 1023     		movs	r3, #16
 6163 008a 86F83B30 		strb	r3, [r6, #59]
4871:ff.c          **** 					st_dword(dir + DIR_ModTime, tm);
 6164              		.loc 1 4871 0
 6165 008e 3946     		mov	r1, r7
 6166 0090 06F14600 		add	r0, r6, #70
 6167 0094 FFF7FEFF 		bl	st_dword
 6168              	.LVL935:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 204


4872:ff.c          **** 					st_clust(fs, dir, dcl);
 6169              		.loc 1 4872 0
 6170 0098 2A46     		mov	r2, r5
 6171 009a 4146     		mov	r1, r8
 6172 009c 0298     		ldr	r0, [sp, #8]
 6173 009e FFF7FEFF 		bl	st_clust
 6174              	.LVL936:
4873:ff.c          **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); /* Create ".." entry */
 6175              		.loc 1 4873 0
 6176 00a2 06F15009 		add	r9, r6, #80
 6177 00a6 2022     		movs	r2, #32
 6178 00a8 4146     		mov	r1, r8
 6179 00aa 4846     		mov	r0, r9
 6180 00ac FFF7FEFF 		bl	mem_cpy
 6181              	.LVL937:
4874:ff.c          **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 6182              		.loc 1 4874 0
 6183 00b0 86F851A0 		strb	r10, [r6, #81]
 6184              	.LVL938:
4875:ff.c          **** 					st_clust(fs, dir + SZDIRE, pcl);
 6185              		.loc 1 4875 0
 6186 00b4 059A     		ldr	r2, [sp, #20]
 6187 00b6 4946     		mov	r1, r9
 6188 00b8 0298     		ldr	r0, [sp, #8]
 6189 00ba FFF7FEFF 		bl	st_clust
 6190              	.LVL939:
4876:ff.c          **** 					fs->wflag = 1;
 6191              		.loc 1 4876 0
 6192 00be 0122     		movs	r2, #1
 6193 00c0 029B     		ldr	r3, [sp, #8]
 6194 00c2 DA70     		strb	r2, [r3, #3]
 6195              	.LVL940:
 6196              	.L530:
4877:ff.c          **** 				}
4878:ff.c          **** 			}
4879:ff.c          **** 			if (res == FR_OK) {
 6197              		.loc 1 4879 0
 6198 00c4 1CB9     		cbnz	r4, .L531
4880:ff.c          **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 6199              		.loc 1 4880 0
 6200 00c6 03A8     		add	r0, sp, #12
 6201 00c8 FFF7FEFF 		bl	dir_register
 6202              	.LVL941:
 6203 00cc 0446     		mov	r4, r0
 6204              	.LVL942:
 6205              	.L531:
4881:ff.c          **** 			}
4882:ff.c          **** 			if (res == FR_OK) {
 6206              		.loc 1 4882 0
 6207 00ce ACB9     		cbnz	r4, .L532
4883:ff.c          **** #if FF_FS_EXFAT
4884:ff.c          **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4885:ff.c          **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4886:ff.c          **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4887:ff.c          **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4888:ff.c          **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4889:ff.c          **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 205


4890:ff.c          **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4891:ff.c          **** 					res = store_xdir(&dj);
4892:ff.c          **** 				} else
4893:ff.c          **** #endif
4894:ff.c          **** 				{
4895:ff.c          **** 					dir = dj.dir;
 6208              		.loc 1 4895 0
 6209 00d0 0A9E     		ldr	r6, [sp, #40]
 6210              	.LVL943:
4896:ff.c          **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 6211              		.loc 1 4896 0
 6212 00d2 3946     		mov	r1, r7
 6213 00d4 06F11600 		add	r0, r6, #22
 6214 00d8 FFF7FEFF 		bl	st_dword
 6215              	.LVL944:
4897:ff.c          **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 6216              		.loc 1 4897 0
 6217 00dc 2A46     		mov	r2, r5
 6218 00de 3146     		mov	r1, r6
 6219 00e0 0298     		ldr	r0, [sp, #8]
 6220 00e2 FFF7FEFF 		bl	st_clust
 6221              	.LVL945:
4898:ff.c          **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 6222              		.loc 1 4898 0
 6223 00e6 1023     		movs	r3, #16
 6224 00e8 F372     		strb	r3, [r6, #11]
4899:ff.c          **** 					fs->wflag = 1;
 6225              		.loc 1 4899 0
 6226 00ea 0122     		movs	r2, #1
 6227 00ec 029B     		ldr	r3, [sp, #8]
 6228 00ee DA70     		strb	r2, [r3, #3]
4900:ff.c          **** 				}
4901:ff.c          **** 				if (res == FR_OK) {
 6229              		.loc 1 4901 0
 6230 00f0 5CB9     		cbnz	r4, .L524
4902:ff.c          **** 					res = sync_fs(fs);
 6231              		.loc 1 4902 0
 6232 00f2 0298     		ldr	r0, [sp, #8]
 6233 00f4 FFF7FEFF 		bl	sync_fs
 6234              	.LVL946:
 6235 00f8 0446     		mov	r4, r0
 6236              	.LVL947:
 6237 00fa 06E0     		b	.L524
 6238              	.LVL948:
 6239              	.L532:
4903:ff.c          **** 				}
4904:ff.c          **** 			} else {
4905:ff.c          **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
 6240              		.loc 1 4905 0
 6241 00fc 0022     		movs	r2, #0
 6242 00fe 2946     		mov	r1, r5
 6243 0100 03A8     		add	r0, sp, #12
 6244 0102 FFF7FEFF 		bl	remove_chain
 6245              	.LVL949:
 6246 0106 00E0     		b	.L524
 6247              	.LVL950:
 6248              	.L534:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 206


 6249 0108 1C46     		mov	r4, r3
 6250              	.LVL951:
 6251              	.L524:
4906:ff.c          **** 			}
4907:ff.c          **** 		}
4908:ff.c          **** 		FREE_NAMBUF();
4909:ff.c          **** 	}
4910:ff.c          **** 
4911:ff.c          **** 	LEAVE_FF(fs, res);
4912:ff.c          **** }
 6252              		.loc 1 4912 0
 6253 010a 2046     		mov	r0, r4
 6254 010c 0EB0     		add	sp, sp, #56
 6255              		.cfi_def_cfa_offset 32
 6256              		@ sp needed
 6257 010e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6258              		.cfi_endproc
 6259              	.LFE49:
 6260              		.size	f_mkdir, .-f_mkdir
 6261              		.section	.text.f_rename,"ax",%progbits
 6262              		.align	2
 6263              		.global	f_rename
 6264              		.thumb
 6265              		.thumb_func
 6266              		.type	f_rename, %function
 6267              	f_rename:
 6268              	.LFB50:
4913:ff.c          **** 
4914:ff.c          **** 
4915:ff.c          **** 
4916:ff.c          **** 
4917:ff.c          **** /*-----------------------------------------------------------------------*/
4918:ff.c          **** /* Rename a File/Directory                                               */
4919:ff.c          **** /*-----------------------------------------------------------------------*/
4920:ff.c          **** 
4921:ff.c          **** FRESULT f_rename (
4922:ff.c          **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4923:ff.c          **** 	const TCHAR* path_new	/* Pointer to the new name */
4924:ff.c          **** )
4925:ff.c          **** {
 6269              		.loc 1 4925 0
 6270              		.cfi_startproc
 6271              		@ args = 0, pretend = 0, frame = 136
 6272              		@ frame_needed = 0, uses_anonymous_args = 0
 6273              	.LVL952:
 6274 0000 30B5     		push	{r4, r5, lr}
 6275              		.cfi_def_cfa_offset 12
 6276              		.cfi_offset 4, -12
 6277              		.cfi_offset 5, -8
 6278              		.cfi_offset 14, -4
 6279 0002 A3B0     		sub	sp, sp, #140
 6280              		.cfi_def_cfa_offset 152
 6281 0004 0190     		str	r0, [sp, #4]
 6282 0006 22A8     		add	r0, sp, #136
 6283              	.LVL953:
 6284 0008 40F8881D 		str	r1, [r0, #-136]!
4926:ff.c          **** 	FRESULT res;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 207


4927:ff.c          **** 	DIR djo, djn;
4928:ff.c          **** 	FATFS *fs;
4929:ff.c          **** 	BYTE buf[FF_FS_EXFAT ? SZDIRE * 2 : SZDIRE], *dir;
4930:ff.c          **** 	DWORD dw;
4931:ff.c          **** 	DEF_NAMBUF
4932:ff.c          **** 
4933:ff.c          **** 
4934:ff.c          **** 	get_ldnumber(&path_new);						/* Snip the drive number of new name off */
 6285              		.loc 1 4934 0
 6286 000c FFF7FEFF 		bl	get_ldnumber
 6287              	.LVL954:
4935:ff.c          **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 6288              		.loc 1 4935 0
 6289 0010 0222     		movs	r2, #2
 6290 0012 0BA9     		add	r1, sp, #44
 6291 0014 01A8     		add	r0, sp, #4
 6292              	.LVL955:
 6293 0016 FFF7FEFF 		bl	find_volume
 6294              	.LVL956:
4936:ff.c          **** 	if (res == FR_OK) {
 6295              		.loc 1 4936 0
 6296 001a 0446     		mov	r4, r0
 6297 001c 0028     		cmp	r0, #0
 6298 001e 7AD1     		bne	.L540
4937:ff.c          **** 		djo.obj.fs = fs;
 6299              		.loc 1 4937 0
 6300 0020 0B9B     		ldr	r3, [sp, #44]
 6301 0022 1793     		str	r3, [sp, #92]
4938:ff.c          **** 		INIT_NAMBUF(fs);
4939:ff.c          **** 		res = follow_path(&djo, path_old);		/* Check old object */
 6302              		.loc 1 4939 0
 6303 0024 0199     		ldr	r1, [sp, #4]
 6304 0026 17A8     		add	r0, sp, #92
 6305              	.LVL957:
 6306 0028 FFF7FEFF 		bl	follow_path
 6307              	.LVL958:
4940:ff.c          **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 6308              		.loc 1 4940 0
 6309 002c 0446     		mov	r4, r0
 6310 002e 28B9     		cbnz	r0, .L541
 6311              		.loc 1 4940 0 is_stmt 0 discriminator 1
 6312 0030 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 6313 0034 13F0A00F 		tst	r3, #160
 6314 0038 00D0     		beq	.L541
 6315              		.loc 1 4940 0
 6316 003a 0624     		movs	r4, #6
 6317              	.L541:
 6318              	.LVL959:
4941:ff.c          **** #if FF_FS_LOCK != 0
4942:ff.c          **** 		if (res == FR_OK) {
4943:ff.c          **** 			res = chk_lock(&djo, 2);
4944:ff.c          **** 		}
4945:ff.c          **** #endif
4946:ff.c          **** 		if (res == FR_OK) {						/* Object to be renamed is found */
 6319              		.loc 1 4946 0 is_stmt 1
 6320 003c 002C     		cmp	r4, #0
 6321 003e 6AD1     		bne	.L540
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 208


4947:ff.c          **** #if FF_FS_EXFAT
4948:ff.c          **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT volume */
4949:ff.c          **** 				BYTE nf, nn;
4950:ff.c          **** 				WORD nh;
4951:ff.c          **** 
4952:ff.c          **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4953:ff.c          **** 				mem_cpy(&djn, &djo, sizeof djo);
4954:ff.c          **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4955:ff.c          **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4956:ff.c          **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4957:ff.c          **** 				}
4958:ff.c          **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4959:ff.c          **** 					res = dir_register(&djn);			/* Register the new entry */
4960:ff.c          **** 					if (res == FR_OK) {
4961:ff.c          **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4962:ff.c          **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4963:ff.c          **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);	/* Restore 85+C0 entry */
4964:ff.c          **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4965:ff.c          **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4966:ff.c          **** 						if (!(fs->dirbuf[XDIR_Attr] & AM_DIR)) fs->dirbuf[XDIR_Attr] |= AM_ARC;	/* Set archive attrib
4967:ff.c          **** /* Start of critical section where an interruption can cause a cross-link */
4968:ff.c          **** 						res = store_xdir(&djn);
4969:ff.c          **** 					}
4970:ff.c          **** 				}
4971:ff.c          **** 			} else
4972:ff.c          **** #endif
4973:ff.c          **** 			{	/* At FAT/FAT32 volume */
4974:ff.c          **** 				mem_cpy(buf, djo.dir, SZDIRE);			/* Save directory entry of the object */
 6322              		.loc 1 4974 0
 6323 0040 2022     		movs	r2, #32
 6324 0042 1E99     		ldr	r1, [sp, #120]
 6325 0044 03A8     		add	r0, sp, #12
 6326 0046 FFF7FEFF 		bl	mem_cpy
 6327              	.LVL960:
4975:ff.c          **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 6328              		.loc 1 4975 0
 6329 004a 2C22     		movs	r2, #44
 6330 004c 17A9     		add	r1, sp, #92
 6331 004e 0CA8     		add	r0, sp, #48
 6332 0050 FFF7FEFF 		bl	mem_cpy
 6333              	.LVL961:
4976:ff.c          **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 6334              		.loc 1 4976 0
 6335 0054 0099     		ldr	r1, [sp]
 6336 0056 0CA8     		add	r0, sp, #48
 6337 0058 FFF7FEFF 		bl	follow_path
 6338              	.LVL962:
4977:ff.c          **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 6339              		.loc 1 4977 0
 6340 005c 0446     		mov	r4, r0
 6341 005e 60B9     		cbnz	r0, .L542
4978:ff.c          **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 6342              		.loc 1 4978 0
 6343 0060 199B     		ldr	r3, [sp, #100]
 6344 0062 0E9A     		ldr	r2, [sp, #56]
 6345 0064 9A42     		cmp	r2, r3
 6346 0066 05D1     		bne	.L546
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 209


 6347              		.loc 1 4978 0 is_stmt 0 discriminator 1
 6348 0068 1B9B     		ldr	r3, [sp, #108]
 6349 006a 109A     		ldr	r2, [sp, #64]
 6350 006c 9A42     		cmp	r2, r3
 6351 006e 03D0     		beq	.L547
 6352              		.loc 1 4978 0
 6353 0070 0824     		movs	r4, #8
 6354 0072 02E0     		b	.L542
 6355              	.L546:
 6356 0074 0824     		movs	r4, #8
 6357 0076 00E0     		b	.L542
 6358              	.L547:
 6359 0078 0424     		movs	r4, #4
 6360              	.L542:
 6361              	.LVL963:
4979:ff.c          **** 				}
4980:ff.c          **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
 6362              		.loc 1 4980 0 is_stmt 1
 6363 007a 042C     		cmp	r4, #4
 6364 007c 41D1     		bne	.L543
4981:ff.c          **** 					res = dir_register(&djn);			/* Register the new entry */
 6365              		.loc 1 4981 0
 6366 007e 0CA8     		add	r0, sp, #48
 6367 0080 FFF7FEFF 		bl	dir_register
 6368              	.LVL964:
4982:ff.c          **** 					if (res == FR_OK) {
 6369              		.loc 1 4982 0
 6370 0084 0446     		mov	r4, r0
 6371 0086 0028     		cmp	r0, #0
 6372 0088 3BD1     		bne	.L543
4983:ff.c          **** 						dir = djn.dir;					/* Copy directory entry of the object except name */
 6373              		.loc 1 4983 0
 6374 008a 139D     		ldr	r5, [sp, #76]
 6375              	.LVL965:
4984:ff.c          **** 						mem_cpy(dir + 13, buf + 13, SZDIRE - 13);
 6376              		.loc 1 4984 0
 6377 008c 1322     		movs	r2, #19
 6378 008e 0DF11901 		add	r1, sp, #25
 6379 0092 05F10D00 		add	r0, r5, #13
 6380              	.LVL966:
 6381 0096 FFF7FEFF 		bl	mem_cpy
 6382              	.LVL967:
4985:ff.c          **** 						dir[DIR_Attr] = buf[DIR_Attr];
 6383              		.loc 1 4985 0
 6384 009a 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 6385 009e EB72     		strb	r3, [r5, #11]
4986:ff.c          **** 						if (!(dir[DIR_Attr] & AM_DIR)) dir[DIR_Attr] |= AM_ARC;	/* Set archive attribute if it is a f
 6386              		.loc 1 4986 0
 6387 00a0 13F0100F 		tst	r3, #16
 6388 00a4 02D1     		bne	.L544
 6389              		.loc 1 4986 0 is_stmt 0 discriminator 1
 6390 00a6 43F02003 		orr	r3, r3, #32
 6391 00aa EB72     		strb	r3, [r5, #11]
 6392              	.L544:
4987:ff.c          **** 						fs->wflag = 1;
 6393              		.loc 1 4987 0 is_stmt 1
 6394 00ac 0122     		movs	r2, #1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 210


 6395 00ae 0B9B     		ldr	r3, [sp, #44]
 6396 00b0 DA70     		strb	r2, [r3, #3]
4988:ff.c          **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 6397              		.loc 1 4988 0
 6398 00b2 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 6399 00b4 13F0100F 		tst	r3, #16
 6400 00b8 23D0     		beq	.L543
 6401              		.loc 1 4988 0 is_stmt 0 discriminator 1
 6402 00ba 0E9B     		ldr	r3, [sp, #56]
 6403 00bc 199A     		ldr	r2, [sp, #100]
 6404 00be 9A42     		cmp	r2, r3
 6405 00c0 1FD0     		beq	.L543
4989:ff.c          **** 							dw = clst2sect(fs, ld_clust(fs, dir));
 6406              		.loc 1 4989 0 is_stmt 1
 6407 00c2 0B9C     		ldr	r4, [sp, #44]
 6408 00c4 2946     		mov	r1, r5
 6409 00c6 2046     		mov	r0, r4
 6410 00c8 FFF7FEFF 		bl	ld_clust
 6411              	.LVL968:
 6412 00cc 0146     		mov	r1, r0
 6413 00ce 2046     		mov	r0, r4
 6414 00d0 FFF7FEFF 		bl	clst2sect
 6415              	.LVL969:
4990:ff.c          **** 							if (dw == 0) {
 6416              		.loc 1 4990 0
 6417 00d4 0146     		mov	r1, r0
 6418 00d6 98B1     		cbz	r0, .L548
4991:ff.c          **** 								res = FR_INT_ERR;
4992:ff.c          **** 							} else {
4993:ff.c          **** /* Start of critical section where an interruption can cause a cross-link */
4994:ff.c          **** 								res = move_window(fs, dw);
 6419              		.loc 1 4994 0
 6420 00d8 2046     		mov	r0, r4
 6421              	.LVL970:
 6422 00da FFF7FEFF 		bl	move_window
 6423              	.LVL971:
4995:ff.c          **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 6424              		.loc 1 4995 0
 6425 00de 0B9B     		ldr	r3, [sp, #44]
 6426 00e0 03F15001 		add	r1, r3, #80
 6427              	.LVL972:
4996:ff.c          **** 								if (res == FR_OK && dir[1] == '.') {
 6428              		.loc 1 4996 0
 6429 00e4 0446     		mov	r4, r0
 6430 00e6 60B9     		cbnz	r0, .L543
 6431              		.loc 1 4996 0 is_stmt 0 discriminator 1
 6432 00e8 93F85120 		ldrb	r2, [r3, #81]	@ zero_extendqisi2
 6433 00ec 2E2A     		cmp	r2, #46
 6434 00ee 08D1     		bne	.L543
4997:ff.c          **** 									st_clust(fs, dir, djn.obj.sclust);
 6435              		.loc 1 4997 0 is_stmt 1
 6436 00f0 0E9A     		ldr	r2, [sp, #56]
 6437 00f2 1846     		mov	r0, r3
 6438              	.LVL973:
 6439 00f4 FFF7FEFF 		bl	st_clust
 6440              	.LVL974:
4998:ff.c          **** 									fs->wflag = 1;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 211


 6441              		.loc 1 4998 0
 6442 00f8 0122     		movs	r2, #1
 6443 00fa 0B9B     		ldr	r3, [sp, #44]
 6444 00fc DA70     		strb	r2, [r3, #3]
 6445 00fe 00E0     		b	.L543
 6446              	.LVL975:
 6447              	.L548:
4991:ff.c          **** 							} else {
 6448              		.loc 1 4991 0
 6449 0100 0224     		movs	r4, #2
 6450              	.LVL976:
 6451              	.L543:
4999:ff.c          **** 								}
5000:ff.c          **** 							}
5001:ff.c          **** 						}
5002:ff.c          **** 					}
5003:ff.c          **** 				}
5004:ff.c          **** 			}
5005:ff.c          **** 			if (res == FR_OK) {
 6452              		.loc 1 5005 0
 6453 0102 44B9     		cbnz	r4, .L540
5006:ff.c          **** 				res = dir_remove(&djo);		/* Remove old entry */
 6454              		.loc 1 5006 0
 6455 0104 17A8     		add	r0, sp, #92
 6456 0106 FFF7FEFF 		bl	dir_remove
 6457              	.LVL977:
5007:ff.c          **** 				if (res == FR_OK) {
 6458              		.loc 1 5007 0
 6459 010a 0446     		mov	r4, r0
 6460 010c 18B9     		cbnz	r0, .L540
5008:ff.c          **** 					res = sync_fs(fs);
 6461              		.loc 1 5008 0
 6462 010e 0B98     		ldr	r0, [sp, #44]
 6463              	.LVL978:
 6464 0110 FFF7FEFF 		bl	sync_fs
 6465              	.LVL979:
 6466 0114 0446     		mov	r4, r0
 6467              	.LVL980:
 6468              	.L540:
5009:ff.c          **** 				}
5010:ff.c          **** 			}
5011:ff.c          **** /* End of the critical section */
5012:ff.c          **** 		}
5013:ff.c          **** 		FREE_NAMBUF();
5014:ff.c          **** 	}
5015:ff.c          **** 
5016:ff.c          **** 	LEAVE_FF(fs, res);
5017:ff.c          **** }
 6469              		.loc 1 5017 0
 6470 0116 2046     		mov	r0, r4
 6471 0118 23B0     		add	sp, sp, #140
 6472              		.cfi_def_cfa_offset 12
 6473              		@ sp needed
 6474 011a 30BD     		pop	{r4, r5, pc}
 6475              		.cfi_endproc
 6476              	.LFE50:
 6477              		.size	f_rename, .-f_rename
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 212


 6478              		.section	.rodata.str1.4,"aMS",%progbits,1
 6479              		.align	2
 6480              	.LC0:
 6481 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 6481      3A3B3C3D 
 6481      3E3F5B5D 
 6481      7C7F00
 6482 000f 00       		.space	1
 6483              	.LC1:
 6484 0010 46415400 		.ascii	"FAT\000"
 6485              	.LC2:
 6486 0014 46415433 		.ascii	"FAT32\000"
 6486      3200
 6487              		.bss
 6488              		.align	2
 6489              		.set	.LANCHOR0,. + 0
 6490              		.type	FatFs, %object
 6491              		.size	FatFs, 4
 6492              	FatFs:
 6493 0000 00000000 		.space	4
 6494              		.type	Fsid, %object
 6495              		.size	Fsid, 2
 6496              	Fsid:
 6497 0004 0000     		.space	2
 6498              		.text
 6499              	.Letext0:
 6500              		.file 2 "integer.h"
 6501              		.file 3 "ff.h"
 6502              		.file 4 "diskio.h"
 6503              		.section	.debug_info,"",%progbits
 6504              	.Ldebug_info0:
 6505 0000 022D0000 		.4byte	0x2d02
 6506 0004 0400     		.2byte	0x4
 6507 0006 00000000 		.4byte	.Ldebug_abbrev0
 6508 000a 04       		.byte	0x4
 6509 000b 01       		.uleb128 0x1
 6510 000c AD030000 		.4byte	.LASF165
 6511 0010 0C       		.byte	0xc
 6512 0011 45000000 		.4byte	.LASF166
 6513 0015 20020000 		.4byte	.LASF167
 6514 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6515 001d 00000000 		.4byte	0
 6516 0021 00000000 		.4byte	.Ldebug_line0
 6517 0025 02       		.uleb128 0x2
 6518 0026 04       		.byte	0x4
 6519 0027 05       		.byte	0x5
 6520 0028 696E7400 		.ascii	"int\000"
 6521 002c 03       		.uleb128 0x3
 6522 002d F7010000 		.4byte	.LASF1
 6523 0031 02       		.byte	0x2
 6524 0032 13       		.byte	0x13
 6525 0033 37000000 		.4byte	0x37
 6526 0037 04       		.uleb128 0x4
 6527 0038 04       		.byte	0x4
 6528 0039 07       		.byte	0x7
 6529 003a EA010000 		.4byte	.LASF0
 6530 003e 03       		.uleb128 0x3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 213


 6531 003f C1010000 		.4byte	.LASF2
 6532 0043 02       		.byte	0x2
 6533 0044 16       		.byte	0x16
 6534 0045 49000000 		.4byte	0x49
 6535 0049 04       		.uleb128 0x4
 6536 004a 01       		.byte	0x1
 6537 004b 08       		.byte	0x8
 6538 004c B9040000 		.4byte	.LASF3
 6539 0050 04       		.uleb128 0x4
 6540 0051 02       		.byte	0x2
 6541 0052 05       		.byte	0x5
 6542 0053 D6040000 		.4byte	.LASF4
 6543 0057 03       		.uleb128 0x3
 6544 0058 4D030000 		.4byte	.LASF5
 6545 005c 02       		.byte	0x2
 6546 005d 1A       		.byte	0x1a
 6547 005e 62000000 		.4byte	0x62
 6548 0062 04       		.uleb128 0x4
 6549 0063 02       		.byte	0x2
 6550 0064 07       		.byte	0x7
 6551 0065 64020000 		.4byte	.LASF6
 6552 0069 04       		.uleb128 0x4
 6553 006a 04       		.byte	0x4
 6554 006b 05       		.byte	0x5
 6555 006c 07010000 		.4byte	.LASF7
 6556 0070 03       		.uleb128 0x3
 6557 0071 6B010000 		.4byte	.LASF8
 6558 0075 02       		.byte	0x2
 6559 0076 1F       		.byte	0x1f
 6560 0077 7B000000 		.4byte	0x7b
 6561 007b 04       		.uleb128 0x4
 6562 007c 04       		.byte	0x4
 6563 007d 07       		.byte	0x7
 6564 007e 02020000 		.4byte	.LASF9
 6565 0082 04       		.uleb128 0x4
 6566 0083 08       		.byte	0x8
 6567 0084 07       		.byte	0x7
 6568 0085 84000000 		.4byte	.LASF10
 6569 0089 03       		.uleb128 0x3
 6570 008a 71030000 		.4byte	.LASF11
 6571 008e 03       		.byte	0x3
 6572 008f 42       		.byte	0x42
 6573 0090 94000000 		.4byte	0x94
 6574 0094 04       		.uleb128 0x4
 6575 0095 01       		.byte	0x1
 6576 0096 08       		.byte	0x8
 6577 0097 71050000 		.4byte	.LASF12
 6578 009b 03       		.uleb128 0x3
 6579 009c 79010000 		.4byte	.LASF13
 6580 00a0 03       		.byte	0x3
 6581 00a1 50       		.byte	0x50
 6582 00a2 70000000 		.4byte	0x70
 6583 00a6 05       		.uleb128 0x5
 6584 00a7 3002     		.2byte	0x230
 6585 00a9 03       		.byte	0x3
 6586 00aa 57       		.byte	0x57
 6587 00ab 87010000 		.4byte	0x187
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 214


 6588 00af 06       		.uleb128 0x6
 6589 00b0 29000000 		.4byte	.LASF14
 6590 00b4 03       		.byte	0x3
 6591 00b5 58       		.byte	0x58
 6592 00b6 3E000000 		.4byte	0x3e
 6593 00ba 00       		.byte	0
 6594 00bb 06       		.uleb128 0x6
 6595 00bc B2010000 		.4byte	.LASF15
 6596 00c0 03       		.byte	0x3
 6597 00c1 59       		.byte	0x59
 6598 00c2 3E000000 		.4byte	0x3e
 6599 00c6 01       		.byte	0x1
 6600 00c7 06       		.uleb128 0x6
 6601 00c8 26010000 		.4byte	.LASF16
 6602 00cc 03       		.byte	0x3
 6603 00cd 5A       		.byte	0x5a
 6604 00ce 3E000000 		.4byte	0x3e
 6605 00d2 02       		.byte	0x2
 6606 00d3 06       		.uleb128 0x6
 6607 00d4 62050000 		.4byte	.LASF17
 6608 00d8 03       		.byte	0x3
 6609 00d9 5B       		.byte	0x5b
 6610 00da 3E000000 		.4byte	0x3e
 6611 00de 03       		.byte	0x3
 6612 00df 06       		.uleb128 0x6
 6613 00e0 04060000 		.4byte	.LASF18
 6614 00e4 03       		.byte	0x3
 6615 00e5 5C       		.byte	0x5c
 6616 00e6 3E000000 		.4byte	0x3e
 6617 00ea 04       		.byte	0x4
 6618 00eb 07       		.uleb128 0x7
 6619 00ec 696400   		.ascii	"id\000"
 6620 00ef 03       		.byte	0x3
 6621 00f0 5D       		.byte	0x5d
 6622 00f1 57000000 		.4byte	0x57
 6623 00f5 06       		.byte	0x6
 6624 00f6 06       		.uleb128 0x6
 6625 00f7 62000000 		.4byte	.LASF19
 6626 00fb 03       		.byte	0x3
 6627 00fc 5E       		.byte	0x5e
 6628 00fd 57000000 		.4byte	0x57
 6629 0101 08       		.byte	0x8
 6630 0102 06       		.uleb128 0x6
 6631 0103 9C010000 		.4byte	.LASF20
 6632 0107 03       		.byte	0x3
 6633 0108 5F       		.byte	0x5f
 6634 0109 57000000 		.4byte	0x57
 6635 010d 0A       		.byte	0xa
 6636 010e 06       		.uleb128 0x6
 6637 010f 60040000 		.4byte	.LASF21
 6638 0113 03       		.byte	0x3
 6639 0114 6D       		.byte	0x6d
 6640 0115 70000000 		.4byte	0x70
 6641 0119 0C       		.byte	0xc
 6642 011a 06       		.uleb128 0x6
 6643 011b B7010000 		.4byte	.LASF22
 6644 011f 03       		.byte	0x3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 215


 6645 0120 6E       		.byte	0x6e
 6646 0121 70000000 		.4byte	0x70
 6647 0125 10       		.byte	0x10
 6648 0126 06       		.uleb128 0x6
 6649 0127 EC000000 		.4byte	.LASF23
 6650 012b 03       		.byte	0x3
 6651 012c 78       		.byte	0x78
 6652 012d 70000000 		.4byte	0x70
 6653 0131 14       		.byte	0x14
 6654 0132 06       		.uleb128 0x6
 6655 0133 E6000000 		.4byte	.LASF24
 6656 0137 03       		.byte	0x3
 6657 0138 79       		.byte	0x79
 6658 0139 70000000 		.4byte	0x70
 6659 013d 18       		.byte	0x18
 6660 013e 06       		.uleb128 0x6
 6661 013f BA050000 		.4byte	.LASF25
 6662 0143 03       		.byte	0x3
 6663 0144 7A       		.byte	0x7a
 6664 0145 70000000 		.4byte	0x70
 6665 0149 1C       		.byte	0x1c
 6666 014a 06       		.uleb128 0x6
 6667 014b 63010000 		.4byte	.LASF26
 6668 014f 03       		.byte	0x3
 6669 0150 7B       		.byte	0x7b
 6670 0151 70000000 		.4byte	0x70
 6671 0155 20       		.byte	0x20
 6672 0156 06       		.uleb128 0x6
 6673 0157 BE000000 		.4byte	.LASF27
 6674 015b 03       		.byte	0x3
 6675 015c 7C       		.byte	0x7c
 6676 015d 70000000 		.4byte	0x70
 6677 0161 24       		.byte	0x24
 6678 0162 06       		.uleb128 0x6
 6679 0163 77020000 		.4byte	.LASF28
 6680 0167 03       		.byte	0x3
 6681 0168 7D       		.byte	0x7d
 6682 0169 70000000 		.4byte	0x70
 6683 016d 28       		.byte	0x28
 6684 016e 06       		.uleb128 0x6
 6685 016f AE020000 		.4byte	.LASF29
 6686 0173 03       		.byte	0x3
 6687 0174 7E       		.byte	0x7e
 6688 0175 70000000 		.4byte	0x70
 6689 0179 2C       		.byte	0x2c
 6690 017a 07       		.uleb128 0x7
 6691 017b 77696E00 		.ascii	"win\000"
 6692 017f 03       		.byte	0x3
 6693 0180 7F       		.byte	0x7f
 6694 0181 87010000 		.4byte	0x187
 6695 0185 30       		.byte	0x30
 6696 0186 00       		.byte	0
 6697 0187 08       		.uleb128 0x8
 6698 0188 3E000000 		.4byte	0x3e
 6699 018c 98010000 		.4byte	0x198
 6700 0190 09       		.uleb128 0x9
 6701 0191 98010000 		.4byte	0x198
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 216


 6702 0195 FF01     		.2byte	0x1ff
 6703 0197 00       		.byte	0
 6704 0198 04       		.uleb128 0x4
 6705 0199 04       		.byte	0x4
 6706 019a 07       		.byte	0x7
 6707 019b 26030000 		.4byte	.LASF30
 6708 019f 03       		.uleb128 0x3
 6709 01a0 00030000 		.4byte	.LASF31
 6710 01a4 03       		.byte	0x3
 6711 01a5 80       		.byte	0x80
 6712 01a6 A6000000 		.4byte	0xa6
 6713 01aa 0A       		.uleb128 0xa
 6714 01ab 10       		.byte	0x10
 6715 01ac 03       		.byte	0x3
 6716 01ad 86       		.byte	0x86
 6717 01ae F9010000 		.4byte	0x1f9
 6718 01b2 07       		.uleb128 0x7
 6719 01b3 667300   		.ascii	"fs\000"
 6720 01b6 03       		.byte	0x3
 6721 01b7 87       		.byte	0x87
 6722 01b8 F9010000 		.4byte	0x1f9
 6723 01bc 00       		.byte	0
 6724 01bd 07       		.uleb128 0x7
 6725 01be 696400   		.ascii	"id\000"
 6726 01c1 03       		.byte	0x3
 6727 01c2 88       		.byte	0x88
 6728 01c3 57000000 		.4byte	0x57
 6729 01c7 04       		.byte	0x4
 6730 01c8 06       		.uleb128 0x6
 6731 01c9 CE010000 		.4byte	.LASF32
 6732 01cd 03       		.byte	0x3
 6733 01ce 89       		.byte	0x89
 6734 01cf 3E000000 		.4byte	0x3e
 6735 01d3 06       		.byte	0x6
 6736 01d4 06       		.uleb128 0x6
 6737 01d5 53060000 		.4byte	.LASF33
 6738 01d9 03       		.byte	0x3
 6739 01da 8A       		.byte	0x8a
 6740 01db 3E000000 		.4byte	0x3e
 6741 01df 07       		.byte	0x7
 6742 01e0 06       		.uleb128 0x6
 6743 01e1 52030000 		.4byte	.LASF34
 6744 01e5 03       		.byte	0x3
 6745 01e6 8B       		.byte	0x8b
 6746 01e7 70000000 		.4byte	0x70
 6747 01eb 08       		.byte	0x8
 6748 01ec 06       		.uleb128 0x6
 6749 01ed 86040000 		.4byte	.LASF35
 6750 01f1 03       		.byte	0x3
 6751 01f2 8C       		.byte	0x8c
 6752 01f3 9B000000 		.4byte	0x9b
 6753 01f7 0C       		.byte	0xc
 6754 01f8 00       		.byte	0
 6755 01f9 0B       		.uleb128 0xb
 6756 01fa 04       		.byte	0x4
 6757 01fb 9F010000 		.4byte	0x19f
 6758 01ff 03       		.uleb128 0x3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 217


 6759 0200 9D060000 		.4byte	.LASF36
 6760 0204 03       		.byte	0x3
 6761 0205 97       		.byte	0x97
 6762 0206 AA010000 		.4byte	0x1aa
 6763 020a 05       		.uleb128 0x5
 6764 020b 2802     		.2byte	0x228
 6765 020d 03       		.byte	0x3
 6766 020e 9D       		.byte	0x9d
 6767 020f 80020000 		.4byte	0x280
 6768 0213 07       		.uleb128 0x7
 6769 0214 6F626A00 		.ascii	"obj\000"
 6770 0218 03       		.byte	0x3
 6771 0219 9E       		.byte	0x9e
 6772 021a FF010000 		.4byte	0x1ff
 6773 021e 00       		.byte	0
 6774 021f 06       		.uleb128 0x6
 6775 0220 FB040000 		.4byte	.LASF37
 6776 0224 03       		.byte	0x3
 6777 0225 9F       		.byte	0x9f
 6778 0226 3E000000 		.4byte	0x3e
 6779 022a 10       		.byte	0x10
 6780 022b 07       		.uleb128 0x7
 6781 022c 65727200 		.ascii	"err\000"
 6782 0230 03       		.byte	0x3
 6783 0231 A0       		.byte	0xa0
 6784 0232 3E000000 		.4byte	0x3e
 6785 0236 11       		.byte	0x11
 6786 0237 06       		.uleb128 0x6
 6787 0238 19030000 		.4byte	.LASF38
 6788 023c 03       		.byte	0x3
 6789 023d A1       		.byte	0xa1
 6790 023e 9B000000 		.4byte	0x9b
 6791 0242 14       		.byte	0x14
 6792 0243 06       		.uleb128 0x6
 6793 0244 B4060000 		.4byte	.LASF39
 6794 0248 03       		.byte	0x3
 6795 0249 A2       		.byte	0xa2
 6796 024a 70000000 		.4byte	0x70
 6797 024e 18       		.byte	0x18
 6798 024f 06       		.uleb128 0x6
 6799 0250 A4000000 		.4byte	.LASF40
 6800 0254 03       		.byte	0x3
 6801 0255 A3       		.byte	0xa3
 6802 0256 70000000 		.4byte	0x70
 6803 025a 1C       		.byte	0x1c
 6804 025b 06       		.uleb128 0x6
 6805 025c B5000000 		.4byte	.LASF41
 6806 0260 03       		.byte	0x3
 6807 0261 A5       		.byte	0xa5
 6808 0262 70000000 		.4byte	0x70
 6809 0266 20       		.byte	0x20
 6810 0267 06       		.uleb128 0x6
 6811 0268 C6010000 		.4byte	.LASF42
 6812 026c 03       		.byte	0x3
 6813 026d A6       		.byte	0xa6
 6814 026e 80020000 		.4byte	0x280
 6815 0272 24       		.byte	0x24
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 218


 6816 0273 07       		.uleb128 0x7
 6817 0274 62756600 		.ascii	"buf\000"
 6818 0278 03       		.byte	0x3
 6819 0279 AC       		.byte	0xac
 6820 027a 87010000 		.4byte	0x187
 6821 027e 28       		.byte	0x28
 6822 027f 00       		.byte	0
 6823 0280 0B       		.uleb128 0xb
 6824 0281 04       		.byte	0x4
 6825 0282 3E000000 		.4byte	0x3e
 6826 0286 0C       		.uleb128 0xc
 6827 0287 46494C00 		.ascii	"FIL\000"
 6828 028b 03       		.byte	0x3
 6829 028c AE       		.byte	0xae
 6830 028d 0A020000 		.4byte	0x20a
 6831 0291 0A       		.uleb128 0xa
 6832 0292 2C       		.byte	0x2c
 6833 0293 03       		.byte	0x3
 6834 0294 B4       		.byte	0xb4
 6835 0295 E1020000 		.4byte	0x2e1
 6836 0299 07       		.uleb128 0x7
 6837 029a 6F626A00 		.ascii	"obj\000"
 6838 029e 03       		.byte	0x3
 6839 029f B5       		.byte	0xb5
 6840 02a0 FF010000 		.4byte	0x1ff
 6841 02a4 00       		.byte	0
 6842 02a5 06       		.uleb128 0x6
 6843 02a6 39050000 		.4byte	.LASF43
 6844 02aa 03       		.byte	0x3
 6845 02ab B6       		.byte	0xb6
 6846 02ac 70000000 		.4byte	0x70
 6847 02b0 10       		.byte	0x10
 6848 02b1 06       		.uleb128 0x6
 6849 02b2 B4060000 		.4byte	.LASF39
 6850 02b6 03       		.byte	0x3
 6851 02b7 B7       		.byte	0xb7
 6852 02b8 70000000 		.4byte	0x70
 6853 02bc 14       		.byte	0x14
 6854 02bd 06       		.uleb128 0x6
 6855 02be A4000000 		.4byte	.LASF40
 6856 02c2 03       		.byte	0x3
 6857 02c3 B8       		.byte	0xb8
 6858 02c4 70000000 		.4byte	0x70
 6859 02c8 18       		.byte	0x18
 6860 02c9 07       		.uleb128 0x7
 6861 02ca 64697200 		.ascii	"dir\000"
 6862 02ce 03       		.byte	0x3
 6863 02cf B9       		.byte	0xb9
 6864 02d0 80020000 		.4byte	0x280
 6865 02d4 1C       		.byte	0x1c
 6866 02d5 07       		.uleb128 0x7
 6867 02d6 666E00   		.ascii	"fn\000"
 6868 02d9 03       		.byte	0x3
 6869 02da BA       		.byte	0xba
 6870 02db E1020000 		.4byte	0x2e1
 6871 02df 20       		.byte	0x20
 6872 02e0 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 219


 6873 02e1 08       		.uleb128 0x8
 6874 02e2 3E000000 		.4byte	0x3e
 6875 02e6 F1020000 		.4byte	0x2f1
 6876 02ea 0D       		.uleb128 0xd
 6877 02eb 98010000 		.4byte	0x198
 6878 02ef 0B       		.byte	0xb
 6879 02f0 00       		.byte	0
 6880 02f1 0C       		.uleb128 0xc
 6881 02f2 44495200 		.ascii	"DIR\000"
 6882 02f6 03       		.byte	0x3
 6883 02f7 C1       		.byte	0xc1
 6884 02f8 91020000 		.4byte	0x291
 6885 02fc 0A       		.uleb128 0xa
 6886 02fd 18       		.byte	0x18
 6887 02fe 03       		.byte	0x3
 6888 02ff C7       		.byte	0xc7
 6889 0300 41030000 		.4byte	0x341
 6890 0304 06       		.uleb128 0x6
 6891 0305 E6000000 		.4byte	.LASF24
 6892 0309 03       		.byte	0x3
 6893 030a C8       		.byte	0xc8
 6894 030b 9B000000 		.4byte	0x9b
 6895 030f 00       		.byte	0
 6896 0310 06       		.uleb128 0x6
 6897 0311 0E030000 		.4byte	.LASF44
 6898 0315 03       		.byte	0x3
 6899 0316 C9       		.byte	0xc9
 6900 0317 57000000 		.4byte	0x57
 6901 031b 04       		.byte	0x4
 6902 031c 06       		.uleb128 0x6
 6903 031d FC010000 		.4byte	.LASF45
 6904 0321 03       		.byte	0x3
 6905 0322 CA       		.byte	0xca
 6906 0323 57000000 		.4byte	0x57
 6907 0327 06       		.byte	0x6
 6908 0328 06       		.uleb128 0x6
 6909 0329 1C060000 		.4byte	.LASF46
 6910 032d 03       		.byte	0x3
 6911 032e CB       		.byte	0xcb
 6912 032f 3E000000 		.4byte	0x3e
 6913 0333 08       		.byte	0x8
 6914 0334 06       		.uleb128 0x6
 6915 0335 DC020000 		.4byte	.LASF47
 6916 0339 03       		.byte	0x3
 6917 033a D0       		.byte	0xd0
 6918 033b 41030000 		.4byte	0x341
 6919 033f 09       		.byte	0x9
 6920 0340 00       		.byte	0
 6921 0341 08       		.uleb128 0x8
 6922 0342 89000000 		.4byte	0x89
 6923 0346 51030000 		.4byte	0x351
 6924 034a 0D       		.uleb128 0xd
 6925 034b 98010000 		.4byte	0x198
 6926 034f 0C       		.byte	0xc
 6927 0350 00       		.byte	0
 6928 0351 03       		.uleb128 0x3
 6929 0352 35060000 		.4byte	.LASF48
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 220


 6930 0356 03       		.byte	0x3
 6931 0357 D2       		.byte	0xd2
 6932 0358 FC020000 		.4byte	0x2fc
 6933 035c 0E       		.uleb128 0xe
 6934 035d 01       		.byte	0x1
 6935 035e 49000000 		.4byte	0x49
 6936 0362 03       		.byte	0x3
 6937 0363 D8       		.byte	0xd8
 6938 0364 E1030000 		.4byte	0x3e1
 6939 0368 0F       		.uleb128 0xf
 6940 0369 82050000 		.4byte	.LASF49
 6941 036d 00       		.byte	0
 6942 036e 0F       		.uleb128 0xf
 6943 036f A2020000 		.4byte	.LASF50
 6944 0373 01       		.byte	0x1
 6945 0374 0F       		.uleb128 0xf
 6946 0375 8E020000 		.4byte	.LASF51
 6947 0379 02       		.byte	0x2
 6948 037a 0F       		.uleb128 0xf
 6949 037b 90060000 		.4byte	.LASF52
 6950 037f 03       		.byte	0x3
 6951 0380 0F       		.uleb128 0xf
 6952 0381 60030000 		.4byte	.LASF53
 6953 0385 04       		.byte	0x4
 6954 0386 0F       		.uleb128 0xf
 6955 0387 7A060000 		.4byte	.LASF54
 6956 038b 05       		.byte	0x5
 6957 038c 0F       		.uleb128 0xf
 6958 038d D4050000 		.4byte	.LASF55
 6959 0391 06       		.byte	0x6
 6960 0392 0F       		.uleb128 0xf
 6961 0393 26050000 		.4byte	.LASF56
 6962 0397 07       		.byte	0x7
 6963 0398 0F       		.uleb128 0xf
 6964 0399 5A010000 		.4byte	.LASF57
 6965 039d 08       		.byte	0x8
 6966 039e 0F       		.uleb128 0xf
 6967 039f F5000000 		.4byte	.LASF58
 6968 03a3 09       		.byte	0x9
 6969 03a4 0F       		.uleb128 0xf
 6970 03a5 E2020000 		.4byte	.LASF59
 6971 03a9 0A       		.byte	0xa
 6972 03aa 0F       		.uleb128 0xf
 6973 03ab 15050000 		.4byte	.LASF60
 6974 03af 0B       		.byte	0xb
 6975 03b0 0F       		.uleb128 0xf
 6976 03b1 92030000 		.4byte	.LASF61
 6977 03b5 0C       		.byte	0xc
 6978 03b6 0F       		.uleb128 0xf
 6979 03b7 36010000 		.4byte	.LASF62
 6980 03bb 0D       		.byte	0xd
 6981 03bc 0F       		.uleb128 0xf
 6982 03bd 3E050000 		.4byte	.LASF63
 6983 03c1 0E       		.byte	0xe
 6984 03c2 0F       		.uleb128 0xf
 6985 03c3 42030000 		.4byte	.LASF64
 6986 03c7 0F       		.byte	0xf
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 221


 6987 03c8 0F       		.uleb128 0xf
 6988 03c9 58050000 		.4byte	.LASF65
 6989 03cd 10       		.byte	0x10
 6990 03ce 0F       		.uleb128 0xf
 6991 03cf 47010000 		.4byte	.LASF66
 6992 03d3 11       		.byte	0x11
 6993 03d4 0F       		.uleb128 0xf
 6994 03d5 0A000000 		.4byte	.LASF67
 6995 03d9 12       		.byte	0x12
 6996 03da 0F       		.uleb128 0xf
 6997 03db D1000000 		.4byte	.LASF68
 6998 03df 13       		.byte	0x13
 6999 03e0 00       		.byte	0
 7000 03e1 03       		.uleb128 0x3
 7001 03e2 58060000 		.4byte	.LASF69
 7002 03e6 03       		.byte	0x3
 7003 03e7 ED       		.byte	0xed
 7004 03e8 5C030000 		.4byte	0x35c
 7005 03ec 03       		.uleb128 0x3
 7006 03ed A5050000 		.4byte	.LASF70
 7007 03f1 04       		.byte	0x4
 7008 03f2 10       		.byte	0x10
 7009 03f3 3E000000 		.4byte	0x3e
 7010 03f7 0E       		.uleb128 0xe
 7011 03f8 01       		.byte	0x1
 7012 03f9 49000000 		.4byte	0x49
 7013 03fd 04       		.byte	0x4
 7014 03fe 13       		.byte	0x13
 7015 03ff 22040000 		.4byte	0x422
 7016 0403 0F       		.uleb128 0xf
 7017 0404 59030000 		.4byte	.LASF71
 7018 0408 00       		.byte	0
 7019 0409 0F       		.uleb128 0xf
 7020 040a 60060000 		.4byte	.LASF72
 7021 040e 01       		.byte	0x1
 7022 040f 0F       		.uleb128 0xf
 7023 0410 00000000 		.4byte	.LASF73
 7024 0414 02       		.byte	0x2
 7025 0415 0F       		.uleb128 0xf
 7026 0416 57000000 		.4byte	.LASF74
 7027 041a 03       		.byte	0x3
 7028 041b 0F       		.uleb128 0xf
 7029 041c 1B010000 		.4byte	.LASF75
 7030 0420 04       		.byte	0x4
 7031 0421 00       		.byte	0
 7032 0422 10       		.uleb128 0x10
 7033 0423 C2050000 		.4byte	.LASF76
 7034 0427 01       		.byte	0x1
 7035 0428 3602     		.2byte	0x236
 7036 042a 57000000 		.4byte	0x57
 7037 042e 00000000 		.4byte	.LFB0
 7038 0432 0A000000 		.4byte	.LFE0-.LFB0
 7039 0436 01       		.uleb128 0x1
 7040 0437 9C       		.byte	0x9c
 7041 0438 5C040000 		.4byte	0x45c
 7042 043c 11       		.uleb128 0x11
 7043 043d 70747200 		.ascii	"ptr\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 222


 7044 0441 01       		.byte	0x1
 7045 0442 3602     		.2byte	0x236
 7046 0444 5C040000 		.4byte	0x45c
 7047 0448 00000000 		.4byte	.LLST0
 7048 044c 12       		.uleb128 0x12
 7049 044d 727600   		.ascii	"rv\000"
 7050 0450 01       		.byte	0x1
 7051 0451 3802     		.2byte	0x238
 7052 0453 57000000 		.4byte	0x57
 7053 0457 21000000 		.4byte	.LLST1
 7054 045b 00       		.byte	0
 7055 045c 0B       		.uleb128 0xb
 7056 045d 04       		.byte	0x4
 7057 045e 62040000 		.4byte	0x462
 7058 0462 13       		.uleb128 0x13
 7059 0463 3E000000 		.4byte	0x3e
 7060 0467 10       		.uleb128 0x10
 7061 0468 FB050000 		.4byte	.LASF77
 7062 046c 01       		.byte	0x1
 7063 046d 4002     		.2byte	0x240
 7064 046f 70000000 		.4byte	0x70
 7065 0473 00000000 		.4byte	.LFB1
 7066 0477 16000000 		.4byte	.LFE1-.LFB1
 7067 047b 01       		.uleb128 0x1
 7068 047c 9C       		.byte	0x9c
 7069 047d A1040000 		.4byte	0x4a1
 7070 0481 11       		.uleb128 0x11
 7071 0482 70747200 		.ascii	"ptr\000"
 7072 0486 01       		.byte	0x1
 7073 0487 4002     		.2byte	0x240
 7074 0489 5C040000 		.4byte	0x45c
 7075 048d 63000000 		.4byte	.LLST2
 7076 0491 12       		.uleb128 0x12
 7077 0492 727600   		.ascii	"rv\000"
 7078 0495 01       		.byte	0x1
 7079 0496 4202     		.2byte	0x242
 7080 0498 70000000 		.4byte	0x70
 7081 049c 84000000 		.4byte	.LLST3
 7082 04a0 00       		.byte	0
 7083 04a1 14       		.uleb128 0x14
 7084 04a2 2D060000 		.4byte	.LASF78
 7085 04a6 01       		.byte	0x1
 7086 04a7 5F02     		.2byte	0x25f
 7087 04a9 00000000 		.4byte	.LFB2
 7088 04ad 08000000 		.4byte	.LFE2-.LFB2
 7089 04b1 01       		.uleb128 0x1
 7090 04b2 9C       		.byte	0x9c
 7091 04b3 D8040000 		.4byte	0x4d8
 7092 04b7 11       		.uleb128 0x11
 7093 04b8 70747200 		.ascii	"ptr\000"
 7094 04bc 01       		.byte	0x1
 7095 04bd 5F02     		.2byte	0x25f
 7096 04bf 80020000 		.4byte	0x280
 7097 04c3 BF000000 		.4byte	.LLST4
 7098 04c7 11       		.uleb128 0x11
 7099 04c8 76616C00 		.ascii	"val\000"
 7100 04cc 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 223


 7101 04cd 5F02     		.2byte	0x25f
 7102 04cf 57000000 		.4byte	0x57
 7103 04d3 EC000000 		.4byte	.LLST5
 7104 04d7 00       		.byte	0
 7105 04d8 14       		.uleb128 0x14
 7106 04d9 81030000 		.4byte	.LASF79
 7107 04dd 01       		.byte	0x1
 7108 04de 6602     		.2byte	0x266
 7109 04e0 00000000 		.4byte	.LFB3
 7110 04e4 14000000 		.4byte	.LFE3-.LFB3
 7111 04e8 01       		.uleb128 0x1
 7112 04e9 9C       		.byte	0x9c
 7113 04ea 0F050000 		.4byte	0x50f
 7114 04ee 11       		.uleb128 0x11
 7115 04ef 70747200 		.ascii	"ptr\000"
 7116 04f3 01       		.byte	0x1
 7117 04f4 6602     		.2byte	0x266
 7118 04f6 80020000 		.4byte	0x280
 7119 04fa 0E010000 		.4byte	.LLST6
 7120 04fe 11       		.uleb128 0x11
 7121 04ff 76616C00 		.ascii	"val\000"
 7122 0503 01       		.byte	0x1
 7123 0504 6602     		.2byte	0x266
 7124 0506 70000000 		.4byte	0x70
 7125 050a 55010000 		.4byte	.LLST7
 7126 050e 00       		.byte	0
 7127 050f 14       		.uleb128 0x14
 7128 0510 0D060000 		.4byte	.LASF80
 7129 0514 01       		.byte	0x1
 7130 0515 8602     		.2byte	0x286
 7131 0517 00000000 		.4byte	.LFB4
 7132 051b 12000000 		.4byte	.LFE4-.LFB4
 7133 051f 01       		.uleb128 0x1
 7134 0520 9C       		.byte	0x9c
 7135 0521 72050000 		.4byte	0x572
 7136 0525 11       		.uleb128 0x11
 7137 0526 64737400 		.ascii	"dst\000"
 7138 052a 01       		.byte	0x1
 7139 052b 8602     		.2byte	0x286
 7140 052d 72050000 		.4byte	0x572
 7141 0531 A0010000 		.4byte	.LLST8
 7142 0535 11       		.uleb128 0x11
 7143 0536 73726300 		.ascii	"src\000"
 7144 053a 01       		.byte	0x1
 7145 053b 8602     		.2byte	0x286
 7146 053d 74050000 		.4byte	0x574
 7147 0541 C1010000 		.4byte	.LLST9
 7148 0545 11       		.uleb128 0x11
 7149 0546 636E7400 		.ascii	"cnt\000"
 7150 054a 01       		.byte	0x1
 7151 054b 8602     		.2byte	0x286
 7152 054d 2C000000 		.4byte	0x2c
 7153 0551 E2010000 		.4byte	.LLST10
 7154 0555 12       		.uleb128 0x12
 7155 0556 6400     		.ascii	"d\000"
 7156 0558 01       		.byte	0x1
 7157 0559 8802     		.2byte	0x288
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 224


 7158 055b 80020000 		.4byte	0x280
 7159 055f 18020000 		.4byte	.LLST11
 7160 0563 12       		.uleb128 0x12
 7161 0564 7300     		.ascii	"s\000"
 7162 0566 01       		.byte	0x1
 7163 0567 8902     		.2byte	0x289
 7164 0569 5C040000 		.4byte	0x45c
 7165 056d 43020000 		.4byte	.LLST12
 7166 0571 00       		.byte	0
 7167 0572 15       		.uleb128 0x15
 7168 0573 04       		.byte	0x4
 7169 0574 0B       		.uleb128 0xb
 7170 0575 04       		.byte	0x4
 7171 0576 7A050000 		.4byte	0x57a
 7172 057a 16       		.uleb128 0x16
 7173 057b 14       		.uleb128 0x14
 7174 057c 1E030000 		.4byte	.LASF81
 7175 0580 01       		.byte	0x1
 7176 0581 9502     		.2byte	0x295
 7177 0583 00000000 		.4byte	.LFB5
 7178 0587 0A000000 		.4byte	.LFE5-.LFB5
 7179 058b 01       		.uleb128 0x1
 7180 058c 9C       		.byte	0x9c
 7181 058d CF050000 		.4byte	0x5cf
 7182 0591 17       		.uleb128 0x17
 7183 0592 64737400 		.ascii	"dst\000"
 7184 0596 01       		.byte	0x1
 7185 0597 9502     		.2byte	0x295
 7186 0599 72050000 		.4byte	0x572
 7187 059d 04       		.uleb128 0x4
 7188 059e F3       		.byte	0xf3
 7189 059f 01       		.uleb128 0x1
 7190 05a0 50       		.byte	0x50
 7191 05a1 9F       		.byte	0x9f
 7192 05a2 17       		.uleb128 0x17
 7193 05a3 76616C00 		.ascii	"val\000"
 7194 05a7 01       		.byte	0x1
 7195 05a8 9502     		.2byte	0x295
 7196 05aa 25000000 		.4byte	0x25
 7197 05ae 01       		.uleb128 0x1
 7198 05af 51       		.byte	0x51
 7199 05b0 11       		.uleb128 0x11
 7200 05b1 636E7400 		.ascii	"cnt\000"
 7201 05b5 01       		.byte	0x1
 7202 05b6 9502     		.2byte	0x295
 7203 05b8 2C000000 		.4byte	0x2c
 7204 05bc 6E020000 		.4byte	.LLST13
 7205 05c0 12       		.uleb128 0x12
 7206 05c1 6400     		.ascii	"d\000"
 7207 05c3 01       		.byte	0x1
 7208 05c4 9702     		.2byte	0x297
 7209 05c6 80020000 		.4byte	0x280
 7210 05ca AA020000 		.4byte	.LLST14
 7211 05ce 00       		.byte	0
 7212 05cf 10       		.uleb128 0x10
 7213 05d0 B6020000 		.4byte	.LASF82
 7214 05d4 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 225


 7215 05d5 A102     		.2byte	0x2a1
 7216 05d7 25000000 		.4byte	0x25
 7217 05db 00000000 		.4byte	.LFB6
 7218 05df 1E000000 		.4byte	.LFE6-.LFB6
 7219 05e3 01       		.uleb128 0x1
 7220 05e4 9C       		.byte	0x9c
 7221 05e5 42060000 		.4byte	0x642
 7222 05e9 11       		.uleb128 0x11
 7223 05ea 64737400 		.ascii	"dst\000"
 7224 05ee 01       		.byte	0x1
 7225 05ef A102     		.2byte	0x2a1
 7226 05f1 74050000 		.4byte	0x574
 7227 05f5 CD020000 		.4byte	.LLST15
 7228 05f9 11       		.uleb128 0x11
 7229 05fa 73726300 		.ascii	"src\000"
 7230 05fe 01       		.byte	0x1
 7231 05ff A102     		.2byte	0x2a1
 7232 0601 74050000 		.4byte	0x574
 7233 0605 EE020000 		.4byte	.LLST16
 7234 0609 11       		.uleb128 0x11
 7235 060a 636E7400 		.ascii	"cnt\000"
 7236 060e 01       		.byte	0x1
 7237 060f A102     		.2byte	0x2a1
 7238 0611 2C000000 		.4byte	0x2c
 7239 0615 0F030000 		.4byte	.LLST17
 7240 0619 12       		.uleb128 0x12
 7241 061a 6400     		.ascii	"d\000"
 7242 061c 01       		.byte	0x1
 7243 061d A302     		.2byte	0x2a3
 7244 061f 5C040000 		.4byte	0x45c
 7245 0623 3A030000 		.4byte	.LLST18
 7246 0627 12       		.uleb128 0x12
 7247 0628 7300     		.ascii	"s\000"
 7248 062a 01       		.byte	0x1
 7249 062b A302     		.2byte	0x2a3
 7250 062d 5C040000 		.4byte	0x45c
 7251 0631 58030000 		.4byte	.LLST19
 7252 0635 18       		.uleb128 0x18
 7253 0636 7200     		.ascii	"r\000"
 7254 0638 01       		.byte	0x1
 7255 0639 A402     		.2byte	0x2a4
 7256 063b 25000000 		.4byte	0x25
 7257 063f 01       		.uleb128 0x1
 7258 0640 53       		.byte	0x53
 7259 0641 00       		.byte	0
 7260 0642 10       		.uleb128 0x10
 7261 0643 37000000 		.4byte	.LASF83
 7262 0647 01       		.byte	0x1
 7263 0648 B002     		.2byte	0x2b0
 7264 064a 25000000 		.4byte	0x25
 7265 064e 00000000 		.4byte	.LFB7
 7266 0652 10000000 		.4byte	.LFE7-.LFB7
 7267 0656 01       		.uleb128 0x1
 7268 0657 9C       		.byte	0x9c
 7269 0658 7B060000 		.4byte	0x67b
 7270 065c 11       		.uleb128 0x11
 7271 065d 73747200 		.ascii	"str\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 226


 7272 0661 01       		.byte	0x1
 7273 0662 B002     		.2byte	0x2b0
 7274 0664 7B060000 		.4byte	0x67b
 7275 0668 83030000 		.4byte	.LLST20
 7276 066c 17       		.uleb128 0x17
 7277 066d 63687200 		.ascii	"chr\000"
 7278 0671 01       		.byte	0x1
 7279 0672 B002     		.2byte	0x2b0
 7280 0674 25000000 		.4byte	0x25
 7281 0678 01       		.uleb128 0x1
 7282 0679 51       		.byte	0x51
 7283 067a 00       		.byte	0
 7284 067b 0B       		.uleb128 0xb
 7285 067c 04       		.byte	0x4
 7286 067d 81060000 		.4byte	0x681
 7287 0681 13       		.uleb128 0x13
 7288 0682 94000000 		.4byte	0x94
 7289 0686 10       		.uleb128 0x10
 7290 0687 F3040000 		.4byte	.LASF84
 7291 068b 01       		.byte	0x1
 7292 068c B902     		.2byte	0x2b9
 7293 068e 25000000 		.4byte	0x25
 7294 0692 00000000 		.4byte	.LFB8
 7295 0696 24000000 		.4byte	.LFE8-.LFB8
 7296 069a 01       		.uleb128 0x1
 7297 069b 9C       		.byte	0x9c
 7298 069c AF060000 		.4byte	0x6af
 7299 06a0 11       		.uleb128 0x11
 7300 06a1 6300     		.ascii	"c\000"
 7301 06a3 01       		.byte	0x1
 7302 06a4 B902     		.2byte	0x2b9
 7303 06a6 3E000000 		.4byte	0x3e
 7304 06aa A1030000 		.4byte	.LLST21
 7305 06ae 00       		.byte	0
 7306 06af 10       		.uleb128 0x10
 7307 06b0 B2050000 		.4byte	.LASF85
 7308 06b4 01       		.byte	0x1
 7309 06b5 CE02     		.2byte	0x2ce
 7310 06b7 25000000 		.4byte	0x25
 7311 06bb 00000000 		.4byte	.LFB9
 7312 06bf 26000000 		.4byte	.LFE9-.LFB9
 7313 06c3 01       		.uleb128 0x1
 7314 06c4 9C       		.byte	0x9c
 7315 06c5 D8060000 		.4byte	0x6d8
 7316 06c9 11       		.uleb128 0x11
 7317 06ca 6300     		.ascii	"c\000"
 7318 06cc 01       		.byte	0x1
 7319 06cd CE02     		.2byte	0x2ce
 7320 06cf 3E000000 		.4byte	0x3e
 7321 06d3 26040000 		.4byte	.LLST22
 7322 06d7 00       		.byte	0
 7323 06d8 10       		.uleb128 0x10
 7324 06d9 D8010000 		.4byte	.LASF86
 7325 06dd 01       		.byte	0x1
 7326 06de 6404     		.2byte	0x464
 7327 06e0 70000000 		.4byte	0x70
 7328 06e4 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 227


 7329 06e8 18000000 		.4byte	.LFE13-.LFB13
 7330 06ec 01       		.uleb128 0x1
 7331 06ed 9C       		.byte	0x9c
 7332 06ee 12070000 		.4byte	0x712
 7333 06f2 11       		.uleb128 0x11
 7334 06f3 667300   		.ascii	"fs\000"
 7335 06f6 01       		.byte	0x1
 7336 06f7 6504     		.2byte	0x465
 7337 06f9 F9010000 		.4byte	0x1f9
 7338 06fd AB040000 		.4byte	.LLST23
 7339 0701 19       		.uleb128 0x19
 7340 0702 89020000 		.4byte	.LASF87
 7341 0706 01       		.byte	0x1
 7342 0707 6604     		.2byte	0x466
 7343 0709 70000000 		.4byte	0x70
 7344 070d E5040000 		.4byte	.LLST24
 7345 0711 00       		.byte	0
 7346 0712 10       		.uleb128 0x10
 7347 0713 68050000 		.4byte	.LASF88
 7348 0717 01       		.byte	0x1
 7349 0718 2D07     		.2byte	0x72d
 7350 071a 70000000 		.4byte	0x70
 7351 071e 00000000 		.4byte	.LFB22
 7352 0722 24000000 		.4byte	.LFE22-.LFB22
 7353 0726 01       		.uleb128 0x1
 7354 0727 9C       		.byte	0x9c
 7355 0728 7F070000 		.4byte	0x77f
 7356 072c 11       		.uleb128 0x11
 7357 072d 667300   		.ascii	"fs\000"
 7358 0730 01       		.byte	0x1
 7359 0731 2E07     		.2byte	0x72e
 7360 0733 F9010000 		.4byte	0x1f9
 7361 0737 03050000 		.4byte	.LLST25
 7362 073b 11       		.uleb128 0x11
 7363 073c 64697200 		.ascii	"dir\000"
 7364 0740 01       		.byte	0x1
 7365 0741 2F07     		.2byte	0x72f
 7366 0743 5C040000 		.4byte	0x45c
 7367 0747 21050000 		.4byte	.LLST26
 7368 074b 12       		.uleb128 0x12
 7369 074c 636C00   		.ascii	"cl\000"
 7370 074f 01       		.byte	0x1
 7371 0750 3207     		.2byte	0x732
 7372 0752 70000000 		.4byte	0x70
 7373 0756 3F050000 		.4byte	.LLST27
 7374 075a 1A       		.uleb128 0x1a
 7375 075b 0E000000 		.4byte	.LVL67
 7376 075f 22040000 		.4byte	0x422
 7377 0763 6E070000 		.4byte	0x76e
 7378 0767 1B       		.uleb128 0x1b
 7379 0768 01       		.uleb128 0x1
 7380 0769 50       		.byte	0x50
 7381 076a 02       		.uleb128 0x2
 7382 076b 75       		.byte	0x75
 7383 076c 1A       		.sleb128 26
 7384 076d 00       		.byte	0
 7385 076e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 228


 7386 076f 1E000000 		.4byte	.LVL70
 7387 0773 22040000 		.4byte	0x422
 7388 0777 1B       		.uleb128 0x1b
 7389 0778 01       		.uleb128 0x1
 7390 0779 50       		.byte	0x50
 7391 077a 02       		.uleb128 0x2
 7392 077b 75       		.byte	0x75
 7393 077c 14       		.sleb128 20
 7394 077d 00       		.byte	0
 7395 077e 00       		.byte	0
 7396 077f 14       		.uleb128 0x14
 7397 0780 2D010000 		.4byte	.LASF89
 7398 0784 01       		.byte	0x1
 7399 0785 3F07     		.2byte	0x73f
 7400 0787 00000000 		.4byte	.LFB23
 7401 078b 24000000 		.4byte	.LFE23-.LFB23
 7402 078f 01       		.uleb128 0x1
 7403 0790 9C       		.byte	0x9c
 7404 0791 F6070000 		.4byte	0x7f6
 7405 0795 11       		.uleb128 0x11
 7406 0796 667300   		.ascii	"fs\000"
 7407 0799 01       		.byte	0x1
 7408 079a 4007     		.2byte	0x740
 7409 079c F9010000 		.4byte	0x1f9
 7410 07a0 68050000 		.4byte	.LLST28
 7411 07a4 11       		.uleb128 0x11
 7412 07a5 64697200 		.ascii	"dir\000"
 7413 07a9 01       		.byte	0x1
 7414 07aa 4107     		.2byte	0x741
 7415 07ac 80020000 		.4byte	0x280
 7416 07b0 86050000 		.4byte	.LLST29
 7417 07b4 11       		.uleb128 0x11
 7418 07b5 636C00   		.ascii	"cl\000"
 7419 07b8 01       		.byte	0x1
 7420 07b9 4207     		.2byte	0x742
 7421 07bb 70000000 		.4byte	0x70
 7422 07bf A4050000 		.4byte	.LLST30
 7423 07c3 1A       		.uleb128 0x1a
 7424 07c4 12000000 		.4byte	.LVL75
 7425 07c8 A1040000 		.4byte	0x4a1
 7426 07cc DD070000 		.4byte	0x7dd
 7427 07d0 1B       		.uleb128 0x1b
 7428 07d1 01       		.uleb128 0x1
 7429 07d2 50       		.byte	0x50
 7430 07d3 02       		.uleb128 0x2
 7431 07d4 74       		.byte	0x74
 7432 07d5 1A       		.sleb128 26
 7433 07d6 1B       		.uleb128 0x1b
 7434 07d7 01       		.uleb128 0x1
 7435 07d8 51       		.byte	0x51
 7436 07d9 02       		.uleb128 0x2
 7437 07da 75       		.byte	0x75
 7438 07db 00       		.sleb128 0
 7439 07dc 00       		.byte	0
 7440 07dd 1C       		.uleb128 0x1c
 7441 07de 22000000 		.4byte	.LVL76
 7442 07e2 A1040000 		.4byte	0x4a1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 229


 7443 07e6 1B       		.uleb128 0x1b
 7444 07e7 01       		.uleb128 0x1
 7445 07e8 50       		.byte	0x50
 7446 07e9 02       		.uleb128 0x2
 7447 07ea 74       		.byte	0x74
 7448 07eb 14       		.sleb128 20
 7449 07ec 1B       		.uleb128 0x1b
 7450 07ed 01       		.uleb128 0x1
 7451 07ee 51       		.byte	0x51
 7452 07ef 04       		.uleb128 0x4
 7453 07f0 75       		.byte	0x75
 7454 07f1 00       		.sleb128 0
 7455 07f2 40       		.byte	0x40
 7456 07f3 25       		.byte	0x25
 7457 07f4 00       		.byte	0
 7458 07f5 00       		.byte	0
 7459 07f6 14       		.uleb128 0x14
 7460 07f7 2F030000 		.4byte	.LASF90
 7461 07fb 01       		.byte	0x1
 7462 07fc 670A     		.2byte	0xa67
 7463 07fe 00000000 		.4byte	.LFB28
 7464 0802 6A000000 		.4byte	.LFE28-.LFB28
 7465 0806 01       		.uleb128 0x1
 7466 0807 9C       		.byte	0x9c
 7467 0808 73080000 		.4byte	0x873
 7468 080c 11       		.uleb128 0x11
 7469 080d 647000   		.ascii	"dp\000"
 7470 0810 01       		.byte	0x1
 7471 0811 680A     		.2byte	0xa68
 7472 0813 73080000 		.4byte	0x873
 7473 0817 C2050000 		.4byte	.LLST31
 7474 081b 11       		.uleb128 0x11
 7475 081c 666E6F00 		.ascii	"fno\000"
 7476 0820 01       		.byte	0x1
 7477 0821 690A     		.2byte	0xa69
 7478 0823 79080000 		.4byte	0x879
 7479 0827 EB050000 		.4byte	.LLST32
 7480 082b 12       		.uleb128 0x12
 7481 082c 736900   		.ascii	"si\000"
 7482 082f 01       		.byte	0x1
 7483 0830 6C0A     		.2byte	0xa6c
 7484 0832 2C000000 		.4byte	0x2c
 7485 0836 14060000 		.4byte	.LLST33
 7486 083a 12       		.uleb128 0x12
 7487 083b 646900   		.ascii	"di\000"
 7488 083e 01       		.byte	0x1
 7489 083f 6C0A     		.2byte	0xa6c
 7490 0841 2C000000 		.4byte	0x2c
 7491 0845 3D060000 		.4byte	.LLST34
 7492 0849 12       		.uleb128 0x12
 7493 084a 6300     		.ascii	"c\000"
 7494 084c 01       		.byte	0x1
 7495 084d 710A     		.2byte	0xa71
 7496 084f 89000000 		.4byte	0x89
 7497 0853 68060000 		.4byte	.LLST35
 7498 0857 1D       		.uleb128 0x1d
 7499 0858 50000000 		.4byte	.LVL89
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 230


 7500 085c 67040000 		.4byte	0x467
 7501 0860 1D       		.uleb128 0x1d
 7502 0861 5A000000 		.4byte	.LVL90
 7503 0865 22040000 		.4byte	0x422
 7504 0869 1D       		.uleb128 0x1d
 7505 086a 64000000 		.4byte	.LVL91
 7506 086e 22040000 		.4byte	0x422
 7507 0872 00       		.byte	0
 7508 0873 0B       		.uleb128 0xb
 7509 0874 04       		.byte	0x4
 7510 0875 F1020000 		.4byte	0x2f1
 7511 0879 0B       		.uleb128 0xb
 7512 087a 04       		.byte	0x4
 7513 087b 51030000 		.4byte	0x351
 7514 087f 10       		.uleb128 0x10
 7515 0880 76050000 		.4byte	.LASF91
 7516 0884 01       		.byte	0x1
 7517 0885 200B     		.2byte	0xb20
 7518 0887 E1030000 		.4byte	0x3e1
 7519 088b 00000000 		.4byte	.LFB29
 7520 088f 00010000 		.4byte	.LFE29-.LFB29
 7521 0893 01       		.uleb128 0x1
 7522 0894 9C       		.byte	0x9c
 7523 0895 7F090000 		.4byte	0x97f
 7524 0899 11       		.uleb128 0x11
 7525 089a 647000   		.ascii	"dp\000"
 7526 089d 01       		.byte	0x1
 7527 089e 210B     		.2byte	0xb21
 7528 08a0 73080000 		.4byte	0x873
 7529 08a4 7B060000 		.4byte	.LLST36
 7530 08a8 19       		.uleb128 0x19
 7531 08a9 6C000000 		.4byte	.LASF92
 7532 08ad 01       		.byte	0x1
 7533 08ae 220B     		.2byte	0xb22
 7534 08b0 7F090000 		.4byte	0x97f
 7535 08b4 A6060000 		.4byte	.LLST37
 7536 08b8 12       		.uleb128 0x12
 7537 08b9 6300     		.ascii	"c\000"
 7538 08bb 01       		.byte	0x1
 7539 08bc 9F0B     		.2byte	0xb9f
 7540 08be 3E000000 		.4byte	0x3e
 7541 08c2 D2060000 		.4byte	.LLST38
 7542 08c6 12       		.uleb128 0x12
 7543 08c7 6400     		.ascii	"d\000"
 7544 08c9 01       		.byte	0x1
 7545 08ca 9F0B     		.2byte	0xb9f
 7546 08cc 3E000000 		.4byte	0x3e
 7547 08d0 FD060000 		.4byte	.LLST39
 7548 08d4 12       		.uleb128 0x12
 7549 08d5 73666E00 		.ascii	"sfn\000"
 7550 08d9 01       		.byte	0x1
 7551 08da 9F0B     		.2byte	0xb9f
 7552 08dc 80020000 		.4byte	0x280
 7553 08e0 1B070000 		.4byte	.LLST40
 7554 08e4 12       		.uleb128 0x12
 7555 08e5 6E6900   		.ascii	"ni\000"
 7556 08e8 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 231


 7557 08e9 A00B     		.2byte	0xba0
 7558 08eb 2C000000 		.4byte	0x2c
 7559 08ef 3E070000 		.4byte	.LLST41
 7560 08f3 12       		.uleb128 0x12
 7561 08f4 736900   		.ascii	"si\000"
 7562 08f7 01       		.byte	0x1
 7563 08f8 A00B     		.2byte	0xba0
 7564 08fa 2C000000 		.4byte	0x2c
 7565 08fe 68070000 		.4byte	.LLST42
 7566 0902 12       		.uleb128 0x12
 7567 0903 6900     		.ascii	"i\000"
 7568 0905 01       		.byte	0x1
 7569 0906 A00B     		.2byte	0xba0
 7570 0908 2C000000 		.4byte	0x2c
 7571 090c C9070000 		.4byte	.LLST43
 7572 0910 12       		.uleb128 0x12
 7573 0911 7000     		.ascii	"p\000"
 7574 0913 01       		.byte	0x1
 7575 0914 A10B     		.2byte	0xba1
 7576 0916 7B060000 		.4byte	0x67b
 7577 091a 2E080000 		.4byte	.LLST44
 7578 091e 1A       		.uleb128 0x1a
 7579 091f 1C000000 		.4byte	.LVL98
 7580 0923 7B050000 		.4byte	0x57b
 7581 0927 3D090000 		.4byte	0x93d
 7582 092b 1B       		.uleb128 0x1b
 7583 092c 01       		.uleb128 0x1
 7584 092d 50       		.byte	0x50
 7585 092e 02       		.uleb128 0x2
 7586 092f 7A       		.byte	0x7a
 7587 0930 00       		.sleb128 0
 7588 0931 1B       		.uleb128 0x1b
 7589 0932 01       		.uleb128 0x1
 7590 0933 51       		.byte	0x51
 7591 0934 02       		.uleb128 0x2
 7592 0935 08       		.byte	0x8
 7593 0936 20       		.byte	0x20
 7594 0937 1B       		.uleb128 0x1b
 7595 0938 01       		.uleb128 0x1
 7596 0939 52       		.byte	0x52
 7597 093a 01       		.uleb128 0x1
 7598 093b 3B       		.byte	0x3b
 7599 093c 00       		.byte	0
 7600 093d 1A       		.uleb128 0x1a
 7601 093e 6A000000 		.4byte	.LVL106
 7602 0942 86060000 		.4byte	0x686
 7603 0946 51090000 		.4byte	0x951
 7604 094a 1B       		.uleb128 0x1b
 7605 094b 01       		.uleb128 0x1
 7606 094c 50       		.byte	0x50
 7607 094d 02       		.uleb128 0x2
 7608 094e 74       		.byte	0x74
 7609 094f 00       		.sleb128 0
 7610 0950 00       		.byte	0
 7611 0951 1A       		.uleb128 0x1a
 7612 0952 78000000 		.4byte	.LVL109
 7613 0956 AF060000 		.4byte	0x6af
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 232


 7614 095a 65090000 		.4byte	0x965
 7615 095e 1B       		.uleb128 0x1b
 7616 095f 01       		.uleb128 0x1
 7617 0960 50       		.byte	0x50
 7618 0961 02       		.uleb128 0x2
 7619 0962 76       		.byte	0x76
 7620 0963 00       		.sleb128 0
 7621 0964 00       		.byte	0
 7622 0965 1C       		.uleb128 0x1c
 7623 0966 98000000 		.4byte	.LVL114
 7624 096a 42060000 		.4byte	0x642
 7625 096e 1B       		.uleb128 0x1b
 7626 096f 01       		.uleb128 0x1
 7627 0970 50       		.byte	0x50
 7628 0971 05       		.uleb128 0x5
 7629 0972 03       		.byte	0x3
 7630 0973 00000000 		.4byte	.LC0
 7631 0977 1B       		.uleb128 0x1b
 7632 0978 01       		.uleb128 0x1
 7633 0979 51       		.byte	0x51
 7634 097a 02       		.uleb128 0x2
 7635 097b 74       		.byte	0x74
 7636 097c 00       		.sleb128 0
 7637 097d 00       		.byte	0
 7638 097e 00       		.byte	0
 7639 097f 0B       		.uleb128 0xb
 7640 0980 04       		.byte	0x4
 7641 0981 85090000 		.4byte	0x985
 7642 0985 0B       		.uleb128 0xb
 7643 0986 04       		.byte	0x4
 7644 0987 8B090000 		.4byte	0x98b
 7645 098b 13       		.uleb128 0x13
 7646 098c 89000000 		.4byte	0x89
 7647 0990 10       		.uleb128 0x10
 7648 0991 74040000 		.4byte	.LASF93
 7649 0995 01       		.byte	0x1
 7650 0996 3E0C     		.2byte	0xc3e
 7651 0998 25000000 		.4byte	0x25
 7652 099c 00000000 		.4byte	.LFB31
 7653 09a0 54000000 		.4byte	.LFE31-.LFB31
 7654 09a4 01       		.uleb128 0x1
 7655 09a5 9C       		.byte	0x9c
 7656 09a6 F7090000 		.4byte	0x9f7
 7657 09aa 19       		.uleb128 0x19
 7658 09ab 6C000000 		.4byte	.LASF92
 7659 09af 01       		.byte	0x1
 7660 09b0 3F0C     		.2byte	0xc3f
 7661 09b2 7F090000 		.4byte	0x97f
 7662 09b6 41080000 		.4byte	.LLST45
 7663 09ba 12       		.uleb128 0x12
 7664 09bb 747000   		.ascii	"tp\000"
 7665 09be 01       		.byte	0x1
 7666 09bf 420C     		.2byte	0xc42
 7667 09c1 85090000 		.4byte	0x985
 7668 09c5 7B080000 		.4byte	.LLST46
 7669 09c9 12       		.uleb128 0x12
 7670 09ca 747400   		.ascii	"tt\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 233


 7671 09cd 01       		.byte	0x1
 7672 09ce 420C     		.2byte	0xc42
 7673 09d0 85090000 		.4byte	0x985
 7674 09d4 B1080000 		.4byte	.LLST47
 7675 09d8 12       		.uleb128 0x12
 7676 09d9 6900     		.ascii	"i\000"
 7677 09db 01       		.byte	0x1
 7678 09dc 430C     		.2byte	0xc43
 7679 09de 2C000000 		.4byte	0x2c
 7680 09e2 F2080000 		.4byte	.LLST48
 7681 09e6 12       		.uleb128 0x12
 7682 09e7 766F6C00 		.ascii	"vol\000"
 7683 09eb 01       		.byte	0x1
 7684 09ec 440C     		.2byte	0xc44
 7685 09ee 25000000 		.4byte	0x25
 7686 09f2 47090000 		.4byte	.LLST49
 7687 09f6 00       		.byte	0
 7688 09f7 10       		.uleb128 0x10
 7689 09f8 30050000 		.4byte	.LASF94
 7690 09fc 01       		.byte	0x1
 7691 09fd 790D     		.2byte	0xd79
 7692 09ff E1030000 		.4byte	0x3e1
 7693 0a03 00000000 		.4byte	.LFB34
 7694 0a07 46000000 		.4byte	.LFE34-.LFB34
 7695 0a0b 01       		.uleb128 0x1
 7696 0a0c 9C       		.byte	0x9c
 7697 0a0d 4B0A0000 		.4byte	0xa4b
 7698 0a11 11       		.uleb128 0x11
 7699 0a12 6F626A00 		.ascii	"obj\000"
 7700 0a16 01       		.byte	0x1
 7701 0a17 7A0D     		.2byte	0xd7a
 7702 0a19 4B0A0000 		.4byte	0xa4b
 7703 0a1d 97090000 		.4byte	.LLST50
 7704 0a21 11       		.uleb128 0x11
 7705 0a22 72667300 		.ascii	"rfs\000"
 7706 0a26 01       		.byte	0x1
 7707 0a27 7B0D     		.2byte	0xd7b
 7708 0a29 510A0000 		.4byte	0xa51
 7709 0a2d 0D0A0000 		.4byte	.LLST51
 7710 0a31 12       		.uleb128 0x12
 7711 0a32 72657300 		.ascii	"res\000"
 7712 0a36 01       		.byte	0x1
 7713 0a37 7E0D     		.2byte	0xd7e
 7714 0a39 E1030000 		.4byte	0x3e1
 7715 0a3d 410A0000 		.4byte	.LLST52
 7716 0a41 1D       		.uleb128 0x1d
 7717 0a42 1E000000 		.4byte	.LVL149
 7718 0a46 C22C0000 		.4byte	0x2cc2
 7719 0a4a 00       		.byte	0
 7720 0a4b 0B       		.uleb128 0xb
 7721 0a4c 04       		.byte	0x4
 7722 0a4d FF010000 		.4byte	0x1ff
 7723 0a51 0B       		.uleb128 0xb
 7724 0a52 04       		.byte	0x4
 7725 0a53 F9010000 		.4byte	0x1f9
 7726 0a57 10       		.uleb128 0x10
 7727 0a58 88010000 		.4byte	.LASF95
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 234


 7728 0a5c 01       		.byte	0x1
 7729 0a5d 0704     		.2byte	0x407
 7730 0a5f E1030000 		.4byte	0x3e1
 7731 0a63 00000000 		.4byte	.LFB10
 7732 0a67 50000000 		.4byte	.LFE10-.LFB10
 7733 0a6b 01       		.uleb128 0x1
 7734 0a6c 9C       		.byte	0x9c
 7735 0a6d BF0A0000 		.4byte	0xabf
 7736 0a71 11       		.uleb128 0x11
 7737 0a72 667300   		.ascii	"fs\000"
 7738 0a75 01       		.byte	0x1
 7739 0a76 0804     		.2byte	0x408
 7740 0a78 F9010000 		.4byte	0x1f9
 7741 0a7c 600A0000 		.4byte	.LLST53
 7742 0a80 12       		.uleb128 0x12
 7743 0a81 72657300 		.ascii	"res\000"
 7744 0a85 01       		.byte	0x1
 7745 0a86 0B04     		.2byte	0x40b
 7746 0a88 E1030000 		.4byte	0x3e1
 7747 0a8c A20A0000 		.4byte	.LLST54
 7748 0a90 1A       		.uleb128 0x1a
 7749 0a91 18000000 		.4byte	.LVL162
 7750 0a95 CD2C0000 		.4byte	0x2ccd
 7751 0a99 A90A0000 		.4byte	0xaa9
 7752 0a9d 1B       		.uleb128 0x1b
 7753 0a9e 01       		.uleb128 0x1
 7754 0a9f 51       		.byte	0x51
 7755 0aa0 02       		.uleb128 0x2
 7756 0aa1 75       		.byte	0x75
 7757 0aa2 00       		.sleb128 0
 7758 0aa3 1B       		.uleb128 0x1b
 7759 0aa4 01       		.uleb128 0x1
 7760 0aa5 53       		.byte	0x53
 7761 0aa6 01       		.uleb128 0x1
 7762 0aa7 31       		.byte	0x31
 7763 0aa8 00       		.byte	0
 7764 0aa9 1C       		.uleb128 0x1c
 7765 0aaa 3C000000 		.4byte	.LVL163
 7766 0aae CD2C0000 		.4byte	0x2ccd
 7767 0ab2 1B       		.uleb128 0x1b
 7768 0ab3 01       		.uleb128 0x1
 7769 0ab4 51       		.byte	0x51
 7770 0ab5 02       		.uleb128 0x2
 7771 0ab6 75       		.byte	0x75
 7772 0ab7 00       		.sleb128 0
 7773 0ab8 1B       		.uleb128 0x1b
 7774 0ab9 01       		.uleb128 0x1
 7775 0aba 53       		.byte	0x53
 7776 0abb 01       		.uleb128 0x1
 7777 0abc 31       		.byte	0x31
 7778 0abd 00       		.byte	0
 7779 0abe 00       		.byte	0
 7780 0abf 10       		.uleb128 0x10
 7781 0ac0 EF050000 		.4byte	.LASF96
 7782 0ac4 01       		.byte	0x1
 7783 0ac5 1E04     		.2byte	0x41e
 7784 0ac7 E1030000 		.4byte	0x3e1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 235


 7785 0acb 00000000 		.4byte	.LFB11
 7786 0acf 34000000 		.4byte	.LFE11-.LFB11
 7787 0ad3 01       		.uleb128 0x1
 7788 0ad4 9C       		.byte	0x9c
 7789 0ad5 380B0000 		.4byte	0xb38
 7790 0ad9 11       		.uleb128 0x11
 7791 0ada 667300   		.ascii	"fs\000"
 7792 0add 01       		.byte	0x1
 7793 0ade 1F04     		.2byte	0x41f
 7794 0ae0 F9010000 		.4byte	0x1f9
 7795 0ae4 C10A0000 		.4byte	.LLST55
 7796 0ae8 19       		.uleb128 0x19
 7797 0ae9 BE020000 		.4byte	.LASF97
 7798 0aed 01       		.byte	0x1
 7799 0aee 2004     		.2byte	0x420
 7800 0af0 70000000 		.4byte	0x70
 7801 0af4 F80A0000 		.4byte	.LLST56
 7802 0af8 12       		.uleb128 0x12
 7803 0af9 72657300 		.ascii	"res\000"
 7804 0afd 01       		.byte	0x1
 7805 0afe 2304     		.2byte	0x423
 7806 0b00 E1030000 		.4byte	0x3e1
 7807 0b04 210B0000 		.4byte	.LLST57
 7808 0b08 1A       		.uleb128 0x1a
 7809 0b09 10000000 		.4byte	.LVL172
 7810 0b0d 570A0000 		.4byte	0xa57
 7811 0b11 1C0B0000 		.4byte	0xb1c
 7812 0b15 1B       		.uleb128 0x1b
 7813 0b16 01       		.uleb128 0x1
 7814 0b17 50       		.byte	0x50
 7815 0b18 02       		.uleb128 0x2
 7816 0b19 74       		.byte	0x74
 7817 0b1a 00       		.sleb128 0
 7818 0b1b 00       		.byte	0
 7819 0b1c 1C       		.uleb128 0x1c
 7820 0b1d 22000000 		.4byte	.LVL174
 7821 0b21 D82C0000 		.4byte	0x2cd8
 7822 0b25 1B       		.uleb128 0x1b
 7823 0b26 01       		.uleb128 0x1
 7824 0b27 51       		.byte	0x51
 7825 0b28 02       		.uleb128 0x2
 7826 0b29 74       		.byte	0x74
 7827 0b2a 30       		.sleb128 48
 7828 0b2b 1B       		.uleb128 0x1b
 7829 0b2c 01       		.uleb128 0x1
 7830 0b2d 52       		.byte	0x52
 7831 0b2e 02       		.uleb128 0x2
 7832 0b2f 75       		.byte	0x75
 7833 0b30 00       		.sleb128 0
 7834 0b31 1B       		.uleb128 0x1b
 7835 0b32 01       		.uleb128 0x1
 7836 0b33 53       		.byte	0x53
 7837 0b34 01       		.uleb128 0x1
 7838 0b35 31       		.byte	0x31
 7839 0b36 00       		.byte	0
 7840 0b37 00       		.byte	0
 7841 0b38 10       		.uleb128 0x10
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 236


 7842 0b39 0C050000 		.4byte	.LASF98
 7843 0b3d 01       		.byte	0x1
 7844 0b3e 7B0C     		.2byte	0xc7b
 7845 0b40 3E000000 		.4byte	0x3e
 7846 0b44 00000000 		.4byte	.LFB32
 7847 0b48 70000000 		.4byte	.LFE32-.LFB32
 7848 0b4c 01       		.uleb128 0x1
 7849 0b4d 9C       		.byte	0x9c
 7850 0b4e E40B0000 		.4byte	0xbe4
 7851 0b52 11       		.uleb128 0x11
 7852 0b53 667300   		.ascii	"fs\000"
 7853 0b56 01       		.byte	0x1
 7854 0b57 7C0C     		.2byte	0xc7c
 7855 0b59 F9010000 		.4byte	0x1f9
 7856 0b5d 620B0000 		.4byte	.LLST58
 7857 0b61 19       		.uleb128 0x19
 7858 0b62 A4000000 		.4byte	.LASF40
 7859 0b66 01       		.byte	0x1
 7860 0b67 7D0C     		.2byte	0xc7d
 7861 0b69 70000000 		.4byte	0x70
 7862 0b6d 8E0B0000 		.4byte	.LLST59
 7863 0b71 1A       		.uleb128 0x1a
 7864 0b72 12000000 		.4byte	.LVL179
 7865 0b76 BF0A0000 		.4byte	0xabf
 7866 0b7a 8C0B0000 		.4byte	0xb8c
 7867 0b7e 1B       		.uleb128 0x1b
 7868 0b7f 01       		.uleb128 0x1
 7869 0b80 50       		.byte	0x50
 7870 0b81 02       		.uleb128 0x2
 7871 0b82 74       		.byte	0x74
 7872 0b83 00       		.sleb128 0
 7873 0b84 1B       		.uleb128 0x1b
 7874 0b85 01       		.uleb128 0x1
 7875 0b86 51       		.byte	0x51
 7876 0b87 03       		.uleb128 0x3
 7877 0b88 F3       		.byte	0xf3
 7878 0b89 01       		.uleb128 0x1
 7879 0b8a 51       		.byte	0x51
 7880 0b8b 00       		.byte	0
 7881 0b8c 1A       		.uleb128 0x1a
 7882 0b8d 1C000000 		.4byte	.LVL180
 7883 0b91 22040000 		.4byte	0x422
 7884 0b95 A10B0000 		.4byte	0xba1
 7885 0b99 1B       		.uleb128 0x1b
 7886 0b9a 01       		.uleb128 0x1
 7887 0b9b 50       		.byte	0x50
 7888 0b9c 03       		.uleb128 0x3
 7889 0b9d 74       		.byte	0x74
 7890 0b9e AE04     		.sleb128 558
 7891 0ba0 00       		.byte	0
 7892 0ba1 1A       		.uleb128 0x1a
 7893 0ba2 40000000 		.4byte	.LVL181
 7894 0ba6 CF050000 		.4byte	0x5cf
 7895 0baa C40B0000 		.4byte	0xbc4
 7896 0bae 1B       		.uleb128 0x1b
 7897 0baf 01       		.uleb128 0x1
 7898 0bb0 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 237


 7899 0bb1 03       		.uleb128 0x3
 7900 0bb2 74       		.byte	0x74
 7901 0bb3 E600     		.sleb128 102
 7902 0bb5 1B       		.uleb128 0x1b
 7903 0bb6 01       		.uleb128 0x1
 7904 0bb7 51       		.byte	0x51
 7905 0bb8 05       		.uleb128 0x5
 7906 0bb9 03       		.byte	0x3
 7907 0bba 10000000 		.4byte	.LC1
 7908 0bbe 1B       		.uleb128 0x1b
 7909 0bbf 01       		.uleb128 0x1
 7910 0bc0 52       		.byte	0x52
 7911 0bc1 01       		.uleb128 0x1
 7912 0bc2 33       		.byte	0x33
 7913 0bc3 00       		.byte	0
 7914 0bc4 1C       		.uleb128 0x1c
 7915 0bc5 4E000000 		.4byte	.LVL182
 7916 0bc9 CF050000 		.4byte	0x5cf
 7917 0bcd 1B       		.uleb128 0x1b
 7918 0bce 01       		.uleb128 0x1
 7919 0bcf 50       		.byte	0x50
 7920 0bd0 03       		.uleb128 0x3
 7921 0bd1 74       		.byte	0x74
 7922 0bd2 8201     		.sleb128 130
 7923 0bd4 1B       		.uleb128 0x1b
 7924 0bd5 01       		.uleb128 0x1
 7925 0bd6 51       		.byte	0x51
 7926 0bd7 05       		.uleb128 0x5
 7927 0bd8 03       		.byte	0x3
 7928 0bd9 14000000 		.4byte	.LC2
 7929 0bdd 1B       		.uleb128 0x1b
 7930 0bde 01       		.uleb128 0x1
 7931 0bdf 52       		.byte	0x52
 7932 0be0 01       		.uleb128 0x1
 7933 0be1 35       		.byte	0x35
 7934 0be2 00       		.byte	0
 7935 0be3 00       		.byte	0
 7936 0be4 10       		.uleb128 0x10
 7937 0be5 E7040000 		.4byte	.LASF99
 7938 0be9 01       		.byte	0x1
 7939 0bea 970C     		.2byte	0xc97
 7940 0bec E1030000 		.4byte	0x3e1
 7941 0bf0 00000000 		.4byte	.LFB33
 7942 0bf4 E8020000 		.4byte	.LFE33-.LFB33
 7943 0bf8 01       		.uleb128 0x1
 7944 0bf9 9C       		.byte	0x9c
 7945 0bfa D80E0000 		.4byte	0xed8
 7946 0bfe 19       		.uleb128 0x19
 7947 0bff 6C000000 		.4byte	.LASF92
 7948 0c03 01       		.byte	0x1
 7949 0c04 980C     		.2byte	0xc98
 7950 0c06 7F090000 		.4byte	0x97f
 7951 0c0a AF0B0000 		.4byte	.LLST60
 7952 0c0e 11       		.uleb128 0x11
 7953 0c0f 72667300 		.ascii	"rfs\000"
 7954 0c13 01       		.byte	0x1
 7955 0c14 990C     		.2byte	0xc99
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 238


 7956 0c16 510A0000 		.4byte	0xa51
 7957 0c1a D00B0000 		.4byte	.LLST61
 7958 0c1e 19       		.uleb128 0x19
 7959 0c1f D3010000 		.4byte	.LASF100
 7960 0c23 01       		.byte	0x1
 7961 0c24 9A0C     		.2byte	0xc9a
 7962 0c26 3E000000 		.4byte	0x3e
 7963 0c2a 2E0C0000 		.4byte	.LLST62
 7964 0c2e 12       		.uleb128 0x12
 7965 0c2f 666D7400 		.ascii	"fmt\000"
 7966 0c33 01       		.byte	0x1
 7967 0c34 9D0C     		.2byte	0xc9d
 7968 0c36 3E000000 		.4byte	0x3e
 7969 0c3a 730C0000 		.4byte	.LLST63
 7970 0c3e 12       		.uleb128 0x12
 7971 0c3f 707400   		.ascii	"pt\000"
 7972 0c42 01       		.byte	0x1
 7973 0c43 9D0C     		.2byte	0xc9d
 7974 0c45 80020000 		.4byte	0x280
 7975 0c49 D40C0000 		.4byte	.LLST64
 7976 0c4d 12       		.uleb128 0x12
 7977 0c4e 766F6C00 		.ascii	"vol\000"
 7978 0c52 01       		.byte	0x1
 7979 0c53 9E0C     		.2byte	0xc9e
 7980 0c55 25000000 		.4byte	0x25
 7981 0c59 3E0D0000 		.4byte	.LLST65
 7982 0c5d 1E       		.uleb128 0x1e
 7983 0c5e 53060000 		.4byte	.LASF33
 7984 0c62 01       		.byte	0x1
 7985 0c63 9F0C     		.2byte	0xc9f
 7986 0c65 EC030000 		.4byte	0x3ec
 7987 0c69 930D0000 		.4byte	.LLST66
 7988 0c6d 1E       		.uleb128 0x1e
 7989 0c6e 57020000 		.4byte	.LASF101
 7990 0c72 01       		.byte	0x1
 7991 0c73 A00C     		.2byte	0xca0
 7992 0c75 70000000 		.4byte	0x70
 7993 0c79 DD0D0000 		.4byte	.LLST67
 7994 0c7d 1E       		.uleb128 0x1e
 7995 0c7e A9000000 		.4byte	.LASF102
 7996 0c82 01       		.byte	0x1
 7997 0c83 A00C     		.2byte	0xca0
 7998 0c85 70000000 		.4byte	0x70
 7999 0c89 070E0000 		.4byte	.LLST68
 8000 0c8d 1E       		.uleb128 0x1e
 8001 0c8e BA060000 		.4byte	.LASF103
 8002 0c92 01       		.byte	0x1
 8003 0c93 A00C     		.2byte	0xca0
 8004 0c95 70000000 		.4byte	0x70
 8005 0c99 5C0E0000 		.4byte	.LLST69
 8006 0c9d 1E       		.uleb128 0x1e
 8007 0c9e 5D020000 		.4byte	.LASF104
 8008 0ca2 01       		.byte	0x1
 8009 0ca3 A00C     		.2byte	0xca0
 8010 0ca5 70000000 		.4byte	0x70
 8011 0ca9 9B0E0000 		.4byte	.LLST70
 8012 0cad 1E       		.uleb128 0x1e
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 239


 8013 0cae 3C030000 		.4byte	.LASF105
 8014 0cb2 01       		.byte	0x1
 8015 0cb3 A00C     		.2byte	0xca0
 8016 0cb5 70000000 		.4byte	0x70
 8017 0cb9 F80E0000 		.4byte	.LLST71
 8018 0cbd 1E       		.uleb128 0x1e
 8019 0cbe C5020000 		.4byte	.LASF106
 8020 0cc2 01       		.byte	0x1
 8021 0cc3 A00C     		.2byte	0xca0
 8022 0cc5 70000000 		.4byte	0x70
 8023 0cc9 6A0F0000 		.4byte	.LLST72
 8024 0ccd 18       		.uleb128 0x18
 8025 0cce 627200   		.ascii	"br\000"
 8026 0cd1 01       		.byte	0x1
 8027 0cd2 A00C     		.2byte	0xca0
 8028 0cd4 D80E0000 		.4byte	0xed8
 8029 0cd8 02       		.uleb128 0x2
 8030 0cd9 91       		.byte	0x91
 8031 0cda 50       		.sleb128 -48
 8032 0cdb 1E       		.uleb128 0x1e
 8033 0cdc B0000000 		.4byte	.LASF107
 8034 0ce0 01       		.byte	0x1
 8035 0ce1 A10C     		.2byte	0xca1
 8036 0ce3 57000000 		.4byte	0x57
 8037 0ce7 A40F0000 		.4byte	.LLST73
 8038 0ceb 12       		.uleb128 0x12
 8039 0cec 667300   		.ascii	"fs\000"
 8040 0cef 01       		.byte	0x1
 8041 0cf0 A20C     		.2byte	0xca2
 8042 0cf2 F9010000 		.4byte	0x1f9
 8043 0cf6 F90F0000 		.4byte	.LLST74
 8044 0cfa 12       		.uleb128 0x12
 8045 0cfb 6900     		.ascii	"i\000"
 8046 0cfd 01       		.byte	0x1
 8047 0cfe A30C     		.2byte	0xca3
 8048 0d00 2C000000 		.4byte	0x2c
 8049 0d04 17100000 		.4byte	.LLST75
 8050 0d08 1A       		.uleb128 0x1a
 8051 0d09 12000000 		.4byte	.LVL190
 8052 0d0d 90090000 		.4byte	0x990
 8053 0d11 1D0D0000 		.4byte	0xd1d
 8054 0d15 1B       		.uleb128 0x1b
 8055 0d16 01       		.uleb128 0x1
 8056 0d17 50       		.byte	0x50
 8057 0d18 03       		.uleb128 0x3
 8058 0d19 F3       		.byte	0xf3
 8059 0d1a 01       		.uleb128 0x1
 8060 0d1b 50       		.byte	0x50
 8061 0d1c 00       		.byte	0
 8062 0d1d 1D       		.uleb128 0x1d
 8063 0d1e 34000000 		.4byte	.LVL194
 8064 0d22 C22C0000 		.4byte	0x2cc2
 8065 0d26 1A       		.uleb128 0x1a
 8066 0d27 58000000 		.4byte	.LVL196
 8067 0d2b E32C0000 		.4byte	0x2ce3
 8068 0d2f 3A0D0000 		.4byte	0xd3a
 8069 0d33 1B       		.uleb128 0x1b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 240


 8070 0d34 01       		.uleb128 0x1
 8071 0d35 50       		.byte	0x50
 8072 0d36 02       		.uleb128 0x2
 8073 0d37 75       		.byte	0x75
 8074 0d38 00       		.sleb128 0
 8075 0d39 00       		.byte	0
 8076 0d3a 1A       		.uleb128 0x1a
 8077 0d3b 72000000 		.4byte	.LVL199
 8078 0d3f 380B0000 		.4byte	0xb38
 8079 0d43 530D0000 		.4byte	0xd53
 8080 0d47 1B       		.uleb128 0x1b
 8081 0d48 01       		.uleb128 0x1
 8082 0d49 50       		.byte	0x50
 8083 0d4a 02       		.uleb128 0x2
 8084 0d4b 74       		.byte	0x74
 8085 0d4c 00       		.sleb128 0
 8086 0d4d 1B       		.uleb128 0x1b
 8087 0d4e 01       		.uleb128 0x1
 8088 0d4f 51       		.byte	0x51
 8089 0d50 01       		.uleb128 0x1
 8090 0d51 30       		.byte	0x30
 8091 0d52 00       		.byte	0
 8092 0d53 1A       		.uleb128 0x1a
 8093 0d54 90000000 		.4byte	.LVL204
 8094 0d58 67040000 		.4byte	0x467
 8095 0d5c 6F0D0000 		.4byte	0xd6f
 8096 0d60 1B       		.uleb128 0x1b
 8097 0d61 01       		.uleb128 0x1
 8098 0d62 50       		.byte	0x50
 8099 0d63 0A       		.uleb128 0xa
 8100 0d64 75       		.byte	0x75
 8101 0d65 00       		.sleb128 0
 8102 0d66 34       		.byte	0x34
 8103 0d67 24       		.byte	0x24
 8104 0d68 74       		.byte	0x74
 8105 0d69 00       		.sleb128 0
 8106 0d6a 22       		.byte	0x22
 8107 0d6b 23       		.byte	0x23
 8108 0d6c F603     		.uleb128 0x1f6
 8109 0d6e 00       		.byte	0
 8110 0d6f 1A       		.uleb128 0x1a
 8111 0d70 BE000000 		.4byte	.LVL212
 8112 0d74 380B0000 		.4byte	0xb38
 8113 0d78 890D0000 		.4byte	0xd89
 8114 0d7c 1B       		.uleb128 0x1b
 8115 0d7d 01       		.uleb128 0x1
 8116 0d7e 50       		.byte	0x50
 8117 0d7f 02       		.uleb128 0x2
 8118 0d80 74       		.byte	0x74
 8119 0d81 00       		.sleb128 0
 8120 0d82 1B       		.uleb128 0x1b
 8121 0d83 01       		.uleb128 0x1
 8122 0d84 51       		.byte	0x51
 8123 0d85 02       		.uleb128 0x2
 8124 0d86 76       		.byte	0x76
 8125 0d87 00       		.sleb128 0
 8126 0d88 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 241


 8127 0d89 1A       		.uleb128 0x1a
 8128 0d8a E0000000 		.4byte	.LVL217
 8129 0d8e 22040000 		.4byte	0x422
 8130 0d92 9D0D0000 		.4byte	0xd9d
 8131 0d96 1B       		.uleb128 0x1b
 8132 0d97 01       		.uleb128 0x1
 8133 0d98 50       		.byte	0x50
 8134 0d99 02       		.uleb128 0x2
 8135 0d9a 74       		.byte	0x74
 8136 0d9b 3B       		.sleb128 59
 8137 0d9c 00       		.byte	0
 8138 0d9d 1A       		.uleb128 0x1a
 8139 0d9e F0000000 		.4byte	.LVL218
 8140 0da2 22040000 		.4byte	0x422
 8141 0da6 B20D0000 		.4byte	0xdb2
 8142 0daa 1B       		.uleb128 0x1b
 8143 0dab 01       		.uleb128 0x1
 8144 0dac 50       		.byte	0x50
 8145 0dad 03       		.uleb128 0x3
 8146 0dae 74       		.byte	0x74
 8147 0daf C600     		.sleb128 70
 8148 0db1 00       		.byte	0
 8149 0db2 1A       		.uleb128 0x1a
 8150 0db3 FC000000 		.4byte	.LVL221
 8151 0db7 67040000 		.4byte	0x467
 8152 0dbb C70D0000 		.4byte	0xdc7
 8153 0dbf 1B       		.uleb128 0x1b
 8154 0dc0 01       		.uleb128 0x1
 8155 0dc1 50       		.byte	0x50
 8156 0dc2 03       		.uleb128 0x3
 8157 0dc3 74       		.byte	0x74
 8158 0dc4 D400     		.sleb128 84
 8159 0dc6 00       		.byte	0
 8160 0dc7 1A       		.uleb128 0x1a
 8161 0dc8 36010000 		.4byte	.LVL224
 8162 0dcc 22040000 		.4byte	0x422
 8163 0dd0 DC0D0000 		.4byte	0xddc
 8164 0dd4 1B       		.uleb128 0x1b
 8165 0dd5 01       		.uleb128 0x1
 8166 0dd6 50       		.byte	0x50
 8167 0dd7 03       		.uleb128 0x3
 8168 0dd8 74       		.byte	0x74
 8169 0dd9 C100     		.sleb128 65
 8170 0ddb 00       		.byte	0
 8171 0ddc 1A       		.uleb128 0x1a
 8172 0ddd 4A010000 		.4byte	.LVL225
 8173 0de1 22040000 		.4byte	0x422
 8174 0de5 F10D0000 		.4byte	0xdf1
 8175 0de9 1B       		.uleb128 0x1b
 8176 0dea 01       		.uleb128 0x1
 8177 0deb 50       		.byte	0x50
 8178 0dec 03       		.uleb128 0x3
 8179 0ded 74       		.byte	0x74
 8180 0dee C300     		.sleb128 67
 8181 0df0 00       		.byte	0
 8182 0df1 1A       		.uleb128 0x1a
 8183 0df2 56010000 		.4byte	.LVL228
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 242


 8184 0df6 67040000 		.4byte	0x467
 8185 0dfa 060E0000 		.4byte	0xe06
 8186 0dfe 1B       		.uleb128 0x1b
 8187 0dff 01       		.uleb128 0x1
 8188 0e00 50       		.byte	0x50
 8189 0e01 03       		.uleb128 0x3
 8190 0e02 74       		.byte	0x74
 8191 0e03 D000     		.sleb128 80
 8192 0e05 00       		.byte	0
 8193 0e06 1A       		.uleb128 0x1a
 8194 0e07 60010000 		.4byte	.LVL231
 8195 0e0b 22040000 		.4byte	0x422
 8196 0e0f 1A0E0000 		.4byte	0xe1a
 8197 0e13 1B       		.uleb128 0x1b
 8198 0e14 01       		.uleb128 0x1
 8199 0e15 50       		.byte	0x50
 8200 0e16 02       		.uleb128 0x2
 8201 0e17 74       		.byte	0x74
 8202 0e18 3E       		.sleb128 62
 8203 0e19 00       		.byte	0
 8204 0e1a 1A       		.uleb128 0x1a
 8205 0e1b C2010000 		.4byte	.LVL242
 8206 0e1f 22040000 		.4byte	0x422
 8207 0e23 2F0E0000 		.4byte	0xe2f
 8208 0e27 1B       		.uleb128 0x1b
 8209 0e28 01       		.uleb128 0x1
 8210 0e29 50       		.byte	0x50
 8211 0e2a 03       		.uleb128 0x3
 8212 0e2b 74       		.byte	0x74
 8213 0e2c DA00     		.sleb128 90
 8214 0e2e 00       		.byte	0
 8215 0e2f 1A       		.uleb128 0x1a
 8216 0e30 D4010000 		.4byte	.LVL243
 8217 0e34 67040000 		.4byte	0x467
 8218 0e38 440E0000 		.4byte	0xe44
 8219 0e3c 1B       		.uleb128 0x1b
 8220 0e3d 01       		.uleb128 0x1
 8221 0e3e 50       		.byte	0x50
 8222 0e3f 03       		.uleb128 0x3
 8223 0e40 74       		.byte	0x74
 8224 0e41 DC00     		.sleb128 92
 8225 0e43 00       		.byte	0
 8226 0e44 1A       		.uleb128 0x1a
 8227 0e45 1A020000 		.4byte	.LVL251
 8228 0e49 22040000 		.4byte	0x422
 8229 0e4d 590E0000 		.4byte	0xe59
 8230 0e51 1B       		.uleb128 0x1b
 8231 0e52 01       		.uleb128 0x1
 8232 0e53 50       		.byte	0x50
 8233 0e54 03       		.uleb128 0x3
 8234 0e55 74       		.byte	0x74
 8235 0e56 E000     		.sleb128 96
 8236 0e58 00       		.byte	0
 8237 0e59 1A       		.uleb128 0x1a
 8238 0e5a 26020000 		.4byte	.LVL252
 8239 0e5e BF0A0000 		.4byte	0xabf
 8240 0e62 730E0000 		.4byte	0xe73
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 243


 8241 0e66 1B       		.uleb128 0x1b
 8242 0e67 01       		.uleb128 0x1
 8243 0e68 50       		.byte	0x50
 8244 0e69 02       		.uleb128 0x2
 8245 0e6a 74       		.byte	0x74
 8246 0e6b 00       		.sleb128 0
 8247 0e6c 1B       		.uleb128 0x1b
 8248 0e6d 01       		.uleb128 0x1
 8249 0e6e 51       		.byte	0x51
 8250 0e6f 02       		.uleb128 0x2
 8251 0e70 76       		.byte	0x76
 8252 0e71 01       		.sleb128 1
 8253 0e72 00       		.byte	0
 8254 0e73 1A       		.uleb128 0x1a
 8255 0e74 34020000 		.4byte	.LVL253
 8256 0e78 22040000 		.4byte	0x422
 8257 0e7c 880E0000 		.4byte	0xe88
 8258 0e80 1B       		.uleb128 0x1b
 8259 0e81 01       		.uleb128 0x1
 8260 0e82 50       		.byte	0x50
 8261 0e83 03       		.uleb128 0x3
 8262 0e84 74       		.byte	0x74
 8263 0e85 AE04     		.sleb128 558
 8264 0e87 00       		.byte	0
 8265 0e88 1A       		.uleb128 0x1a
 8266 0e89 44020000 		.4byte	.LVL254
 8267 0e8d 67040000 		.4byte	0x467
 8268 0e91 9C0E0000 		.4byte	0xe9c
 8269 0e95 1B       		.uleb128 0x1b
 8270 0e96 01       		.uleb128 0x1
 8271 0e97 50       		.byte	0x50
 8272 0e98 02       		.uleb128 0x2
 8273 0e99 74       		.byte	0x74
 8274 0e9a 30       		.sleb128 48
 8275 0e9b 00       		.byte	0
 8276 0e9c 1A       		.uleb128 0x1a
 8277 0e9d 52020000 		.4byte	.LVL255
 8278 0ea1 67040000 		.4byte	0x467
 8279 0ea5 B10E0000 		.4byte	0xeb1
 8280 0ea9 1B       		.uleb128 0x1b
 8281 0eaa 01       		.uleb128 0x1
 8282 0eab 50       		.byte	0x50
 8283 0eac 03       		.uleb128 0x3
 8284 0ead 74       		.byte	0x74
 8285 0eae 9404     		.sleb128 532
 8286 0eb0 00       		.byte	0
 8287 0eb1 1A       		.uleb128 0x1a
 8288 0eb2 60020000 		.4byte	.LVL256
 8289 0eb6 67040000 		.4byte	0x467
 8290 0eba C60E0000 		.4byte	0xec6
 8291 0ebe 1B       		.uleb128 0x1b
 8292 0ebf 01       		.uleb128 0x1
 8293 0ec0 50       		.byte	0x50
 8294 0ec1 03       		.uleb128 0x3
 8295 0ec2 74       		.byte	0x74
 8296 0ec3 9804     		.sleb128 536
 8297 0ec5 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 244


 8298 0ec6 1C       		.uleb128 0x1c
 8299 0ec7 6A020000 		.4byte	.LVL257
 8300 0ecb 67040000 		.4byte	0x467
 8301 0ecf 1B       		.uleb128 0x1b
 8302 0ed0 01       		.uleb128 0x1
 8303 0ed1 50       		.byte	0x50
 8304 0ed2 03       		.uleb128 0x3
 8305 0ed3 74       		.byte	0x74
 8306 0ed4 9C04     		.sleb128 540
 8307 0ed6 00       		.byte	0
 8308 0ed7 00       		.byte	0
 8309 0ed8 08       		.uleb128 0x8
 8310 0ed9 70000000 		.4byte	0x70
 8311 0edd E80E0000 		.4byte	0xee8
 8312 0ee1 0D       		.uleb128 0xd
 8313 0ee2 98010000 		.4byte	0x198
 8314 0ee6 03       		.byte	0x3
 8315 0ee7 00       		.byte	0
 8316 0ee8 10       		.uleb128 0x10
 8317 0ee9 21000000 		.4byte	.LASF108
 8318 0eed 01       		.byte	0x1
 8319 0eee C404     		.2byte	0x4c4
 8320 0ef0 E1030000 		.4byte	0x3e1
 8321 0ef4 00000000 		.4byte	.LFB15
 8322 0ef8 04010000 		.4byte	.LFE15-.LFB15
 8323 0efc 01       		.uleb128 0x1
 8324 0efd 9C       		.byte	0x9c
 8325 0efe F80F0000 		.4byte	0xff8
 8326 0f02 11       		.uleb128 0x11
 8327 0f03 667300   		.ascii	"fs\000"
 8328 0f06 01       		.byte	0x1
 8329 0f07 C504     		.2byte	0x4c5
 8330 0f09 F9010000 		.4byte	0x1f9
 8331 0f0d 35100000 		.4byte	.LLST76
 8332 0f11 19       		.uleb128 0x19
 8333 0f12 89020000 		.4byte	.LASF87
 8334 0f16 01       		.byte	0x1
 8335 0f17 C604     		.2byte	0x4c6
 8336 0f19 70000000 		.4byte	0x70
 8337 0f1d 98100000 		.4byte	.LLST77
 8338 0f21 11       		.uleb128 0x11
 8339 0f22 76616C00 		.ascii	"val\000"
 8340 0f26 01       		.byte	0x1
 8341 0f27 C704     		.2byte	0x4c7
 8342 0f29 70000000 		.4byte	0x70
 8343 0f2d 17110000 		.4byte	.LLST78
 8344 0f31 12       		.uleb128 0x12
 8345 0f32 626300   		.ascii	"bc\000"
 8346 0f35 01       		.byte	0x1
 8347 0f36 CA04     		.2byte	0x4ca
 8348 0f38 2C000000 		.4byte	0x2c
 8349 0f3c 95110000 		.4byte	.LLST79
 8350 0f40 12       		.uleb128 0x12
 8351 0f41 7000     		.ascii	"p\000"
 8352 0f43 01       		.byte	0x1
 8353 0f44 CB04     		.2byte	0x4cb
 8354 0f46 80020000 		.4byte	0x280
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 245


 8355 0f4a D4110000 		.4byte	.LLST80
 8356 0f4e 12       		.uleb128 0x12
 8357 0f4f 72657300 		.ascii	"res\000"
 8358 0f53 01       		.byte	0x1
 8359 0f54 CC04     		.2byte	0x4cc
 8360 0f56 E1030000 		.4byte	0x3e1
 8361 0f5a FC110000 		.4byte	.LLST81
 8362 0f5e 1A       		.uleb128 0x1a
 8363 0f5f 30000000 		.4byte	.LVL295
 8364 0f63 BF0A0000 		.4byte	0xabf
 8365 0f67 720F0000 		.4byte	0xf72
 8366 0f6b 1B       		.uleb128 0x1b
 8367 0f6c 01       		.uleb128 0x1
 8368 0f6d 50       		.byte	0x50
 8369 0f6e 02       		.uleb128 0x2
 8370 0f6f 76       		.byte	0x76
 8371 0f70 00       		.sleb128 0
 8372 0f71 00       		.byte	0
 8373 0f72 1A       		.uleb128 0x1a
 8374 0f73 6E000000 		.4byte	.LVL300
 8375 0f77 BF0A0000 		.4byte	0xabf
 8376 0f7b 860F0000 		.4byte	0xf86
 8377 0f7f 1B       		.uleb128 0x1b
 8378 0f80 01       		.uleb128 0x1
 8379 0f81 50       		.byte	0x50
 8380 0f82 02       		.uleb128 0x2
 8381 0f83 76       		.byte	0x76
 8382 0f84 00       		.sleb128 0
 8383 0f85 00       		.byte	0
 8384 0f86 1A       		.uleb128 0x1a
 8385 0f87 A2000000 		.4byte	.LVL304
 8386 0f8b BF0A0000 		.4byte	0xabf
 8387 0f8f 9A0F0000 		.4byte	0xf9a
 8388 0f93 1B       		.uleb128 0x1b
 8389 0f94 01       		.uleb128 0x1
 8390 0f95 50       		.byte	0x50
 8391 0f96 02       		.uleb128 0x2
 8392 0f97 76       		.byte	0x76
 8393 0f98 00       		.sleb128 0
 8394 0f99 00       		.byte	0
 8395 0f9a 1A       		.uleb128 0x1a
 8396 0f9b B8000000 		.4byte	.LVL306
 8397 0f9f A1040000 		.4byte	0x4a1
 8398 0fa3 BF0F0000 		.4byte	0xfbf
 8399 0fa7 1B       		.uleb128 0x1b
 8400 0fa8 01       		.uleb128 0x1
 8401 0fa9 50       		.byte	0x50
 8402 0faa 0D       		.uleb128 0xd
 8403 0fab 74       		.byte	0x74
 8404 0fac 00       		.sleb128 0
 8405 0fad 31       		.byte	0x31
 8406 0fae 24       		.byte	0x24
 8407 0faf 0A       		.byte	0xa
 8408 0fb0 FE01     		.2byte	0x1fe
 8409 0fb2 1A       		.byte	0x1a
 8410 0fb3 76       		.byte	0x76
 8411 0fb4 00       		.sleb128 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 246


 8412 0fb5 22       		.byte	0x22
 8413 0fb6 23       		.byte	0x23
 8414 0fb7 30       		.uleb128 0x30
 8415 0fb8 1B       		.uleb128 0x1b
 8416 0fb9 01       		.uleb128 0x1
 8417 0fba 51       		.byte	0x51
 8418 0fbb 02       		.uleb128 0x2
 8419 0fbc 77       		.byte	0x77
 8420 0fbd 00       		.sleb128 0
 8421 0fbe 00       		.byte	0
 8422 0fbf 1A       		.uleb128 0x1a
 8423 0fc0 C8000000 		.4byte	.LVL309
 8424 0fc4 BF0A0000 		.4byte	0xabf
 8425 0fc8 D30F0000 		.4byte	0xfd3
 8426 0fcc 1B       		.uleb128 0x1b
 8427 0fcd 01       		.uleb128 0x1
 8428 0fce 50       		.byte	0x50
 8429 0fcf 02       		.uleb128 0x2
 8430 0fd0 76       		.byte	0x76
 8431 0fd1 00       		.sleb128 0
 8432 0fd2 00       		.byte	0
 8433 0fd3 1A       		.uleb128 0x1a
 8434 0fd4 E2000000 		.4byte	.LVL313
 8435 0fd8 67040000 		.4byte	0x467
 8436 0fdc E70F0000 		.4byte	0xfe7
 8437 0fe0 1B       		.uleb128 0x1b
 8438 0fe1 01       		.uleb128 0x1
 8439 0fe2 50       		.byte	0x50
 8440 0fe3 02       		.uleb128 0x2
 8441 0fe4 74       		.byte	0x74
 8442 0fe5 00       		.sleb128 0
 8443 0fe6 00       		.byte	0
 8444 0fe7 1C       		.uleb128 0x1c
 8445 0fe8 EE000000 		.4byte	.LVL316
 8446 0fec D8040000 		.4byte	0x4d8
 8447 0ff0 1B       		.uleb128 0x1b
 8448 0ff1 01       		.uleb128 0x1
 8449 0ff2 50       		.byte	0x50
 8450 0ff3 02       		.uleb128 0x2
 8451 0ff4 74       		.byte	0x74
 8452 0ff5 00       		.sleb128 0
 8453 0ff6 00       		.byte	0
 8454 0ff7 00       		.byte	0
 8455 0ff8 10       		.uleb128 0x10
 8456 0ff9 9C040000 		.4byte	.LASF109
 8457 0ffd 01       		.byte	0x1
 8458 0ffe 7604     		.2byte	0x476
 8459 1000 70000000 		.4byte	0x70
 8460 1004 00000000 		.4byte	.LFB14
 8461 1008 D4000000 		.4byte	.LFE14-.LFB14
 8462 100c 01       		.uleb128 0x1
 8463 100d 9C       		.byte	0x9c
 8464 100e F6100000 		.4byte	0x10f6
 8465 1012 11       		.uleb128 0x11
 8466 1013 6F626A00 		.ascii	"obj\000"
 8467 1017 01       		.byte	0x1
 8468 1018 7704     		.2byte	0x477
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 247


 8469 101a 4B0A0000 		.4byte	0xa4b
 8470 101e 6B120000 		.4byte	.LLST82
 8471 1022 19       		.uleb128 0x19
 8472 1023 89020000 		.4byte	.LASF87
 8473 1027 01       		.byte	0x1
 8474 1028 7804     		.2byte	0x478
 8475 102a 70000000 		.4byte	0x70
 8476 102e 09130000 		.4byte	.LLST83
 8477 1032 12       		.uleb128 0x12
 8478 1033 776300   		.ascii	"wc\000"
 8479 1036 01       		.byte	0x1
 8480 1037 7B04     		.2byte	0x47b
 8481 1039 2C000000 		.4byte	0x2c
 8482 103d 69130000 		.4byte	.LLST84
 8483 1041 12       		.uleb128 0x12
 8484 1042 626300   		.ascii	"bc\000"
 8485 1045 01       		.byte	0x1
 8486 1046 7B04     		.2byte	0x47b
 8487 1048 2C000000 		.4byte	0x2c
 8488 104c CB130000 		.4byte	.LLST85
 8489 1050 12       		.uleb128 0x12
 8490 1051 76616C00 		.ascii	"val\000"
 8491 1055 01       		.byte	0x1
 8492 1056 7C04     		.2byte	0x47c
 8493 1058 70000000 		.4byte	0x70
 8494 105c 0A140000 		.4byte	.LLST86
 8495 1060 18       		.uleb128 0x18
 8496 1061 667300   		.ascii	"fs\000"
 8497 1064 01       		.byte	0x1
 8498 1065 7D04     		.2byte	0x47d
 8499 1067 F9010000 		.4byte	0x1f9
 8500 106b 01       		.uleb128 0x1
 8501 106c 56       		.byte	0x56
 8502 106d 1A       		.uleb128 0x1a
 8503 106e 2E000000 		.4byte	.LVL326
 8504 1072 BF0A0000 		.4byte	0xabf
 8505 1076 81100000 		.4byte	0x1081
 8506 107a 1B       		.uleb128 0x1b
 8507 107b 01       		.uleb128 0x1
 8508 107c 50       		.byte	0x50
 8509 107d 02       		.uleb128 0x2
 8510 107e 76       		.byte	0x76
 8511 107f 00       		.sleb128 0
 8512 1080 00       		.byte	0
 8513 1081 1A       		.uleb128 0x1a
 8514 1082 4A000000 		.4byte	.LVL329
 8515 1086 BF0A0000 		.4byte	0xabf
 8516 108a 95100000 		.4byte	0x1095
 8517 108e 1B       		.uleb128 0x1b
 8518 108f 01       		.uleb128 0x1
 8519 1090 50       		.byte	0x50
 8520 1091 02       		.uleb128 0x2
 8521 1092 76       		.byte	0x76
 8522 1093 00       		.sleb128 0
 8523 1094 00       		.byte	0
 8524 1095 1A       		.uleb128 0x1a
 8525 1096 78000000 		.4byte	.LVL337
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 248


 8526 109a BF0A0000 		.4byte	0xabf
 8527 109e A9100000 		.4byte	0x10a9
 8528 10a2 1B       		.uleb128 0x1b
 8529 10a3 01       		.uleb128 0x1
 8530 10a4 50       		.byte	0x50
 8531 10a5 02       		.uleb128 0x2
 8532 10a6 76       		.byte	0x76
 8533 10a7 00       		.sleb128 0
 8534 10a8 00       		.byte	0
 8535 10a9 1A       		.uleb128 0x1a
 8536 10aa 8A000000 		.4byte	.LVL338
 8537 10ae 22040000 		.4byte	0x422
 8538 10b2 C8100000 		.4byte	0x10c8
 8539 10b6 1B       		.uleb128 0x1b
 8540 10b7 01       		.uleb128 0x1
 8541 10b8 50       		.byte	0x50
 8542 10b9 0D       		.uleb128 0xd
 8543 10ba 74       		.byte	0x74
 8544 10bb 00       		.sleb128 0
 8545 10bc 31       		.byte	0x31
 8546 10bd 24       		.byte	0x24
 8547 10be 0A       		.byte	0xa
 8548 10bf FE01     		.2byte	0x1fe
 8549 10c1 1A       		.byte	0x1a
 8550 10c2 76       		.byte	0x76
 8551 10c3 00       		.sleb128 0
 8552 10c4 22       		.byte	0x22
 8553 10c5 23       		.byte	0x23
 8554 10c6 30       		.uleb128 0x30
 8555 10c7 00       		.byte	0
 8556 10c8 1A       		.uleb128 0x1a
 8557 10c9 98000000 		.4byte	.LVL342
 8558 10cd BF0A0000 		.4byte	0xabf
 8559 10d1 DC100000 		.4byte	0x10dc
 8560 10d5 1B       		.uleb128 0x1b
 8561 10d6 01       		.uleb128 0x1
 8562 10d7 50       		.byte	0x50
 8563 10d8 02       		.uleb128 0x2
 8564 10d9 76       		.byte	0x76
 8565 10da 00       		.sleb128 0
 8566 10db 00       		.byte	0
 8567 10dc 1C       		.uleb128 0x1c
 8568 10dd AA000000 		.4byte	.LVL343
 8569 10e1 67040000 		.4byte	0x467
 8570 10e5 1B       		.uleb128 0x1b
 8571 10e6 01       		.uleb128 0x1
 8572 10e7 50       		.byte	0x50
 8573 10e8 0B       		.uleb128 0xb
 8574 10e9 74       		.byte	0x74
 8575 10ea 00       		.sleb128 0
 8576 10eb 32       		.byte	0x32
 8577 10ec 24       		.byte	0x24
 8578 10ed 0A       		.byte	0xa
 8579 10ee FC01     		.2byte	0x1fc
 8580 10f0 1A       		.byte	0x1a
 8581 10f1 76       		.byte	0x76
 8582 10f2 30       		.sleb128 48
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 249


 8583 10f3 22       		.byte	0x22
 8584 10f4 00       		.byte	0
 8585 10f5 00       		.byte	0
 8586 10f6 10       		.uleb128 0x10
 8587 10f7 E2010000 		.4byte	.LASF110
 8588 10fb 01       		.byte	0x1
 8589 10fc 9406     		.2byte	0x694
 8590 10fe E1030000 		.4byte	0x3e1
 8591 1102 00000000 		.4byte	.LFB19
 8592 1106 B2000000 		.4byte	.LFE19-.LFB19
 8593 110a 01       		.uleb128 0x1
 8594 110b 9C       		.byte	0x9c
 8595 110c 8D110000 		.4byte	0x118d
 8596 1110 11       		.uleb128 0x11
 8597 1111 647000   		.ascii	"dp\000"
 8598 1114 01       		.byte	0x1
 8599 1115 9506     		.2byte	0x695
 8600 1117 73080000 		.4byte	0x873
 8601 111b 5A140000 		.4byte	.LLST87
 8602 111f 11       		.uleb128 0x11
 8603 1120 6F667300 		.ascii	"ofs\000"
 8604 1124 01       		.byte	0x1
 8605 1125 9606     		.2byte	0x696
 8606 1127 70000000 		.4byte	0x70
 8607 112b BD140000 		.4byte	.LLST88
 8608 112f 12       		.uleb128 0x12
 8609 1130 63737A00 		.ascii	"csz\000"
 8610 1134 01       		.byte	0x1
 8611 1135 9906     		.2byte	0x699
 8612 1137 70000000 		.4byte	0x70
 8613 113b F1140000 		.4byte	.LLST89
 8614 113f 1E       		.uleb128 0x1e
 8615 1140 89020000 		.4byte	.LASF87
 8616 1144 01       		.byte	0x1
 8617 1145 9906     		.2byte	0x699
 8618 1147 70000000 		.4byte	0x70
 8619 114b 0F150000 		.4byte	.LLST90
 8620 114f 18       		.uleb128 0x18
 8621 1150 667300   		.ascii	"fs\000"
 8622 1153 01       		.byte	0x1
 8623 1154 9A06     		.2byte	0x69a
 8624 1156 F9010000 		.4byte	0x1f9
 8625 115a 01       		.uleb128 0x1
 8626 115b 57       		.byte	0x57
 8627 115c 1A       		.uleb128 0x1a
 8628 115d 46000000 		.4byte	.LVL362
 8629 1161 F80F0000 		.4byte	0xff8
 8630 1165 76110000 		.4byte	0x1176
 8631 1169 1B       		.uleb128 0x1b
 8632 116a 01       		.uleb128 0x1
 8633 116b 50       		.byte	0x50
 8634 116c 02       		.uleb128 0x2
 8635 116d 76       		.byte	0x76
 8636 116e 00       		.sleb128 0
 8637 116f 1B       		.uleb128 0x1b
 8638 1170 01       		.uleb128 0x1
 8639 1171 51       		.byte	0x51
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 250


 8640 1172 02       		.uleb128 0x2
 8641 1173 75       		.byte	0x75
 8642 1174 00       		.sleb128 0
 8643 1175 00       		.byte	0
 8644 1176 1C       		.uleb128 0x1c
 8645 1177 68000000 		.4byte	.LVL365
 8646 117b D8060000 		.4byte	0x6d8
 8647 117f 1B       		.uleb128 0x1b
 8648 1180 01       		.uleb128 0x1
 8649 1181 50       		.byte	0x50
 8650 1182 02       		.uleb128 0x2
 8651 1183 77       		.byte	0x77
 8652 1184 00       		.sleb128 0
 8653 1185 1B       		.uleb128 0x1b
 8654 1186 01       		.uleb128 0x1
 8655 1187 51       		.byte	0x51
 8656 1188 02       		.uleb128 0x2
 8657 1189 75       		.byte	0x75
 8658 118a 00       		.sleb128 0
 8659 118b 00       		.byte	0
 8660 118c 00       		.byte	0
 8661 118d 10       		.uleb128 0x10
 8662 118e A4040000 		.4byte	.LASF111
 8663 1192 01       		.byte	0x1
 8664 1193 E505     		.2byte	0x5e5
 8665 1195 70000000 		.4byte	0x70
 8666 1199 00000000 		.4byte	.LFB17
 8667 119d 14010000 		.4byte	.LFE17-.LFB17
 8668 11a1 01       		.uleb128 0x1
 8669 11a2 9C       		.byte	0x9c
 8670 11a3 8D120000 		.4byte	0x128d
 8671 11a7 11       		.uleb128 0x11
 8672 11a8 6F626A00 		.ascii	"obj\000"
 8673 11ac 01       		.byte	0x1
 8674 11ad E605     		.2byte	0x5e6
 8675 11af 4B0A0000 		.4byte	0xa4b
 8676 11b3 85150000 		.4byte	.LLST91
 8677 11b7 19       		.uleb128 0x19
 8678 11b8 89020000 		.4byte	.LASF87
 8679 11bc 01       		.byte	0x1
 8680 11bd E705     		.2byte	0x5e7
 8681 11bf 70000000 		.4byte	0x70
 8682 11c3 B9150000 		.4byte	.LLST92
 8683 11c7 12       		.uleb128 0x12
 8684 11c8 637300   		.ascii	"cs\000"
 8685 11cb 01       		.byte	0x1
 8686 11cc EA05     		.2byte	0x5ea
 8687 11ce 70000000 		.4byte	0x70
 8688 11d2 ED150000 		.4byte	.LLST93
 8689 11d6 12       		.uleb128 0x12
 8690 11d7 6E636C00 		.ascii	"ncl\000"
 8691 11db 01       		.byte	0x1
 8692 11dc EA05     		.2byte	0x5ea
 8693 11de 70000000 		.4byte	0x70
 8694 11e2 42160000 		.4byte	.LLST94
 8695 11e6 12       		.uleb128 0x12
 8696 11e7 73636C00 		.ascii	"scl\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 251


 8697 11eb 01       		.byte	0x1
 8698 11ec EA05     		.2byte	0x5ea
 8699 11ee 70000000 		.4byte	0x70
 8700 11f2 B1160000 		.4byte	.LLST95
 8701 11f6 12       		.uleb128 0x12
 8702 11f7 72657300 		.ascii	"res\000"
 8703 11fb 01       		.byte	0x1
 8704 11fc EB05     		.2byte	0x5eb
 8705 11fe E1030000 		.4byte	0x3e1
 8706 1202 FC160000 		.4byte	.LLST96
 8707 1206 18       		.uleb128 0x18
 8708 1207 667300   		.ascii	"fs\000"
 8709 120a 01       		.byte	0x1
 8710 120b EC05     		.2byte	0x5ec
 8711 120d F9010000 		.4byte	0x1f9
 8712 1211 01       		.uleb128 0x1
 8713 1212 56       		.byte	0x56
 8714 1213 1D       		.uleb128 0x1d
 8715 1214 1C000000 		.4byte	.LVL385
 8716 1218 F80F0000 		.4byte	0xff8
 8717 121c 1A       		.uleb128 0x1a
 8718 121d 52000000 		.4byte	.LVL393
 8719 1221 F80F0000 		.4byte	0xff8
 8720 1225 36120000 		.4byte	0x1236
 8721 1229 1B       		.uleb128 0x1b
 8722 122a 01       		.uleb128 0x1
 8723 122b 50       		.byte	0x50
 8724 122c 02       		.uleb128 0x2
 8725 122d 77       		.byte	0x77
 8726 122e 00       		.sleb128 0
 8727 122f 1B       		.uleb128 0x1b
 8728 1230 01       		.uleb128 0x1
 8729 1231 51       		.byte	0x51
 8730 1232 02       		.uleb128 0x2
 8731 1233 74       		.byte	0x74
 8732 1234 00       		.sleb128 0
 8733 1235 00       		.byte	0
 8734 1236 1A       		.uleb128 0x1a
 8735 1237 94000000 		.4byte	.LVL406
 8736 123b F80F0000 		.4byte	0xff8
 8737 123f 50120000 		.4byte	0x1250
 8738 1243 1B       		.uleb128 0x1b
 8739 1244 01       		.uleb128 0x1
 8740 1245 50       		.byte	0x50
 8741 1246 02       		.uleb128 0x2
 8742 1247 77       		.byte	0x77
 8743 1248 00       		.sleb128 0
 8744 1249 1B       		.uleb128 0x1b
 8745 124a 01       		.uleb128 0x1
 8746 124b 51       		.byte	0x51
 8747 124c 02       		.uleb128 0x2
 8748 124d 74       		.byte	0x74
 8749 124e 00       		.sleb128 0
 8750 124f 00       		.byte	0
 8751 1250 1A       		.uleb128 0x1a
 8752 1251 B2000000 		.4byte	.LVL408
 8753 1255 E80E0000 		.4byte	0xee8
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 252


 8754 1259 70120000 		.4byte	0x1270
 8755 125d 1B       		.uleb128 0x1b
 8756 125e 01       		.uleb128 0x1
 8757 125f 50       		.byte	0x50
 8758 1260 02       		.uleb128 0x2
 8759 1261 76       		.byte	0x76
 8760 1262 00       		.sleb128 0
 8761 1263 1B       		.uleb128 0x1b
 8762 1264 01       		.uleb128 0x1
 8763 1265 51       		.byte	0x51
 8764 1266 02       		.uleb128 0x2
 8765 1267 74       		.byte	0x74
 8766 1268 00       		.sleb128 0
 8767 1269 1B       		.uleb128 0x1b
 8768 126a 01       		.uleb128 0x1
 8769 126b 52       		.byte	0x52
 8770 126c 02       		.uleb128 0x2
 8771 126d 09       		.byte	0x9
 8772 126e FF       		.byte	0xff
 8773 126f 00       		.byte	0
 8774 1270 1C       		.uleb128 0x1c
 8775 1271 C6000000 		.4byte	.LVL410
 8776 1275 E80E0000 		.4byte	0xee8
 8777 1279 1B       		.uleb128 0x1b
 8778 127a 01       		.uleb128 0x1
 8779 127b 50       		.byte	0x50
 8780 127c 02       		.uleb128 0x2
 8781 127d 76       		.byte	0x76
 8782 127e 00       		.sleb128 0
 8783 127f 1B       		.uleb128 0x1b
 8784 1280 01       		.uleb128 0x1
 8785 1281 51       		.byte	0x51
 8786 1282 02       		.uleb128 0x2
 8787 1283 78       		.byte	0x78
 8788 1284 00       		.sleb128 0
 8789 1285 1B       		.uleb128 0x1b
 8790 1286 01       		.uleb128 0x1
 8791 1287 52       		.byte	0x52
 8792 1288 02       		.uleb128 0x2
 8793 1289 74       		.byte	0x74
 8794 128a 00       		.sleb128 0
 8795 128b 00       		.byte	0
 8796 128c 00       		.byte	0
 8797 128d 10       		.uleb128 0x10
 8798 128e 98050000 		.4byte	.LASF112
 8799 1292 01       		.byte	0x1
 8800 1293 8605     		.2byte	0x586
 8801 1295 E1030000 		.4byte	0x3e1
 8802 1299 00000000 		.4byte	.LFB16
 8803 129d 7C000000 		.4byte	.LFE16-.LFB16
 8804 12a1 01       		.uleb128 0x1
 8805 12a2 9C       		.byte	0x9c
 8806 12a3 5B130000 		.4byte	0x135b
 8807 12a7 11       		.uleb128 0x11
 8808 12a8 6F626A00 		.ascii	"obj\000"
 8809 12ac 01       		.byte	0x1
 8810 12ad 8705     		.2byte	0x587
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 253


 8811 12af 4B0A0000 		.4byte	0xa4b
 8812 12b3 30170000 		.4byte	.LLST97
 8813 12b7 19       		.uleb128 0x19
 8814 12b8 89020000 		.4byte	.LASF87
 8815 12bc 01       		.byte	0x1
 8816 12bd 8805     		.2byte	0x588
 8817 12bf 70000000 		.4byte	0x70
 8818 12c3 7D170000 		.4byte	.LLST98
 8819 12c7 19       		.uleb128 0x19
 8820 12c8 88050000 		.4byte	.LASF113
 8821 12cc 01       		.byte	0x1
 8822 12cd 8905     		.2byte	0x589
 8823 12cf 70000000 		.4byte	0x70
 8824 12d3 BC170000 		.4byte	.LLST99
 8825 12d7 12       		.uleb128 0x12
 8826 12d8 72657300 		.ascii	"res\000"
 8827 12dc 01       		.byte	0x1
 8828 12dd 8C05     		.2byte	0x58c
 8829 12df E1030000 		.4byte	0x3e1
 8830 12e3 0C180000 		.4byte	.LLST100
 8831 12e7 12       		.uleb128 0x12
 8832 12e8 6E787400 		.ascii	"nxt\000"
 8833 12ec 01       		.byte	0x1
 8834 12ed 8D05     		.2byte	0x58d
 8835 12ef 70000000 		.4byte	0x70
 8836 12f3 58180000 		.4byte	.LLST101
 8837 12f7 18       		.uleb128 0x18
 8838 12f8 667300   		.ascii	"fs\000"
 8839 12fb 01       		.byte	0x1
 8840 12fc 8E05     		.2byte	0x58e
 8841 12fe F9010000 		.4byte	0x1f9
 8842 1302 01       		.uleb128 0x1
 8843 1303 54       		.byte	0x54
 8844 1304 1A       		.uleb128 0x1a
 8845 1305 20000000 		.4byte	.LVL429
 8846 1309 E80E0000 		.4byte	0xee8
 8847 130d 25130000 		.4byte	0x1325
 8848 1311 1B       		.uleb128 0x1b
 8849 1312 01       		.uleb128 0x1
 8850 1313 50       		.byte	0x50
 8851 1314 02       		.uleb128 0x2
 8852 1315 74       		.byte	0x74
 8853 1316 00       		.sleb128 0
 8854 1317 1B       		.uleb128 0x1b
 8855 1318 01       		.uleb128 0x1
 8856 1319 51       		.byte	0x51
 8857 131a 03       		.uleb128 0x3
 8858 131b F3       		.byte	0xf3
 8859 131c 01       		.uleb128 0x1
 8860 131d 52       		.byte	0x52
 8861 131e 1B       		.uleb128 0x1b
 8862 131f 01       		.uleb128 0x1
 8863 1320 52       		.byte	0x52
 8864 1321 02       		.uleb128 0x2
 8865 1322 09       		.byte	0x9
 8866 1323 FF       		.byte	0xff
 8867 1324 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 254


 8868 1325 1A       		.uleb128 0x1a
 8869 1326 2A000000 		.4byte	.LVL431
 8870 132a F80F0000 		.4byte	0xff8
 8871 132e 3F130000 		.4byte	0x133f
 8872 1332 1B       		.uleb128 0x1b
 8873 1333 01       		.uleb128 0x1
 8874 1334 50       		.byte	0x50
 8875 1335 02       		.uleb128 0x2
 8876 1336 77       		.byte	0x77
 8877 1337 00       		.sleb128 0
 8878 1338 1B       		.uleb128 0x1b
 8879 1339 01       		.uleb128 0x1
 8880 133a 51       		.byte	0x51
 8881 133b 02       		.uleb128 0x2
 8882 133c 76       		.byte	0x76
 8883 133d 00       		.sleb128 0
 8884 133e 00       		.byte	0
 8885 133f 1C       		.uleb128 0x1c
 8886 1340 42000000 		.4byte	.LVL433
 8887 1344 E80E0000 		.4byte	0xee8
 8888 1348 1B       		.uleb128 0x1b
 8889 1349 01       		.uleb128 0x1
 8890 134a 50       		.byte	0x50
 8891 134b 02       		.uleb128 0x2
 8892 134c 74       		.byte	0x74
 8893 134d 00       		.sleb128 0
 8894 134e 1B       		.uleb128 0x1b
 8895 134f 01       		.uleb128 0x1
 8896 1350 51       		.byte	0x51
 8897 1351 02       		.uleb128 0x2
 8898 1352 76       		.byte	0x76
 8899 1353 00       		.sleb128 0
 8900 1354 1B       		.uleb128 0x1b
 8901 1355 01       		.uleb128 0x1
 8902 1356 52       		.byte	0x52
 8903 1357 01       		.uleb128 0x1
 8904 1358 30       		.byte	0x30
 8905 1359 00       		.byte	0
 8906 135a 00       		.byte	0
 8907 135b 10       		.uleb128 0x10
 8908 135c 10010000 		.4byte	.LASF114
 8909 1360 01       		.byte	0x1
 8910 1361 380A     		.2byte	0xa38
 8911 1363 E1030000 		.4byte	0x3e1
 8912 1367 00000000 		.4byte	.LFB27
 8913 136b 20000000 		.4byte	.LFE27-.LFB27
 8914 136f 01       		.uleb128 0x1
 8915 1370 9C       		.byte	0x9c
 8916 1371 B2130000 		.4byte	0x13b2
 8917 1375 11       		.uleb128 0x11
 8918 1376 647000   		.ascii	"dp\000"
 8919 1379 01       		.byte	0x1
 8920 137a 390A     		.2byte	0xa39
 8921 137c 73080000 		.4byte	0x873
 8922 1380 B8180000 		.4byte	.LLST102
 8923 1384 12       		.uleb128 0x12
 8924 1385 72657300 		.ascii	"res\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 255


 8925 1389 01       		.byte	0x1
 8926 138a 3C0A     		.2byte	0xa3c
 8927 138c E1030000 		.4byte	0x3e1
 8928 1390 D6180000 		.4byte	.LLST103
 8929 1394 18       		.uleb128 0x18
 8930 1395 667300   		.ascii	"fs\000"
 8931 1398 01       		.byte	0x1
 8932 1399 3D0A     		.2byte	0xa3d
 8933 139b F9010000 		.4byte	0x1f9
 8934 139f 01       		.uleb128 0x1
 8935 13a0 55       		.byte	0x55
 8936 13a1 1C       		.uleb128 0x1c
 8937 13a2 0E000000 		.4byte	.LVL451
 8938 13a6 BF0A0000 		.4byte	0xabf
 8939 13aa 1B       		.uleb128 0x1b
 8940 13ab 01       		.uleb128 0x1
 8941 13ac 50       		.byte	0x50
 8942 13ad 02       		.uleb128 0x2
 8943 13ae 75       		.byte	0x75
 8944 13af 00       		.sleb128 0
 8945 13b0 00       		.byte	0
 8946 13b1 00       		.byte	0
 8947 13b2 10       		.uleb128 0x10
 8948 13b3 77030000 		.4byte	.LASF115
 8949 13b7 01       		.byte	0x1
 8950 13b8 6C06     		.2byte	0x66c
 8951 13ba E1030000 		.4byte	0x3e1
 8952 13be 00000000 		.4byte	.LFB18
 8953 13c2 52000000 		.4byte	.LFE18-.LFB18
 8954 13c6 01       		.uleb128 0x1
 8955 13c7 9C       		.byte	0x9c
 8956 13c8 96140000 		.4byte	0x1496
 8957 13cc 11       		.uleb128 0x11
 8958 13cd 667300   		.ascii	"fs\000"
 8959 13d0 01       		.byte	0x1
 8960 13d1 6D06     		.2byte	0x66d
 8961 13d3 F9010000 		.4byte	0x1f9
 8962 13d7 E9180000 		.4byte	.LLST104
 8963 13db 19       		.uleb128 0x19
 8964 13dc 89020000 		.4byte	.LASF87
 8965 13e0 01       		.byte	0x1
 8966 13e1 6E06     		.2byte	0x66e
 8967 13e3 70000000 		.4byte	0x70
 8968 13e7 07190000 		.4byte	.LLST105
 8969 13eb 1E       		.uleb128 0x1e
 8970 13ec A4000000 		.4byte	.LASF40
 8971 13f0 01       		.byte	0x1
 8972 13f1 7106     		.2byte	0x671
 8973 13f3 70000000 		.4byte	0x70
 8974 13f7 3E190000 		.4byte	.LLST106
 8975 13fb 12       		.uleb128 0x12
 8976 13fc 6E00     		.ascii	"n\000"
 8977 13fe 01       		.byte	0x1
 8978 13ff 7206     		.2byte	0x672
 8979 1401 2C000000 		.4byte	0x2c
 8980 1405 5C190000 		.4byte	.LLST107
 8981 1409 12       		.uleb128 0x12
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 256


 8982 140a 737A6200 		.ascii	"szb\000"
 8983 140e 01       		.byte	0x1
 8984 140f 7206     		.2byte	0x672
 8985 1411 2C000000 		.4byte	0x2c
 8986 1415 7B190000 		.4byte	.LLST108
 8987 1419 1E       		.uleb128 0x1e
 8988 141a 81040000 		.4byte	.LASF116
 8989 141e 01       		.byte	0x1
 8990 141f 7306     		.2byte	0x673
 8991 1421 80020000 		.4byte	0x280
 8992 1425 8F190000 		.4byte	.LLST109
 8993 1429 1A       		.uleb128 0x1a
 8994 142a 0A000000 		.4byte	.LVL454
 8995 142e 570A0000 		.4byte	0xa57
 8996 1432 3D140000 		.4byte	0x143d
 8997 1436 1B       		.uleb128 0x1b
 8998 1437 01       		.uleb128 0x1
 8999 1438 50       		.byte	0x50
 9000 1439 02       		.uleb128 0x2
 9001 143a 75       		.byte	0x75
 9002 143b 00       		.sleb128 0
 9003 143c 00       		.byte	0
 9004 143d 1A       		.uleb128 0x1a
 9005 143e 14000000 		.4byte	.LVL455
 9006 1442 D8060000 		.4byte	0x6d8
 9007 1446 57140000 		.4byte	0x1457
 9008 144a 1B       		.uleb128 0x1b
 9009 144b 01       		.uleb128 0x1
 9010 144c 50       		.byte	0x50
 9011 144d 02       		.uleb128 0x2
 9012 144e 75       		.byte	0x75
 9013 144f 00       		.sleb128 0
 9014 1450 1B       		.uleb128 0x1b
 9015 1451 01       		.uleb128 0x1
 9016 1452 51       		.byte	0x51
 9017 1453 02       		.uleb128 0x2
 9018 1454 74       		.byte	0x74
 9019 1455 00       		.sleb128 0
 9020 1456 00       		.byte	0
 9021 1457 1A       		.uleb128 0x1a
 9022 1458 28000000 		.4byte	.LVL458
 9023 145c 7B050000 		.4byte	0x57b
 9024 1460 77140000 		.4byte	0x1477
 9025 1464 1B       		.uleb128 0x1b
 9026 1465 01       		.uleb128 0x1
 9027 1466 50       		.byte	0x50
 9028 1467 02       		.uleb128 0x2
 9029 1468 76       		.byte	0x76
 9030 1469 00       		.sleb128 0
 9031 146a 1B       		.uleb128 0x1b
 9032 146b 01       		.uleb128 0x1
 9033 146c 51       		.byte	0x51
 9034 146d 01       		.uleb128 0x1
 9035 146e 30       		.byte	0x30
 9036 146f 1B       		.uleb128 0x1b
 9037 1470 01       		.uleb128 0x1
 9038 1471 52       		.byte	0x52
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 257


 9039 1472 03       		.uleb128 0x3
 9040 1473 0A       		.byte	0xa
 9041 1474 0002     		.2byte	0x200
 9042 1476 00       		.byte	0
 9043 1477 1C       		.uleb128 0x1c
 9044 1478 40000000 		.4byte	.LVL462
 9045 147c CD2C0000 		.4byte	0x2ccd
 9046 1480 1B       		.uleb128 0x1b
 9047 1481 01       		.uleb128 0x1
 9048 1482 51       		.byte	0x51
 9049 1483 02       		.uleb128 0x2
 9050 1484 76       		.byte	0x76
 9051 1485 00       		.sleb128 0
 9052 1486 1B       		.uleb128 0x1b
 9053 1487 01       		.uleb128 0x1
 9054 1488 52       		.byte	0x52
 9055 1489 05       		.uleb128 0x5
 9056 148a 74       		.byte	0x74
 9057 148b 00       		.sleb128 0
 9058 148c 77       		.byte	0x77
 9059 148d 00       		.sleb128 0
 9060 148e 22       		.byte	0x22
 9061 148f 1B       		.uleb128 0x1b
 9062 1490 01       		.uleb128 0x1
 9063 1491 53       		.byte	0x53
 9064 1492 01       		.uleb128 0x1
 9065 1493 31       		.byte	0x31
 9066 1494 00       		.byte	0
 9067 1495 00       		.byte	0
 9068 1496 10       		.uleb128 0x10
 9069 1497 CC020000 		.4byte	.LASF117
 9070 149b 01       		.byte	0x1
 9071 149c C506     		.2byte	0x6c5
 9072 149e E1030000 		.4byte	0x3e1
 9073 14a2 00000000 		.4byte	.LFB20
 9074 14a6 DA000000 		.4byte	.LFE20-.LFB20
 9075 14aa 01       		.uleb128 0x1
 9076 14ab 9C       		.byte	0x9c
 9077 14ac 4A150000 		.4byte	0x154a
 9078 14b0 11       		.uleb128 0x11
 9079 14b1 647000   		.ascii	"dp\000"
 9080 14b4 01       		.byte	0x1
 9081 14b5 C606     		.2byte	0x6c6
 9082 14b7 73080000 		.4byte	0x873
 9083 14bb A2190000 		.4byte	.LLST110
 9084 14bf 19       		.uleb128 0x19
 9085 14c0 94010000 		.4byte	.LASF118
 9086 14c4 01       		.byte	0x1
 9087 14c5 C706     		.2byte	0x6c7
 9088 14c7 25000000 		.4byte	0x25
 9089 14cb 131A0000 		.4byte	.LLST111
 9090 14cf 18       		.uleb128 0x18
 9091 14d0 6F667300 		.ascii	"ofs\000"
 9092 14d4 01       		.byte	0x1
 9093 14d5 CA06     		.2byte	0x6ca
 9094 14d7 70000000 		.4byte	0x70
 9095 14db 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 258


 9096 14dc 55       		.byte	0x55
 9097 14dd 1E       		.uleb128 0x1e
 9098 14de 89020000 		.4byte	.LASF87
 9099 14e2 01       		.byte	0x1
 9100 14e3 CA06     		.2byte	0x6ca
 9101 14e5 70000000 		.4byte	0x70
 9102 14e9 471A0000 		.4byte	.LLST112
 9103 14ed 12       		.uleb128 0x12
 9104 14ee 667300   		.ascii	"fs\000"
 9105 14f1 01       		.byte	0x1
 9106 14f2 CB06     		.2byte	0x6cb
 9107 14f4 F9010000 		.4byte	0x1f9
 9108 14f8 0A1B0000 		.4byte	.LLST113
 9109 14fc 1D       		.uleb128 0x1d
 9110 14fd 4C000000 		.4byte	.LVL470
 9111 1501 F80F0000 		.4byte	0xff8
 9112 1505 1A       		.uleb128 0x1a
 9113 1506 76000000 		.4byte	.LVL475
 9114 150a 8D110000 		.4byte	0x118d
 9115 150e 19150000 		.4byte	0x1519
 9116 1512 1B       		.uleb128 0x1b
 9117 1513 01       		.uleb128 0x1
 9118 1514 50       		.byte	0x50
 9119 1515 02       		.uleb128 0x2
 9120 1516 74       		.byte	0x74
 9121 1517 00       		.sleb128 0
 9122 1518 00       		.byte	0
 9123 1519 1A       		.uleb128 0x1a
 9124 151a 8C000000 		.4byte	.LVL477
 9125 151e B2130000 		.4byte	0x13b2
 9126 1522 33150000 		.4byte	0x1533
 9127 1526 1B       		.uleb128 0x1b
 9128 1527 01       		.uleb128 0x1
 9129 1528 50       		.byte	0x50
 9130 1529 02       		.uleb128 0x2
 9131 152a 76       		.byte	0x76
 9132 152b 00       		.sleb128 0
 9133 152c 1B       		.uleb128 0x1b
 9134 152d 01       		.uleb128 0x1
 9135 152e 51       		.byte	0x51
 9136 152f 02       		.uleb128 0x2
 9137 1530 79       		.byte	0x79
 9138 1531 00       		.sleb128 0
 9139 1532 00       		.byte	0
 9140 1533 1C       		.uleb128 0x1c
 9141 1534 9A000000 		.4byte	.LVL478
 9142 1538 D8060000 		.4byte	0x6d8
 9143 153c 1B       		.uleb128 0x1b
 9144 153d 01       		.uleb128 0x1
 9145 153e 50       		.byte	0x50
 9146 153f 02       		.uleb128 0x2
 9147 1540 76       		.byte	0x76
 9148 1541 00       		.sleb128 0
 9149 1542 1B       		.uleb128 0x1b
 9150 1543 01       		.uleb128 0x1
 9151 1544 51       		.byte	0x51
 9152 1545 02       		.uleb128 0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 259


 9153 1546 79       		.byte	0x79
 9154 1547 00       		.sleb128 0
 9155 1548 00       		.byte	0
 9156 1549 00       		.byte	0
 9157 154a 10       		.uleb128 0x10
 9158 154b 9B000000 		.4byte	.LASF119
 9159 154f 01       		.byte	0x1
 9160 1550 7B09     		.2byte	0x97b
 9161 1552 E1030000 		.4byte	0x3e1
 9162 1556 00000000 		.4byte	.LFB25
 9163 155a 56000000 		.4byte	.LFE25-.LFB25
 9164 155e 01       		.uleb128 0x1
 9165 155f 9C       		.byte	0x9c
 9166 1560 FA150000 		.4byte	0x15fa
 9167 1564 11       		.uleb128 0x11
 9168 1565 647000   		.ascii	"dp\000"
 9169 1568 01       		.byte	0x1
 9170 1569 7C09     		.2byte	0x97c
 9171 156b 73080000 		.4byte	0x873
 9172 156f 351B0000 		.4byte	.LLST114
 9173 1573 12       		.uleb128 0x12
 9174 1574 72657300 		.ascii	"res\000"
 9175 1578 01       		.byte	0x1
 9176 1579 7F09     		.2byte	0x97f
 9177 157b E1030000 		.4byte	0x3e1
 9178 157f 531B0000 		.4byte	.LLST115
 9179 1583 18       		.uleb128 0x18
 9180 1584 667300   		.ascii	"fs\000"
 9181 1587 01       		.byte	0x1
 9182 1588 8009     		.2byte	0x980
 9183 158a F9010000 		.4byte	0x1f9
 9184 158e 01       		.uleb128 0x1
 9185 158f 56       		.byte	0x56
 9186 1590 12       		.uleb128 0x12
 9187 1591 6300     		.ascii	"c\000"
 9188 1593 01       		.byte	0x1
 9189 1594 8109     		.2byte	0x981
 9190 1596 3E000000 		.4byte	0x3e
 9191 159a 7C1B0000 		.4byte	.LLST116
 9192 159e 1A       		.uleb128 0x1a
 9193 159f 0C000000 		.4byte	.LVL499
 9194 15a3 F6100000 		.4byte	0x10f6
 9195 15a7 B7150000 		.4byte	0x15b7
 9196 15ab 1B       		.uleb128 0x1b
 9197 15ac 01       		.uleb128 0x1
 9198 15ad 50       		.byte	0x50
 9199 15ae 02       		.uleb128 0x2
 9200 15af 74       		.byte	0x74
 9201 15b0 00       		.sleb128 0
 9202 15b1 1B       		.uleb128 0x1b
 9203 15b2 01       		.uleb128 0x1
 9204 15b3 51       		.byte	0x51
 9205 15b4 01       		.uleb128 0x1
 9206 15b5 30       		.byte	0x30
 9207 15b6 00       		.byte	0
 9208 15b7 1A       		.uleb128 0x1a
 9209 15b8 16000000 		.4byte	.LVL501
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 260


 9210 15bc BF0A0000 		.4byte	0xabf
 9211 15c0 CB150000 		.4byte	0x15cb
 9212 15c4 1B       		.uleb128 0x1b
 9213 15c5 01       		.uleb128 0x1
 9214 15c6 50       		.byte	0x50
 9215 15c7 02       		.uleb128 0x2
 9216 15c8 76       		.byte	0x76
 9217 15c9 00       		.sleb128 0
 9218 15ca 00       		.byte	0
 9219 15cb 1A       		.uleb128 0x1a
 9220 15cc 3A000000 		.4byte	.LVL506
 9221 15d0 CF050000 		.4byte	0x5cf
 9222 15d4 E4150000 		.4byte	0x15e4
 9223 15d8 1B       		.uleb128 0x1b
 9224 15d9 01       		.uleb128 0x1
 9225 15da 51       		.byte	0x51
 9226 15db 02       		.uleb128 0x2
 9227 15dc 74       		.byte	0x74
 9228 15dd 20       		.sleb128 32
 9229 15de 1B       		.uleb128 0x1b
 9230 15df 01       		.uleb128 0x1
 9231 15e0 52       		.byte	0x52
 9232 15e1 01       		.uleb128 0x1
 9233 15e2 3B       		.byte	0x3b
 9234 15e3 00       		.byte	0
 9235 15e4 1C       		.uleb128 0x1c
 9236 15e5 44000000 		.4byte	.LVL507
 9237 15e9 96140000 		.4byte	0x1496
 9238 15ed 1B       		.uleb128 0x1b
 9239 15ee 01       		.uleb128 0x1
 9240 15ef 50       		.byte	0x50
 9241 15f0 02       		.uleb128 0x2
 9242 15f1 74       		.byte	0x74
 9243 15f2 00       		.sleb128 0
 9244 15f3 1B       		.uleb128 0x1b
 9245 15f4 01       		.uleb128 0x1
 9246 15f5 51       		.byte	0x51
 9247 15f6 01       		.uleb128 0x1
 9248 15f7 30       		.byte	0x30
 9249 15f8 00       		.byte	0
 9250 15f9 00       		.byte	0
 9251 15fa 10       		.uleb128 0x10
 9252 15fb 00050000 		.4byte	.LASF120
 9253 15ff 01       		.byte	0x1
 9254 1600 E60B     		.2byte	0xbe6
 9255 1602 E1030000 		.4byte	0x3e1
 9256 1606 00000000 		.4byte	.LFB30
 9257 160a 8E000000 		.4byte	.LFE30-.LFB30
 9258 160e 01       		.uleb128 0x1
 9259 160f 9C       		.byte	0x9c
 9260 1610 B7160000 		.4byte	0x16b7
 9261 1614 11       		.uleb128 0x11
 9262 1615 647000   		.ascii	"dp\000"
 9263 1618 01       		.byte	0x1
 9264 1619 E70B     		.2byte	0xbe7
 9265 161b 73080000 		.4byte	0x873
 9266 161f A61B0000 		.4byte	.LLST117
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 261


 9267 1623 19       		.uleb128 0x19
 9268 1624 6C000000 		.4byte	.LASF92
 9269 1628 01       		.byte	0x1
 9270 1629 E80B     		.2byte	0xbe8
 9271 162b 85090000 		.4byte	0x985
 9272 162f C41B0000 		.4byte	.LLST118
 9273 1633 12       		.uleb128 0x12
 9274 1634 72657300 		.ascii	"res\000"
 9275 1638 01       		.byte	0x1
 9276 1639 EB0B     		.2byte	0xbeb
 9277 163b E1030000 		.4byte	0x3e1
 9278 163f E51B0000 		.4byte	.LLST119
 9279 1643 12       		.uleb128 0x12
 9280 1644 6E7300   		.ascii	"ns\000"
 9281 1647 01       		.byte	0x1
 9282 1648 EC0B     		.2byte	0xbec
 9283 164a 3E000000 		.4byte	0x3e
 9284 164e 241C0000 		.4byte	.LLST120
 9285 1652 18       		.uleb128 0x18
 9286 1653 667300   		.ascii	"fs\000"
 9287 1656 01       		.byte	0x1
 9288 1657 ED0B     		.2byte	0xbed
 9289 1659 F9010000 		.4byte	0x1f9
 9290 165d 01       		.uleb128 0x1
 9291 165e 55       		.byte	0x55
 9292 165f 1A       		.uleb128 0x1a
 9293 1660 34000000 		.4byte	.LVL516
 9294 1664 F6100000 		.4byte	0x10f6
 9295 1668 78160000 		.4byte	0x1678
 9296 166c 1B       		.uleb128 0x1b
 9297 166d 01       		.uleb128 0x1
 9298 166e 50       		.byte	0x50
 9299 166f 02       		.uleb128 0x2
 9300 1670 74       		.byte	0x74
 9301 1671 00       		.sleb128 0
 9302 1672 1B       		.uleb128 0x1b
 9303 1673 01       		.uleb128 0x1
 9304 1674 51       		.byte	0x51
 9305 1675 01       		.uleb128 0x1
 9306 1676 30       		.byte	0x30
 9307 1677 00       		.byte	0
 9308 1678 1A       		.uleb128 0x1a
 9309 1679 40000000 		.4byte	.LVL519
 9310 167d 7F080000 		.4byte	0x87f
 9311 1681 92160000 		.4byte	0x1692
 9312 1685 1B       		.uleb128 0x1b
 9313 1686 01       		.uleb128 0x1
 9314 1687 50       		.byte	0x50
 9315 1688 02       		.uleb128 0x2
 9316 1689 74       		.byte	0x74
 9317 168a 00       		.sleb128 0
 9318 168b 1B       		.uleb128 0x1b
 9319 168c 01       		.uleb128 0x1
 9320 168d 51       		.byte	0x51
 9321 168e 02       		.uleb128 0x2
 9322 168f 91       		.byte	0x91
 9323 1690 6C       		.sleb128 -20
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 262


 9324 1691 00       		.byte	0
 9325 1692 1A       		.uleb128 0x1a
 9326 1693 4A000000 		.4byte	.LVL521
 9327 1697 4A150000 		.4byte	0x154a
 9328 169b A6160000 		.4byte	0x16a6
 9329 169f 1B       		.uleb128 0x1b
 9330 16a0 01       		.uleb128 0x1
 9331 16a1 50       		.byte	0x50
 9332 16a2 02       		.uleb128 0x2
 9333 16a3 74       		.byte	0x74
 9334 16a4 00       		.sleb128 0
 9335 16a5 00       		.byte	0
 9336 16a6 1C       		.uleb128 0x1c
 9337 16a7 7E000000 		.4byte	.LVL524
 9338 16ab 12070000 		.4byte	0x712
 9339 16af 1B       		.uleb128 0x1b
 9340 16b0 01       		.uleb128 0x1
 9341 16b1 50       		.byte	0x50
 9342 16b2 02       		.uleb128 0x2
 9343 16b3 75       		.byte	0x75
 9344 16b4 00       		.sleb128 0
 9345 16b5 00       		.byte	0
 9346 16b6 00       		.byte	0
 9347 16b7 10       		.uleb128 0x10
 9348 16b8 8E050000 		.4byte	.LASF121
 9349 16bc 01       		.byte	0x1
 9350 16bd 0207     		.2byte	0x702
 9351 16bf E1030000 		.4byte	0x3e1
 9352 16c3 00000000 		.4byte	.LFB21
 9353 16c7 4C000000 		.4byte	.LFE21-.LFB21
 9354 16cb 01       		.uleb128 0x1
 9355 16cc 9C       		.byte	0x9c
 9356 16cd 5E170000 		.4byte	0x175e
 9357 16d1 11       		.uleb128 0x11
 9358 16d2 647000   		.ascii	"dp\000"
 9359 16d5 01       		.byte	0x1
 9360 16d6 0307     		.2byte	0x703
 9361 16d8 73080000 		.4byte	0x873
 9362 16dc 421C0000 		.4byte	.LLST121
 9363 16e0 19       		.uleb128 0x19
 9364 16e1 AD050000 		.4byte	.LASF122
 9365 16e5 01       		.byte	0x1
 9366 16e6 0407     		.2byte	0x704
 9367 16e8 2C000000 		.4byte	0x2c
 9368 16ec 601C0000 		.4byte	.LLST122
 9369 16f0 12       		.uleb128 0x12
 9370 16f1 72657300 		.ascii	"res\000"
 9371 16f5 01       		.byte	0x1
 9372 16f6 0707     		.2byte	0x707
 9373 16f8 E1030000 		.4byte	0x3e1
 9374 16fc 7E1C0000 		.4byte	.LLST123
 9375 1700 12       		.uleb128 0x12
 9376 1701 6E00     		.ascii	"n\000"
 9377 1703 01       		.byte	0x1
 9378 1704 0807     		.2byte	0x708
 9379 1706 2C000000 		.4byte	0x2c
 9380 170a B21C0000 		.4byte	.LLST124
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 263


 9381 170e 18       		.uleb128 0x18
 9382 170f 667300   		.ascii	"fs\000"
 9383 1712 01       		.byte	0x1
 9384 1713 0907     		.2byte	0x709
 9385 1715 F9010000 		.4byte	0x1f9
 9386 1719 01       		.uleb128 0x1
 9387 171a 56       		.byte	0x56
 9388 171b 1A       		.uleb128 0x1a
 9389 171c 0E000000 		.4byte	.LVL530
 9390 1720 F6100000 		.4byte	0x10f6
 9391 1724 34170000 		.4byte	0x1734
 9392 1728 1B       		.uleb128 0x1b
 9393 1729 01       		.uleb128 0x1
 9394 172a 50       		.byte	0x50
 9395 172b 02       		.uleb128 0x2
 9396 172c 74       		.byte	0x74
 9397 172d 00       		.sleb128 0
 9398 172e 1B       		.uleb128 0x1b
 9399 172f 01       		.uleb128 0x1
 9400 1730 51       		.byte	0x51
 9401 1731 01       		.uleb128 0x1
 9402 1732 30       		.byte	0x30
 9403 1733 00       		.byte	0
 9404 1734 1A       		.uleb128 0x1a
 9405 1735 1C000000 		.4byte	.LVL533
 9406 1739 BF0A0000 		.4byte	0xabf
 9407 173d 48170000 		.4byte	0x1748
 9408 1741 1B       		.uleb128 0x1b
 9409 1742 01       		.uleb128 0x1
 9410 1743 50       		.byte	0x50
 9411 1744 02       		.uleb128 0x2
 9412 1745 76       		.byte	0x76
 9413 1746 00       		.sleb128 0
 9414 1747 00       		.byte	0
 9415 1748 1C       		.uleb128 0x1c
 9416 1749 3C000000 		.4byte	.LVL537
 9417 174d 96140000 		.4byte	0x1496
 9418 1751 1B       		.uleb128 0x1b
 9419 1752 01       		.uleb128 0x1
 9420 1753 50       		.byte	0x50
 9421 1754 02       		.uleb128 0x2
 9422 1755 74       		.byte	0x74
 9423 1756 00       		.sleb128 0
 9424 1757 1B       		.uleb128 0x1b
 9425 1758 01       		.uleb128 0x1
 9426 1759 51       		.byte	0x51
 9427 175a 01       		.uleb128 0x1
 9428 175b 31       		.byte	0x31
 9429 175c 00       		.byte	0
 9430 175d 00       		.byte	0
 9431 175e 10       		.uleb128 0x10
 9432 175f 71000000 		.4byte	.LASF123
 9433 1763 01       		.byte	0x1
 9434 1764 CD09     		.2byte	0x9cd
 9435 1766 E1030000 		.4byte	0x3e1
 9436 176a 00000000 		.4byte	.LFB26
 9437 176e 3A000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 264


 9438 1772 01       		.uleb128 0x1
 9439 1773 9C       		.byte	0x9c
 9440 1774 00180000 		.4byte	0x1800
 9441 1778 11       		.uleb128 0x11
 9442 1779 647000   		.ascii	"dp\000"
 9443 177c 01       		.byte	0x1
 9444 177d CE09     		.2byte	0x9ce
 9445 177f 73080000 		.4byte	0x873
 9446 1783 C51C0000 		.4byte	.LLST125
 9447 1787 12       		.uleb128 0x12
 9448 1788 72657300 		.ascii	"res\000"
 9449 178c 01       		.byte	0x1
 9450 178d D109     		.2byte	0x9d1
 9451 178f E1030000 		.4byte	0x3e1
 9452 1793 E31C0000 		.4byte	.LLST126
 9453 1797 18       		.uleb128 0x18
 9454 1798 667300   		.ascii	"fs\000"
 9455 179b 01       		.byte	0x1
 9456 179c D209     		.2byte	0x9d2
 9457 179e F9010000 		.4byte	0x1f9
 9458 17a2 01       		.uleb128 0x1
 9459 17a3 56       		.byte	0x56
 9460 17a4 1A       		.uleb128 0x1a
 9461 17a5 0C000000 		.4byte	.LVL542
 9462 17a9 B7160000 		.4byte	0x16b7
 9463 17ad BD170000 		.4byte	0x17bd
 9464 17b1 1B       		.uleb128 0x1b
 9465 17b2 01       		.uleb128 0x1
 9466 17b3 50       		.byte	0x50
 9467 17b4 02       		.uleb128 0x2
 9468 17b5 74       		.byte	0x74
 9469 17b6 00       		.sleb128 0
 9470 17b7 1B       		.uleb128 0x1b
 9471 17b8 01       		.uleb128 0x1
 9472 17b9 51       		.byte	0x51
 9473 17ba 01       		.uleb128 0x1
 9474 17bb 31       		.byte	0x31
 9475 17bc 00       		.byte	0
 9476 17bd 1A       		.uleb128 0x1a
 9477 17be 18000000 		.4byte	.LVL544
 9478 17c2 BF0A0000 		.4byte	0xabf
 9479 17c6 D1170000 		.4byte	0x17d1
 9480 17ca 1B       		.uleb128 0x1b
 9481 17cb 01       		.uleb128 0x1
 9482 17cc 50       		.byte	0x50
 9483 17cd 02       		.uleb128 0x2
 9484 17ce 76       		.byte	0x76
 9485 17cf 00       		.sleb128 0
 9486 17d0 00       		.byte	0
 9487 17d1 1A       		.uleb128 0x1a
 9488 17d2 26000000 		.4byte	.LVL546
 9489 17d6 7B050000 		.4byte	0x57b
 9490 17da EA170000 		.4byte	0x17ea
 9491 17de 1B       		.uleb128 0x1b
 9492 17df 01       		.uleb128 0x1
 9493 17e0 51       		.byte	0x51
 9494 17e1 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 265


 9495 17e2 30       		.byte	0x30
 9496 17e3 1B       		.uleb128 0x1b
 9497 17e4 01       		.uleb128 0x1
 9498 17e5 52       		.byte	0x52
 9499 17e6 02       		.uleb128 0x2
 9500 17e7 08       		.byte	0x8
 9501 17e8 20       		.byte	0x20
 9502 17e9 00       		.byte	0
 9503 17ea 1C       		.uleb128 0x1c
 9504 17eb 32000000 		.4byte	.LVL547
 9505 17ef 0F050000 		.4byte	0x50f
 9506 17f3 1B       		.uleb128 0x1b
 9507 17f4 01       		.uleb128 0x1
 9508 17f5 51       		.byte	0x51
 9509 17f6 02       		.uleb128 0x2
 9510 17f7 74       		.byte	0x74
 9511 17f8 20       		.sleb128 32
 9512 17f9 1B       		.uleb128 0x1b
 9513 17fa 01       		.uleb128 0x1
 9514 17fb 52       		.byte	0x52
 9515 17fc 01       		.uleb128 0x1
 9516 17fd 3B       		.byte	0x3b
 9517 17fe 00       		.byte	0
 9518 17ff 00       		.byte	0
 9519 1800 10       		.uleb128 0x10
 9520 1801 6A060000 		.4byte	.LASF124
 9521 1805 01       		.byte	0x1
 9522 1806 2C09     		.2byte	0x92c
 9523 1808 E1030000 		.4byte	0x3e1
 9524 180c 00000000 		.4byte	.LFB24
 9525 1810 60000000 		.4byte	.LFE24-.LFB24
 9526 1814 01       		.uleb128 0x1
 9527 1815 9C       		.byte	0x9c
 9528 1816 9C180000 		.4byte	0x189c
 9529 181a 11       		.uleb128 0x11
 9530 181b 647000   		.ascii	"dp\000"
 9531 181e 01       		.byte	0x1
 9532 181f 2D09     		.2byte	0x92d
 9533 1821 73080000 		.4byte	0x873
 9534 1825 0C1D0000 		.4byte	.LLST127
 9535 1829 11       		.uleb128 0x11
 9536 182a 766F6C00 		.ascii	"vol\000"
 9537 182e 01       		.byte	0x1
 9538 182f 2E09     		.2byte	0x92e
 9539 1831 25000000 		.4byte	0x25
 9540 1835 2A1D0000 		.4byte	.LLST128
 9541 1839 12       		.uleb128 0x12
 9542 183a 72657300 		.ascii	"res\000"
 9543 183e 01       		.byte	0x1
 9544 183f 3109     		.2byte	0x931
 9545 1841 E1030000 		.4byte	0x3e1
 9546 1845 481D0000 		.4byte	.LLST129
 9547 1849 18       		.uleb128 0x18
 9548 184a 667300   		.ascii	"fs\000"
 9549 184d 01       		.byte	0x1
 9550 184e 3209     		.2byte	0x932
 9551 1850 F9010000 		.4byte	0x1f9
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 266


 9552 1854 01       		.uleb128 0x1
 9553 1855 55       		.byte	0x55
 9554 1856 12       		.uleb128 0x12
 9555 1857 6100     		.ascii	"a\000"
 9556 1859 01       		.byte	0x1
 9557 185a 3309     		.2byte	0x933
 9558 185c 3E000000 		.4byte	0x3e
 9559 1860 9E1D0000 		.4byte	.LLST130
 9560 1864 12       		.uleb128 0x12
 9561 1865 6300     		.ascii	"c\000"
 9562 1867 01       		.byte	0x1
 9563 1868 3309     		.2byte	0x933
 9564 186a 3E000000 		.4byte	0x3e
 9565 186e BD1D0000 		.4byte	.LLST131
 9566 1872 1A       		.uleb128 0x1a
 9567 1873 12000000 		.4byte	.LVL553
 9568 1877 BF0A0000 		.4byte	0xabf
 9569 187b 86180000 		.4byte	0x1886
 9570 187f 1B       		.uleb128 0x1b
 9571 1880 01       		.uleb128 0x1
 9572 1881 50       		.byte	0x50
 9573 1882 02       		.uleb128 0x2
 9574 1883 75       		.byte	0x75
 9575 1884 00       		.sleb128 0
 9576 1885 00       		.byte	0
 9577 1886 1C       		.uleb128 0x1c
 9578 1887 48000000 		.4byte	.LVL558
 9579 188b 96140000 		.4byte	0x1496
 9580 188f 1B       		.uleb128 0x1b
 9581 1890 01       		.uleb128 0x1
 9582 1891 50       		.byte	0x50
 9583 1892 02       		.uleb128 0x2
 9584 1893 74       		.byte	0x74
 9585 1894 00       		.sleb128 0
 9586 1895 1B       		.uleb128 0x1b
 9587 1896 01       		.uleb128 0x1
 9588 1897 51       		.byte	0x51
 9589 1898 01       		.uleb128 0x1
 9590 1899 30       		.byte	0x30
 9591 189a 00       		.byte	0
 9592 189b 00       		.byte	0
 9593 189c 10       		.uleb128 0x10
 9594 189d 8A030000 		.4byte	.LASF125
 9595 18a1 01       		.byte	0x1
 9596 18a2 3E04     		.2byte	0x43e
 9597 18a4 E1030000 		.4byte	0x3e1
 9598 18a8 00000000 		.4byte	.LFB12
 9599 18ac 8C000000 		.4byte	.LFE12-.LFB12
 9600 18b0 01       		.uleb128 0x1
 9601 18b1 9C       		.byte	0x9c
 9602 18b2 B8190000 		.4byte	0x19b8
 9603 18b6 11       		.uleb128 0x11
 9604 18b7 667300   		.ascii	"fs\000"
 9605 18ba 01       		.byte	0x1
 9606 18bb 3F04     		.2byte	0x43f
 9607 18bd F9010000 		.4byte	0x1f9
 9608 18c1 DB1D0000 		.4byte	.LLST132
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 267


 9609 18c5 12       		.uleb128 0x12
 9610 18c6 72657300 		.ascii	"res\000"
 9611 18ca 01       		.byte	0x1
 9612 18cb 4204     		.2byte	0x442
 9613 18cd E1030000 		.4byte	0x3e1
 9614 18d1 071E0000 		.4byte	.LLST133
 9615 18d5 1A       		.uleb128 0x1a
 9616 18d6 08000000 		.4byte	.LVL563
 9617 18da 570A0000 		.4byte	0xa57
 9618 18de E9180000 		.4byte	0x18e9
 9619 18e2 1B       		.uleb128 0x1b
 9620 18e3 01       		.uleb128 0x1
 9621 18e4 50       		.byte	0x50
 9622 18e5 02       		.uleb128 0x2
 9623 18e6 74       		.byte	0x74
 9624 18e7 00       		.sleb128 0
 9625 18e8 00       		.byte	0
 9626 18e9 1A       		.uleb128 0x1a
 9627 18ea 2A000000 		.4byte	.LVL565
 9628 18ee 7B050000 		.4byte	0x57b
 9629 18f2 09190000 		.4byte	0x1909
 9630 18f6 1B       		.uleb128 0x1b
 9631 18f7 01       		.uleb128 0x1
 9632 18f8 50       		.byte	0x50
 9633 18f9 02       		.uleb128 0x2
 9634 18fa 76       		.byte	0x76
 9635 18fb 00       		.sleb128 0
 9636 18fc 1B       		.uleb128 0x1b
 9637 18fd 01       		.uleb128 0x1
 9638 18fe 51       		.byte	0x51
 9639 18ff 01       		.uleb128 0x1
 9640 1900 30       		.byte	0x30
 9641 1901 1B       		.uleb128 0x1b
 9642 1902 01       		.uleb128 0x1
 9643 1903 52       		.byte	0x52
 9644 1904 03       		.uleb128 0x3
 9645 1905 0A       		.byte	0xa
 9646 1906 0002     		.2byte	0x200
 9647 1908 00       		.byte	0
 9648 1909 1A       		.uleb128 0x1a
 9649 190a 36000000 		.4byte	.LVL566
 9650 190e A1040000 		.4byte	0x4a1
 9651 1912 25190000 		.4byte	0x1925
 9652 1916 1B       		.uleb128 0x1b
 9653 1917 01       		.uleb128 0x1
 9654 1918 50       		.byte	0x50
 9655 1919 03       		.uleb128 0x3
 9656 191a 74       		.byte	0x74
 9657 191b AE04     		.sleb128 558
 9658 191d 1B       		.uleb128 0x1b
 9659 191e 01       		.uleb128 0x1
 9660 191f 51       		.byte	0x51
 9661 1920 03       		.uleb128 0x3
 9662 1921 0B       		.byte	0xb
 9663 1922 55AA     		.2byte	0xaa55
 9664 1924 00       		.byte	0
 9665 1925 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 268


 9666 1926 3E000000 		.4byte	.LVL567
 9667 192a D8040000 		.4byte	0x4d8
 9668 192e 42190000 		.4byte	0x1942
 9669 1932 1B       		.uleb128 0x1b
 9670 1933 01       		.uleb128 0x1
 9671 1934 50       		.byte	0x50
 9672 1935 02       		.uleb128 0x2
 9673 1936 76       		.byte	0x76
 9674 1937 00       		.sleb128 0
 9675 1938 1B       		.uleb128 0x1b
 9676 1939 01       		.uleb128 0x1
 9677 193a 51       		.byte	0x51
 9678 193b 05       		.uleb128 0x5
 9679 193c 0C       		.byte	0xc
 9680 193d 52526141 		.4byte	0x41615252
 9681 1941 00       		.byte	0
 9682 1942 1A       		.uleb128 0x1a
 9683 1943 48000000 		.4byte	.LVL568
 9684 1947 D8040000 		.4byte	0x4d8
 9685 194b 60190000 		.4byte	0x1960
 9686 194f 1B       		.uleb128 0x1b
 9687 1950 01       		.uleb128 0x1
 9688 1951 50       		.byte	0x50
 9689 1952 03       		.uleb128 0x3
 9690 1953 74       		.byte	0x74
 9691 1954 9404     		.sleb128 532
 9692 1956 1B       		.uleb128 0x1b
 9693 1957 01       		.uleb128 0x1
 9694 1958 51       		.byte	0x51
 9695 1959 05       		.uleb128 0x5
 9696 195a 0C       		.byte	0xc
 9697 195b 72724161 		.4byte	0x61417272
 9698 195f 00       		.byte	0
 9699 1960 1A       		.uleb128 0x1a
 9700 1961 52000000 		.4byte	.LVL569
 9701 1965 D8040000 		.4byte	0x4d8
 9702 1969 75190000 		.4byte	0x1975
 9703 196d 1B       		.uleb128 0x1b
 9704 196e 01       		.uleb128 0x1
 9705 196f 50       		.byte	0x50
 9706 1970 03       		.uleb128 0x3
 9707 1971 74       		.byte	0x74
 9708 1972 9804     		.sleb128 536
 9709 1974 00       		.byte	0
 9710 1975 1A       		.uleb128 0x1a
 9711 1976 5C000000 		.4byte	.LVL570
 9712 197a D8040000 		.4byte	0x4d8
 9713 197e 8A190000 		.4byte	0x198a
 9714 1982 1B       		.uleb128 0x1b
 9715 1983 01       		.uleb128 0x1
 9716 1984 50       		.byte	0x50
 9717 1985 03       		.uleb128 0x3
 9718 1986 74       		.byte	0x74
 9719 1987 9C04     		.sleb128 540
 9720 1989 00       		.byte	0
 9721 198a 1A       		.uleb128 0x1a
 9722 198b 6C000000 		.4byte	.LVL571
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 269


 9723 198f CD2C0000 		.4byte	0x2ccd
 9724 1993 A3190000 		.4byte	0x19a3
 9725 1997 1B       		.uleb128 0x1b
 9726 1998 01       		.uleb128 0x1
 9727 1999 51       		.byte	0x51
 9728 199a 02       		.uleb128 0x2
 9729 199b 76       		.byte	0x76
 9730 199c 00       		.sleb128 0
 9731 199d 1B       		.uleb128 0x1b
 9732 199e 01       		.uleb128 0x1
 9733 199f 53       		.byte	0x53
 9734 19a0 01       		.uleb128 0x1
 9735 19a1 31       		.byte	0x31
 9736 19a2 00       		.byte	0
 9737 19a3 1C       		.uleb128 0x1c
 9738 19a4 7A000000 		.4byte	.LVL572
 9739 19a8 EE2C0000 		.4byte	0x2cee
 9740 19ac 1B       		.uleb128 0x1b
 9741 19ad 01       		.uleb128 0x1
 9742 19ae 51       		.byte	0x51
 9743 19af 01       		.uleb128 0x1
 9744 19b0 30       		.byte	0x30
 9745 19b1 1B       		.uleb128 0x1b
 9746 19b2 01       		.uleb128 0x1
 9747 19b3 52       		.byte	0x52
 9748 19b4 01       		.uleb128 0x1
 9749 19b5 30       		.byte	0x30
 9750 19b6 00       		.byte	0
 9751 19b7 00       		.byte	0
 9752 19b8 1F       		.uleb128 0x1f
 9753 19b9 8E040000 		.4byte	.LASF126
 9754 19bd 01       		.byte	0x1
 9755 19be A50D     		.2byte	0xda5
 9756 19c0 E1030000 		.4byte	0x3e1
 9757 19c4 00000000 		.4byte	.LFB35
 9758 19c8 50000000 		.4byte	.LFE35-.LFB35
 9759 19cc 01       		.uleb128 0x1
 9760 19cd 9C       		.byte	0x9c
 9761 19ce 6F1A0000 		.4byte	0x1a6f
 9762 19d2 11       		.uleb128 0x11
 9763 19d3 667300   		.ascii	"fs\000"
 9764 19d6 01       		.byte	0x1
 9765 19d7 A60D     		.2byte	0xda6
 9766 19d9 F9010000 		.4byte	0x1f9
 9767 19dd 251E0000 		.4byte	.LLST134
 9768 19e1 19       		.uleb128 0x19
 9769 19e2 6C000000 		.4byte	.LASF92
 9770 19e6 01       		.byte	0x1
 9771 19e7 A70D     		.2byte	0xda7
 9772 19e9 85090000 		.4byte	0x985
 9773 19ed 681E0000 		.4byte	.LLST135
 9774 19f1 11       		.uleb128 0x11
 9775 19f2 6F707400 		.ascii	"opt\000"
 9776 19f6 01       		.byte	0x1
 9777 19f7 A80D     		.2byte	0xda8
 9778 19f9 3E000000 		.4byte	0x3e
 9779 19fd 9F1E0000 		.4byte	.LLST136
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 270


 9780 1a01 12       		.uleb128 0x12
 9781 1a02 63667300 		.ascii	"cfs\000"
 9782 1a06 01       		.byte	0x1
 9783 1a07 AB0D     		.2byte	0xdab
 9784 1a09 F9010000 		.4byte	0x1f9
 9785 1a0d C01E0000 		.4byte	.LLST137
 9786 1a11 12       		.uleb128 0x12
 9787 1a12 766F6C00 		.ascii	"vol\000"
 9788 1a16 01       		.byte	0x1
 9789 1a17 AC0D     		.2byte	0xdac
 9790 1a19 25000000 		.4byte	0x25
 9791 1a1d D31E0000 		.4byte	.LLST138
 9792 1a21 12       		.uleb128 0x12
 9793 1a22 72657300 		.ascii	"res\000"
 9794 1a26 01       		.byte	0x1
 9795 1a27 AD0D     		.2byte	0xdad
 9796 1a29 E1030000 		.4byte	0x3e1
 9797 1a2d FC1E0000 		.4byte	.LLST139
 9798 1a31 18       		.uleb128 0x18
 9799 1a32 727000   		.ascii	"rp\000"
 9800 1a35 01       		.byte	0x1
 9801 1a36 AE0D     		.2byte	0xdae
 9802 1a38 85090000 		.4byte	0x985
 9803 1a3c 02       		.uleb128 0x2
 9804 1a3d 91       		.byte	0x91
 9805 1a3e 74       		.sleb128 -12
 9806 1a3f 1A       		.uleb128 0x1a
 9807 1a40 14000000 		.4byte	.LVL577
 9808 1a44 90090000 		.4byte	0x990
 9809 1a48 531A0000 		.4byte	0x1a53
 9810 1a4c 1B       		.uleb128 0x1b
 9811 1a4d 01       		.uleb128 0x1
 9812 1a4e 50       		.byte	0x50
 9813 1a4f 02       		.uleb128 0x2
 9814 1a50 91       		.byte	0x91
 9815 1a51 74       		.sleb128 -12
 9816 1a52 00       		.byte	0
 9817 1a53 1C       		.uleb128 0x1c
 9818 1a54 40000000 		.4byte	.LVL582
 9819 1a58 E40B0000 		.4byte	0xbe4
 9820 1a5c 1B       		.uleb128 0x1b
 9821 1a5d 01       		.uleb128 0x1
 9822 1a5e 50       		.byte	0x50
 9823 1a5f 02       		.uleb128 0x2
 9824 1a60 7D       		.byte	0x7d
 9825 1a61 00       		.sleb128 0
 9826 1a62 1B       		.uleb128 0x1b
 9827 1a63 01       		.uleb128 0x1
 9828 1a64 51       		.byte	0x51
 9829 1a65 02       		.uleb128 0x2
 9830 1a66 91       		.byte	0x91
 9831 1a67 6C       		.sleb128 -20
 9832 1a68 1B       		.uleb128 0x1b
 9833 1a69 01       		.uleb128 0x1
 9834 1a6a 52       		.byte	0x52
 9835 1a6b 01       		.uleb128 0x1
 9836 1a6c 30       		.byte	0x30
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 271


 9837 1a6d 00       		.byte	0
 9838 1a6e 00       		.byte	0
 9839 1a6f 1F       		.uleb128 0x1f
 9840 1a70 73060000 		.4byte	.LASF127
 9841 1a74 01       		.byte	0x1
 9842 1a75 D50D     		.2byte	0xdd5
 9843 1a77 E1030000 		.4byte	0x3e1
 9844 1a7b 00000000 		.4byte	.LFB36
 9845 1a7f CE010000 		.4byte	.LFE36-.LFB36
 9846 1a83 01       		.uleb128 0x1
 9847 1a84 9C       		.byte	0x9c
 9848 1a85 A61C0000 		.4byte	0x1ca6
 9849 1a89 11       		.uleb128 0x11
 9850 1a8a 667000   		.ascii	"fp\000"
 9851 1a8d 01       		.byte	0x1
 9852 1a8e D60D     		.2byte	0xdd6
 9853 1a90 A61C0000 		.4byte	0x1ca6
 9854 1a94 0F1F0000 		.4byte	.LLST140
 9855 1a98 19       		.uleb128 0x19
 9856 1a99 6C000000 		.4byte	.LASF92
 9857 1a9d 01       		.byte	0x1
 9858 1a9e D70D     		.2byte	0xdd7
 9859 1aa0 85090000 		.4byte	0x985
 9860 1aa4 5F1F0000 		.4byte	.LLST141
 9861 1aa8 19       		.uleb128 0x19
 9862 1aa9 D3010000 		.4byte	.LASF100
 9863 1aad 01       		.byte	0x1
 9864 1aae D80D     		.2byte	0xdd8
 9865 1ab0 3E000000 		.4byte	0x3e
 9866 1ab4 B01F0000 		.4byte	.LLST142
 9867 1ab8 12       		.uleb128 0x12
 9868 1ab9 72657300 		.ascii	"res\000"
 9869 1abd 01       		.byte	0x1
 9870 1abe DB0D     		.2byte	0xddb
 9871 1ac0 E1030000 		.4byte	0x3e1
 9872 1ac4 D91F0000 		.4byte	.LLST143
 9873 1ac8 18       		.uleb128 0x18
 9874 1ac9 646A00   		.ascii	"dj\000"
 9875 1acc 01       		.byte	0x1
 9876 1acd DC0D     		.2byte	0xddc
 9877 1acf F1020000 		.4byte	0x2f1
 9878 1ad3 03       		.uleb128 0x3
 9879 1ad4 91       		.byte	0x91
 9880 1ad5 BC7F     		.sleb128 -68
 9881 1ad7 18       		.uleb128 0x18
 9882 1ad8 667300   		.ascii	"fs\000"
 9883 1adb 01       		.byte	0x1
 9884 1adc DD0D     		.2byte	0xddd
 9885 1ade F9010000 		.4byte	0x1f9
 9886 1ae2 03       		.uleb128 0x3
 9887 1ae3 91       		.byte	0x91
 9888 1ae4 B87F     		.sleb128 -72
 9889 1ae6 12       		.uleb128 0x12
 9890 1ae7 647700   		.ascii	"dw\000"
 9891 1aea 01       		.byte	0x1
 9892 1aeb DF0D     		.2byte	0xddf
 9893 1aed 70000000 		.4byte	0x70
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 272


 9894 1af1 44200000 		.4byte	.LLST144
 9895 1af5 12       		.uleb128 0x12
 9896 1af6 636C00   		.ascii	"cl\000"
 9897 1af9 01       		.byte	0x1
 9898 1afa DF0D     		.2byte	0xddf
 9899 1afc 70000000 		.4byte	0x70
 9900 1b00 57200000 		.4byte	.LLST145
 9901 1b04 12       		.uleb128 0x12
 9902 1b05 62637300 		.ascii	"bcs\000"
 9903 1b09 01       		.byte	0x1
 9904 1b0a DF0D     		.2byte	0xddf
 9905 1b0c 70000000 		.4byte	0x70
 9906 1b10 75200000 		.4byte	.LLST146
 9907 1b14 1E       		.uleb128 0x1e
 9908 1b15 89020000 		.4byte	.LASF87
 9909 1b19 01       		.byte	0x1
 9910 1b1a DF0D     		.2byte	0xddf
 9911 1b1c 70000000 		.4byte	0x70
 9912 1b20 88200000 		.4byte	.LLST147
 9913 1b24 12       		.uleb128 0x12
 9914 1b25 736300   		.ascii	"sc\000"
 9915 1b28 01       		.byte	0x1
 9916 1b29 DF0D     		.2byte	0xddf
 9917 1b2b 70000000 		.4byte	0x70
 9918 1b2f B1200000 		.4byte	.LLST148
 9919 1b33 12       		.uleb128 0x12
 9920 1b34 6F667300 		.ascii	"ofs\000"
 9921 1b38 01       		.byte	0x1
 9922 1b39 E00D     		.2byte	0xde0
 9923 1b3b 9B000000 		.4byte	0x9b
 9924 1b3f CF200000 		.4byte	.LLST149
 9925 1b43 1A       		.uleb128 0x1a
 9926 1b44 20000000 		.4byte	.LVL593
 9927 1b48 E40B0000 		.4byte	0xbe4
 9928 1b4c 651B0000 		.4byte	0x1b65
 9929 1b50 1B       		.uleb128 0x1b
 9930 1b51 01       		.uleb128 0x1
 9931 1b52 50       		.byte	0x50
 9932 1b53 03       		.uleb128 0x3
 9933 1b54 91       		.byte	0x91
 9934 1b55 B47F     		.sleb128 -76
 9935 1b57 1B       		.uleb128 0x1b
 9936 1b58 01       		.uleb128 0x1
 9937 1b59 51       		.byte	0x51
 9938 1b5a 03       		.uleb128 0x3
 9939 1b5b 91       		.byte	0x91
 9940 1b5c B87F     		.sleb128 -72
 9941 1b5e 1B       		.uleb128 0x1b
 9942 1b5f 01       		.uleb128 0x1
 9943 1b60 52       		.byte	0x52
 9944 1b61 02       		.uleb128 0x2
 9945 1b62 77       		.byte	0x77
 9946 1b63 00       		.sleb128 0
 9947 1b64 00       		.byte	0
 9948 1b65 1A       		.uleb128 0x1a
 9949 1b66 34000000 		.4byte	.LVL595
 9950 1b6a FA150000 		.4byte	0x15fa
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 273


 9951 1b6e 7A1B0000 		.4byte	0x1b7a
 9952 1b72 1B       		.uleb128 0x1b
 9953 1b73 01       		.uleb128 0x1
 9954 1b74 50       		.byte	0x50
 9955 1b75 03       		.uleb128 0x3
 9956 1b76 91       		.byte	0x91
 9957 1b77 BC7F     		.sleb128 -68
 9958 1b79 00       		.byte	0
 9959 1b7a 1A       		.uleb128 0x1a
 9960 1b7b 54000000 		.4byte	.LVL597
 9961 1b7f 5E170000 		.4byte	0x175e
 9962 1b83 8F1B0000 		.4byte	0x1b8f
 9963 1b87 1B       		.uleb128 0x1b
 9964 1b88 01       		.uleb128 0x1
 9965 1b89 50       		.byte	0x50
 9966 1b8a 03       		.uleb128 0x3
 9967 1b8b 91       		.byte	0x91
 9968 1b8c BC7F     		.sleb128 -68
 9969 1b8e 00       		.byte	0
 9970 1b8f 1A       		.uleb128 0x1a
 9971 1b90 88000000 		.4byte	.LVL603
 9972 1b94 12070000 		.4byte	0x712
 9973 1b98 A31B0000 		.4byte	0x1ba3
 9974 1b9c 1B       		.uleb128 0x1b
 9975 1b9d 01       		.uleb128 0x1
 9976 1b9e 51       		.byte	0x51
 9977 1b9f 02       		.uleb128 0x2
 9978 1ba0 76       		.byte	0x76
 9979 1ba1 00       		.sleb128 0
 9980 1ba2 00       		.byte	0
 9981 1ba3 1D       		.uleb128 0x1d
 9982 1ba4 8E000000 		.4byte	.LVL605
 9983 1ba8 F92C0000 		.4byte	0x2cf9
 9984 1bac 1A       		.uleb128 0x1a
 9985 1bad 98000000 		.4byte	.LVL606
 9986 1bb1 D8040000 		.4byte	0x4d8
 9987 1bb5 C01B0000 		.4byte	0x1bc0
 9988 1bb9 1B       		.uleb128 0x1b
 9989 1bba 01       		.uleb128 0x1
 9990 1bbb 50       		.byte	0x50
 9991 1bbc 02       		.uleb128 0x2
 9992 1bbd 76       		.byte	0x76
 9993 1bbe 0E       		.sleb128 14
 9994 1bbf 00       		.byte	0
 9995 1bc0 1A       		.uleb128 0x1a
 9996 1bc1 A8000000 		.4byte	.LVL607
 9997 1bc5 7F070000 		.4byte	0x77f
 9998 1bc9 D31B0000 		.4byte	0x1bd3
 9999 1bcd 1B       		.uleb128 0x1b
 10000 1bce 01       		.uleb128 0x1
 10001 1bcf 52       		.byte	0x52
 10002 1bd0 01       		.uleb128 0x1
 10003 1bd1 30       		.byte	0x30
 10004 1bd2 00       		.byte	0
 10005 1bd3 1A       		.uleb128 0x1a
 10006 1bd4 B2000000 		.4byte	.LVL608
 10007 1bd8 D8040000 		.4byte	0x4d8
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 274


 10008 1bdc E61B0000 		.4byte	0x1be6
 10009 1be0 1B       		.uleb128 0x1b
 10010 1be1 01       		.uleb128 0x1
 10011 1be2 51       		.byte	0x51
 10012 1be3 01       		.uleb128 0x1
 10013 1be4 30       		.byte	0x30
 10014 1be5 00       		.byte	0
 10015 1be6 1A       		.uleb128 0x1a
 10016 1be7 CC000000 		.4byte	.LVL610
 10017 1beb 8D120000 		.4byte	0x128d
 10018 1bef 061C0000 		.4byte	0x1c06
 10019 1bf3 1B       		.uleb128 0x1b
 10020 1bf4 01       		.uleb128 0x1
 10021 1bf5 50       		.byte	0x50
 10022 1bf6 03       		.uleb128 0x3
 10023 1bf7 91       		.byte	0x91
 10024 1bf8 BC7F     		.sleb128 -68
 10025 1bfa 1B       		.uleb128 0x1b
 10026 1bfb 01       		.uleb128 0x1
 10027 1bfc 51       		.byte	0x51
 10028 1bfd 02       		.uleb128 0x2
 10029 1bfe 78       		.byte	0x78
 10030 1bff 00       		.sleb128 0
 10031 1c00 1B       		.uleb128 0x1b
 10032 1c01 01       		.uleb128 0x1
 10033 1c02 52       		.byte	0x52
 10034 1c03 01       		.uleb128 0x1
 10035 1c04 30       		.byte	0x30
 10036 1c05 00       		.byte	0
 10037 1c06 1A       		.uleb128 0x1a
 10038 1c07 D8000000 		.4byte	.LVL612
 10039 1c0b BF0A0000 		.4byte	0xabf
 10040 1c0f 1A1C0000 		.4byte	0x1c1a
 10041 1c13 1B       		.uleb128 0x1b
 10042 1c14 01       		.uleb128 0x1
 10043 1c15 51       		.byte	0x51
 10044 1c16 02       		.uleb128 0x2
 10045 1c17 76       		.byte	0x76
 10046 1c18 00       		.sleb128 0
 10047 1c19 00       		.byte	0
 10048 1c1a 1A       		.uleb128 0x1a
 10049 1c1b 2C010000 		.4byte	.LVL619
 10050 1c1f 12070000 		.4byte	0x712
 10051 1c23 341C0000 		.4byte	0x1c34
 10052 1c27 1B       		.uleb128 0x1b
 10053 1c28 01       		.uleb128 0x1
 10054 1c29 50       		.byte	0x50
 10055 1c2a 02       		.uleb128 0x2
 10056 1c2b 76       		.byte	0x76
 10057 1c2c 00       		.sleb128 0
 10058 1c2d 1B       		.uleb128 0x1b
 10059 1c2e 01       		.uleb128 0x1
 10060 1c2f 51       		.byte	0x51
 10061 1c30 02       		.uleb128 0x2
 10062 1c31 78       		.byte	0x78
 10063 1c32 00       		.sleb128 0
 10064 1c33 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 275


 10065 1c34 1A       		.uleb128 0x1a
 10066 1c35 36010000 		.4byte	.LVL620
 10067 1c39 67040000 		.4byte	0x467
 10068 1c3d 481C0000 		.4byte	0x1c48
 10069 1c41 1B       		.uleb128 0x1b
 10070 1c42 01       		.uleb128 0x1
 10071 1c43 50       		.byte	0x50
 10072 1c44 02       		.uleb128 0x2
 10073 1c45 78       		.byte	0x78
 10074 1c46 1C       		.sleb128 28
 10075 1c47 00       		.byte	0
 10076 1c48 1A       		.uleb128 0x1a
 10077 1c49 56010000 		.4byte	.LVL621
 10078 1c4d 7B050000 		.4byte	0x57b
 10079 1c51 681C0000 		.4byte	0x1c68
 10080 1c55 1B       		.uleb128 0x1b
 10081 1c56 01       		.uleb128 0x1
 10082 1c57 50       		.byte	0x50
 10083 1c58 02       		.uleb128 0x2
 10084 1c59 78       		.byte	0x78
 10085 1c5a 00       		.sleb128 0
 10086 1c5b 1B       		.uleb128 0x1b
 10087 1c5c 01       		.uleb128 0x1
 10088 1c5d 51       		.byte	0x51
 10089 1c5e 01       		.uleb128 0x1
 10090 1c5f 30       		.byte	0x30
 10091 1c60 1B       		.uleb128 0x1b
 10092 1c61 01       		.uleb128 0x1
 10093 1c62 52       		.byte	0x52
 10094 1c63 03       		.uleb128 0x3
 10095 1c64 0A       		.byte	0xa
 10096 1c65 0002     		.2byte	0x200
 10097 1c67 00       		.byte	0
 10098 1c68 1A       		.uleb128 0x1a
 10099 1c69 72010000 		.4byte	.LVL625
 10100 1c6d F80F0000 		.4byte	0xff8
 10101 1c71 7C1C0000 		.4byte	0x1c7c
 10102 1c75 1B       		.uleb128 0x1b
 10103 1c76 01       		.uleb128 0x1
 10104 1c77 50       		.byte	0x50
 10105 1c78 02       		.uleb128 0x2
 10106 1c79 75       		.byte	0x75
 10107 1c7a 00       		.sleb128 0
 10108 1c7b 00       		.byte	0
 10109 1c7c 1A       		.uleb128 0x1a
 10110 1c7d 9C010000 		.4byte	.LVL631
 10111 1c81 D8060000 		.4byte	0x6d8
 10112 1c85 901C0000 		.4byte	0x1c90
 10113 1c89 1B       		.uleb128 0x1b
 10114 1c8a 01       		.uleb128 0x1
 10115 1c8b 50       		.byte	0x50
 10116 1c8c 02       		.uleb128 0x2
 10117 1c8d 77       		.byte	0x77
 10118 1c8e 00       		.sleb128 0
 10119 1c8f 00       		.byte	0
 10120 1c90 1C       		.uleb128 0x1c
 10121 1c91 AE010000 		.4byte	.LVL633
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 276


 10122 1c95 D82C0000 		.4byte	0x2cd8
 10123 1c99 1B       		.uleb128 0x1b
 10124 1c9a 01       		.uleb128 0x1
 10125 1c9b 51       		.byte	0x51
 10126 1c9c 02       		.uleb128 0x2
 10127 1c9d 78       		.byte	0x78
 10128 1c9e 00       		.sleb128 0
 10129 1c9f 1B       		.uleb128 0x1b
 10130 1ca0 01       		.uleb128 0x1
 10131 1ca1 53       		.byte	0x53
 10132 1ca2 01       		.uleb128 0x1
 10133 1ca3 31       		.byte	0x31
 10134 1ca4 00       		.byte	0
 10135 1ca5 00       		.byte	0
 10136 1ca6 0B       		.uleb128 0xb
 10137 1ca7 04       		.byte	0x4
 10138 1ca8 86020000 		.4byte	0x286
 10139 1cac 1F       		.uleb128 0x1f
 10140 1cad 50000000 		.4byte	.LASF128
 10141 1cb1 01       		.byte	0x1
 10142 1cb2 930E     		.2byte	0xe93
 10143 1cb4 E1030000 		.4byte	0x3e1
 10144 1cb8 00000000 		.4byte	.LFB37
 10145 1cbc 74010000 		.4byte	.LFE37-.LFB37
 10146 1cc0 01       		.uleb128 0x1
 10147 1cc1 9C       		.byte	0x9c
 10148 1cc2 5E1E0000 		.4byte	0x1e5e
 10149 1cc6 11       		.uleb128 0x11
 10150 1cc7 667000   		.ascii	"fp\000"
 10151 1cca 01       		.byte	0x1
 10152 1ccb 940E     		.2byte	0xe94
 10153 1ccd A61C0000 		.4byte	0x1ca6
 10154 1cd1 E2200000 		.4byte	.LLST150
 10155 1cd5 19       		.uleb128 0x19
 10156 1cd6 CC000000 		.4byte	.LASF129
 10157 1cda 01       		.byte	0x1
 10158 1cdb 950E     		.2byte	0xe95
 10159 1cdd 72050000 		.4byte	0x572
 10160 1ce1 00210000 		.4byte	.LLST151
 10161 1ce5 11       		.uleb128 0x11
 10162 1ce6 62747200 		.ascii	"btr\000"
 10163 1cea 01       		.byte	0x1
 10164 1ceb 960E     		.2byte	0xe96
 10165 1ced 2C000000 		.4byte	0x2c
 10166 1cf1 45210000 		.4byte	.LLST152
 10167 1cf5 11       		.uleb128 0x11
 10168 1cf6 627200   		.ascii	"br\000"
 10169 1cf9 01       		.byte	0x1
 10170 1cfa 970E     		.2byte	0xe97
 10171 1cfc 5E1E0000 		.4byte	0x1e5e
 10172 1d00 79210000 		.4byte	.LLST153
 10173 1d04 12       		.uleb128 0x12
 10174 1d05 72657300 		.ascii	"res\000"
 10175 1d09 01       		.byte	0x1
 10176 1d0a 9A0E     		.2byte	0xe9a
 10177 1d0c E1030000 		.4byte	0x3e1
 10178 1d10 97210000 		.4byte	.LLST154
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 277


 10179 1d14 18       		.uleb128 0x18
 10180 1d15 667300   		.ascii	"fs\000"
 10181 1d18 01       		.byte	0x1
 10182 1d19 9B0E     		.2byte	0xe9b
 10183 1d1b F9010000 		.4byte	0x1f9
 10184 1d1f 02       		.uleb128 0x2
 10185 1d20 91       		.byte	0x91
 10186 1d21 54       		.sleb128 -44
 10187 1d22 1E       		.uleb128 0x1e
 10188 1d23 89020000 		.4byte	.LASF87
 10189 1d27 01       		.byte	0x1
 10190 1d28 9C0E     		.2byte	0xe9c
 10191 1d2a 70000000 		.4byte	0x70
 10192 1d2e B5210000 		.4byte	.LLST155
 10193 1d32 1E       		.uleb128 0x1e
 10194 1d33 A4000000 		.4byte	.LASF40
 10195 1d37 01       		.byte	0x1
 10196 1d38 9C0E     		.2byte	0xe9c
 10197 1d3a 70000000 		.4byte	0x70
 10198 1d3e E9210000 		.4byte	.LLST156
 10199 1d42 1E       		.uleb128 0x1e
 10200 1d43 15060000 		.4byte	.LASF130
 10201 1d47 01       		.byte	0x1
 10202 1d48 9D0E     		.2byte	0xe9d
 10203 1d4a 9B000000 		.4byte	0x9b
 10204 1d4e 1D220000 		.4byte	.LLST157
 10205 1d52 1E       		.uleb128 0x1e
 10206 1d53 48060000 		.4byte	.LASF131
 10207 1d57 01       		.byte	0x1
 10208 1d58 9E0E     		.2byte	0xe9e
 10209 1d5a 2C000000 		.4byte	0x2c
 10210 1d5e 41220000 		.4byte	.LLST158
 10211 1d62 12       		.uleb128 0x12
 10212 1d63 636300   		.ascii	"cc\000"
 10213 1d66 01       		.byte	0x1
 10214 1d67 9E0E     		.2byte	0xe9e
 10215 1d69 2C000000 		.4byte	0x2c
 10216 1d6d 5F220000 		.4byte	.LLST159
 10217 1d71 1E       		.uleb128 0x1e
 10218 1d72 31000000 		.4byte	.LASF132
 10219 1d76 01       		.byte	0x1
 10220 1d77 9E0E     		.2byte	0xe9e
 10221 1d79 2C000000 		.4byte	0x2c
 10222 1d7d 8C220000 		.4byte	.LLST160
 10223 1d81 1E       		.uleb128 0x1e
 10224 1d82 7E000000 		.4byte	.LASF133
 10225 1d86 01       		.byte	0x1
 10226 1d87 9F0E     		.2byte	0xe9f
 10227 1d89 80020000 		.4byte	0x280
 10228 1d8d B1220000 		.4byte	.LLST161
 10229 1d91 1A       		.uleb128 0x1a
 10230 1d92 1A000000 		.4byte	.LVL646
 10231 1d96 F7090000 		.4byte	0x9f7
 10232 1d9a AB1D0000 		.4byte	0x1dab
 10233 1d9e 1B       		.uleb128 0x1b
 10234 1d9f 01       		.uleb128 0x1
 10235 1da0 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 278


 10236 1da1 02       		.uleb128 0x2
 10237 1da2 74       		.byte	0x74
 10238 1da3 00       		.sleb128 0
 10239 1da4 1B       		.uleb128 0x1b
 10240 1da5 01       		.uleb128 0x1
 10241 1da6 51       		.byte	0x51
 10242 1da7 02       		.uleb128 0x2
 10243 1da8 91       		.byte	0x91
 10244 1da9 54       		.sleb128 -44
 10245 1daa 00       		.byte	0
 10246 1dab 1A       		.uleb128 0x1a
 10247 1dac 6A000000 		.4byte	.LVL655
 10248 1db0 F80F0000 		.4byte	0xff8
 10249 1db4 C01D0000 		.4byte	0x1dc0
 10250 1db8 1B       		.uleb128 0x1b
 10251 1db9 01       		.uleb128 0x1
 10252 1dba 50       		.byte	0x50
 10253 1dbb 03       		.uleb128 0x3
 10254 1dbc 91       		.byte	0x91
 10255 1dbd 4C       		.sleb128 -52
 10256 1dbe 06       		.byte	0x6
 10257 1dbf 00       		.byte	0
 10258 1dc0 1A       		.uleb128 0x1a
 10259 1dc1 8E000000 		.4byte	.LVL661
 10260 1dc5 D8060000 		.4byte	0x6d8
 10261 1dc9 D41D0000 		.4byte	0x1dd4
 10262 1dcd 1B       		.uleb128 0x1b
 10263 1dce 01       		.uleb128 0x1
 10264 1dcf 50       		.byte	0x50
 10265 1dd0 02       		.uleb128 0x2
 10266 1dd1 7B       		.byte	0x7b
 10267 1dd2 00       		.sleb128 0
 10268 1dd3 00       		.byte	0
 10269 1dd4 1A       		.uleb128 0x1a
 10270 1dd5 BC000000 		.4byte	.LVL667
 10271 1dd9 D82C0000 		.4byte	0x2cd8
 10272 1ddd F41D0000 		.4byte	0x1df4
 10273 1de1 1B       		.uleb128 0x1b
 10274 1de2 01       		.uleb128 0x1
 10275 1de3 51       		.byte	0x51
 10276 1de4 02       		.uleb128 0x2
 10277 1de5 78       		.byte	0x78
 10278 1de6 00       		.sleb128 0
 10279 1de7 1B       		.uleb128 0x1b
 10280 1de8 01       		.uleb128 0x1
 10281 1de9 52       		.byte	0x52
 10282 1dea 02       		.uleb128 0x2
 10283 1deb 7A       		.byte	0x7a
 10284 1dec 00       		.sleb128 0
 10285 1ded 1B       		.uleb128 0x1b
 10286 1dee 01       		.uleb128 0x1
 10287 1def 53       		.byte	0x53
 10288 1df0 02       		.uleb128 0x2
 10289 1df1 75       		.byte	0x75
 10290 1df2 00       		.sleb128 0
 10291 1df3 00       		.byte	0
 10292 1df4 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 279


 10293 1df5 E6000000 		.4byte	.LVL668
 10294 1df9 0F050000 		.4byte	0x50f
 10295 1dfd 0F1E0000 		.4byte	0x1e0f
 10296 1e01 1B       		.uleb128 0x1b
 10297 1e02 01       		.uleb128 0x1
 10298 1e03 51       		.byte	0x51
 10299 1e04 02       		.uleb128 0x2
 10300 1e05 74       		.byte	0x74
 10301 1e06 28       		.sleb128 40
 10302 1e07 1B       		.uleb128 0x1b
 10303 1e08 01       		.uleb128 0x1
 10304 1e09 52       		.byte	0x52
 10305 1e0a 03       		.uleb128 0x3
 10306 1e0b 0A       		.byte	0xa
 10307 1e0c 0002     		.2byte	0x200
 10308 1e0e 00       		.byte	0
 10309 1e0f 1A       		.uleb128 0x1a
 10310 1e10 06010000 		.4byte	.LVL671
 10311 1e14 CD2C0000 		.4byte	0x2ccd
 10312 1e18 281E0000 		.4byte	0x1e28
 10313 1e1c 1B       		.uleb128 0x1b
 10314 1e1d 01       		.uleb128 0x1
 10315 1e1e 51       		.byte	0x51
 10316 1e1f 02       		.uleb128 0x2
 10317 1e20 74       		.byte	0x74
 10318 1e21 28       		.sleb128 40
 10319 1e22 1B       		.uleb128 0x1b
 10320 1e23 01       		.uleb128 0x1
 10321 1e24 53       		.byte	0x53
 10322 1e25 01       		.uleb128 0x1
 10323 1e26 31       		.byte	0x31
 10324 1e27 00       		.byte	0
 10325 1e28 1A       		.uleb128 0x1a
 10326 1e29 26010000 		.4byte	.LVL672
 10327 1e2d D82C0000 		.4byte	0x2cd8
 10328 1e31 471E0000 		.4byte	0x1e47
 10329 1e35 1B       		.uleb128 0x1b
 10330 1e36 01       		.uleb128 0x1
 10331 1e37 51       		.byte	0x51
 10332 1e38 02       		.uleb128 0x2
 10333 1e39 74       		.byte	0x74
 10334 1e3a 28       		.sleb128 40
 10335 1e3b 1B       		.uleb128 0x1b
 10336 1e3c 01       		.uleb128 0x1
 10337 1e3d 52       		.byte	0x52
 10338 1e3e 02       		.uleb128 0x2
 10339 1e3f 7A       		.byte	0x7a
 10340 1e40 00       		.sleb128 0
 10341 1e41 1B       		.uleb128 0x1b
 10342 1e42 01       		.uleb128 0x1
 10343 1e43 53       		.byte	0x53
 10344 1e44 01       		.uleb128 0x1
 10345 1e45 31       		.byte	0x31
 10346 1e46 00       		.byte	0
 10347 1e47 1C       		.uleb128 0x1c
 10348 1e48 50010000 		.4byte	.LVL676
 10349 1e4c 0F050000 		.4byte	0x50f
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 280


 10350 1e50 1B       		.uleb128 0x1b
 10351 1e51 01       		.uleb128 0x1
 10352 1e52 50       		.byte	0x50
 10353 1e53 02       		.uleb128 0x2
 10354 1e54 78       		.byte	0x78
 10355 1e55 00       		.sleb128 0
 10356 1e56 1B       		.uleb128 0x1b
 10357 1e57 01       		.uleb128 0x1
 10358 1e58 52       		.byte	0x52
 10359 1e59 02       		.uleb128 0x2
 10360 1e5a 75       		.byte	0x75
 10361 1e5b 00       		.sleb128 0
 10362 1e5c 00       		.byte	0
 10363 1e5d 00       		.byte	0
 10364 1e5e 0B       		.uleb128 0xb
 10365 1e5f 04       		.byte	0x4
 10366 1e60 2C000000 		.4byte	0x2c
 10367 1e64 1F       		.uleb128 0x1f
 10368 1e65 71010000 		.4byte	.LASF134
 10369 1e69 01       		.byte	0x1
 10370 1e6a F70E     		.2byte	0xef7
 10371 1e6c E1030000 		.4byte	0x3e1
 10372 1e70 00000000 		.4byte	.LFB38
 10373 1e74 AC010000 		.4byte	.LFE38-.LFB38
 10374 1e78 01       		.uleb128 0x1
 10375 1e79 9C       		.byte	0x9c
 10376 1e7a 20200000 		.4byte	0x2020
 10377 1e7e 11       		.uleb128 0x11
 10378 1e7f 667000   		.ascii	"fp\000"
 10379 1e82 01       		.byte	0x1
 10380 1e83 F80E     		.2byte	0xef8
 10381 1e85 A61C0000 		.4byte	0x1ca6
 10382 1e89 CF220000 		.4byte	.LLST162
 10383 1e8d 19       		.uleb128 0x19
 10384 1e8e CC000000 		.4byte	.LASF129
 10385 1e92 01       		.byte	0x1
 10386 1e93 F90E     		.2byte	0xef9
 10387 1e95 74050000 		.4byte	0x574
 10388 1e99 ED220000 		.4byte	.LLST163
 10389 1e9d 11       		.uleb128 0x11
 10390 1e9e 62747700 		.ascii	"btw\000"
 10391 1ea2 01       		.byte	0x1
 10392 1ea3 FA0E     		.2byte	0xefa
 10393 1ea5 2C000000 		.4byte	0x2c
 10394 1ea9 32230000 		.4byte	.LLST164
 10395 1ead 11       		.uleb128 0x11
 10396 1eae 627700   		.ascii	"bw\000"
 10397 1eb1 01       		.byte	0x1
 10398 1eb2 FB0E     		.2byte	0xefb
 10399 1eb4 5E1E0000 		.4byte	0x1e5e
 10400 1eb8 50230000 		.4byte	.LLST165
 10401 1ebc 12       		.uleb128 0x12
 10402 1ebd 72657300 		.ascii	"res\000"
 10403 1ec1 01       		.byte	0x1
 10404 1ec2 FE0E     		.2byte	0xefe
 10405 1ec4 E1030000 		.4byte	0x3e1
 10406 1ec8 6E230000 		.4byte	.LLST166
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 281


 10407 1ecc 18       		.uleb128 0x18
 10408 1ecd 667300   		.ascii	"fs\000"
 10409 1ed0 01       		.byte	0x1
 10410 1ed1 FF0E     		.2byte	0xeff
 10411 1ed3 F9010000 		.4byte	0x1f9
 10412 1ed7 02       		.uleb128 0x2
 10413 1ed8 91       		.byte	0x91
 10414 1ed9 54       		.sleb128 -44
 10415 1eda 1E       		.uleb128 0x1e
 10416 1edb 89020000 		.4byte	.LASF87
 10417 1edf 01       		.byte	0x1
 10418 1ee0 000F     		.2byte	0xf00
 10419 1ee2 70000000 		.4byte	0x70
 10420 1ee6 8C230000 		.4byte	.LLST167
 10421 1eea 1E       		.uleb128 0x1e
 10422 1eeb A4000000 		.4byte	.LASF40
 10423 1eef 01       		.byte	0x1
 10424 1ef0 000F     		.2byte	0xf00
 10425 1ef2 70000000 		.4byte	0x70
 10426 1ef6 D7230000 		.4byte	.LLST168
 10427 1efa 1E       		.uleb128 0x1e
 10428 1efb 14030000 		.4byte	.LASF135
 10429 1eff 01       		.byte	0x1
 10430 1f00 010F     		.2byte	0xf01
 10431 1f02 2C000000 		.4byte	0x2c
 10432 1f06 0B240000 		.4byte	.LLST169
 10433 1f0a 12       		.uleb128 0x12
 10434 1f0b 636300   		.ascii	"cc\000"
 10435 1f0e 01       		.byte	0x1
 10436 1f0f 010F     		.2byte	0xf01
 10437 1f11 2C000000 		.4byte	0x2c
 10438 1f15 29240000 		.4byte	.LLST170
 10439 1f19 1E       		.uleb128 0x1e
 10440 1f1a 31000000 		.4byte	.LASF132
 10441 1f1e 01       		.byte	0x1
 10442 1f1f 010F     		.2byte	0xf01
 10443 1f21 2C000000 		.4byte	0x2c
 10444 1f25 56240000 		.4byte	.LLST171
 10445 1f29 1E       		.uleb128 0x1e
 10446 1f2a D0040000 		.4byte	.LASF136
 10447 1f2e 01       		.byte	0x1
 10448 1f2f 020F     		.2byte	0xf02
 10449 1f31 5C040000 		.4byte	0x45c
 10450 1f35 7B240000 		.4byte	.LLST172
 10451 1f39 1A       		.uleb128 0x1a
 10452 1f3a 1A000000 		.4byte	.LVL687
 10453 1f3e F7090000 		.4byte	0x9f7
 10454 1f42 531F0000 		.4byte	0x1f53
 10455 1f46 1B       		.uleb128 0x1b
 10456 1f47 01       		.uleb128 0x1
 10457 1f48 50       		.byte	0x50
 10458 1f49 02       		.uleb128 0x2
 10459 1f4a 74       		.byte	0x74
 10460 1f4b 00       		.sleb128 0
 10461 1f4c 1B       		.uleb128 0x1b
 10462 1f4d 01       		.uleb128 0x1
 10463 1f4e 51       		.byte	0x51
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 282


 10464 1f4f 02       		.uleb128 0x2
 10465 1f50 91       		.byte	0x91
 10466 1f51 54       		.sleb128 -44
 10467 1f52 00       		.byte	0
 10468 1f53 1A       		.uleb128 0x1a
 10469 1f54 68000000 		.4byte	.LVL695
 10470 1f58 8D110000 		.4byte	0x118d
 10471 1f5c 6D1F0000 		.4byte	0x1f6d
 10472 1f60 1B       		.uleb128 0x1b
 10473 1f61 01       		.uleb128 0x1
 10474 1f62 50       		.byte	0x50
 10475 1f63 03       		.uleb128 0x3
 10476 1f64 91       		.byte	0x91
 10477 1f65 4C       		.sleb128 -52
 10478 1f66 06       		.byte	0x6
 10479 1f67 1B       		.uleb128 0x1b
 10480 1f68 01       		.uleb128 0x1
 10481 1f69 51       		.byte	0x51
 10482 1f6a 01       		.uleb128 0x1
 10483 1f6b 30       		.byte	0x30
 10484 1f6c 00       		.byte	0
 10485 1f6d 1A       		.uleb128 0x1a
 10486 1f6e 72000000 		.4byte	.LVL697
 10487 1f72 8D110000 		.4byte	0x118d
 10488 1f76 821F0000 		.4byte	0x1f82
 10489 1f7a 1B       		.uleb128 0x1b
 10490 1f7b 01       		.uleb128 0x1
 10491 1f7c 50       		.byte	0x50
 10492 1f7d 03       		.uleb128 0x3
 10493 1f7e 91       		.byte	0x91
 10494 1f7f 4C       		.sleb128 -52
 10495 1f80 06       		.byte	0x6
 10496 1f81 00       		.byte	0
 10497 1f82 1A       		.uleb128 0x1a
 10498 1f83 AE000000 		.4byte	.LVL703
 10499 1f87 CD2C0000 		.4byte	0x2ccd
 10500 1f8b 9B1F0000 		.4byte	0x1f9b
 10501 1f8f 1B       		.uleb128 0x1b
 10502 1f90 01       		.uleb128 0x1
 10503 1f91 51       		.byte	0x51
 10504 1f92 02       		.uleb128 0x2
 10505 1f93 74       		.byte	0x74
 10506 1f94 28       		.sleb128 40
 10507 1f95 1B       		.uleb128 0x1b
 10508 1f96 01       		.uleb128 0x1
 10509 1f97 53       		.byte	0x53
 10510 1f98 01       		.uleb128 0x1
 10511 1f99 31       		.byte	0x31
 10512 1f9a 00       		.byte	0
 10513 1f9b 1A       		.uleb128 0x1a
 10514 1f9c CA000000 		.4byte	.LVL704
 10515 1fa0 D8060000 		.4byte	0x6d8
 10516 1fa4 AF1F0000 		.4byte	0x1faf
 10517 1fa8 1B       		.uleb128 0x1b
 10518 1fa9 01       		.uleb128 0x1
 10519 1faa 50       		.byte	0x50
 10520 1fab 02       		.uleb128 0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 283


 10521 1fac 7B       		.byte	0x7b
 10522 1fad 00       		.sleb128 0
 10523 1fae 00       		.byte	0
 10524 1faf 1A       		.uleb128 0x1a
 10525 1fb0 F8000000 		.4byte	.LVL710
 10526 1fb4 CD2C0000 		.4byte	0x2ccd
 10527 1fb8 CF1F0000 		.4byte	0x1fcf
 10528 1fbc 1B       		.uleb128 0x1b
 10529 1fbd 01       		.uleb128 0x1
 10530 1fbe 51       		.byte	0x51
 10531 1fbf 02       		.uleb128 0x2
 10532 1fc0 78       		.byte	0x78
 10533 1fc1 00       		.sleb128 0
 10534 1fc2 1B       		.uleb128 0x1b
 10535 1fc3 01       		.uleb128 0x1
 10536 1fc4 52       		.byte	0x52
 10537 1fc5 02       		.uleb128 0x2
 10538 1fc6 7A       		.byte	0x7a
 10539 1fc7 00       		.sleb128 0
 10540 1fc8 1B       		.uleb128 0x1b
 10541 1fc9 01       		.uleb128 0x1
 10542 1fca 53       		.byte	0x53
 10543 1fcb 02       		.uleb128 0x2
 10544 1fcc 75       		.byte	0x75
 10545 1fcd 00       		.sleb128 0
 10546 1fce 00       		.byte	0
 10547 1fcf 1A       		.uleb128 0x1a
 10548 1fd0 1A010000 		.4byte	.LVL711
 10549 1fd4 0F050000 		.4byte	0x50f
 10550 1fd8 EA1F0000 		.4byte	0x1fea
 10551 1fdc 1B       		.uleb128 0x1b
 10552 1fdd 01       		.uleb128 0x1
 10553 1fde 50       		.byte	0x50
 10554 1fdf 02       		.uleb128 0x2
 10555 1fe0 74       		.byte	0x74
 10556 1fe1 28       		.sleb128 40
 10557 1fe2 1B       		.uleb128 0x1b
 10558 1fe3 01       		.uleb128 0x1
 10559 1fe4 52       		.byte	0x52
 10560 1fe5 03       		.uleb128 0x3
 10561 1fe6 0A       		.byte	0xa
 10562 1fe7 0002     		.2byte	0x200
 10563 1fe9 00       		.byte	0
 10564 1fea 1A       		.uleb128 0x1a
 10565 1feb 44010000 		.4byte	.LVL714
 10566 1fef D82C0000 		.4byte	0x2cd8
 10567 1ff3 09200000 		.4byte	0x2009
 10568 1ff7 1B       		.uleb128 0x1b
 10569 1ff8 01       		.uleb128 0x1
 10570 1ff9 51       		.byte	0x51
 10571 1ffa 02       		.uleb128 0x2
 10572 1ffb 74       		.byte	0x74
 10573 1ffc 28       		.sleb128 40
 10574 1ffd 1B       		.uleb128 0x1b
 10575 1ffe 01       		.uleb128 0x1
 10576 1fff 52       		.byte	0x52
 10577 2000 02       		.uleb128 0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 284


 10578 2001 7A       		.byte	0x7a
 10579 2002 00       		.sleb128 0
 10580 2003 1B       		.uleb128 0x1b
 10581 2004 01       		.uleb128 0x1
 10582 2005 53       		.byte	0x53
 10583 2006 01       		.uleb128 0x1
 10584 2007 31       		.byte	0x31
 10585 2008 00       		.byte	0
 10586 2009 1C       		.uleb128 0x1c
 10587 200a 6E010000 		.4byte	.LVL718
 10588 200e 0F050000 		.4byte	0x50f
 10589 2012 1B       		.uleb128 0x1b
 10590 2013 01       		.uleb128 0x1
 10591 2014 51       		.byte	0x51
 10592 2015 02       		.uleb128 0x2
 10593 2016 78       		.byte	0x78
 10594 2017 00       		.sleb128 0
 10595 2018 1B       		.uleb128 0x1b
 10596 2019 01       		.uleb128 0x1
 10597 201a 52       		.byte	0x52
 10598 201b 02       		.uleb128 0x2
 10599 201c 75       		.byte	0x75
 10600 201d 00       		.sleb128 0
 10601 201e 00       		.byte	0
 10602 201f 00       		.byte	0
 10603 2020 1F       		.uleb128 0x1f
 10604 2021 E0040000 		.4byte	.LASF137
 10605 2025 01       		.byte	0x1
 10606 2026 700F     		.2byte	0xf70
 10607 2028 E1030000 		.4byte	0x3e1
 10608 202c 00000000 		.4byte	.LFB39
 10609 2030 9C000000 		.4byte	.LFE39-.LFB39
 10610 2034 01       		.uleb128 0x1
 10611 2035 9C       		.byte	0x9c
 10612 2036 30210000 		.4byte	0x2130
 10613 203a 11       		.uleb128 0x11
 10614 203b 667000   		.ascii	"fp\000"
 10615 203e 01       		.byte	0x1
 10616 203f 710F     		.2byte	0xf71
 10617 2041 A61C0000 		.4byte	0x1ca6
 10618 2045 99240000 		.4byte	.LLST173
 10619 2049 12       		.uleb128 0x12
 10620 204a 72657300 		.ascii	"res\000"
 10621 204e 01       		.byte	0x1
 10622 204f 740F     		.2byte	0xf74
 10623 2051 E1030000 		.4byte	0x3e1
 10624 2055 B7240000 		.4byte	.LLST174
 10625 2059 18       		.uleb128 0x18
 10626 205a 667300   		.ascii	"fs\000"
 10627 205d 01       		.byte	0x1
 10628 205e 750F     		.2byte	0xf75
 10629 2060 F9010000 		.4byte	0x1f9
 10630 2064 02       		.uleb128 0x2
 10631 2065 91       		.byte	0x91
 10632 2066 6C       		.sleb128 -20
 10633 2067 12       		.uleb128 0x12
 10634 2068 746D00   		.ascii	"tm\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 285


 10635 206b 01       		.byte	0x1
 10636 206c 760F     		.2byte	0xf76
 10637 206e 70000000 		.4byte	0x70
 10638 2072 E0240000 		.4byte	.LLST175
 10639 2076 12       		.uleb128 0x12
 10640 2077 64697200 		.ascii	"dir\000"
 10641 207b 01       		.byte	0x1
 10642 207c 770F     		.2byte	0xf77
 10643 207e 80020000 		.4byte	0x280
 10644 2082 FE240000 		.4byte	.LLST176
 10645 2086 1A       		.uleb128 0x1a
 10646 2087 0C000000 		.4byte	.LVL725
 10647 208b F7090000 		.4byte	0x9f7
 10648 208f A0200000 		.4byte	0x20a0
 10649 2093 1B       		.uleb128 0x1b
 10650 2094 01       		.uleb128 0x1
 10651 2095 50       		.byte	0x50
 10652 2096 02       		.uleb128 0x2
 10653 2097 74       		.byte	0x74
 10654 2098 00       		.sleb128 0
 10655 2099 1B       		.uleb128 0x1b
 10656 209a 01       		.uleb128 0x1
 10657 209b 51       		.byte	0x51
 10658 209c 02       		.uleb128 0x2
 10659 209d 91       		.byte	0x91
 10660 209e 6C       		.sleb128 -20
 10661 209f 00       		.byte	0
 10662 20a0 1A       		.uleb128 0x1a
 10663 20a1 2E000000 		.4byte	.LVL727
 10664 20a5 CD2C0000 		.4byte	0x2ccd
 10665 20a9 B9200000 		.4byte	0x20b9
 10666 20ad 1B       		.uleb128 0x1b
 10667 20ae 01       		.uleb128 0x1
 10668 20af 51       		.byte	0x51
 10669 20b0 02       		.uleb128 0x2
 10670 20b1 74       		.byte	0x74
 10671 20b2 28       		.sleb128 40
 10672 20b3 1B       		.uleb128 0x1b
 10673 20b4 01       		.uleb128 0x1
 10674 20b5 53       		.byte	0x53
 10675 20b6 01       		.uleb128 0x1
 10676 20b7 31       		.byte	0x31
 10677 20b8 00       		.byte	0
 10678 20b9 1D       		.uleb128 0x1d
 10679 20ba 3C000000 		.4byte	.LVL728
 10680 20be F92C0000 		.4byte	0x2cf9
 10681 20c2 1D       		.uleb128 0x1d
 10682 20c3 46000000 		.4byte	.LVL731
 10683 20c7 BF0A0000 		.4byte	0xabf
 10684 20cb 1A       		.uleb128 0x1a
 10685 20cc 5C000000 		.4byte	.LVL734
 10686 20d0 7F070000 		.4byte	0x77f
 10687 20d4 DF200000 		.4byte	0x20df
 10688 20d8 1B       		.uleb128 0x1b
 10689 20d9 01       		.uleb128 0x1
 10690 20da 51       		.byte	0x51
 10691 20db 02       		.uleb128 0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 286


 10692 20dc 75       		.byte	0x75
 10693 20dd 00       		.sleb128 0
 10694 20de 00       		.byte	0
 10695 20df 1A       		.uleb128 0x1a
 10696 20e0 66000000 		.4byte	.LVL735
 10697 20e4 D8040000 		.4byte	0x4d8
 10698 20e8 F3200000 		.4byte	0x20f3
 10699 20ec 1B       		.uleb128 0x1b
 10700 20ed 01       		.uleb128 0x1
 10701 20ee 50       		.byte	0x50
 10702 20ef 02       		.uleb128 0x2
 10703 20f0 75       		.byte	0x75
 10704 20f1 1C       		.sleb128 28
 10705 20f2 00       		.byte	0
 10706 20f3 1A       		.uleb128 0x1a
 10707 20f4 70000000 		.4byte	.LVL736
 10708 20f8 D8040000 		.4byte	0x4d8
 10709 20fc 0D210000 		.4byte	0x210d
 10710 2100 1B       		.uleb128 0x1b
 10711 2101 01       		.uleb128 0x1
 10712 2102 50       		.byte	0x50
 10713 2103 02       		.uleb128 0x2
 10714 2104 75       		.byte	0x75
 10715 2105 16       		.sleb128 22
 10716 2106 1B       		.uleb128 0x1b
 10717 2107 01       		.uleb128 0x1
 10718 2108 51       		.byte	0x51
 10719 2109 02       		.uleb128 0x2
 10720 210a 76       		.byte	0x76
 10721 210b 00       		.sleb128 0
 10722 210c 00       		.byte	0
 10723 210d 1A       		.uleb128 0x1a
 10724 210e 7A000000 		.4byte	.LVL737
 10725 2112 A1040000 		.4byte	0x4a1
 10726 2116 26210000 		.4byte	0x2126
 10727 211a 1B       		.uleb128 0x1b
 10728 211b 01       		.uleb128 0x1
 10729 211c 50       		.byte	0x50
 10730 211d 02       		.uleb128 0x2
 10731 211e 75       		.byte	0x75
 10732 211f 12       		.sleb128 18
 10733 2120 1B       		.uleb128 0x1b
 10734 2121 01       		.uleb128 0x1
 10735 2122 51       		.byte	0x51
 10736 2123 01       		.uleb128 0x1
 10737 2124 30       		.byte	0x30
 10738 2125 00       		.byte	0
 10739 2126 1D       		.uleb128 0x1d
 10740 2127 86000000 		.4byte	.LVL738
 10741 212b 9C180000 		.4byte	0x189c
 10742 212f 00       		.byte	0
 10743 2130 1F       		.uleb128 0x1f
 10744 2131 4F020000 		.4byte	.LASF138
 10745 2135 01       		.byte	0x1
 10746 2136 C10F     		.2byte	0xfc1
 10747 2138 E1030000 		.4byte	0x3e1
 10748 213c 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 287


 10749 2140 24000000 		.4byte	.LFE40-.LFB40
 10750 2144 01       		.uleb128 0x1
 10751 2145 9C       		.byte	0x9c
 10752 2146 A2210000 		.4byte	0x21a2
 10753 214a 11       		.uleb128 0x11
 10754 214b 667000   		.ascii	"fp\000"
 10755 214e 01       		.byte	0x1
 10756 214f C20F     		.2byte	0xfc2
 10757 2151 A61C0000 		.4byte	0x1ca6
 10758 2155 11250000 		.4byte	.LLST177
 10759 2159 12       		.uleb128 0x12
 10760 215a 72657300 		.ascii	"res\000"
 10761 215e 01       		.byte	0x1
 10762 215f C50F     		.2byte	0xfc5
 10763 2161 E1030000 		.4byte	0x3e1
 10764 2165 2F250000 		.4byte	.LLST178
 10765 2169 18       		.uleb128 0x18
 10766 216a 667300   		.ascii	"fs\000"
 10767 216d 01       		.byte	0x1
 10768 216e C60F     		.2byte	0xfc6
 10769 2170 F9010000 		.4byte	0x1f9
 10770 2174 02       		.uleb128 0x2
 10771 2175 91       		.byte	0x91
 10772 2176 74       		.sleb128 -12
 10773 2177 1A       		.uleb128 0x1a
 10774 2178 0A000000 		.4byte	.LVL743
 10775 217c 20200000 		.4byte	0x2020
 10776 2180 8B210000 		.4byte	0x218b
 10777 2184 1B       		.uleb128 0x1b
 10778 2185 01       		.uleb128 0x1
 10779 2186 50       		.byte	0x50
 10780 2187 02       		.uleb128 0x2
 10781 2188 74       		.byte	0x74
 10782 2189 00       		.sleb128 0
 10783 218a 00       		.byte	0
 10784 218b 1C       		.uleb128 0x1c
 10785 218c 16000000 		.4byte	.LVL745
 10786 2190 F7090000 		.4byte	0x9f7
 10787 2194 1B       		.uleb128 0x1b
 10788 2195 01       		.uleb128 0x1
 10789 2196 50       		.byte	0x50
 10790 2197 02       		.uleb128 0x2
 10791 2198 74       		.byte	0x74
 10792 2199 00       		.sleb128 0
 10793 219a 1B       		.uleb128 0x1b
 10794 219b 01       		.uleb128 0x1
 10795 219c 51       		.byte	0x51
 10796 219d 02       		.uleb128 0x2
 10797 219e 91       		.byte	0x91
 10798 219f 74       		.sleb128 -12
 10799 21a0 00       		.byte	0
 10800 21a1 00       		.byte	0
 10801 21a2 1F       		.uleb128 0x1f
 10802 21a3 B1040000 		.4byte	.LASF139
 10803 21a7 01       		.byte	0x1
 10804 21a8 7C10     		.2byte	0x107c
 10805 21aa E1030000 		.4byte	0x3e1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 288


 10806 21ae 00000000 		.4byte	.LFB41
 10807 21b2 7A010000 		.4byte	.LFE41-.LFB41
 10808 21b6 01       		.uleb128 0x1
 10809 21b7 9C       		.byte	0x9c
 10810 21b8 CD220000 		.4byte	0x22cd
 10811 21bc 11       		.uleb128 0x11
 10812 21bd 667000   		.ascii	"fp\000"
 10813 21c0 01       		.byte	0x1
 10814 21c1 7D10     		.2byte	0x107d
 10815 21c3 A61C0000 		.4byte	0x1ca6
 10816 21c7 58250000 		.4byte	.LLST179
 10817 21cb 11       		.uleb128 0x11
 10818 21cc 6F667300 		.ascii	"ofs\000"
 10819 21d0 01       		.byte	0x1
 10820 21d1 7E10     		.2byte	0x107e
 10821 21d3 9B000000 		.4byte	0x9b
 10822 21d7 76250000 		.4byte	.LLST180
 10823 21db 12       		.uleb128 0x12
 10824 21dc 72657300 		.ascii	"res\000"
 10825 21e0 01       		.byte	0x1
 10826 21e1 8110     		.2byte	0x1081
 10827 21e3 E1030000 		.4byte	0x3e1
 10828 21e7 C0250000 		.4byte	.LLST181
 10829 21eb 18       		.uleb128 0x18
 10830 21ec 667300   		.ascii	"fs\000"
 10831 21ef 01       		.byte	0x1
 10832 21f0 8210     		.2byte	0x1082
 10833 21f2 F9010000 		.4byte	0x1f9
 10834 21f6 02       		.uleb128 0x2
 10835 21f7 91       		.byte	0x91
 10836 21f8 64       		.sleb128 -28
 10837 21f9 1E       		.uleb128 0x1e
 10838 21fa 89020000 		.4byte	.LASF87
 10839 21fe 01       		.byte	0x1
 10840 21ff 8310     		.2byte	0x1083
 10841 2201 70000000 		.4byte	0x70
 10842 2205 2B260000 		.4byte	.LLST182
 10843 2209 12       		.uleb128 0x12
 10844 220a 62637300 		.ascii	"bcs\000"
 10845 220e 01       		.byte	0x1
 10846 220f 8310     		.2byte	0x1083
 10847 2211 70000000 		.4byte	0x70
 10848 2215 04270000 		.4byte	.LLST183
 10849 2219 1E       		.uleb128 0x1e
 10850 221a 4D060000 		.4byte	.LASF140
 10851 221e 01       		.byte	0x1
 10852 221f 8310     		.2byte	0x1083
 10853 2221 70000000 		.4byte	0x70
 10854 2225 22270000 		.4byte	.LLST184
 10855 2229 1E       		.uleb128 0x1e
 10856 222a 4A000000 		.4byte	.LASF141
 10857 222e 01       		.byte	0x1
 10858 222f 8410     		.2byte	0x1084
 10859 2231 9B000000 		.4byte	0x9b
 10860 2235 79270000 		.4byte	.LLST185
 10861 2239 1A       		.uleb128 0x1a
 10862 223a 12000000 		.4byte	.LVL749
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 289


 10863 223e F7090000 		.4byte	0x9f7
 10864 2242 53220000 		.4byte	0x2253
 10865 2246 1B       		.uleb128 0x1b
 10866 2247 01       		.uleb128 0x1
 10867 2248 50       		.byte	0x50
 10868 2249 02       		.uleb128 0x2
 10869 224a 74       		.byte	0x74
 10870 224b 00       		.sleb128 0
 10871 224c 1B       		.uleb128 0x1b
 10872 224d 01       		.uleb128 0x1
 10873 224e 51       		.byte	0x51
 10874 224f 02       		.uleb128 0x2
 10875 2250 91       		.byte	0x91
 10876 2251 64       		.sleb128 -28
 10877 2252 00       		.byte	0
 10878 2253 1A       		.uleb128 0x1a
 10879 2254 66000000 		.4byte	.LVL760
 10880 2258 8D110000 		.4byte	0x118d
 10881 225c 67220000 		.4byte	0x2267
 10882 2260 1B       		.uleb128 0x1b
 10883 2261 01       		.uleb128 0x1
 10884 2262 50       		.byte	0x50
 10885 2263 02       		.uleb128 0x2
 10886 2264 74       		.byte	0x74
 10887 2265 00       		.sleb128 0
 10888 2266 00       		.byte	0
 10889 2267 1A       		.uleb128 0x1a
 10890 2268 A2000000 		.4byte	.LVL772
 10891 226c 8D110000 		.4byte	0x118d
 10892 2270 7B220000 		.4byte	0x227b
 10893 2274 1B       		.uleb128 0x1b
 10894 2275 01       		.uleb128 0x1
 10895 2276 50       		.byte	0x50
 10896 2277 02       		.uleb128 0x2
 10897 2278 74       		.byte	0x74
 10898 2279 00       		.sleb128 0
 10899 227a 00       		.byte	0
 10900 227b 1A       		.uleb128 0x1a
 10901 227c AE000000 		.4byte	.LVL774
 10902 2280 F80F0000 		.4byte	0xff8
 10903 2284 8F220000 		.4byte	0x228f
 10904 2288 1B       		.uleb128 0x1b
 10905 2289 01       		.uleb128 0x1
 10906 228a 50       		.byte	0x50
 10907 228b 02       		.uleb128 0x2
 10908 228c 74       		.byte	0x74
 10909 228d 00       		.sleb128 0
 10910 228e 00       		.byte	0
 10911 228f 1D       		.uleb128 0x1d
 10912 2290 EE000000 		.4byte	.LVL785
 10913 2294 D8060000 		.4byte	0x6d8
 10914 2298 1A       		.uleb128 0x1a
 10915 2299 38010000 		.4byte	.LVL794
 10916 229d CD2C0000 		.4byte	0x2ccd
 10917 22a1 B1220000 		.4byte	0x22b1
 10918 22a5 1B       		.uleb128 0x1b
 10919 22a6 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 290


 10920 22a7 51       		.byte	0x51
 10921 22a8 02       		.uleb128 0x2
 10922 22a9 74       		.byte	0x74
 10923 22aa 28       		.sleb128 40
 10924 22ab 1B       		.uleb128 0x1b
 10925 22ac 01       		.uleb128 0x1
 10926 22ad 53       		.byte	0x53
 10927 22ae 01       		.uleb128 0x1
 10928 22af 31       		.byte	0x31
 10929 22b0 00       		.byte	0
 10930 22b1 1C       		.uleb128 0x1c
 10931 22b2 5A010000 		.4byte	.LVL797
 10932 22b6 D82C0000 		.4byte	0x2cd8
 10933 22ba 1B       		.uleb128 0x1b
 10934 22bb 01       		.uleb128 0x1
 10935 22bc 51       		.byte	0x51
 10936 22bd 02       		.uleb128 0x2
 10937 22be 74       		.byte	0x74
 10938 22bf 28       		.sleb128 40
 10939 22c0 1B       		.uleb128 0x1b
 10940 22c1 01       		.uleb128 0x1
 10941 22c2 52       		.byte	0x52
 10942 22c3 02       		.uleb128 0x2
 10943 22c4 75       		.byte	0x75
 10944 22c5 00       		.sleb128 0
 10945 22c6 1B       		.uleb128 0x1b
 10946 22c7 01       		.uleb128 0x1
 10947 22c8 53       		.byte	0x53
 10948 22c9 01       		.uleb128 0x1
 10949 22ca 31       		.byte	0x31
 10950 22cb 00       		.byte	0
 10951 22cc 00       		.byte	0
 10952 22cd 1F       		.uleb128 0x1f
 10953 22ce CA050000 		.4byte	.LASF142
 10954 22d2 01       		.byte	0x1
 10955 22d3 1D11     		.2byte	0x111d
 10956 22d5 E1030000 		.4byte	0x3e1
 10957 22d9 00000000 		.4byte	.LFB42
 10958 22dd 72000000 		.4byte	.LFE42-.LFB42
 10959 22e1 01       		.uleb128 0x1
 10960 22e2 9C       		.byte	0x9c
 10961 22e3 76230000 		.4byte	0x2376
 10962 22e7 11       		.uleb128 0x11
 10963 22e8 647000   		.ascii	"dp\000"
 10964 22eb 01       		.byte	0x1
 10965 22ec 1E11     		.2byte	0x111e
 10966 22ee 73080000 		.4byte	0x873
 10967 22f2 A4270000 		.4byte	.LLST186
 10968 22f6 19       		.uleb128 0x19
 10969 22f7 6C000000 		.4byte	.LASF92
 10970 22fb 01       		.byte	0x1
 10971 22fc 1F11     		.2byte	0x111f
 10972 22fe 85090000 		.4byte	0x985
 10973 2302 F4270000 		.4byte	.LLST187
 10974 2306 12       		.uleb128 0x12
 10975 2307 72657300 		.ascii	"res\000"
 10976 230b 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 291


 10977 230c 2211     		.2byte	0x1122
 10978 230e E1030000 		.4byte	0x3e1
 10979 2312 42280000 		.4byte	.LLST188
 10980 2316 18       		.uleb128 0x18
 10981 2317 667300   		.ascii	"fs\000"
 10982 231a 01       		.byte	0x1
 10983 231b 2311     		.2byte	0x1123
 10984 231d F9010000 		.4byte	0x1f9
 10985 2321 02       		.uleb128 0x2
 10986 2322 91       		.byte	0x91
 10987 2323 6C       		.sleb128 -20
 10988 2324 1A       		.uleb128 0x1a
 10989 2325 14000000 		.4byte	.LVL806
 10990 2329 E40B0000 		.4byte	0xbe4
 10991 232d 43230000 		.4byte	0x2343
 10992 2331 1B       		.uleb128 0x1b
 10993 2332 01       		.uleb128 0x1
 10994 2333 50       		.byte	0x50
 10995 2334 02       		.uleb128 0x2
 10996 2335 91       		.byte	0x91
 10997 2336 64       		.sleb128 -28
 10998 2337 1B       		.uleb128 0x1b
 10999 2338 01       		.uleb128 0x1
 11000 2339 51       		.byte	0x51
 11001 233a 02       		.uleb128 0x2
 11002 233b 91       		.byte	0x91
 11003 233c 6C       		.sleb128 -20
 11004 233d 1B       		.uleb128 0x1b
 11005 233e 01       		.uleb128 0x1
 11006 233f 52       		.byte	0x52
 11007 2340 01       		.uleb128 0x1
 11008 2341 30       		.byte	0x30
 11009 2342 00       		.byte	0
 11010 2343 1A       		.uleb128 0x1a
 11011 2344 24000000 		.4byte	.LVL808
 11012 2348 FA150000 		.4byte	0x15fa
 11013 234c 57230000 		.4byte	0x2357
 11014 2350 1B       		.uleb128 0x1b
 11015 2351 01       		.uleb128 0x1
 11016 2352 50       		.byte	0x50
 11017 2353 02       		.uleb128 0x2
 11018 2354 75       		.byte	0x75
 11019 2355 00       		.sleb128 0
 11020 2356 00       		.byte	0
 11021 2357 1D       		.uleb128 0x1d
 11022 2358 40000000 		.4byte	.LVL810
 11023 235c 12070000 		.4byte	0x712
 11024 2360 1C       		.uleb128 0x1c
 11025 2361 56000000 		.4byte	.LVL813
 11026 2365 F6100000 		.4byte	0x10f6
 11027 2369 1B       		.uleb128 0x1b
 11028 236a 01       		.uleb128 0x1
 11029 236b 50       		.byte	0x50
 11030 236c 02       		.uleb128 0x2
 11031 236d 75       		.byte	0x75
 11032 236e 00       		.sleb128 0
 11033 236f 1B       		.uleb128 0x1b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 292


 11034 2370 01       		.uleb128 0x1
 11035 2371 51       		.byte	0x51
 11036 2372 01       		.uleb128 0x1
 11037 2373 30       		.byte	0x30
 11038 2374 00       		.byte	0
 11039 2375 00       		.byte	0
 11040 2376 1F       		.uleb128 0x1f
 11041 2377 85060000 		.4byte	.LASF143
 11042 237b 01       		.byte	0x1
 11043 237c 5F11     		.2byte	0x115f
 11044 237e E1030000 		.4byte	0x3e1
 11045 2382 00000000 		.4byte	.LFB43
 11046 2386 1A000000 		.4byte	.LFE43-.LFB43
 11047 238a 01       		.uleb128 0x1
 11048 238b 9C       		.byte	0x9c
 11049 238c D4230000 		.4byte	0x23d4
 11050 2390 11       		.uleb128 0x11
 11051 2391 647000   		.ascii	"dp\000"
 11052 2394 01       		.byte	0x1
 11053 2395 6011     		.2byte	0x1160
 11054 2397 73080000 		.4byte	0x873
 11055 239b 81280000 		.4byte	.LLST189
 11056 239f 12       		.uleb128 0x12
 11057 23a0 72657300 		.ascii	"res\000"
 11058 23a4 01       		.byte	0x1
 11059 23a5 6311     		.2byte	0x1163
 11060 23a7 E1030000 		.4byte	0x3e1
 11061 23ab 9F280000 		.4byte	.LLST190
 11062 23af 18       		.uleb128 0x18
 11063 23b0 667300   		.ascii	"fs\000"
 11064 23b3 01       		.byte	0x1
 11065 23b4 6411     		.2byte	0x1164
 11066 23b6 F9010000 		.4byte	0x1f9
 11067 23ba 02       		.uleb128 0x2
 11068 23bb 91       		.byte	0x91
 11069 23bc 74       		.sleb128 -12
 11070 23bd 1C       		.uleb128 0x1c
 11071 23be 0C000000 		.4byte	.LVL821
 11072 23c2 F7090000 		.4byte	0x9f7
 11073 23c6 1B       		.uleb128 0x1b
 11074 23c7 01       		.uleb128 0x1
 11075 23c8 50       		.byte	0x50
 11076 23c9 02       		.uleb128 0x2
 11077 23ca 74       		.byte	0x74
 11078 23cb 00       		.sleb128 0
 11079 23cc 1B       		.uleb128 0x1b
 11080 23cd 01       		.uleb128 0x1
 11081 23ce 51       		.byte	0x51
 11082 23cf 02       		.uleb128 0x2
 11083 23d0 91       		.byte	0x91
 11084 23d1 74       		.sleb128 -12
 11085 23d2 00       		.byte	0
 11086 23d3 00       		.byte	0
 11087 23d4 1F       		.uleb128 0x1f
 11088 23d5 4E050000 		.4byte	.LASF144
 11089 23d9 01       		.byte	0x1
 11090 23da 7D11     		.2byte	0x117d
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 293


 11091 23dc E1030000 		.4byte	0x3e1
 11092 23e0 00000000 		.4byte	.LFB44
 11093 23e4 4C000000 		.4byte	.LFE44-.LFB44
 11094 23e8 01       		.uleb128 0x1
 11095 23e9 9C       		.byte	0x9c
 11096 23ea A7240000 		.4byte	0x24a7
 11097 23ee 11       		.uleb128 0x11
 11098 23ef 647000   		.ascii	"dp\000"
 11099 23f2 01       		.byte	0x1
 11100 23f3 7E11     		.2byte	0x117e
 11101 23f5 73080000 		.4byte	0x873
 11102 23f9 B2280000 		.4byte	.LLST191
 11103 23fd 11       		.uleb128 0x11
 11104 23fe 666E6F00 		.ascii	"fno\000"
 11105 2402 01       		.byte	0x1
 11106 2403 7F11     		.2byte	0x117f
 11107 2405 79080000 		.4byte	0x879
 11108 2409 D0280000 		.4byte	.LLST192
 11109 240d 12       		.uleb128 0x12
 11110 240e 72657300 		.ascii	"res\000"
 11111 2412 01       		.byte	0x1
 11112 2413 8211     		.2byte	0x1182
 11113 2415 E1030000 		.4byte	0x3e1
 11114 2419 EE280000 		.4byte	.LLST193
 11115 241d 18       		.uleb128 0x18
 11116 241e 667300   		.ascii	"fs\000"
 11117 2421 01       		.byte	0x1
 11118 2422 8311     		.2byte	0x1183
 11119 2424 F9010000 		.4byte	0x1f9
 11120 2428 02       		.uleb128 0x2
 11121 2429 91       		.byte	0x91
 11122 242a 6C       		.sleb128 -20
 11123 242b 1A       		.uleb128 0x1a
 11124 242c 0E000000 		.4byte	.LVL825
 11125 2430 F7090000 		.4byte	0x9f7
 11126 2434 45240000 		.4byte	0x2445
 11127 2438 1B       		.uleb128 0x1b
 11128 2439 01       		.uleb128 0x1
 11129 243a 50       		.byte	0x50
 11130 243b 02       		.uleb128 0x2
 11131 243c 75       		.byte	0x75
 11132 243d 00       		.sleb128 0
 11133 243e 1B       		.uleb128 0x1b
 11134 243f 01       		.uleb128 0x1
 11135 2440 51       		.byte	0x51
 11136 2441 02       		.uleb128 0x2
 11137 2442 91       		.byte	0x91
 11138 2443 6C       		.sleb128 -20
 11139 2444 00       		.byte	0
 11140 2445 1A       		.uleb128 0x1a
 11141 2446 1C000000 		.4byte	.LVL827
 11142 244a F6100000 		.4byte	0x10f6
 11143 244e 5E240000 		.4byte	0x245e
 11144 2452 1B       		.uleb128 0x1b
 11145 2453 01       		.uleb128 0x1
 11146 2454 50       		.byte	0x50
 11147 2455 02       		.uleb128 0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 294


 11148 2456 75       		.byte	0x75
 11149 2457 00       		.sleb128 0
 11150 2458 1B       		.uleb128 0x1b
 11151 2459 01       		.uleb128 0x1
 11152 245a 51       		.byte	0x51
 11153 245b 01       		.uleb128 0x1
 11154 245c 30       		.byte	0x30
 11155 245d 00       		.byte	0
 11156 245e 1A       		.uleb128 0x1a
 11157 245f 28000000 		.4byte	.LVL831
 11158 2463 00180000 		.4byte	0x1800
 11159 2467 77240000 		.4byte	0x2477
 11160 246b 1B       		.uleb128 0x1b
 11161 246c 01       		.uleb128 0x1
 11162 246d 50       		.byte	0x50
 11163 246e 02       		.uleb128 0x2
 11164 246f 75       		.byte	0x75
 11165 2470 00       		.sleb128 0
 11166 2471 1B       		.uleb128 0x1b
 11167 2472 01       		.uleb128 0x1
 11168 2473 51       		.byte	0x51
 11169 2474 01       		.uleb128 0x1
 11170 2475 30       		.byte	0x30
 11171 2476 00       		.byte	0
 11172 2477 1A       		.uleb128 0x1a
 11173 2478 38000000 		.4byte	.LVL833
 11174 247c F6070000 		.4byte	0x7f6
 11175 2480 91240000 		.4byte	0x2491
 11176 2484 1B       		.uleb128 0x1b
 11177 2485 01       		.uleb128 0x1
 11178 2486 50       		.byte	0x50
 11179 2487 02       		.uleb128 0x2
 11180 2488 75       		.byte	0x75
 11181 2489 00       		.sleb128 0
 11182 248a 1B       		.uleb128 0x1b
 11183 248b 01       		.uleb128 0x1
 11184 248c 51       		.byte	0x51
 11185 248d 02       		.uleb128 0x2
 11186 248e 76       		.byte	0x76
 11187 248f 00       		.sleb128 0
 11188 2490 00       		.byte	0
 11189 2491 1C       		.uleb128 0x1c
 11190 2492 40000000 		.4byte	.LVL834
 11191 2496 96140000 		.4byte	0x1496
 11192 249a 1B       		.uleb128 0x1b
 11193 249b 01       		.uleb128 0x1
 11194 249c 50       		.byte	0x50
 11195 249d 02       		.uleb128 0x2
 11196 249e 75       		.byte	0x75
 11197 249f 00       		.sleb128 0
 11198 24a0 1B       		.uleb128 0x1b
 11199 24a1 01       		.uleb128 0x1
 11200 24a2 51       		.byte	0x51
 11201 24a3 01       		.uleb128 0x1
 11202 24a4 30       		.byte	0x30
 11203 24a5 00       		.byte	0
 11204 24a6 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 295


 11205 24a7 1F       		.uleb128 0x1f
 11206 24a8 81010000 		.4byte	.LASF145
 11207 24ac 01       		.byte	0x1
 11208 24ad D511     		.2byte	0x11d5
 11209 24af E1030000 		.4byte	0x3e1
 11210 24b3 00000000 		.4byte	.LFB45
 11211 24b7 3E000000 		.4byte	.LFE45-.LFB45
 11212 24bb 01       		.uleb128 0x1
 11213 24bc 9C       		.byte	0x9c
 11214 24bd 4A250000 		.4byte	0x254a
 11215 24c1 19       		.uleb128 0x19
 11216 24c2 6C000000 		.4byte	.LASF92
 11217 24c6 01       		.byte	0x1
 11218 24c7 D611     		.2byte	0x11d6
 11219 24c9 85090000 		.4byte	0x985
 11220 24cd 43290000 		.4byte	.LLST194
 11221 24d1 11       		.uleb128 0x11
 11222 24d2 666E6F00 		.ascii	"fno\000"
 11223 24d6 01       		.byte	0x1
 11224 24d7 D711     		.2byte	0x11d7
 11225 24d9 79080000 		.4byte	0x879
 11226 24dd 6F290000 		.4byte	.LLST195
 11227 24e1 12       		.uleb128 0x12
 11228 24e2 72657300 		.ascii	"res\000"
 11229 24e6 01       		.byte	0x1
 11230 24e7 DA11     		.2byte	0x11da
 11231 24e9 E1030000 		.4byte	0x3e1
 11232 24ed 8D290000 		.4byte	.LLST196
 11233 24f1 18       		.uleb128 0x18
 11234 24f2 646A00   		.ascii	"dj\000"
 11235 24f5 01       		.byte	0x1
 11236 24f6 DB11     		.2byte	0x11db
 11237 24f8 F1020000 		.4byte	0x2f1
 11238 24fc 02       		.uleb128 0x2
 11239 24fd 91       		.byte	0x91
 11240 24fe 44       		.sleb128 -60
 11241 24ff 1A       		.uleb128 0x1a
 11242 2500 12000000 		.4byte	.LVL839
 11243 2504 E40B0000 		.4byte	0xbe4
 11244 2508 1F250000 		.4byte	0x251f
 11245 250c 1B       		.uleb128 0x1b
 11246 250d 01       		.uleb128 0x1
 11247 250e 50       		.byte	0x50
 11248 250f 03       		.uleb128 0x3
 11249 2510 91       		.byte	0x91
 11250 2511 BC7F     		.sleb128 -68
 11251 2513 1B       		.uleb128 0x1b
 11252 2514 01       		.uleb128 0x1
 11253 2515 51       		.byte	0x51
 11254 2516 02       		.uleb128 0x2
 11255 2517 91       		.byte	0x91
 11256 2518 44       		.sleb128 -60
 11257 2519 1B       		.uleb128 0x1b
 11258 251a 01       		.uleb128 0x1
 11259 251b 52       		.byte	0x52
 11260 251c 01       		.uleb128 0x1
 11261 251d 30       		.byte	0x30
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 296


 11262 251e 00       		.byte	0
 11263 251f 1A       		.uleb128 0x1a
 11264 2520 1E000000 		.4byte	.LVL841
 11265 2524 FA150000 		.4byte	0x15fa
 11266 2528 33250000 		.4byte	0x2533
 11267 252c 1B       		.uleb128 0x1b
 11268 252d 01       		.uleb128 0x1
 11269 252e 50       		.byte	0x50
 11270 252f 02       		.uleb128 0x2
 11271 2530 91       		.byte	0x91
 11272 2531 44       		.sleb128 -60
 11273 2532 00       		.byte	0
 11274 2533 1C       		.uleb128 0x1c
 11275 2534 34000000 		.4byte	.LVL843
 11276 2538 F6070000 		.4byte	0x7f6
 11277 253c 1B       		.uleb128 0x1b
 11278 253d 01       		.uleb128 0x1
 11279 253e 50       		.byte	0x50
 11280 253f 02       		.uleb128 0x2
 11281 2540 91       		.byte	0x91
 11282 2541 44       		.sleb128 -60
 11283 2542 1B       		.uleb128 0x1b
 11284 2543 01       		.uleb128 0x1
 11285 2544 51       		.byte	0x51
 11286 2545 02       		.uleb128 0x2
 11287 2546 75       		.byte	0x75
 11288 2547 00       		.sleb128 0
 11289 2548 00       		.byte	0
 11290 2549 00       		.byte	0
 11291 254a 1F       		.uleb128 0x1f
 11292 254b 6A040000 		.4byte	.LASF146
 11293 254f 01       		.byte	0x1
 11294 2550 F811     		.2byte	0x11f8
 11295 2552 E1030000 		.4byte	0x3e1
 11296 2556 00000000 		.4byte	.LFB46
 11297 255a CE000000 		.4byte	.LFE46-.LFB46
 11298 255e 01       		.uleb128 0x1
 11299 255f 9C       		.byte	0x9c
 11300 2560 6F260000 		.4byte	0x266f
 11301 2564 19       		.uleb128 0x19
 11302 2565 6C000000 		.4byte	.LASF92
 11303 2569 01       		.byte	0x1
 11304 256a F911     		.2byte	0x11f9
 11305 256c 85090000 		.4byte	0x985
 11306 2570 C1290000 		.4byte	.LLST197
 11307 2574 19       		.uleb128 0x19
 11308 2575 3C030000 		.4byte	.LASF105
 11309 2579 01       		.byte	0x1
 11310 257a FA11     		.2byte	0x11fa
 11311 257c 6F260000 		.4byte	0x266f
 11312 2580 EC290000 		.4byte	.LLST198
 11313 2584 19       		.uleb128 0x19
 11314 2585 6B030000 		.4byte	.LASF147
 11315 2589 01       		.byte	0x1
 11316 258a FB11     		.2byte	0x11fb
 11317 258c 510A0000 		.4byte	0xa51
 11318 2590 0A2A0000 		.4byte	.LLST199
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 297


 11319 2594 12       		.uleb128 0x12
 11320 2595 72657300 		.ascii	"res\000"
 11321 2599 01       		.byte	0x1
 11322 259a FE11     		.2byte	0x11fe
 11323 259c E1030000 		.4byte	0x3e1
 11324 25a0 4F2A0000 		.4byte	.LLST200
 11325 25a4 18       		.uleb128 0x18
 11326 25a5 667300   		.ascii	"fs\000"
 11327 25a8 01       		.byte	0x1
 11328 25a9 FF11     		.2byte	0x11ff
 11329 25ab F9010000 		.4byte	0x1f9
 11330 25af 02       		.uleb128 0x2
 11331 25b0 91       		.byte	0x91
 11332 25b1 5C       		.sleb128 -36
 11333 25b2 1E       		.uleb128 0x1e
 11334 25b3 C6000000 		.4byte	.LASF148
 11335 25b7 01       		.byte	0x1
 11336 25b8 0012     		.2byte	0x1200
 11337 25ba 70000000 		.4byte	0x70
 11338 25be 992A0000 		.4byte	.LLST201
 11339 25c2 1E       		.uleb128 0x1e
 11340 25c3 89020000 		.4byte	.LASF87
 11341 25c7 01       		.byte	0x1
 11342 25c8 0012     		.2byte	0x1200
 11343 25ca 70000000 		.4byte	0x70
 11344 25ce CF2A0000 		.4byte	.LLST202
 11345 25d2 1E       		.uleb128 0x1e
 11346 25d3 A4000000 		.4byte	.LASF40
 11347 25d7 01       		.byte	0x1
 11348 25d8 0012     		.2byte	0x1200
 11349 25da 70000000 		.4byte	0x70
 11350 25de 1C2B0000 		.4byte	.LLST203
 11351 25e2 1E       		.uleb128 0x1e
 11352 25e3 53060000 		.4byte	.LASF33
 11353 25e7 01       		.byte	0x1
 11354 25e8 0012     		.2byte	0x1200
 11355 25ea 70000000 		.4byte	0x70
 11356 25ee 452B0000 		.4byte	.LLST204
 11357 25f2 12       		.uleb128 0x12
 11358 25f3 6900     		.ascii	"i\000"
 11359 25f5 01       		.byte	0x1
 11360 25f6 0112     		.2byte	0x1201
 11361 25f8 2C000000 		.4byte	0x2c
 11362 25fc 632B0000 		.4byte	.LLST205
 11363 2600 18       		.uleb128 0x18
 11364 2601 6F626A00 		.ascii	"obj\000"
 11365 2605 01       		.byte	0x1
 11366 2606 0212     		.2byte	0x1202
 11367 2608 FF010000 		.4byte	0x1ff
 11368 260c 02       		.uleb128 0x2
 11369 260d 91       		.byte	0x91
 11370 260e 4C       		.sleb128 -52
 11371 260f 1A       		.uleb128 0x1a
 11372 2610 16000000 		.4byte	.LVL850
 11373 2614 E40B0000 		.4byte	0xbe4
 11374 2618 2E260000 		.4byte	0x262e
 11375 261c 1B       		.uleb128 0x1b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 298


 11376 261d 01       		.uleb128 0x1
 11377 261e 50       		.byte	0x50
 11378 261f 02       		.uleb128 0x2
 11379 2620 91       		.byte	0x91
 11380 2621 44       		.sleb128 -60
 11381 2622 1B       		.uleb128 0x1b
 11382 2623 01       		.uleb128 0x1
 11383 2624 51       		.byte	0x51
 11384 2625 02       		.uleb128 0x2
 11385 2626 91       		.byte	0x91
 11386 2627 5C       		.sleb128 -36
 11387 2628 1B       		.uleb128 0x1b
 11388 2629 01       		.uleb128 0x1
 11389 262a 52       		.byte	0x52
 11390 262b 01       		.uleb128 0x1
 11391 262c 30       		.byte	0x30
 11392 262d 00       		.byte	0
 11393 262e 1A       		.uleb128 0x1a
 11394 262f 44000000 		.4byte	.LVL855
 11395 2633 F80F0000 		.4byte	0xff8
 11396 2637 48260000 		.4byte	0x2648
 11397 263b 1B       		.uleb128 0x1b
 11398 263c 01       		.uleb128 0x1
 11399 263d 50       		.byte	0x50
 11400 263e 02       		.uleb128 0x2
 11401 263f 91       		.byte	0x91
 11402 2640 4C       		.sleb128 -52
 11403 2641 1B       		.uleb128 0x1b
 11404 2642 01       		.uleb128 0x1
 11405 2643 51       		.byte	0x51
 11406 2644 02       		.uleb128 0x2
 11407 2645 74       		.byte	0x74
 11408 2646 00       		.sleb128 0
 11409 2647 00       		.byte	0
 11410 2648 1A       		.uleb128 0x1a
 11411 2649 72000000 		.4byte	.LVL863
 11412 264d BF0A0000 		.4byte	0xabf
 11413 2651 5C260000 		.4byte	0x265c
 11414 2655 1B       		.uleb128 0x1b
 11415 2656 01       		.uleb128 0x1
 11416 2657 51       		.byte	0x51
 11417 2658 02       		.uleb128 0x2
 11418 2659 77       		.byte	0x77
 11419 265a 00       		.sleb128 0
 11420 265b 00       		.byte	0
 11421 265c 1D       		.uleb128 0x1d
 11422 265d 88000000 		.4byte	.LVL865
 11423 2661 22040000 		.4byte	0x422
 11424 2665 1D       		.uleb128 0x1d
 11425 2666 98000000 		.4byte	.LVL868
 11426 266a 67040000 		.4byte	0x467
 11427 266e 00       		.byte	0
 11428 266f 0B       		.uleb128 0xb
 11429 2670 04       		.byte	0x4
 11430 2671 70000000 		.4byte	0x70
 11431 2675 1F       		.uleb128 0x1f
 11432 2676 3D060000 		.4byte	.LASF149
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 299


 11433 267a 01       		.byte	0x1
 11434 267b 5112     		.2byte	0x1251
 11435 267d E1030000 		.4byte	0x3e1
 11436 2681 00000000 		.4byte	.LFB47
 11437 2685 B4000000 		.4byte	.LFE47-.LFB47
 11438 2689 01       		.uleb128 0x1
 11439 268a 9C       		.byte	0x9c
 11440 268b 3D270000 		.4byte	0x273d
 11441 268f 11       		.uleb128 0x11
 11442 2690 667000   		.ascii	"fp\000"
 11443 2693 01       		.byte	0x1
 11444 2694 5212     		.2byte	0x1252
 11445 2696 A61C0000 		.4byte	0x1ca6
 11446 269a 822B0000 		.4byte	.LLST206
 11447 269e 12       		.uleb128 0x12
 11448 269f 72657300 		.ascii	"res\000"
 11449 26a3 01       		.byte	0x1
 11450 26a4 5512     		.2byte	0x1255
 11451 26a6 E1030000 		.4byte	0x3e1
 11452 26aa A02B0000 		.4byte	.LLST207
 11453 26ae 18       		.uleb128 0x18
 11454 26af 667300   		.ascii	"fs\000"
 11455 26b2 01       		.byte	0x1
 11456 26b3 5612     		.2byte	0x1256
 11457 26b5 F9010000 		.4byte	0x1f9
 11458 26b9 02       		.uleb128 0x2
 11459 26ba 91       		.byte	0x91
 11460 26bb 6C       		.sleb128 -20
 11461 26bc 12       		.uleb128 0x12
 11462 26bd 6E636C00 		.ascii	"ncl\000"
 11463 26c1 01       		.byte	0x1
 11464 26c2 5712     		.2byte	0x1257
 11465 26c4 70000000 		.4byte	0x70
 11466 26c8 EB2B0000 		.4byte	.LLST208
 11467 26cc 1A       		.uleb128 0x1a
 11468 26cd 0C000000 		.4byte	.LVL877
 11469 26d1 F7090000 		.4byte	0x9f7
 11470 26d5 E6260000 		.4byte	0x26e6
 11471 26d9 1B       		.uleb128 0x1b
 11472 26da 01       		.uleb128 0x1
 11473 26db 50       		.byte	0x50
 11474 26dc 02       		.uleb128 0x2
 11475 26dd 75       		.byte	0x75
 11476 26de 00       		.sleb128 0
 11477 26df 1B       		.uleb128 0x1b
 11478 26e0 01       		.uleb128 0x1
 11479 26e1 51       		.byte	0x51
 11480 26e2 02       		.uleb128 0x2
 11481 26e3 91       		.byte	0x91
 11482 26e4 6C       		.sleb128 -20
 11483 26e5 00       		.byte	0
 11484 26e6 1A       		.uleb128 0x1a
 11485 26e7 32000000 		.4byte	.LVL879
 11486 26eb 8D120000 		.4byte	0x128d
 11487 26ef FF260000 		.4byte	0x26ff
 11488 26f3 1B       		.uleb128 0x1b
 11489 26f4 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 300


 11490 26f5 50       		.byte	0x50
 11491 26f6 02       		.uleb128 0x2
 11492 26f7 75       		.byte	0x75
 11493 26f8 00       		.sleb128 0
 11494 26f9 1B       		.uleb128 0x1b
 11495 26fa 01       		.uleb128 0x1
 11496 26fb 52       		.byte	0x52
 11497 26fc 01       		.uleb128 0x1
 11498 26fd 30       		.byte	0x30
 11499 26fe 00       		.byte	0
 11500 26ff 1A       		.uleb128 0x1a
 11501 2700 42000000 		.4byte	.LVL881
 11502 2704 F80F0000 		.4byte	0xff8
 11503 2708 13270000 		.4byte	0x2713
 11504 270c 1B       		.uleb128 0x1b
 11505 270d 01       		.uleb128 0x1
 11506 270e 50       		.byte	0x50
 11507 270f 02       		.uleb128 0x2
 11508 2710 75       		.byte	0x75
 11509 2711 00       		.sleb128 0
 11510 2712 00       		.byte	0
 11511 2713 1A       		.uleb128 0x1a
 11512 2714 64000000 		.4byte	.LVL885
 11513 2718 8D120000 		.4byte	0x128d
 11514 271c 27270000 		.4byte	0x2727
 11515 2720 1B       		.uleb128 0x1b
 11516 2721 01       		.uleb128 0x1
 11517 2722 50       		.byte	0x50
 11518 2723 02       		.uleb128 0x2
 11519 2724 75       		.byte	0x75
 11520 2725 00       		.sleb128 0
 11521 2726 00       		.byte	0
 11522 2727 1C       		.uleb128 0x1c
 11523 2728 8A000000 		.4byte	.LVL887
 11524 272c CD2C0000 		.4byte	0x2ccd
 11525 2730 1B       		.uleb128 0x1b
 11526 2731 01       		.uleb128 0x1
 11527 2732 51       		.byte	0x51
 11528 2733 02       		.uleb128 0x2
 11529 2734 75       		.byte	0x75
 11530 2735 28       		.sleb128 40
 11531 2736 1B       		.uleb128 0x1b
 11532 2737 01       		.uleb128 0x1
 11533 2738 53       		.byte	0x53
 11534 2739 01       		.uleb128 0x1
 11535 273a 31       		.byte	0x31
 11536 273b 00       		.byte	0
 11537 273c 00       		.byte	0
 11538 273d 1F       		.uleb128 0x1f
 11539 273e C7040000 		.4byte	.LASF150
 11540 2742 01       		.byte	0x1
 11541 2743 8312     		.2byte	0x1283
 11542 2745 E1030000 		.4byte	0x3e1
 11543 2749 00000000 		.4byte	.LFB48
 11544 274d AC000000 		.4byte	.LFE48-.LFB48
 11545 2751 01       		.uleb128 0x1
 11546 2752 9C       		.byte	0x9c
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 301


 11547 2753 6E280000 		.4byte	0x286e
 11548 2757 19       		.uleb128 0x19
 11549 2758 6C000000 		.4byte	.LASF92
 11550 275c 01       		.byte	0x1
 11551 275d 8412     		.2byte	0x1284
 11552 275f 85090000 		.4byte	0x985
 11553 2763 092C0000 		.4byte	.LLST209
 11554 2767 12       		.uleb128 0x12
 11555 2768 72657300 		.ascii	"res\000"
 11556 276c 01       		.byte	0x1
 11557 276d 8712     		.2byte	0x1287
 11558 276f E1030000 		.4byte	0x3e1
 11559 2773 352C0000 		.4byte	.LLST210
 11560 2777 18       		.uleb128 0x18
 11561 2778 646A00   		.ascii	"dj\000"
 11562 277b 01       		.byte	0x1
 11563 277c 8812     		.2byte	0x1288
 11564 277e F1020000 		.4byte	0x2f1
 11565 2782 02       		.uleb128 0x2
 11566 2783 91       		.byte	0x91
 11567 2784 44       		.sleb128 -60
 11568 2785 18       		.uleb128 0x18
 11569 2786 73646A00 		.ascii	"sdj\000"
 11570 278a 01       		.byte	0x1
 11571 278b 8812     		.2byte	0x1288
 11572 278d F1020000 		.4byte	0x2f1
 11573 2791 03       		.uleb128 0x3
 11574 2792 91       		.byte	0x91
 11575 2793 987F     		.sleb128 -104
 11576 2795 1E       		.uleb128 0x1e
 11577 2796 96040000 		.4byte	.LASF151
 11578 279a 01       		.byte	0x1
 11579 279b 8912     		.2byte	0x1289
 11580 279d 70000000 		.4byte	0x70
 11581 27a1 A02C0000 		.4byte	.LLST211
 11582 27a5 18       		.uleb128 0x18
 11583 27a6 667300   		.ascii	"fs\000"
 11584 27a9 01       		.byte	0x1
 11585 27aa 8A12     		.2byte	0x128a
 11586 27ac F9010000 		.4byte	0x1f9
 11587 27b0 03       		.uleb128 0x3
 11588 27b1 91       		.byte	0x91
 11589 27b2 947F     		.sleb128 -108
 11590 27b4 1A       		.uleb128 0x1a
 11591 27b5 10000000 		.4byte	.LVL895
 11592 27b9 E40B0000 		.4byte	0xbe4
 11593 27bd D5270000 		.4byte	0x27d5
 11594 27c1 1B       		.uleb128 0x1b
 11595 27c2 01       		.uleb128 0x1
 11596 27c3 50       		.byte	0x50
 11597 27c4 03       		.uleb128 0x3
 11598 27c5 91       		.byte	0x91
 11599 27c6 8C7F     		.sleb128 -116
 11600 27c8 1B       		.uleb128 0x1b
 11601 27c9 01       		.uleb128 0x1
 11602 27ca 51       		.byte	0x51
 11603 27cb 03       		.uleb128 0x3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 302


 11604 27cc 91       		.byte	0x91
 11605 27cd 947F     		.sleb128 -108
 11606 27cf 1B       		.uleb128 0x1b
 11607 27d0 01       		.uleb128 0x1
 11608 27d1 52       		.byte	0x52
 11609 27d2 01       		.uleb128 0x1
 11610 27d3 32       		.byte	0x32
 11611 27d4 00       		.byte	0
 11612 27d5 1A       		.uleb128 0x1a
 11613 27d6 22000000 		.4byte	.LVL897
 11614 27da FA150000 		.4byte	0x15fa
 11615 27de E9270000 		.4byte	0x27e9
 11616 27e2 1B       		.uleb128 0x1b
 11617 27e3 01       		.uleb128 0x1
 11618 27e4 50       		.byte	0x50
 11619 27e5 02       		.uleb128 0x2
 11620 27e6 91       		.byte	0x91
 11621 27e7 44       		.sleb128 -60
 11622 27e8 00       		.byte	0
 11623 27e9 1A       		.uleb128 0x1a
 11624 27ea 4E000000 		.4byte	.LVL899
 11625 27ee 12070000 		.4byte	0x712
 11626 27f2 FD270000 		.4byte	0x27fd
 11627 27f6 1B       		.uleb128 0x1b
 11628 27f7 01       		.uleb128 0x1
 11629 27f8 50       		.byte	0x50
 11630 27f9 02       		.uleb128 0x2
 11631 27fa 76       		.byte	0x76
 11632 27fb 00       		.sleb128 0
 11633 27fc 00       		.byte	0
 11634 27fd 1A       		.uleb128 0x1a
 11635 27fe 66000000 		.4byte	.LVL902
 11636 2802 F6100000 		.4byte	0x10f6
 11637 2806 17280000 		.4byte	0x2817
 11638 280a 1B       		.uleb128 0x1b
 11639 280b 01       		.uleb128 0x1
 11640 280c 50       		.byte	0x50
 11641 280d 03       		.uleb128 0x3
 11642 280e 91       		.byte	0x91
 11643 280f 987F     		.sleb128 -104
 11644 2811 1B       		.uleb128 0x1b
 11645 2812 01       		.uleb128 0x1
 11646 2813 51       		.byte	0x51
 11647 2814 01       		.uleb128 0x1
 11648 2815 30       		.byte	0x30
 11649 2816 00       		.byte	0
 11650 2817 1A       		.uleb128 0x1a
 11651 2818 72000000 		.4byte	.LVL904
 11652 281c 00180000 		.4byte	0x1800
 11653 2820 31280000 		.4byte	0x2831
 11654 2824 1B       		.uleb128 0x1b
 11655 2825 01       		.uleb128 0x1
 11656 2826 50       		.byte	0x50
 11657 2827 03       		.uleb128 0x3
 11658 2828 91       		.byte	0x91
 11659 2829 987F     		.sleb128 -104
 11660 282b 1B       		.uleb128 0x1b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 303


 11661 282c 01       		.uleb128 0x1
 11662 282d 51       		.byte	0x51
 11663 282e 01       		.uleb128 0x1
 11664 282f 30       		.byte	0x30
 11665 2830 00       		.byte	0
 11666 2831 1A       		.uleb128 0x1a
 11667 2832 8A000000 		.4byte	.LVL908
 11668 2836 5B130000 		.4byte	0x135b
 11669 283a 45280000 		.4byte	0x2845
 11670 283e 1B       		.uleb128 0x1b
 11671 283f 01       		.uleb128 0x1
 11672 2840 50       		.byte	0x50
 11673 2841 02       		.uleb128 0x2
 11674 2842 91       		.byte	0x91
 11675 2843 44       		.sleb128 -60
 11676 2844 00       		.byte	0
 11677 2845 1A       		.uleb128 0x1a
 11678 2846 9A000000 		.4byte	.LVL910
 11679 284a 8D120000 		.4byte	0x128d
 11680 284e 64280000 		.4byte	0x2864
 11681 2852 1B       		.uleb128 0x1b
 11682 2853 01       		.uleb128 0x1
 11683 2854 50       		.byte	0x50
 11684 2855 02       		.uleb128 0x2
 11685 2856 91       		.byte	0x91
 11686 2857 44       		.sleb128 -60
 11687 2858 1B       		.uleb128 0x1b
 11688 2859 01       		.uleb128 0x1
 11689 285a 51       		.byte	0x51
 11690 285b 02       		.uleb128 0x2
 11691 285c 75       		.byte	0x75
 11692 285d 00       		.sleb128 0
 11693 285e 1B       		.uleb128 0x1b
 11694 285f 01       		.uleb128 0x1
 11695 2860 52       		.byte	0x52
 11696 2861 01       		.uleb128 0x1
 11697 2862 30       		.byte	0x30
 11698 2863 00       		.byte	0
 11699 2864 1D       		.uleb128 0x1d
 11700 2865 A4000000 		.4byte	.LVL912
 11701 2869 9C180000 		.4byte	0x189c
 11702 286d 00       		.byte	0
 11703 286e 1F       		.uleb128 0x1f
 11704 286f 06030000 		.4byte	.LASF152
 11705 2873 01       		.byte	0x1
 11706 2874 E112     		.2byte	0x12e1
 11707 2876 E1030000 		.4byte	0x3e1
 11708 287a 00000000 		.4byte	.LFB49
 11709 287e 12010000 		.4byte	.LFE49-.LFB49
 11710 2882 01       		.uleb128 0x1
 11711 2883 9C       		.byte	0x9c
 11712 2884 722A0000 		.4byte	0x2a72
 11713 2888 19       		.uleb128 0x19
 11714 2889 6C000000 		.4byte	.LASF92
 11715 288d 01       		.byte	0x1
 11716 288e E212     		.2byte	0x12e2
 11717 2890 85090000 		.4byte	0x985
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 304


 11718 2894 E12C0000 		.4byte	.LLST212
 11719 2898 12       		.uleb128 0x12
 11720 2899 72657300 		.ascii	"res\000"
 11721 289d 01       		.byte	0x1
 11722 289e E512     		.2byte	0x12e5
 11723 28a0 E1030000 		.4byte	0x3e1
 11724 28a4 0D2D0000 		.4byte	.LLST213
 11725 28a8 18       		.uleb128 0x18
 11726 28a9 646A00   		.ascii	"dj\000"
 11727 28ac 01       		.byte	0x1
 11728 28ad E612     		.2byte	0x12e6
 11729 28af F1020000 		.4byte	0x2f1
 11730 28b3 03       		.uleb128 0x3
 11731 28b4 91       		.byte	0x91
 11732 28b5 B47F     		.sleb128 -76
 11733 28b7 18       		.uleb128 0x18
 11734 28b8 667300   		.ascii	"fs\000"
 11735 28bb 01       		.byte	0x1
 11736 28bc E712     		.2byte	0x12e7
 11737 28be F9010000 		.4byte	0x1f9
 11738 28c2 03       		.uleb128 0x3
 11739 28c3 91       		.byte	0x91
 11740 28c4 B07F     		.sleb128 -80
 11741 28c6 12       		.uleb128 0x12
 11742 28c7 64697200 		.ascii	"dir\000"
 11743 28cb 01       		.byte	0x1
 11744 28cc E812     		.2byte	0x12e8
 11745 28ce 80020000 		.4byte	0x280
 11746 28d2 792D0000 		.4byte	.LLST214
 11747 28d6 12       		.uleb128 0x12
 11748 28d7 64636C00 		.ascii	"dcl\000"
 11749 28db 01       		.byte	0x1
 11750 28dc E912     		.2byte	0x12e9
 11751 28de 70000000 		.4byte	0x70
 11752 28e2 972D0000 		.4byte	.LLST215
 11753 28e6 12       		.uleb128 0x12
 11754 28e7 70636C00 		.ascii	"pcl\000"
 11755 28eb 01       		.byte	0x1
 11756 28ec E912     		.2byte	0x12e9
 11757 28ee 70000000 		.4byte	0x70
 11758 28f2 B52D0000 		.4byte	.LLST216
 11759 28f6 12       		.uleb128 0x12
 11760 28f7 746D00   		.ascii	"tm\000"
 11761 28fa 01       		.byte	0x1
 11762 28fb E912     		.2byte	0x12e9
 11763 28fd 70000000 		.4byte	0x70
 11764 2901 CA2D0000 		.4byte	.LLST217
 11765 2905 1A       		.uleb128 0x1a
 11766 2906 12000000 		.4byte	.LVL916
 11767 290a E40B0000 		.4byte	0xbe4
 11768 290e 26290000 		.4byte	0x2926
 11769 2912 1B       		.uleb128 0x1b
 11770 2913 01       		.uleb128 0x1
 11771 2914 50       		.byte	0x50
 11772 2915 03       		.uleb128 0x3
 11773 2916 91       		.byte	0x91
 11774 2917 AC7F     		.sleb128 -84
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 305


 11775 2919 1B       		.uleb128 0x1b
 11776 291a 01       		.uleb128 0x1
 11777 291b 51       		.byte	0x51
 11778 291c 03       		.uleb128 0x3
 11779 291d 91       		.byte	0x91
 11780 291e B07F     		.sleb128 -80
 11781 2920 1B       		.uleb128 0x1b
 11782 2921 01       		.uleb128 0x1
 11783 2922 52       		.byte	0x52
 11784 2923 01       		.uleb128 0x1
 11785 2924 32       		.byte	0x32
 11786 2925 00       		.byte	0
 11787 2926 1A       		.uleb128 0x1a
 11788 2927 24000000 		.4byte	.LVL918
 11789 292b FA150000 		.4byte	0x15fa
 11790 292f 3B290000 		.4byte	0x293b
 11791 2933 1B       		.uleb128 0x1b
 11792 2934 01       		.uleb128 0x1
 11793 2935 50       		.byte	0x50
 11794 2936 03       		.uleb128 0x3
 11795 2937 91       		.byte	0x91
 11796 2938 B47F     		.sleb128 -76
 11797 293a 00       		.byte	0
 11798 293b 1A       		.uleb128 0x1a
 11799 293c 36000000 		.4byte	.LVL920
 11800 2940 8D110000 		.4byte	0x118d
 11801 2944 55290000 		.4byte	0x2955
 11802 2948 1B       		.uleb128 0x1b
 11803 2949 01       		.uleb128 0x1
 11804 294a 50       		.byte	0x50
 11805 294b 03       		.uleb128 0x3
 11806 294c 91       		.byte	0x91
 11807 294d B47F     		.sleb128 -76
 11808 294f 1B       		.uleb128 0x1b
 11809 2950 01       		.uleb128 0x1
 11810 2951 51       		.byte	0x51
 11811 2952 01       		.uleb128 0x1
 11812 2953 30       		.byte	0x30
 11813 2954 00       		.byte	0
 11814 2955 1D       		.uleb128 0x1d
 11815 2956 5A000000 		.4byte	.LVL926
 11816 295a 570A0000 		.4byte	0xa57
 11817 295e 1D       		.uleb128 0x1d
 11818 295f 60000000 		.4byte	.LVL928
 11819 2963 F92C0000 		.4byte	0x2cf9
 11820 2967 1A       		.uleb128 0x1a
 11821 2968 6C000000 		.4byte	.LVL931
 11822 296c B2130000 		.4byte	0x13b2
 11823 2970 7B290000 		.4byte	0x297b
 11824 2974 1B       		.uleb128 0x1b
 11825 2975 01       		.uleb128 0x1
 11826 2976 51       		.byte	0x51
 11827 2977 02       		.uleb128 0x2
 11828 2978 75       		.byte	0x75
 11829 2979 00       		.sleb128 0
 11830 297a 00       		.byte	0
 11831 297b 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 306


 11832 297c 80000000 		.4byte	.LVL934
 11833 2980 7B050000 		.4byte	0x57b
 11834 2984 9A290000 		.4byte	0x299a
 11835 2988 1B       		.uleb128 0x1b
 11836 2989 01       		.uleb128 0x1
 11837 298a 50       		.byte	0x50
 11838 298b 02       		.uleb128 0x2
 11839 298c 78       		.byte	0x78
 11840 298d 00       		.sleb128 0
 11841 298e 1B       		.uleb128 0x1b
 11842 298f 01       		.uleb128 0x1
 11843 2990 51       		.byte	0x51
 11844 2991 02       		.uleb128 0x2
 11845 2992 08       		.byte	0x8
 11846 2993 20       		.byte	0x20
 11847 2994 1B       		.uleb128 0x1b
 11848 2995 01       		.uleb128 0x1
 11849 2996 52       		.byte	0x52
 11850 2997 01       		.uleb128 0x1
 11851 2998 3B       		.byte	0x3b
 11852 2999 00       		.byte	0
 11853 299a 1A       		.uleb128 0x1a
 11854 299b 98000000 		.4byte	.LVL935
 11855 299f D8040000 		.4byte	0x4d8
 11856 29a3 B5290000 		.4byte	0x29b5
 11857 29a7 1B       		.uleb128 0x1b
 11858 29a8 01       		.uleb128 0x1
 11859 29a9 50       		.byte	0x50
 11860 29aa 03       		.uleb128 0x3
 11861 29ab 76       		.byte	0x76
 11862 29ac C600     		.sleb128 70
 11863 29ae 1B       		.uleb128 0x1b
 11864 29af 01       		.uleb128 0x1
 11865 29b0 51       		.byte	0x51
 11866 29b1 02       		.uleb128 0x2
 11867 29b2 77       		.byte	0x77
 11868 29b3 00       		.sleb128 0
 11869 29b4 00       		.byte	0
 11870 29b5 1A       		.uleb128 0x1a
 11871 29b6 A2000000 		.4byte	.LVL936
 11872 29ba 7F070000 		.4byte	0x77f
 11873 29be CF290000 		.4byte	0x29cf
 11874 29c2 1B       		.uleb128 0x1b
 11875 29c3 01       		.uleb128 0x1
 11876 29c4 51       		.byte	0x51
 11877 29c5 02       		.uleb128 0x2
 11878 29c6 78       		.byte	0x78
 11879 29c7 00       		.sleb128 0
 11880 29c8 1B       		.uleb128 0x1b
 11881 29c9 01       		.uleb128 0x1
 11882 29ca 52       		.byte	0x52
 11883 29cb 02       		.uleb128 0x2
 11884 29cc 75       		.byte	0x75
 11885 29cd 00       		.sleb128 0
 11886 29ce 00       		.byte	0
 11887 29cf 1A       		.uleb128 0x1a
 11888 29d0 B0000000 		.4byte	.LVL937
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 307


 11889 29d4 0F050000 		.4byte	0x50f
 11890 29d8 EF290000 		.4byte	0x29ef
 11891 29dc 1B       		.uleb128 0x1b
 11892 29dd 01       		.uleb128 0x1
 11893 29de 50       		.byte	0x50
 11894 29df 02       		.uleb128 0x2
 11895 29e0 79       		.byte	0x79
 11896 29e1 00       		.sleb128 0
 11897 29e2 1B       		.uleb128 0x1b
 11898 29e3 01       		.uleb128 0x1
 11899 29e4 51       		.byte	0x51
 11900 29e5 02       		.uleb128 0x2
 11901 29e6 78       		.byte	0x78
 11902 29e7 00       		.sleb128 0
 11903 29e8 1B       		.uleb128 0x1b
 11904 29e9 01       		.uleb128 0x1
 11905 29ea 52       		.byte	0x52
 11906 29eb 02       		.uleb128 0x2
 11907 29ec 08       		.byte	0x8
 11908 29ed 20       		.byte	0x20
 11909 29ee 00       		.byte	0
 11910 29ef 1A       		.uleb128 0x1a
 11911 29f0 BE000000 		.4byte	.LVL939
 11912 29f4 7F070000 		.4byte	0x77f
 11913 29f8 032A0000 		.4byte	0x2a03
 11914 29fc 1B       		.uleb128 0x1b
 11915 29fd 01       		.uleb128 0x1
 11916 29fe 51       		.byte	0x51
 11917 29ff 02       		.uleb128 0x2
 11918 2a00 79       		.byte	0x79
 11919 2a01 00       		.sleb128 0
 11920 2a02 00       		.byte	0
 11921 2a03 1A       		.uleb128 0x1a
 11922 2a04 CC000000 		.4byte	.LVL941
 11923 2a08 5E170000 		.4byte	0x175e
 11924 2a0c 182A0000 		.4byte	0x2a18
 11925 2a10 1B       		.uleb128 0x1b
 11926 2a11 01       		.uleb128 0x1
 11927 2a12 50       		.byte	0x50
 11928 2a13 03       		.uleb128 0x3
 11929 2a14 91       		.byte	0x91
 11930 2a15 B47F     		.sleb128 -76
 11931 2a17 00       		.byte	0
 11932 2a18 1A       		.uleb128 0x1a
 11933 2a19 DC000000 		.4byte	.LVL944
 11934 2a1d D8040000 		.4byte	0x4d8
 11935 2a21 322A0000 		.4byte	0x2a32
 11936 2a25 1B       		.uleb128 0x1b
 11937 2a26 01       		.uleb128 0x1
 11938 2a27 50       		.byte	0x50
 11939 2a28 02       		.uleb128 0x2
 11940 2a29 76       		.byte	0x76
 11941 2a2a 16       		.sleb128 22
 11942 2a2b 1B       		.uleb128 0x1b
 11943 2a2c 01       		.uleb128 0x1
 11944 2a2d 51       		.byte	0x51
 11945 2a2e 02       		.uleb128 0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 308


 11946 2a2f 77       		.byte	0x77
 11947 2a30 00       		.sleb128 0
 11948 2a31 00       		.byte	0
 11949 2a32 1A       		.uleb128 0x1a
 11950 2a33 E6000000 		.4byte	.LVL945
 11951 2a37 7F070000 		.4byte	0x77f
 11952 2a3b 4C2A0000 		.4byte	0x2a4c
 11953 2a3f 1B       		.uleb128 0x1b
 11954 2a40 01       		.uleb128 0x1
 11955 2a41 51       		.byte	0x51
 11956 2a42 02       		.uleb128 0x2
 11957 2a43 76       		.byte	0x76
 11958 2a44 00       		.sleb128 0
 11959 2a45 1B       		.uleb128 0x1b
 11960 2a46 01       		.uleb128 0x1
 11961 2a47 52       		.byte	0x52
 11962 2a48 02       		.uleb128 0x2
 11963 2a49 75       		.byte	0x75
 11964 2a4a 00       		.sleb128 0
 11965 2a4b 00       		.byte	0
 11966 2a4c 1D       		.uleb128 0x1d
 11967 2a4d F8000000 		.4byte	.LVL946
 11968 2a51 9C180000 		.4byte	0x189c
 11969 2a55 1C       		.uleb128 0x1c
 11970 2a56 06010000 		.4byte	.LVL949
 11971 2a5a 8D120000 		.4byte	0x128d
 11972 2a5e 1B       		.uleb128 0x1b
 11973 2a5f 01       		.uleb128 0x1
 11974 2a60 50       		.byte	0x50
 11975 2a61 03       		.uleb128 0x3
 11976 2a62 91       		.byte	0x91
 11977 2a63 B47F     		.sleb128 -76
 11978 2a65 1B       		.uleb128 0x1b
 11979 2a66 01       		.uleb128 0x1
 11980 2a67 51       		.byte	0x51
 11981 2a68 02       		.uleb128 0x2
 11982 2a69 75       		.byte	0x75
 11983 2a6a 00       		.sleb128 0
 11984 2a6b 1B       		.uleb128 0x1b
 11985 2a6c 01       		.uleb128 0x1
 11986 2a6d 52       		.byte	0x52
 11987 2a6e 01       		.uleb128 0x1
 11988 2a6f 30       		.byte	0x30
 11989 2a70 00       		.byte	0
 11990 2a71 00       		.byte	0
 11991 2a72 1F       		.uleb128 0x1f
 11992 2a73 80020000 		.4byte	.LASF153
 11993 2a77 01       		.byte	0x1
 11994 2a78 3913     		.2byte	0x1339
 11995 2a7a E1030000 		.4byte	0x3e1
 11996 2a7e 00000000 		.4byte	.LFB50
 11997 2a82 1C010000 		.4byte	.LFE50-.LFB50
 11998 2a86 01       		.uleb128 0x1
 11999 2a87 9C       		.byte	0x9c
 12000 2a88 522C0000 		.4byte	0x2c52
 12001 2a8c 19       		.uleb128 0x19
 12002 2a8d 24060000 		.4byte	.LASF154
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 309


 12003 2a91 01       		.byte	0x1
 12004 2a92 3A13     		.2byte	0x133a
 12005 2a94 85090000 		.4byte	0x985
 12006 2a98 E82D0000 		.4byte	.LLST218
 12007 2a9c 19       		.uleb128 0x19
 12008 2a9d 99020000 		.4byte	.LASF155
 12009 2aa1 01       		.byte	0x1
 12010 2aa2 3B13     		.2byte	0x133b
 12011 2aa4 85090000 		.4byte	0x985
 12012 2aa8 212E0000 		.4byte	.LLST219
 12013 2aac 12       		.uleb128 0x12
 12014 2aad 72657300 		.ascii	"res\000"
 12015 2ab1 01       		.byte	0x1
 12016 2ab2 3E13     		.2byte	0x133e
 12017 2ab4 E1030000 		.4byte	0x3e1
 12018 2ab8 412E0000 		.4byte	.LLST220
 12019 2abc 18       		.uleb128 0x18
 12020 2abd 646A6F00 		.ascii	"djo\000"
 12021 2ac1 01       		.byte	0x1
 12022 2ac2 3F13     		.2byte	0x133f
 12023 2ac4 F1020000 		.4byte	0x2f1
 12024 2ac8 02       		.uleb128 0x2
 12025 2ac9 91       		.byte	0x91
 12026 2aca 44       		.sleb128 -60
 12027 2acb 18       		.uleb128 0x18
 12028 2acc 646A6E00 		.ascii	"djn\000"
 12029 2ad0 01       		.byte	0x1
 12030 2ad1 3F13     		.2byte	0x133f
 12031 2ad3 F1020000 		.4byte	0x2f1
 12032 2ad7 03       		.uleb128 0x3
 12033 2ad8 91       		.byte	0x91
 12034 2ad9 987F     		.sleb128 -104
 12035 2adb 18       		.uleb128 0x18
 12036 2adc 667300   		.ascii	"fs\000"
 12037 2adf 01       		.byte	0x1
 12038 2ae0 4013     		.2byte	0x1340
 12039 2ae2 F9010000 		.4byte	0x1f9
 12040 2ae6 03       		.uleb128 0x3
 12041 2ae7 91       		.byte	0x91
 12042 2ae8 947F     		.sleb128 -108
 12043 2aea 18       		.uleb128 0x18
 12044 2aeb 62756600 		.ascii	"buf\000"
 12045 2aef 01       		.byte	0x1
 12046 2af0 4113     		.2byte	0x1341
 12047 2af2 522C0000 		.4byte	0x2c52
 12048 2af6 03       		.uleb128 0x3
 12049 2af7 91       		.byte	0x91
 12050 2af8 F47E     		.sleb128 -140
 12051 2afa 12       		.uleb128 0x12
 12052 2afb 64697200 		.ascii	"dir\000"
 12053 2aff 01       		.byte	0x1
 12054 2b00 4113     		.2byte	0x1341
 12055 2b02 80020000 		.4byte	0x280
 12056 2b06 B72E0000 		.4byte	.LLST221
 12057 2b0a 12       		.uleb128 0x12
 12058 2b0b 647700   		.ascii	"dw\000"
 12059 2b0e 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 310


 12060 2b0f 4213     		.2byte	0x1342
 12061 2b11 70000000 		.4byte	0x70
 12062 2b15 E02E0000 		.4byte	.LLST222
 12063 2b19 1A       		.uleb128 0x1a
 12064 2b1a 10000000 		.4byte	.LVL954
 12065 2b1e 90090000 		.4byte	0x990
 12066 2b22 2E2B0000 		.4byte	0x2b2e
 12067 2b26 1B       		.uleb128 0x1b
 12068 2b27 01       		.uleb128 0x1
 12069 2b28 50       		.byte	0x50
 12070 2b29 03       		.uleb128 0x3
 12071 2b2a 91       		.byte	0x91
 12072 2b2b E87E     		.sleb128 -152
 12073 2b2d 00       		.byte	0
 12074 2b2e 1A       		.uleb128 0x1a
 12075 2b2f 1A000000 		.4byte	.LVL956
 12076 2b33 E40B0000 		.4byte	0xbe4
 12077 2b37 4F2B0000 		.4byte	0x2b4f
 12078 2b3b 1B       		.uleb128 0x1b
 12079 2b3c 01       		.uleb128 0x1
 12080 2b3d 50       		.byte	0x50
 12081 2b3e 03       		.uleb128 0x3
 12082 2b3f 91       		.byte	0x91
 12083 2b40 EC7E     		.sleb128 -148
 12084 2b42 1B       		.uleb128 0x1b
 12085 2b43 01       		.uleb128 0x1
 12086 2b44 51       		.byte	0x51
 12087 2b45 03       		.uleb128 0x3
 12088 2b46 91       		.byte	0x91
 12089 2b47 947F     		.sleb128 -108
 12090 2b49 1B       		.uleb128 0x1b
 12091 2b4a 01       		.uleb128 0x1
 12092 2b4b 52       		.byte	0x52
 12093 2b4c 01       		.uleb128 0x1
 12094 2b4d 32       		.byte	0x32
 12095 2b4e 00       		.byte	0
 12096 2b4f 1A       		.uleb128 0x1a
 12097 2b50 2C000000 		.4byte	.LVL958
 12098 2b54 FA150000 		.4byte	0x15fa
 12099 2b58 632B0000 		.4byte	0x2b63
 12100 2b5c 1B       		.uleb128 0x1b
 12101 2b5d 01       		.uleb128 0x1
 12102 2b5e 50       		.byte	0x50
 12103 2b5f 02       		.uleb128 0x2
 12104 2b60 91       		.byte	0x91
 12105 2b61 44       		.sleb128 -60
 12106 2b62 00       		.byte	0
 12107 2b63 1A       		.uleb128 0x1a
 12108 2b64 4A000000 		.4byte	.LVL960
 12109 2b68 0F050000 		.4byte	0x50f
 12110 2b6c 7E2B0000 		.4byte	0x2b7e
 12111 2b70 1B       		.uleb128 0x1b
 12112 2b71 01       		.uleb128 0x1
 12113 2b72 50       		.byte	0x50
 12114 2b73 03       		.uleb128 0x3
 12115 2b74 91       		.byte	0x91
 12116 2b75 F47E     		.sleb128 -140
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 311


 12117 2b77 1B       		.uleb128 0x1b
 12118 2b78 01       		.uleb128 0x1
 12119 2b79 52       		.byte	0x52
 12120 2b7a 02       		.uleb128 0x2
 12121 2b7b 08       		.byte	0x8
 12122 2b7c 20       		.byte	0x20
 12123 2b7d 00       		.byte	0
 12124 2b7e 1A       		.uleb128 0x1a
 12125 2b7f 54000000 		.4byte	.LVL961
 12126 2b83 0F050000 		.4byte	0x50f
 12127 2b87 9F2B0000 		.4byte	0x2b9f
 12128 2b8b 1B       		.uleb128 0x1b
 12129 2b8c 01       		.uleb128 0x1
 12130 2b8d 50       		.byte	0x50
 12131 2b8e 03       		.uleb128 0x3
 12132 2b8f 91       		.byte	0x91
 12133 2b90 987F     		.sleb128 -104
 12134 2b92 1B       		.uleb128 0x1b
 12135 2b93 01       		.uleb128 0x1
 12136 2b94 51       		.byte	0x51
 12137 2b95 02       		.uleb128 0x2
 12138 2b96 91       		.byte	0x91
 12139 2b97 44       		.sleb128 -60
 12140 2b98 1B       		.uleb128 0x1b
 12141 2b99 01       		.uleb128 0x1
 12142 2b9a 52       		.byte	0x52
 12143 2b9b 02       		.uleb128 0x2
 12144 2b9c 08       		.byte	0x8
 12145 2b9d 2C       		.byte	0x2c
 12146 2b9e 00       		.byte	0
 12147 2b9f 1A       		.uleb128 0x1a
 12148 2ba0 5C000000 		.4byte	.LVL962
 12149 2ba4 FA150000 		.4byte	0x15fa
 12150 2ba8 B42B0000 		.4byte	0x2bb4
 12151 2bac 1B       		.uleb128 0x1b
 12152 2bad 01       		.uleb128 0x1
 12153 2bae 50       		.byte	0x50
 12154 2baf 03       		.uleb128 0x3
 12155 2bb0 91       		.byte	0x91
 12156 2bb1 987F     		.sleb128 -104
 12157 2bb3 00       		.byte	0
 12158 2bb4 1A       		.uleb128 0x1a
 12159 2bb5 84000000 		.4byte	.LVL964
 12160 2bb9 5E170000 		.4byte	0x175e
 12161 2bbd C92B0000 		.4byte	0x2bc9
 12162 2bc1 1B       		.uleb128 0x1b
 12163 2bc2 01       		.uleb128 0x1
 12164 2bc3 50       		.byte	0x50
 12165 2bc4 03       		.uleb128 0x3
 12166 2bc5 91       		.byte	0x91
 12167 2bc6 987F     		.sleb128 -104
 12168 2bc8 00       		.byte	0
 12169 2bc9 1A       		.uleb128 0x1a
 12170 2bca 9A000000 		.4byte	.LVL967
 12171 2bce 0F050000 		.4byte	0x50f
 12172 2bd2 E92B0000 		.4byte	0x2be9
 12173 2bd6 1B       		.uleb128 0x1b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 312


 12174 2bd7 01       		.uleb128 0x1
 12175 2bd8 50       		.byte	0x50
 12176 2bd9 02       		.uleb128 0x2
 12177 2bda 75       		.byte	0x75
 12178 2bdb 0D       		.sleb128 13
 12179 2bdc 1B       		.uleb128 0x1b
 12180 2bdd 01       		.uleb128 0x1
 12181 2bde 51       		.byte	0x51
 12182 2bdf 03       		.uleb128 0x3
 12183 2be0 91       		.byte	0x91
 12184 2be1 817F     		.sleb128 -127
 12185 2be3 1B       		.uleb128 0x1b
 12186 2be4 01       		.uleb128 0x1
 12187 2be5 52       		.byte	0x52
 12188 2be6 01       		.uleb128 0x1
 12189 2be7 43       		.byte	0x43
 12190 2be8 00       		.byte	0
 12191 2be9 1A       		.uleb128 0x1a
 12192 2bea CC000000 		.4byte	.LVL968
 12193 2bee 12070000 		.4byte	0x712
 12194 2bf2 032C0000 		.4byte	0x2c03
 12195 2bf6 1B       		.uleb128 0x1b
 12196 2bf7 01       		.uleb128 0x1
 12197 2bf8 50       		.byte	0x50
 12198 2bf9 02       		.uleb128 0x2
 12199 2bfa 74       		.byte	0x74
 12200 2bfb 00       		.sleb128 0
 12201 2bfc 1B       		.uleb128 0x1b
 12202 2bfd 01       		.uleb128 0x1
 12203 2bfe 51       		.byte	0x51
 12204 2bff 02       		.uleb128 0x2
 12205 2c00 75       		.byte	0x75
 12206 2c01 00       		.sleb128 0
 12207 2c02 00       		.byte	0
 12208 2c03 1A       		.uleb128 0x1a
 12209 2c04 D4000000 		.4byte	.LVL969
 12210 2c08 D8060000 		.4byte	0x6d8
 12211 2c0c 172C0000 		.4byte	0x2c17
 12212 2c10 1B       		.uleb128 0x1b
 12213 2c11 01       		.uleb128 0x1
 12214 2c12 50       		.byte	0x50
 12215 2c13 02       		.uleb128 0x2
 12216 2c14 74       		.byte	0x74
 12217 2c15 00       		.sleb128 0
 12218 2c16 00       		.byte	0
 12219 2c17 1A       		.uleb128 0x1a
 12220 2c18 DE000000 		.4byte	.LVL971
 12221 2c1c BF0A0000 		.4byte	0xabf
 12222 2c20 2B2C0000 		.4byte	0x2c2b
 12223 2c24 1B       		.uleb128 0x1b
 12224 2c25 01       		.uleb128 0x1
 12225 2c26 50       		.byte	0x50
 12226 2c27 02       		.uleb128 0x2
 12227 2c28 74       		.byte	0x74
 12228 2c29 00       		.sleb128 0
 12229 2c2a 00       		.byte	0
 12230 2c2b 1D       		.uleb128 0x1d
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 313


 12231 2c2c F8000000 		.4byte	.LVL974
 12232 2c30 7F070000 		.4byte	0x77f
 12233 2c34 1A       		.uleb128 0x1a
 12234 2c35 0A010000 		.4byte	.LVL977
 12235 2c39 5B130000 		.4byte	0x135b
 12236 2c3d 482C0000 		.4byte	0x2c48
 12237 2c41 1B       		.uleb128 0x1b
 12238 2c42 01       		.uleb128 0x1
 12239 2c43 50       		.byte	0x50
 12240 2c44 02       		.uleb128 0x2
 12241 2c45 91       		.byte	0x91
 12242 2c46 44       		.sleb128 -60
 12243 2c47 00       		.byte	0
 12244 2c48 1D       		.uleb128 0x1d
 12245 2c49 14010000 		.4byte	.LVL979
 12246 2c4d 9C180000 		.4byte	0x189c
 12247 2c51 00       		.byte	0
 12248 2c52 08       		.uleb128 0x8
 12249 2c53 3E000000 		.4byte	0x3e
 12250 2c57 622C0000 		.4byte	0x2c62
 12251 2c5b 0D       		.uleb128 0xd
 12252 2c5c 98010000 		.4byte	0x198
 12253 2c60 1F       		.byte	0x1f
 12254 2c61 00       		.byte	0
 12255 2c62 08       		.uleb128 0x8
 12256 2c63 F9010000 		.4byte	0x1f9
 12257 2c67 722C0000 		.4byte	0x2c72
 12258 2c6b 0D       		.uleb128 0xd
 12259 2c6c 98010000 		.4byte	0x198
 12260 2c70 00       		.byte	0
 12261 2c71 00       		.byte	0
 12262 2c72 20       		.uleb128 0x20
 12263 2c73 3F000000 		.4byte	.LASF156
 12264 2c77 01       		.byte	0x1
 12265 2c78 AD01     		.2byte	0x1ad
 12266 2c7a 622C0000 		.4byte	0x2c62
 12267 2c7e 05       		.uleb128 0x5
 12268 2c7f 03       		.byte	0x3
 12269 2c80 00000000 		.4byte	FatFs
 12270 2c84 20       		.uleb128 0x20
 12271 2c85 AF060000 		.4byte	.LASF157
 12272 2c89 01       		.byte	0x1
 12273 2c8a AE01     		.2byte	0x1ae
 12274 2c8c 57000000 		.4byte	0x57
 12275 2c90 05       		.uleb128 0x5
 12276 2c91 03       		.byte	0x3
 12277 2c92 04000000 		.4byte	Fsid
 12278 2c96 08       		.uleb128 0x8
 12279 2c97 62040000 		.4byte	0x462
 12280 2c9b A62C0000 		.4byte	0x2ca6
 12281 2c9f 0D       		.uleb128 0xd
 12282 2ca0 98010000 		.4byte	0x198
 12283 2ca4 09       		.byte	0x9
 12284 2ca5 00       		.byte	0
 12285 2ca6 21       		.uleb128 0x21
 12286 2ca7 D5020000 		.4byte	.LASF158
 12287 2cab 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 314


 12288 2cac 2302     		.2byte	0x223
 12289 2cae BD2C0000 		.4byte	0x2cbd
 12290 2cb2 0A       		.byte	0xa
 12291 2cb3 81       		.byte	0x81
 12292 2cb4 9F       		.byte	0x9f
 12293 2cb5 E0       		.byte	0xe0
 12294 2cb6 FC       		.byte	0xfc
 12295 2cb7 40       		.byte	0x40
 12296 2cb8 7E       		.byte	0x7e
 12297 2cb9 80       		.byte	0x80
 12298 2cba FC       		.byte	0xfc
 12299 2cbb 00       		.byte	0
 12300 2cbc 00       		.byte	0
 12301 2cbd 13       		.uleb128 0x13
 12302 2cbe 962C0000 		.4byte	0x2c96
 12303 2cc2 22       		.uleb128 0x22
 12304 2cc3 14020000 		.4byte	.LASF159
 12305 2cc7 14020000 		.4byte	.LASF159
 12306 2ccb 04       		.byte	0x4
 12307 2ccc 21       		.byte	0x21
 12308 2ccd 22       		.uleb128 0x22
 12309 2cce E4050000 		.4byte	.LASF160
 12310 2cd2 E4050000 		.4byte	.LASF160
 12311 2cd6 04       		.byte	0x4
 12312 2cd7 23       		.byte	0x23
 12313 2cd8 22       		.uleb128 0x22
 12314 2cd9 A5060000 		.4byte	.LASF161
 12315 2cdd A5060000 		.4byte	.LASF161
 12316 2ce1 04       		.byte	0x4
 12317 2ce2 22       		.byte	0x22
 12318 2ce3 22       		.uleb128 0x22
 12319 2ce4 A2010000 		.4byte	.LASF162
 12320 2ce8 A2010000 		.4byte	.LASF162
 12321 2cec 04       		.byte	0x4
 12322 2ced 20       		.byte	0x20
 12323 2cee 22       		.uleb128 0x22
 12324 2cef F5020000 		.4byte	.LASF163
 12325 2cf3 F5020000 		.4byte	.LASF163
 12326 2cf7 04       		.byte	0x4
 12327 2cf8 24       		.byte	0x24
 12328 2cf9 23       		.uleb128 0x23
 12329 2cfa A1030000 		.4byte	.LASF164
 12330 2cfe A1030000 		.4byte	.LASF164
 12331 2d02 03       		.byte	0x3
 12332 2d03 2C01     		.2byte	0x12c
 12333 2d05 00       		.byte	0
 12334              		.section	.debug_abbrev,"",%progbits
 12335              	.Ldebug_abbrev0:
 12336 0000 01       		.uleb128 0x1
 12337 0001 11       		.uleb128 0x11
 12338 0002 01       		.byte	0x1
 12339 0003 25       		.uleb128 0x25
 12340 0004 0E       		.uleb128 0xe
 12341 0005 13       		.uleb128 0x13
 12342 0006 0B       		.uleb128 0xb
 12343 0007 03       		.uleb128 0x3
 12344 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 315


 12345 0009 1B       		.uleb128 0x1b
 12346 000a 0E       		.uleb128 0xe
 12347 000b 55       		.uleb128 0x55
 12348 000c 17       		.uleb128 0x17
 12349 000d 11       		.uleb128 0x11
 12350 000e 01       		.uleb128 0x1
 12351 000f 10       		.uleb128 0x10
 12352 0010 17       		.uleb128 0x17
 12353 0011 00       		.byte	0
 12354 0012 00       		.byte	0
 12355 0013 02       		.uleb128 0x2
 12356 0014 24       		.uleb128 0x24
 12357 0015 00       		.byte	0
 12358 0016 0B       		.uleb128 0xb
 12359 0017 0B       		.uleb128 0xb
 12360 0018 3E       		.uleb128 0x3e
 12361 0019 0B       		.uleb128 0xb
 12362 001a 03       		.uleb128 0x3
 12363 001b 08       		.uleb128 0x8
 12364 001c 00       		.byte	0
 12365 001d 00       		.byte	0
 12366 001e 03       		.uleb128 0x3
 12367 001f 16       		.uleb128 0x16
 12368 0020 00       		.byte	0
 12369 0021 03       		.uleb128 0x3
 12370 0022 0E       		.uleb128 0xe
 12371 0023 3A       		.uleb128 0x3a
 12372 0024 0B       		.uleb128 0xb
 12373 0025 3B       		.uleb128 0x3b
 12374 0026 0B       		.uleb128 0xb
 12375 0027 49       		.uleb128 0x49
 12376 0028 13       		.uleb128 0x13
 12377 0029 00       		.byte	0
 12378 002a 00       		.byte	0
 12379 002b 04       		.uleb128 0x4
 12380 002c 24       		.uleb128 0x24
 12381 002d 00       		.byte	0
 12382 002e 0B       		.uleb128 0xb
 12383 002f 0B       		.uleb128 0xb
 12384 0030 3E       		.uleb128 0x3e
 12385 0031 0B       		.uleb128 0xb
 12386 0032 03       		.uleb128 0x3
 12387 0033 0E       		.uleb128 0xe
 12388 0034 00       		.byte	0
 12389 0035 00       		.byte	0
 12390 0036 05       		.uleb128 0x5
 12391 0037 13       		.uleb128 0x13
 12392 0038 01       		.byte	0x1
 12393 0039 0B       		.uleb128 0xb
 12394 003a 05       		.uleb128 0x5
 12395 003b 3A       		.uleb128 0x3a
 12396 003c 0B       		.uleb128 0xb
 12397 003d 3B       		.uleb128 0x3b
 12398 003e 0B       		.uleb128 0xb
 12399 003f 01       		.uleb128 0x1
 12400 0040 13       		.uleb128 0x13
 12401 0041 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 316


 12402 0042 00       		.byte	0
 12403 0043 06       		.uleb128 0x6
 12404 0044 0D       		.uleb128 0xd
 12405 0045 00       		.byte	0
 12406 0046 03       		.uleb128 0x3
 12407 0047 0E       		.uleb128 0xe
 12408 0048 3A       		.uleb128 0x3a
 12409 0049 0B       		.uleb128 0xb
 12410 004a 3B       		.uleb128 0x3b
 12411 004b 0B       		.uleb128 0xb
 12412 004c 49       		.uleb128 0x49
 12413 004d 13       		.uleb128 0x13
 12414 004e 38       		.uleb128 0x38
 12415 004f 0B       		.uleb128 0xb
 12416 0050 00       		.byte	0
 12417 0051 00       		.byte	0
 12418 0052 07       		.uleb128 0x7
 12419 0053 0D       		.uleb128 0xd
 12420 0054 00       		.byte	0
 12421 0055 03       		.uleb128 0x3
 12422 0056 08       		.uleb128 0x8
 12423 0057 3A       		.uleb128 0x3a
 12424 0058 0B       		.uleb128 0xb
 12425 0059 3B       		.uleb128 0x3b
 12426 005a 0B       		.uleb128 0xb
 12427 005b 49       		.uleb128 0x49
 12428 005c 13       		.uleb128 0x13
 12429 005d 38       		.uleb128 0x38
 12430 005e 0B       		.uleb128 0xb
 12431 005f 00       		.byte	0
 12432 0060 00       		.byte	0
 12433 0061 08       		.uleb128 0x8
 12434 0062 01       		.uleb128 0x1
 12435 0063 01       		.byte	0x1
 12436 0064 49       		.uleb128 0x49
 12437 0065 13       		.uleb128 0x13
 12438 0066 01       		.uleb128 0x1
 12439 0067 13       		.uleb128 0x13
 12440 0068 00       		.byte	0
 12441 0069 00       		.byte	0
 12442 006a 09       		.uleb128 0x9
 12443 006b 21       		.uleb128 0x21
 12444 006c 00       		.byte	0
 12445 006d 49       		.uleb128 0x49
 12446 006e 13       		.uleb128 0x13
 12447 006f 2F       		.uleb128 0x2f
 12448 0070 05       		.uleb128 0x5
 12449 0071 00       		.byte	0
 12450 0072 00       		.byte	0
 12451 0073 0A       		.uleb128 0xa
 12452 0074 13       		.uleb128 0x13
 12453 0075 01       		.byte	0x1
 12454 0076 0B       		.uleb128 0xb
 12455 0077 0B       		.uleb128 0xb
 12456 0078 3A       		.uleb128 0x3a
 12457 0079 0B       		.uleb128 0xb
 12458 007a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 317


 12459 007b 0B       		.uleb128 0xb
 12460 007c 01       		.uleb128 0x1
 12461 007d 13       		.uleb128 0x13
 12462 007e 00       		.byte	0
 12463 007f 00       		.byte	0
 12464 0080 0B       		.uleb128 0xb
 12465 0081 0F       		.uleb128 0xf
 12466 0082 00       		.byte	0
 12467 0083 0B       		.uleb128 0xb
 12468 0084 0B       		.uleb128 0xb
 12469 0085 49       		.uleb128 0x49
 12470 0086 13       		.uleb128 0x13
 12471 0087 00       		.byte	0
 12472 0088 00       		.byte	0
 12473 0089 0C       		.uleb128 0xc
 12474 008a 16       		.uleb128 0x16
 12475 008b 00       		.byte	0
 12476 008c 03       		.uleb128 0x3
 12477 008d 08       		.uleb128 0x8
 12478 008e 3A       		.uleb128 0x3a
 12479 008f 0B       		.uleb128 0xb
 12480 0090 3B       		.uleb128 0x3b
 12481 0091 0B       		.uleb128 0xb
 12482 0092 49       		.uleb128 0x49
 12483 0093 13       		.uleb128 0x13
 12484 0094 00       		.byte	0
 12485 0095 00       		.byte	0
 12486 0096 0D       		.uleb128 0xd
 12487 0097 21       		.uleb128 0x21
 12488 0098 00       		.byte	0
 12489 0099 49       		.uleb128 0x49
 12490 009a 13       		.uleb128 0x13
 12491 009b 2F       		.uleb128 0x2f
 12492 009c 0B       		.uleb128 0xb
 12493 009d 00       		.byte	0
 12494 009e 00       		.byte	0
 12495 009f 0E       		.uleb128 0xe
 12496 00a0 04       		.uleb128 0x4
 12497 00a1 01       		.byte	0x1
 12498 00a2 0B       		.uleb128 0xb
 12499 00a3 0B       		.uleb128 0xb
 12500 00a4 49       		.uleb128 0x49
 12501 00a5 13       		.uleb128 0x13
 12502 00a6 3A       		.uleb128 0x3a
 12503 00a7 0B       		.uleb128 0xb
 12504 00a8 3B       		.uleb128 0x3b
 12505 00a9 0B       		.uleb128 0xb
 12506 00aa 01       		.uleb128 0x1
 12507 00ab 13       		.uleb128 0x13
 12508 00ac 00       		.byte	0
 12509 00ad 00       		.byte	0
 12510 00ae 0F       		.uleb128 0xf
 12511 00af 28       		.uleb128 0x28
 12512 00b0 00       		.byte	0
 12513 00b1 03       		.uleb128 0x3
 12514 00b2 0E       		.uleb128 0xe
 12515 00b3 1C       		.uleb128 0x1c
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 318


 12516 00b4 0B       		.uleb128 0xb
 12517 00b5 00       		.byte	0
 12518 00b6 00       		.byte	0
 12519 00b7 10       		.uleb128 0x10
 12520 00b8 2E       		.uleb128 0x2e
 12521 00b9 01       		.byte	0x1
 12522 00ba 03       		.uleb128 0x3
 12523 00bb 0E       		.uleb128 0xe
 12524 00bc 3A       		.uleb128 0x3a
 12525 00bd 0B       		.uleb128 0xb
 12526 00be 3B       		.uleb128 0x3b
 12527 00bf 05       		.uleb128 0x5
 12528 00c0 27       		.uleb128 0x27
 12529 00c1 19       		.uleb128 0x19
 12530 00c2 49       		.uleb128 0x49
 12531 00c3 13       		.uleb128 0x13
 12532 00c4 11       		.uleb128 0x11
 12533 00c5 01       		.uleb128 0x1
 12534 00c6 12       		.uleb128 0x12
 12535 00c7 06       		.uleb128 0x6
 12536 00c8 40       		.uleb128 0x40
 12537 00c9 18       		.uleb128 0x18
 12538 00ca 9742     		.uleb128 0x2117
 12539 00cc 19       		.uleb128 0x19
 12540 00cd 01       		.uleb128 0x1
 12541 00ce 13       		.uleb128 0x13
 12542 00cf 00       		.byte	0
 12543 00d0 00       		.byte	0
 12544 00d1 11       		.uleb128 0x11
 12545 00d2 05       		.uleb128 0x5
 12546 00d3 00       		.byte	0
 12547 00d4 03       		.uleb128 0x3
 12548 00d5 08       		.uleb128 0x8
 12549 00d6 3A       		.uleb128 0x3a
 12550 00d7 0B       		.uleb128 0xb
 12551 00d8 3B       		.uleb128 0x3b
 12552 00d9 05       		.uleb128 0x5
 12553 00da 49       		.uleb128 0x49
 12554 00db 13       		.uleb128 0x13
 12555 00dc 02       		.uleb128 0x2
 12556 00dd 17       		.uleb128 0x17
 12557 00de 00       		.byte	0
 12558 00df 00       		.byte	0
 12559 00e0 12       		.uleb128 0x12
 12560 00e1 34       		.uleb128 0x34
 12561 00e2 00       		.byte	0
 12562 00e3 03       		.uleb128 0x3
 12563 00e4 08       		.uleb128 0x8
 12564 00e5 3A       		.uleb128 0x3a
 12565 00e6 0B       		.uleb128 0xb
 12566 00e7 3B       		.uleb128 0x3b
 12567 00e8 05       		.uleb128 0x5
 12568 00e9 49       		.uleb128 0x49
 12569 00ea 13       		.uleb128 0x13
 12570 00eb 02       		.uleb128 0x2
 12571 00ec 17       		.uleb128 0x17
 12572 00ed 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 319


 12573 00ee 00       		.byte	0
 12574 00ef 13       		.uleb128 0x13
 12575 00f0 26       		.uleb128 0x26
 12576 00f1 00       		.byte	0
 12577 00f2 49       		.uleb128 0x49
 12578 00f3 13       		.uleb128 0x13
 12579 00f4 00       		.byte	0
 12580 00f5 00       		.byte	0
 12581 00f6 14       		.uleb128 0x14
 12582 00f7 2E       		.uleb128 0x2e
 12583 00f8 01       		.byte	0x1
 12584 00f9 03       		.uleb128 0x3
 12585 00fa 0E       		.uleb128 0xe
 12586 00fb 3A       		.uleb128 0x3a
 12587 00fc 0B       		.uleb128 0xb
 12588 00fd 3B       		.uleb128 0x3b
 12589 00fe 05       		.uleb128 0x5
 12590 00ff 27       		.uleb128 0x27
 12591 0100 19       		.uleb128 0x19
 12592 0101 11       		.uleb128 0x11
 12593 0102 01       		.uleb128 0x1
 12594 0103 12       		.uleb128 0x12
 12595 0104 06       		.uleb128 0x6
 12596 0105 40       		.uleb128 0x40
 12597 0106 18       		.uleb128 0x18
 12598 0107 9742     		.uleb128 0x2117
 12599 0109 19       		.uleb128 0x19
 12600 010a 01       		.uleb128 0x1
 12601 010b 13       		.uleb128 0x13
 12602 010c 00       		.byte	0
 12603 010d 00       		.byte	0
 12604 010e 15       		.uleb128 0x15
 12605 010f 0F       		.uleb128 0xf
 12606 0110 00       		.byte	0
 12607 0111 0B       		.uleb128 0xb
 12608 0112 0B       		.uleb128 0xb
 12609 0113 00       		.byte	0
 12610 0114 00       		.byte	0
 12611 0115 16       		.uleb128 0x16
 12612 0116 26       		.uleb128 0x26
 12613 0117 00       		.byte	0
 12614 0118 00       		.byte	0
 12615 0119 00       		.byte	0
 12616 011a 17       		.uleb128 0x17
 12617 011b 05       		.uleb128 0x5
 12618 011c 00       		.byte	0
 12619 011d 03       		.uleb128 0x3
 12620 011e 08       		.uleb128 0x8
 12621 011f 3A       		.uleb128 0x3a
 12622 0120 0B       		.uleb128 0xb
 12623 0121 3B       		.uleb128 0x3b
 12624 0122 05       		.uleb128 0x5
 12625 0123 49       		.uleb128 0x49
 12626 0124 13       		.uleb128 0x13
 12627 0125 02       		.uleb128 0x2
 12628 0126 18       		.uleb128 0x18
 12629 0127 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 320


 12630 0128 00       		.byte	0
 12631 0129 18       		.uleb128 0x18
 12632 012a 34       		.uleb128 0x34
 12633 012b 00       		.byte	0
 12634 012c 03       		.uleb128 0x3
 12635 012d 08       		.uleb128 0x8
 12636 012e 3A       		.uleb128 0x3a
 12637 012f 0B       		.uleb128 0xb
 12638 0130 3B       		.uleb128 0x3b
 12639 0131 05       		.uleb128 0x5
 12640 0132 49       		.uleb128 0x49
 12641 0133 13       		.uleb128 0x13
 12642 0134 02       		.uleb128 0x2
 12643 0135 18       		.uleb128 0x18
 12644 0136 00       		.byte	0
 12645 0137 00       		.byte	0
 12646 0138 19       		.uleb128 0x19
 12647 0139 05       		.uleb128 0x5
 12648 013a 00       		.byte	0
 12649 013b 03       		.uleb128 0x3
 12650 013c 0E       		.uleb128 0xe
 12651 013d 3A       		.uleb128 0x3a
 12652 013e 0B       		.uleb128 0xb
 12653 013f 3B       		.uleb128 0x3b
 12654 0140 05       		.uleb128 0x5
 12655 0141 49       		.uleb128 0x49
 12656 0142 13       		.uleb128 0x13
 12657 0143 02       		.uleb128 0x2
 12658 0144 17       		.uleb128 0x17
 12659 0145 00       		.byte	0
 12660 0146 00       		.byte	0
 12661 0147 1A       		.uleb128 0x1a
 12662 0148 898201   		.uleb128 0x4109
 12663 014b 01       		.byte	0x1
 12664 014c 11       		.uleb128 0x11
 12665 014d 01       		.uleb128 0x1
 12666 014e 31       		.uleb128 0x31
 12667 014f 13       		.uleb128 0x13
 12668 0150 01       		.uleb128 0x1
 12669 0151 13       		.uleb128 0x13
 12670 0152 00       		.byte	0
 12671 0153 00       		.byte	0
 12672 0154 1B       		.uleb128 0x1b
 12673 0155 8A8201   		.uleb128 0x410a
 12674 0158 00       		.byte	0
 12675 0159 02       		.uleb128 0x2
 12676 015a 18       		.uleb128 0x18
 12677 015b 9142     		.uleb128 0x2111
 12678 015d 18       		.uleb128 0x18
 12679 015e 00       		.byte	0
 12680 015f 00       		.byte	0
 12681 0160 1C       		.uleb128 0x1c
 12682 0161 898201   		.uleb128 0x4109
 12683 0164 01       		.byte	0x1
 12684 0165 11       		.uleb128 0x11
 12685 0166 01       		.uleb128 0x1
 12686 0167 31       		.uleb128 0x31
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 321


 12687 0168 13       		.uleb128 0x13
 12688 0169 00       		.byte	0
 12689 016a 00       		.byte	0
 12690 016b 1D       		.uleb128 0x1d
 12691 016c 898201   		.uleb128 0x4109
 12692 016f 00       		.byte	0
 12693 0170 11       		.uleb128 0x11
 12694 0171 01       		.uleb128 0x1
 12695 0172 31       		.uleb128 0x31
 12696 0173 13       		.uleb128 0x13
 12697 0174 00       		.byte	0
 12698 0175 00       		.byte	0
 12699 0176 1E       		.uleb128 0x1e
 12700 0177 34       		.uleb128 0x34
 12701 0178 00       		.byte	0
 12702 0179 03       		.uleb128 0x3
 12703 017a 0E       		.uleb128 0xe
 12704 017b 3A       		.uleb128 0x3a
 12705 017c 0B       		.uleb128 0xb
 12706 017d 3B       		.uleb128 0x3b
 12707 017e 05       		.uleb128 0x5
 12708 017f 49       		.uleb128 0x49
 12709 0180 13       		.uleb128 0x13
 12710 0181 02       		.uleb128 0x2
 12711 0182 17       		.uleb128 0x17
 12712 0183 00       		.byte	0
 12713 0184 00       		.byte	0
 12714 0185 1F       		.uleb128 0x1f
 12715 0186 2E       		.uleb128 0x2e
 12716 0187 01       		.byte	0x1
 12717 0188 3F       		.uleb128 0x3f
 12718 0189 19       		.uleb128 0x19
 12719 018a 03       		.uleb128 0x3
 12720 018b 0E       		.uleb128 0xe
 12721 018c 3A       		.uleb128 0x3a
 12722 018d 0B       		.uleb128 0xb
 12723 018e 3B       		.uleb128 0x3b
 12724 018f 05       		.uleb128 0x5
 12725 0190 27       		.uleb128 0x27
 12726 0191 19       		.uleb128 0x19
 12727 0192 49       		.uleb128 0x49
 12728 0193 13       		.uleb128 0x13
 12729 0194 11       		.uleb128 0x11
 12730 0195 01       		.uleb128 0x1
 12731 0196 12       		.uleb128 0x12
 12732 0197 06       		.uleb128 0x6
 12733 0198 40       		.uleb128 0x40
 12734 0199 18       		.uleb128 0x18
 12735 019a 9742     		.uleb128 0x2117
 12736 019c 19       		.uleb128 0x19
 12737 019d 01       		.uleb128 0x1
 12738 019e 13       		.uleb128 0x13
 12739 019f 00       		.byte	0
 12740 01a0 00       		.byte	0
 12741 01a1 20       		.uleb128 0x20
 12742 01a2 34       		.uleb128 0x34
 12743 01a3 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 322


 12744 01a4 03       		.uleb128 0x3
 12745 01a5 0E       		.uleb128 0xe
 12746 01a6 3A       		.uleb128 0x3a
 12747 01a7 0B       		.uleb128 0xb
 12748 01a8 3B       		.uleb128 0x3b
 12749 01a9 05       		.uleb128 0x5
 12750 01aa 49       		.uleb128 0x49
 12751 01ab 13       		.uleb128 0x13
 12752 01ac 02       		.uleb128 0x2
 12753 01ad 18       		.uleb128 0x18
 12754 01ae 00       		.byte	0
 12755 01af 00       		.byte	0
 12756 01b0 21       		.uleb128 0x21
 12757 01b1 34       		.uleb128 0x34
 12758 01b2 00       		.byte	0
 12759 01b3 03       		.uleb128 0x3
 12760 01b4 0E       		.uleb128 0xe
 12761 01b5 3A       		.uleb128 0x3a
 12762 01b6 0B       		.uleb128 0xb
 12763 01b7 3B       		.uleb128 0x3b
 12764 01b8 05       		.uleb128 0x5
 12765 01b9 49       		.uleb128 0x49
 12766 01ba 13       		.uleb128 0x13
 12767 01bb 1C       		.uleb128 0x1c
 12768 01bc 0A       		.uleb128 0xa
 12769 01bd 00       		.byte	0
 12770 01be 00       		.byte	0
 12771 01bf 22       		.uleb128 0x22
 12772 01c0 2E       		.uleb128 0x2e
 12773 01c1 00       		.byte	0
 12774 01c2 3F       		.uleb128 0x3f
 12775 01c3 19       		.uleb128 0x19
 12776 01c4 3C       		.uleb128 0x3c
 12777 01c5 19       		.uleb128 0x19
 12778 01c6 6E       		.uleb128 0x6e
 12779 01c7 0E       		.uleb128 0xe
 12780 01c8 03       		.uleb128 0x3
 12781 01c9 0E       		.uleb128 0xe
 12782 01ca 3A       		.uleb128 0x3a
 12783 01cb 0B       		.uleb128 0xb
 12784 01cc 3B       		.uleb128 0x3b
 12785 01cd 0B       		.uleb128 0xb
 12786 01ce 00       		.byte	0
 12787 01cf 00       		.byte	0
 12788 01d0 23       		.uleb128 0x23
 12789 01d1 2E       		.uleb128 0x2e
 12790 01d2 00       		.byte	0
 12791 01d3 3F       		.uleb128 0x3f
 12792 01d4 19       		.uleb128 0x19
 12793 01d5 3C       		.uleb128 0x3c
 12794 01d6 19       		.uleb128 0x19
 12795 01d7 6E       		.uleb128 0x6e
 12796 01d8 0E       		.uleb128 0xe
 12797 01d9 03       		.uleb128 0x3
 12798 01da 0E       		.uleb128 0xe
 12799 01db 3A       		.uleb128 0x3a
 12800 01dc 0B       		.uleb128 0xb
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 323


 12801 01dd 3B       		.uleb128 0x3b
 12802 01de 05       		.uleb128 0x5
 12803 01df 00       		.byte	0
 12804 01e0 00       		.byte	0
 12805 01e1 00       		.byte	0
 12806              		.section	.debug_loc,"",%progbits
 12807              	.Ldebug_loc0:
 12808              	.LLST0:
 12809 0000 00000000 		.4byte	.LVL0
 12810 0004 04000000 		.4byte	.LVL2
 12811 0008 0100     		.2byte	0x1
 12812 000a 50       		.byte	0x50
 12813 000b 04000000 		.4byte	.LVL2
 12814 000f 0A000000 		.4byte	.LFE0
 12815 0013 0400     		.2byte	0x4
 12816 0015 F3       		.byte	0xf3
 12817 0016 01       		.uleb128 0x1
 12818 0017 50       		.byte	0x50
 12819 0018 9F       		.byte	0x9f
 12820 0019 00000000 		.4byte	0
 12821 001d 00000000 		.4byte	0
 12822              	.LLST1:
 12823 0021 02000000 		.4byte	.LVL1
 12824 0025 04000000 		.4byte	.LVL2
 12825 0029 0600     		.2byte	0x6
 12826 002b 72       		.byte	0x72
 12827 002c 00       		.sleb128 0
 12828 002d 08       		.byte	0x8
 12829 002e FF       		.byte	0xff
 12830 002f 1A       		.byte	0x1a
 12831 0030 9F       		.byte	0x9f
 12832 0031 04000000 		.4byte	.LVL2
 12833 0035 08000000 		.4byte	.LVL3
 12834 0039 0800     		.2byte	0x8
 12835 003b 72       		.byte	0x72
 12836 003c 00       		.sleb128 0
 12837 003d 38       		.byte	0x38
 12838 003e 24       		.byte	0x24
 12839 003f 70       		.byte	0x70
 12840 0040 00       		.sleb128 0
 12841 0041 21       		.byte	0x21
 12842 0042 9F       		.byte	0x9f
 12843 0043 08000000 		.4byte	.LVL3
 12844 0047 0A000000 		.4byte	.LFE0
 12845 004b 0E00     		.2byte	0xe
 12846 004d 72       		.byte	0x72
 12847 004e 00       		.sleb128 0
 12848 004f 38       		.byte	0x38
 12849 0050 24       		.byte	0x24
 12850 0051 F3       		.byte	0xf3
 12851 0052 01       		.uleb128 0x1
 12852 0053 50       		.byte	0x50
 12853 0054 94       		.byte	0x94
 12854 0055 01       		.byte	0x1
 12855 0056 08       		.byte	0x8
 12856 0057 FF       		.byte	0xff
 12857 0058 1A       		.byte	0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 324


 12858 0059 21       		.byte	0x21
 12859 005a 9F       		.byte	0x9f
 12860 005b 00000000 		.4byte	0
 12861 005f 00000000 		.4byte	0
 12862              	.LLST2:
 12863 0063 00000000 		.4byte	.LVL4
 12864 0067 10000000 		.4byte	.LVL8
 12865 006b 0100     		.2byte	0x1
 12866 006d 50       		.byte	0x50
 12867 006e 10000000 		.4byte	.LVL8
 12868 0072 16000000 		.4byte	.LFE1
 12869 0076 0400     		.2byte	0x4
 12870 0078 F3       		.byte	0xf3
 12871 0079 01       		.uleb128 0x1
 12872 007a 50       		.byte	0x50
 12873 007b 9F       		.byte	0x9f
 12874 007c 00000000 		.4byte	0
 12875 0080 00000000 		.4byte	0
 12876              	.LLST3:
 12877 0084 02000000 		.4byte	.LVL5
 12878 0088 0E000000 		.4byte	.LVL7
 12879 008c 0100     		.2byte	0x1
 12880 008e 52       		.byte	0x52
 12881 008f 0E000000 		.4byte	.LVL7
 12882 0093 10000000 		.4byte	.LVL8
 12883 0097 0100     		.2byte	0x1
 12884 0099 53       		.byte	0x53
 12885 009a 10000000 		.4byte	.LVL8
 12886 009e 14000000 		.4byte	.LVL9
 12887 00a2 0800     		.2byte	0x8
 12888 00a4 73       		.byte	0x73
 12889 00a5 00       		.sleb128 0
 12890 00a6 38       		.byte	0x38
 12891 00a7 24       		.byte	0x24
 12892 00a8 70       		.byte	0x70
 12893 00a9 00       		.sleb128 0
 12894 00aa 21       		.byte	0x21
 12895 00ab 9F       		.byte	0x9f
 12896 00ac 14000000 		.4byte	.LVL9
 12897 00b0 16000000 		.4byte	.LFE1
 12898 00b4 0100     		.2byte	0x1
 12899 00b6 50       		.byte	0x50
 12900 00b7 00000000 		.4byte	0
 12901 00bb 00000000 		.4byte	0
 12902              	.LLST4:
 12903 00bf 00000000 		.4byte	.LVL10
 12904 00c3 00000000 		.4byte	.LVL10
 12905 00c7 0100     		.2byte	0x1
 12906 00c9 50       		.byte	0x50
 12907 00ca 00000000 		.4byte	.LVL10
 12908 00ce 02000000 		.4byte	.LVL11
 12909 00d2 0300     		.2byte	0x3
 12910 00d4 70       		.byte	0x70
 12911 00d5 01       		.sleb128 1
 12912 00d6 9F       		.byte	0x9f
 12913 00d7 02000000 		.4byte	.LVL11
 12914 00db 08000000 		.4byte	.LFE2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 325


 12915 00df 0300     		.2byte	0x3
 12916 00e1 70       		.byte	0x70
 12917 00e2 02       		.sleb128 2
 12918 00e3 9F       		.byte	0x9f
 12919 00e4 00000000 		.4byte	0
 12920 00e8 00000000 		.4byte	0
 12921              	.LLST5:
 12922 00ec 00000000 		.4byte	.LVL10
 12923 00f0 02000000 		.4byte	.LVL11
 12924 00f4 0100     		.2byte	0x1
 12925 00f6 51       		.byte	0x51
 12926 00f7 02000000 		.4byte	.LVL11
 12927 00fb 04000000 		.4byte	.LVL12
 12928 00ff 0500     		.2byte	0x5
 12929 0101 71       		.byte	0x71
 12930 0102 00       		.sleb128 0
 12931 0103 38       		.byte	0x38
 12932 0104 25       		.byte	0x25
 12933 0105 9F       		.byte	0x9f
 12934 0106 00000000 		.4byte	0
 12935 010a 00000000 		.4byte	0
 12936              	.LLST6:
 12937 010e 00000000 		.4byte	.LVL13
 12938 0112 00000000 		.4byte	.LVL13
 12939 0116 0100     		.2byte	0x1
 12940 0118 50       		.byte	0x50
 12941 0119 00000000 		.4byte	.LVL13
 12942 011d 02000000 		.4byte	.LVL14
 12943 0121 0300     		.2byte	0x3
 12944 0123 70       		.byte	0x70
 12945 0124 01       		.sleb128 1
 12946 0125 9F       		.byte	0x9f
 12947 0126 02000000 		.4byte	.LVL14
 12948 012a 08000000 		.4byte	.LVL15
 12949 012e 0300     		.2byte	0x3
 12950 0130 70       		.byte	0x70
 12951 0131 02       		.sleb128 2
 12952 0132 9F       		.byte	0x9f
 12953 0133 08000000 		.4byte	.LVL15
 12954 0137 0E000000 		.4byte	.LVL16
 12955 013b 0300     		.2byte	0x3
 12956 013d 70       		.byte	0x70
 12957 013e 03       		.sleb128 3
 12958 013f 9F       		.byte	0x9f
 12959 0140 0E000000 		.4byte	.LVL16
 12960 0144 14000000 		.4byte	.LFE3
 12961 0148 0300     		.2byte	0x3
 12962 014a 70       		.byte	0x70
 12963 014b 04       		.sleb128 4
 12964 014c 9F       		.byte	0x9f
 12965 014d 00000000 		.4byte	0
 12966 0151 00000000 		.4byte	0
 12967              	.LLST7:
 12968 0155 00000000 		.4byte	.LVL13
 12969 0159 02000000 		.4byte	.LVL14
 12970 015d 0100     		.2byte	0x1
 12971 015f 51       		.byte	0x51
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 326


 12972 0160 02000000 		.4byte	.LVL14
 12973 0164 08000000 		.4byte	.LVL15
 12974 0168 0500     		.2byte	0x5
 12975 016a 71       		.byte	0x71
 12976 016b 00       		.sleb128 0
 12977 016c 38       		.byte	0x38
 12978 016d 25       		.byte	0x25
 12979 016e 9F       		.byte	0x9f
 12980 016f 08000000 		.4byte	.LVL15
 12981 0173 0E000000 		.4byte	.LVL16
 12982 0177 0500     		.2byte	0x5
 12983 0179 71       		.byte	0x71
 12984 017a 00       		.sleb128 0
 12985 017b 40       		.byte	0x40
 12986 017c 25       		.byte	0x25
 12987 017d 9F       		.byte	0x9f
 12988 017e 0E000000 		.4byte	.LVL16
 12989 0182 10000000 		.4byte	.LVL17
 12990 0186 0500     		.2byte	0x5
 12991 0188 71       		.byte	0x71
 12992 0189 00       		.sleb128 0
 12993 018a 48       		.byte	0x48
 12994 018b 25       		.byte	0x25
 12995 018c 9F       		.byte	0x9f
 12996 018d 10000000 		.4byte	.LVL17
 12997 0191 14000000 		.4byte	.LFE3
 12998 0195 0100     		.2byte	0x1
 12999 0197 51       		.byte	0x51
 13000 0198 00000000 		.4byte	0
 13001 019c 00000000 		.4byte	0
 13002              	.LLST8:
 13003 01a0 00000000 		.4byte	.LVL18
 13004 01a4 04000000 		.4byte	.LVL19
 13005 01a8 0100     		.2byte	0x1
 13006 01aa 50       		.byte	0x50
 13007 01ab 04000000 		.4byte	.LVL19
 13008 01af 12000000 		.4byte	.LFE4
 13009 01b3 0400     		.2byte	0x4
 13010 01b5 F3       		.byte	0xf3
 13011 01b6 01       		.uleb128 0x1
 13012 01b7 50       		.byte	0x50
 13013 01b8 9F       		.byte	0x9f
 13014 01b9 00000000 		.4byte	0
 13015 01bd 00000000 		.4byte	0
 13016              	.LLST9:
 13017 01c1 00000000 		.4byte	.LVL18
 13018 01c5 04000000 		.4byte	.LVL19
 13019 01c9 0100     		.2byte	0x1
 13020 01cb 51       		.byte	0x51
 13021 01cc 04000000 		.4byte	.LVL19
 13022 01d0 12000000 		.4byte	.LFE4
 13023 01d4 0400     		.2byte	0x4
 13024 01d6 F3       		.byte	0xf3
 13025 01d7 01       		.uleb128 0x1
 13026 01d8 51       		.byte	0x51
 13027 01d9 9F       		.byte	0x9f
 13028 01da 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 327


 13029 01de 00000000 		.4byte	0
 13030              	.LLST10:
 13031 01e2 00000000 		.4byte	.LVL18
 13032 01e6 04000000 		.4byte	.LVL19
 13033 01ea 0100     		.2byte	0x1
 13034 01ec 52       		.byte	0x52
 13035 01ed 04000000 		.4byte	.LVL19
 13036 01f1 08000000 		.4byte	.LVL20
 13037 01f5 0100     		.2byte	0x1
 13038 01f7 53       		.byte	0x53
 13039 01f8 08000000 		.4byte	.LVL20
 13040 01fc 0E000000 		.4byte	.LVL23
 13041 0200 0300     		.2byte	0x3
 13042 0202 73       		.byte	0x73
 13043 0203 7F       		.sleb128 -1
 13044 0204 9F       		.byte	0x9f
 13045 0205 0E000000 		.4byte	.LVL23
 13046 0209 12000000 		.4byte	.LFE4
 13047 020d 0100     		.2byte	0x1
 13048 020f 53       		.byte	0x53
 13049 0210 00000000 		.4byte	0
 13050 0214 00000000 		.4byte	0
 13051              	.LLST11:
 13052 0218 00000000 		.4byte	.LVL18
 13053 021c 04000000 		.4byte	.LVL19
 13054 0220 0100     		.2byte	0x1
 13055 0222 50       		.byte	0x50
 13056 0223 04000000 		.4byte	.LVL19
 13057 0227 0A000000 		.4byte	.LVL21
 13058 022b 0300     		.2byte	0x3
 13059 022d 70       		.byte	0x70
 13060 022e 01       		.sleb128 1
 13061 022f 9F       		.byte	0x9f
 13062 0230 0A000000 		.4byte	.LVL21
 13063 0234 12000000 		.4byte	.LFE4
 13064 0238 0100     		.2byte	0x1
 13065 023a 50       		.byte	0x50
 13066 023b 00000000 		.4byte	0
 13067 023f 00000000 		.4byte	0
 13068              	.LLST12:
 13069 0243 00000000 		.4byte	.LVL18
 13070 0247 04000000 		.4byte	.LVL19
 13071 024b 0100     		.2byte	0x1
 13072 024d 51       		.byte	0x51
 13073 024e 04000000 		.4byte	.LVL19
 13074 0252 0C000000 		.4byte	.LVL22
 13075 0256 0300     		.2byte	0x3
 13076 0258 71       		.byte	0x71
 13077 0259 01       		.sleb128 1
 13078 025a 9F       		.byte	0x9f
 13079 025b 0C000000 		.4byte	.LVL22
 13080 025f 12000000 		.4byte	.LFE4
 13081 0263 0100     		.2byte	0x1
 13082 0265 51       		.byte	0x51
 13083 0266 00000000 		.4byte	0
 13084 026a 00000000 		.4byte	0
 13085              	.LLST13:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 328


 13086 026e 00000000 		.4byte	.LVL24
 13087 0272 00000000 		.4byte	.LVL24
 13088 0276 0100     		.2byte	0x1
 13089 0278 52       		.byte	0x52
 13090 0279 00000000 		.4byte	.LVL24
 13091 027d 02000000 		.4byte	.LVL25
 13092 0281 0400     		.2byte	0x4
 13093 0283 F3       		.byte	0xf3
 13094 0284 01       		.uleb128 0x1
 13095 0285 52       		.byte	0x52
 13096 0286 9F       		.byte	0x9f
 13097 0287 02000000 		.4byte	.LVL25
 13098 028b 06000000 		.4byte	.LVL27
 13099 028f 0600     		.2byte	0x6
 13100 0291 F3       		.byte	0xf3
 13101 0292 01       		.uleb128 0x1
 13102 0293 52       		.byte	0x52
 13103 0294 31       		.byte	0x31
 13104 0295 1C       		.byte	0x1c
 13105 0296 9F       		.byte	0x9f
 13106 0297 06000000 		.4byte	.LVL27
 13107 029b 0A000000 		.4byte	.LFE5
 13108 029f 0100     		.2byte	0x1
 13109 02a1 52       		.byte	0x52
 13110 02a2 00000000 		.4byte	0
 13111 02a6 00000000 		.4byte	0
 13112              	.LLST14:
 13113 02aa 00000000 		.4byte	.LVL24
 13114 02ae 04000000 		.4byte	.LVL26
 13115 02b2 0600     		.2byte	0x6
 13116 02b4 F3       		.byte	0xf3
 13117 02b5 01       		.uleb128 0x1
 13118 02b6 50       		.byte	0x50
 13119 02b7 23       		.byte	0x23
 13120 02b8 01       		.uleb128 0x1
 13121 02b9 9F       		.byte	0x9f
 13122 02ba 04000000 		.4byte	.LVL26
 13123 02be 0A000000 		.4byte	.LFE5
 13124 02c2 0100     		.2byte	0x1
 13125 02c4 50       		.byte	0x50
 13126 02c5 00000000 		.4byte	0
 13127 02c9 00000000 		.4byte	0
 13128              	.LLST15:
 13129 02cd 00000000 		.4byte	.LVL28
 13130 02d1 02000000 		.4byte	.LVL29
 13131 02d5 0100     		.2byte	0x1
 13132 02d7 50       		.byte	0x50
 13133 02d8 02000000 		.4byte	.LVL29
 13134 02dc 1E000000 		.4byte	.LFE6
 13135 02e0 0400     		.2byte	0x4
 13136 02e2 F3       		.byte	0xf3
 13137 02e3 01       		.uleb128 0x1
 13138 02e4 50       		.byte	0x50
 13139 02e5 9F       		.byte	0x9f
 13140 02e6 00000000 		.4byte	0
 13141 02ea 00000000 		.4byte	0
 13142              	.LLST16:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 329


 13143 02ee 00000000 		.4byte	.LVL28
 13144 02f2 02000000 		.4byte	.LVL29
 13145 02f6 0100     		.2byte	0x1
 13146 02f8 51       		.byte	0x51
 13147 02f9 02000000 		.4byte	.LVL29
 13148 02fd 1E000000 		.4byte	.LFE6
 13149 0301 0400     		.2byte	0x4
 13150 0303 F3       		.byte	0xf3
 13151 0304 01       		.uleb128 0x1
 13152 0305 51       		.byte	0x51
 13153 0306 9F       		.byte	0x9f
 13154 0307 00000000 		.4byte	0
 13155 030b 00000000 		.4byte	0
 13156              	.LLST17:
 13157 030f 00000000 		.4byte	.LVL28
 13158 0313 0A000000 		.4byte	.LVL32
 13159 0317 0100     		.2byte	0x1
 13160 0319 52       		.byte	0x52
 13161 031a 0A000000 		.4byte	.LVL32
 13162 031e 0C000000 		.4byte	.LVL33
 13163 0322 0300     		.2byte	0x3
 13164 0324 72       		.byte	0x72
 13165 0325 7F       		.sleb128 -1
 13166 0326 9F       		.byte	0x9f
 13167 0327 0C000000 		.4byte	.LVL33
 13168 032b 1E000000 		.4byte	.LFE6
 13169 032f 0100     		.2byte	0x1
 13170 0331 52       		.byte	0x52
 13171 0332 00000000 		.4byte	0
 13172 0336 00000000 		.4byte	0
 13173              	.LLST18:
 13174 033a 02000000 		.4byte	.LVL29
 13175 033e 04000000 		.4byte	.LVL30
 13176 0342 0100     		.2byte	0x1
 13177 0344 50       		.byte	0x50
 13178 0345 04000000 		.4byte	.LVL30
 13179 0349 1C000000 		.4byte	.LVL36
 13180 034d 0100     		.2byte	0x1
 13181 034f 55       		.byte	0x55
 13182 0350 00000000 		.4byte	0
 13183 0354 00000000 		.4byte	0
 13184              	.LLST19:
 13185 0358 02000000 		.4byte	.LVL29
 13186 035c 06000000 		.4byte	.LVL31
 13187 0360 0100     		.2byte	0x1
 13188 0362 51       		.byte	0x51
 13189 0363 06000000 		.4byte	.LVL31
 13190 0367 10000000 		.4byte	.LVL34
 13191 036b 0300     		.2byte	0x3
 13192 036d 71       		.byte	0x71
 13193 036e 01       		.sleb128 1
 13194 036f 9F       		.byte	0x9f
 13195 0370 10000000 		.4byte	.LVL34
 13196 0374 18000000 		.4byte	.LVL35
 13197 0378 0100     		.2byte	0x1
 13198 037a 54       		.byte	0x54
 13199 037b 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 330


 13200 037f 00000000 		.4byte	0
 13201              	.LLST20:
 13202 0383 00000000 		.4byte	.LVL37
 13203 0387 04000000 		.4byte	.LVL38
 13204 038b 0100     		.2byte	0x1
 13205 038d 50       		.byte	0x50
 13206 038e 04000000 		.4byte	.LVL38
 13207 0392 0E000000 		.4byte	.LVL39
 13208 0396 0100     		.2byte	0x1
 13209 0398 50       		.byte	0x50
 13210 0399 00000000 		.4byte	0
 13211 039d 00000000 		.4byte	0
 13212              	.LLST21:
 13213 03a1 00000000 		.4byte	.LVL40
 13214 03a5 12000000 		.4byte	.LVL41
 13215 03a9 0100     		.2byte	0x1
 13216 03ab 50       		.byte	0x50
 13217 03ac 12000000 		.4byte	.LVL41
 13218 03b0 14000000 		.4byte	.LVL42
 13219 03b4 0400     		.2byte	0x4
 13220 03b6 F3       		.byte	0xf3
 13221 03b7 01       		.uleb128 0x1
 13222 03b8 50       		.byte	0x50
 13223 03b9 9F       		.byte	0x9f
 13224 03ba 14000000 		.4byte	.LVL42
 13225 03be 16000000 		.4byte	.LVL43
 13226 03c2 0100     		.2byte	0x1
 13227 03c4 50       		.byte	0x50
 13228 03c5 16000000 		.4byte	.LVL43
 13229 03c9 18000000 		.4byte	.LVL44
 13230 03cd 0400     		.2byte	0x4
 13231 03cf F3       		.byte	0xf3
 13232 03d0 01       		.uleb128 0x1
 13233 03d1 50       		.byte	0x50
 13234 03d2 9F       		.byte	0x9f
 13235 03d3 18000000 		.4byte	.LVL44
 13236 03d7 1A000000 		.4byte	.LVL45
 13237 03db 0100     		.2byte	0x1
 13238 03dd 50       		.byte	0x50
 13239 03de 1A000000 		.4byte	.LVL45
 13240 03e2 1C000000 		.4byte	.LVL46
 13241 03e6 0400     		.2byte	0x4
 13242 03e8 F3       		.byte	0xf3
 13243 03e9 01       		.uleb128 0x1
 13244 03ea 50       		.byte	0x50
 13245 03eb 9F       		.byte	0x9f
 13246 03ec 1C000000 		.4byte	.LVL46
 13247 03f0 1E000000 		.4byte	.LVL47
 13248 03f4 0100     		.2byte	0x1
 13249 03f6 50       		.byte	0x50
 13250 03f7 1E000000 		.4byte	.LVL47
 13251 03fb 20000000 		.4byte	.LVL48
 13252 03ff 0400     		.2byte	0x4
 13253 0401 F3       		.byte	0xf3
 13254 0402 01       		.uleb128 0x1
 13255 0403 50       		.byte	0x50
 13256 0404 9F       		.byte	0x9f
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 331


 13257 0405 20000000 		.4byte	.LVL48
 13258 0409 22000000 		.4byte	.LVL49
 13259 040d 0100     		.2byte	0x1
 13260 040f 50       		.byte	0x50
 13261 0410 22000000 		.4byte	.LVL49
 13262 0414 24000000 		.4byte	.LFE8
 13263 0418 0400     		.2byte	0x4
 13264 041a F3       		.byte	0xf3
 13265 041b 01       		.uleb128 0x1
 13266 041c 50       		.byte	0x50
 13267 041d 9F       		.byte	0x9f
 13268 041e 00000000 		.4byte	0
 13269 0422 00000000 		.4byte	0
 13270              	.LLST22:
 13271 0426 00000000 		.4byte	.LVL50
 13272 042a 14000000 		.4byte	.LVL51
 13273 042e 0100     		.2byte	0x1
 13274 0430 50       		.byte	0x50
 13275 0431 14000000 		.4byte	.LVL51
 13276 0435 16000000 		.4byte	.LVL52
 13277 0439 0400     		.2byte	0x4
 13278 043b F3       		.byte	0xf3
 13279 043c 01       		.uleb128 0x1
 13280 043d 50       		.byte	0x50
 13281 043e 9F       		.byte	0x9f
 13282 043f 16000000 		.4byte	.LVL52
 13283 0443 18000000 		.4byte	.LVL53
 13284 0447 0100     		.2byte	0x1
 13285 0449 50       		.byte	0x50
 13286 044a 18000000 		.4byte	.LVL53
 13287 044e 1A000000 		.4byte	.LVL54
 13288 0452 0400     		.2byte	0x4
 13289 0454 F3       		.byte	0xf3
 13290 0455 01       		.uleb128 0x1
 13291 0456 50       		.byte	0x50
 13292 0457 9F       		.byte	0x9f
 13293 0458 1A000000 		.4byte	.LVL54
 13294 045c 1C000000 		.4byte	.LVL55
 13295 0460 0100     		.2byte	0x1
 13296 0462 50       		.byte	0x50
 13297 0463 1C000000 		.4byte	.LVL55
 13298 0467 1E000000 		.4byte	.LVL56
 13299 046b 0400     		.2byte	0x4
 13300 046d F3       		.byte	0xf3
 13301 046e 01       		.uleb128 0x1
 13302 046f 50       		.byte	0x50
 13303 0470 9F       		.byte	0x9f
 13304 0471 1E000000 		.4byte	.LVL56
 13305 0475 20000000 		.4byte	.LVL57
 13306 0479 0100     		.2byte	0x1
 13307 047b 50       		.byte	0x50
 13308 047c 20000000 		.4byte	.LVL57
 13309 0480 22000000 		.4byte	.LVL58
 13310 0484 0400     		.2byte	0x4
 13311 0486 F3       		.byte	0xf3
 13312 0487 01       		.uleb128 0x1
 13313 0488 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 332


 13314 0489 9F       		.byte	0x9f
 13315 048a 22000000 		.4byte	.LVL58
 13316 048e 24000000 		.4byte	.LVL59
 13317 0492 0100     		.2byte	0x1
 13318 0494 50       		.byte	0x50
 13319 0495 24000000 		.4byte	.LVL59
 13320 0499 26000000 		.4byte	.LFE9
 13321 049d 0400     		.2byte	0x4
 13322 049f F3       		.byte	0xf3
 13323 04a0 01       		.uleb128 0x1
 13324 04a1 50       		.byte	0x50
 13325 04a2 9F       		.byte	0x9f
 13326 04a3 00000000 		.4byte	0
 13327 04a7 00000000 		.4byte	0
 13328              	.LLST23:
 13329 04ab 00000000 		.4byte	.LVL60
 13330 04af 12000000 		.4byte	.LVL62
 13331 04b3 0100     		.2byte	0x1
 13332 04b5 50       		.byte	0x50
 13333 04b6 12000000 		.4byte	.LVL62
 13334 04ba 14000000 		.4byte	.LVL63
 13335 04be 0400     		.2byte	0x4
 13336 04c0 F3       		.byte	0xf3
 13337 04c1 01       		.uleb128 0x1
 13338 04c2 50       		.byte	0x50
 13339 04c3 9F       		.byte	0x9f
 13340 04c4 14000000 		.4byte	.LVL63
 13341 04c8 16000000 		.4byte	.LVL64
 13342 04cc 0100     		.2byte	0x1
 13343 04ce 50       		.byte	0x50
 13344 04cf 16000000 		.4byte	.LVL64
 13345 04d3 18000000 		.4byte	.LFE13
 13346 04d7 0400     		.2byte	0x4
 13347 04d9 F3       		.byte	0xf3
 13348 04da 01       		.uleb128 0x1
 13349 04db 50       		.byte	0x50
 13350 04dc 9F       		.byte	0x9f
 13351 04dd 00000000 		.4byte	0
 13352 04e1 00000000 		.4byte	0
 13353              	.LLST24:
 13354 04e5 00000000 		.4byte	.LVL60
 13355 04e9 02000000 		.4byte	.LVL61
 13356 04ed 0100     		.2byte	0x1
 13357 04ef 51       		.byte	0x51
 13358 04f0 02000000 		.4byte	.LVL61
 13359 04f4 18000000 		.4byte	.LFE13
 13360 04f8 0100     		.2byte	0x1
 13361 04fa 51       		.byte	0x51
 13362 04fb 00000000 		.4byte	0
 13363 04ff 00000000 		.4byte	0
 13364              	.LLST25:
 13365 0503 00000000 		.4byte	.LVL65
 13366 0507 0A000000 		.4byte	.LVL66
 13367 050b 0100     		.2byte	0x1
 13368 050d 50       		.byte	0x50
 13369 050e 0A000000 		.4byte	.LVL66
 13370 0512 24000000 		.4byte	.LFE22
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 333


 13371 0516 0100     		.2byte	0x1
 13372 0518 56       		.byte	0x56
 13373 0519 00000000 		.4byte	0
 13374 051d 00000000 		.4byte	0
 13375              	.LLST26:
 13376 0521 00000000 		.4byte	.LVL65
 13377 0525 0D000000 		.4byte	.LVL67-1
 13378 0529 0100     		.2byte	0x1
 13379 052b 51       		.byte	0x51
 13380 052c 0D000000 		.4byte	.LVL67-1
 13381 0530 24000000 		.4byte	.LFE22
 13382 0534 0100     		.2byte	0x1
 13383 0536 55       		.byte	0x55
 13384 0537 00000000 		.4byte	0
 13385 053b 00000000 		.4byte	0
 13386              	.LLST27:
 13387 053f 10000000 		.4byte	.LVL68
 13388 0543 1A000000 		.4byte	.LVL69
 13389 0547 0100     		.2byte	0x1
 13390 0549 50       		.byte	0x50
 13391 054a 1A000000 		.4byte	.LVL69
 13392 054e 22000000 		.4byte	.LVL71
 13393 0552 0100     		.2byte	0x1
 13394 0554 54       		.byte	0x54
 13395 0555 22000000 		.4byte	.LVL71
 13396 0559 24000000 		.4byte	.LFE22
 13397 055d 0100     		.2byte	0x1
 13398 055f 50       		.byte	0x50
 13399 0560 00000000 		.4byte	0
 13400 0564 00000000 		.4byte	0
 13401              	.LLST28:
 13402 0568 00000000 		.4byte	.LVL72
 13403 056c 0E000000 		.4byte	.LVL74
 13404 0570 0100     		.2byte	0x1
 13405 0572 50       		.byte	0x50
 13406 0573 0E000000 		.4byte	.LVL74
 13407 0577 24000000 		.4byte	.LFE23
 13408 057b 0100     		.2byte	0x1
 13409 057d 56       		.byte	0x56
 13410 057e 00000000 		.4byte	0
 13411 0582 00000000 		.4byte	0
 13412              	.LLST29:
 13413 0586 00000000 		.4byte	.LVL72
 13414 058a 0A000000 		.4byte	.LVL73
 13415 058e 0100     		.2byte	0x1
 13416 0590 51       		.byte	0x51
 13417 0591 0A000000 		.4byte	.LVL73
 13418 0595 24000000 		.4byte	.LFE23
 13419 0599 0100     		.2byte	0x1
 13420 059b 54       		.byte	0x54
 13421 059c 00000000 		.4byte	0
 13422 05a0 00000000 		.4byte	0
 13423              	.LLST30:
 13424 05a4 00000000 		.4byte	.LVL72
 13425 05a8 11000000 		.4byte	.LVL75-1
 13426 05ac 0100     		.2byte	0x1
 13427 05ae 52       		.byte	0x52
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 334


 13428 05af 11000000 		.4byte	.LVL75-1
 13429 05b3 24000000 		.4byte	.LFE23
 13430 05b7 0100     		.2byte	0x1
 13431 05b9 55       		.byte	0x55
 13432 05ba 00000000 		.4byte	0
 13433 05be 00000000 		.4byte	0
 13434              	.LLST31:
 13435 05c2 00000000 		.4byte	.LVL77
 13436 05c6 4A000000 		.4byte	.LVL88
 13437 05ca 0100     		.2byte	0x1
 13438 05cc 50       		.byte	0x50
 13439 05cd 4A000000 		.4byte	.LVL88
 13440 05d1 68000000 		.4byte	.LVL92
 13441 05d5 0100     		.2byte	0x1
 13442 05d7 55       		.byte	0x55
 13443 05d8 68000000 		.4byte	.LVL92
 13444 05dc 6A000000 		.4byte	.LFE28
 13445 05e0 0100     		.2byte	0x1
 13446 05e2 50       		.byte	0x50
 13447 05e3 00000000 		.4byte	0
 13448 05e7 00000000 		.4byte	0
 13449              	.LLST32:
 13450 05eb 00000000 		.4byte	.LVL77
 13451 05ef 4F000000 		.4byte	.LVL89-1
 13452 05f3 0100     		.2byte	0x1
 13453 05f5 51       		.byte	0x51
 13454 05f6 4F000000 		.4byte	.LVL89-1
 13455 05fa 68000000 		.4byte	.LVL92
 13456 05fe 0100     		.2byte	0x1
 13457 0600 56       		.byte	0x56
 13458 0601 68000000 		.4byte	.LVL92
 13459 0605 6A000000 		.4byte	.LFE28
 13460 0609 0100     		.2byte	0x1
 13461 060b 51       		.byte	0x51
 13462 060c 00000000 		.4byte	0
 13463 0610 00000000 		.4byte	0
 13464              	.LLST33:
 13465 0614 10000000 		.4byte	.LVL78
 13466 0618 14000000 		.4byte	.LVL79
 13467 061c 0100     		.2byte	0x1
 13468 061e 53       		.byte	0x53
 13469 061f 14000000 		.4byte	.LVL79
 13470 0623 34000000 		.4byte	.LVL85
 13471 0627 0100     		.2byte	0x1
 13472 0629 52       		.byte	0x52
 13473 062a 34000000 		.4byte	.LVL85
 13474 062e 40000000 		.4byte	.LVL87
 13475 0632 0100     		.2byte	0x1
 13476 0634 53       		.byte	0x53
 13477 0635 00000000 		.4byte	0
 13478 0639 00000000 		.4byte	0
 13479              	.LLST34:
 13480 063d 10000000 		.4byte	.LVL78
 13481 0641 24000000 		.4byte	.LVL82
 13482 0645 0100     		.2byte	0x1
 13483 0647 54       		.byte	0x54
 13484 0648 24000000 		.4byte	.LVL82
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 335


 13485 064c 32000000 		.4byte	.LVL84
 13486 0650 0300     		.2byte	0x3
 13487 0652 74       		.byte	0x74
 13488 0653 01       		.sleb128 1
 13489 0654 9F       		.byte	0x9f
 13490 0655 32000000 		.4byte	.LVL84
 13491 0659 3E000000 		.4byte	.LVL86
 13492 065d 0100     		.2byte	0x1
 13493 065f 54       		.byte	0x54
 13494 0660 00000000 		.4byte	0
 13495 0664 00000000 		.4byte	0
 13496              	.LLST35:
 13497 0668 16000000 		.4byte	.LVL80
 13498 066c 34000000 		.4byte	.LVL85
 13499 0670 0100     		.2byte	0x1
 13500 0672 53       		.byte	0x53
 13501 0673 00000000 		.4byte	0
 13502 0677 00000000 		.4byte	0
 13503              	.LLST36:
 13504 067b 00000000 		.4byte	.LVL93
 13505 067f 18000000 		.4byte	.LVL97
 13506 0683 0100     		.2byte	0x1
 13507 0685 50       		.byte	0x50
 13508 0686 18000000 		.4byte	.LVL97
 13509 068a FC000000 		.4byte	.LVL123
 13510 068e 0200     		.2byte	0x2
 13511 0690 91       		.byte	0x91
 13512 0691 54       		.sleb128 -44
 13513 0692 FC000000 		.4byte	.LVL123
 13514 0696 00010000 		.4byte	.LFE29
 13515 069a 0200     		.2byte	0x2
 13516 069c 7D       		.byte	0x7d
 13517 069d 54       		.sleb128 -44
 13518 069e 00000000 		.4byte	0
 13519 06a2 00000000 		.4byte	0
 13520              	.LLST37:
 13521 06a6 00000000 		.4byte	.LVL93
 13522 06aa 16000000 		.4byte	.LVL96
 13523 06ae 0100     		.2byte	0x1
 13524 06b0 51       		.byte	0x51
 13525 06b1 16000000 		.4byte	.LVL96
 13526 06b5 FC000000 		.4byte	.LVL123
 13527 06b9 0100     		.2byte	0x1
 13528 06bb 5B       		.byte	0x5b
 13529 06bc FC000000 		.4byte	.LVL123
 13530 06c0 00010000 		.4byte	.LFE29
 13531 06c4 0400     		.2byte	0x4
 13532 06c6 F3       		.byte	0xf3
 13533 06c7 01       		.uleb128 0x1
 13534 06c8 51       		.byte	0x51
 13535 06c9 9F       		.byte	0x9f
 13536 06ca 00000000 		.4byte	0
 13537 06ce 00000000 		.4byte	0
 13538              	.LLST38:
 13539 06d2 2A000000 		.4byte	.LVL101
 13540 06d6 A6000000 		.4byte	.LVL115
 13541 06da 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 336


 13542 06dc 54       		.byte	0x54
 13543 06dd A6000000 		.4byte	.LVL115
 13544 06e1 A8000000 		.4byte	.LVL116
 13545 06e5 0300     		.2byte	0x3
 13546 06e7 74       		.byte	0x74
 13547 06e8 20       		.sleb128 32
 13548 06e9 9F       		.byte	0x9f
 13549 06ea A8000000 		.4byte	.LVL116
 13550 06ee FC000000 		.4byte	.LVL123
 13551 06f2 0100     		.2byte	0x1
 13552 06f4 54       		.byte	0x54
 13553 06f5 00000000 		.4byte	0
 13554 06f9 00000000 		.4byte	0
 13555              	.LLST39:
 13556 06fd 72000000 		.4byte	.LVL108
 13557 0701 90000000 		.4byte	.LVL113
 13558 0705 0100     		.2byte	0x1
 13559 0707 56       		.byte	0x56
 13560 0708 E8000000 		.4byte	.LVL120
 13561 070c F0000000 		.4byte	.LVL121
 13562 0710 0100     		.2byte	0x1
 13563 0712 56       		.byte	0x56
 13564 0713 00000000 		.4byte	0
 13565 0717 00000000 		.4byte	0
 13566              	.LLST40:
 13567 071b 12000000 		.4byte	.LVL95
 13568 071f FC000000 		.4byte	.LVL123
 13569 0723 0100     		.2byte	0x1
 13570 0725 5A       		.byte	0x5a
 13571 0726 FC000000 		.4byte	.LVL123
 13572 072a 00010000 		.4byte	.LFE29
 13573 072e 0600     		.2byte	0x6
 13574 0730 7D       		.byte	0x7d
 13575 0731 54       		.sleb128 -44
 13576 0732 06       		.byte	0x6
 13577 0733 23       		.byte	0x23
 13578 0734 20       		.uleb128 0x20
 13579 0735 9F       		.byte	0x9f
 13580 0736 00000000 		.4byte	0
 13581 073a 00000000 		.4byte	0
 13582              	.LLST41:
 13583 073e 1C000000 		.4byte	.LVL98
 13584 0742 24000000 		.4byte	.LVL99
 13585 0746 0200     		.2byte	0x2
 13586 0748 38       		.byte	0x38
 13587 0749 9F       		.byte	0x9f
 13588 074a 24000000 		.4byte	.LVL99
 13589 074e 62000000 		.4byte	.LVL104
 13590 0752 0100     		.2byte	0x1
 13591 0754 59       		.byte	0x59
 13592 0755 64000000 		.4byte	.LVL105
 13593 0759 FC000000 		.4byte	.LVL123
 13594 075d 0100     		.2byte	0x1
 13595 075f 59       		.byte	0x59
 13596 0760 00000000 		.4byte	0
 13597 0764 00000000 		.4byte	0
 13598              	.LLST42:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 337


 13599 0768 1C000000 		.4byte	.LVL98
 13600 076c 24000000 		.4byte	.LVL99
 13601 0770 0200     		.2byte	0x2
 13602 0772 30       		.byte	0x30
 13603 0773 9F       		.byte	0x9f
 13604 0774 24000000 		.4byte	.LVL99
 13605 0778 26000000 		.4byte	.LVL100
 13606 077c 0100     		.2byte	0x1
 13607 077e 57       		.byte	0x57
 13608 077f 26000000 		.4byte	.LVL100
 13609 0783 6E000000 		.4byte	.LVL107
 13610 0787 0100     		.2byte	0x1
 13611 0789 56       		.byte	0x56
 13612 078a 6E000000 		.4byte	.LVL107
 13613 078e 90000000 		.4byte	.LVL113
 13614 0792 0100     		.2byte	0x1
 13615 0794 57       		.byte	0x57
 13616 0795 90000000 		.4byte	.LVL113
 13617 0799 B4000000 		.4byte	.LVL118
 13618 079d 0100     		.2byte	0x1
 13619 079f 56       		.byte	0x56
 13620 07a0 E0000000 		.4byte	.LVL119
 13621 07a4 E8000000 		.4byte	.LVL120
 13622 07a8 0100     		.2byte	0x1
 13623 07aa 56       		.byte	0x56
 13624 07ab E8000000 		.4byte	.LVL120
 13625 07af F0000000 		.4byte	.LVL121
 13626 07b3 0100     		.2byte	0x1
 13627 07b5 57       		.byte	0x57
 13628 07b6 F0000000 		.4byte	.LVL121
 13629 07ba F4000000 		.4byte	.LVL122
 13630 07be 0100     		.2byte	0x1
 13631 07c0 56       		.byte	0x56
 13632 07c1 00000000 		.4byte	0
 13633 07c5 00000000 		.4byte	0
 13634              	.LLST43:
 13635 07c9 1C000000 		.4byte	.LVL98
 13636 07cd 24000000 		.4byte	.LVL99
 13637 07d1 0200     		.2byte	0x2
 13638 07d3 30       		.byte	0x30
 13639 07d4 9F       		.byte	0x9f
 13640 07d5 24000000 		.4byte	.LVL99
 13641 07d9 5E000000 		.4byte	.LVL103
 13642 07dd 0100     		.2byte	0x1
 13643 07df 55       		.byte	0x55
 13644 07e0 64000000 		.4byte	.LVL105
 13645 07e4 84000000 		.4byte	.LVL110
 13646 07e8 0100     		.2byte	0x1
 13647 07ea 55       		.byte	0x55
 13648 07eb 88000000 		.4byte	.LVL111
 13649 07ef 8E000000 		.4byte	.LVL112
 13650 07f3 0100     		.2byte	0x1
 13651 07f5 55       		.byte	0x55
 13652 07f6 8E000000 		.4byte	.LVL112
 13653 07fa 90000000 		.4byte	.LVL113
 13654 07fe 0300     		.2byte	0x3
 13655 0800 75       		.byte	0x75
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 338


 13656 0801 7E       		.sleb128 -2
 13657 0802 9F       		.byte	0x9f
 13658 0803 90000000 		.4byte	.LVL113
 13659 0807 A8000000 		.4byte	.LVL116
 13660 080b 0100     		.2byte	0x1
 13661 080d 55       		.byte	0x55
 13662 080e A8000000 		.4byte	.LVL116
 13663 0812 AE000000 		.4byte	.LVL117
 13664 0816 0300     		.2byte	0x3
 13665 0818 75       		.byte	0x75
 13666 0819 01       		.sleb128 1
 13667 081a 9F       		.byte	0x9f
 13668 081b AE000000 		.4byte	.LVL117
 13669 081f FC000000 		.4byte	.LVL123
 13670 0823 0100     		.2byte	0x1
 13671 0825 55       		.byte	0x55
 13672 0826 00000000 		.4byte	0
 13673 082a 00000000 		.4byte	0
 13674              	.LLST44:
 13675 082e 0E000000 		.4byte	.LVL94
 13676 0832 FC000000 		.4byte	.LVL123
 13677 0836 0100     		.2byte	0x1
 13678 0838 58       		.byte	0x58
 13679 0839 00000000 		.4byte	0
 13680 083d 00000000 		.4byte	0
 13681              	.LLST45:
 13682 0841 00000000 		.4byte	.LVL124
 13683 0845 3A000000 		.4byte	.LVL138
 13684 0849 0100     		.2byte	0x1
 13685 084b 50       		.byte	0x50
 13686 084c 3A000000 		.4byte	.LVL138
 13687 0850 3C000000 		.4byte	.LVL139
 13688 0854 0400     		.2byte	0x4
 13689 0856 F3       		.byte	0xf3
 13690 0857 01       		.uleb128 0x1
 13691 0858 50       		.byte	0x50
 13692 0859 9F       		.byte	0x9f
 13693 085a 3C000000 		.4byte	.LVL139
 13694 085e 4E000000 		.4byte	.LVL143
 13695 0862 0100     		.2byte	0x1
 13696 0864 50       		.byte	0x50
 13697 0865 4E000000 		.4byte	.LVL143
 13698 0869 54000000 		.4byte	.LFE31
 13699 086d 0400     		.2byte	0x4
 13700 086f F3       		.byte	0xf3
 13701 0870 01       		.uleb128 0x1
 13702 0871 50       		.byte	0x50
 13703 0872 9F       		.byte	0x9f
 13704 0873 00000000 		.4byte	0
 13705 0877 00000000 		.4byte	0
 13706              	.LLST46:
 13707 087b 20000000 		.4byte	.LVL129
 13708 087f 22000000 		.4byte	.LVL130
 13709 0883 0100     		.2byte	0x1
 13710 0885 51       		.byte	0x51
 13711 0886 22000000 		.4byte	.LVL130
 13712 088a 36000000 		.4byte	.LVL136
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 339


 13713 088e 0100     		.2byte	0x1
 13714 0890 54       		.byte	0x54
 13715 0891 3C000000 		.4byte	.LVL139
 13716 0895 52000000 		.4byte	.LVL144
 13717 0899 0100     		.2byte	0x1
 13718 089b 54       		.byte	0x54
 13719 089c 52000000 		.4byte	.LVL144
 13720 08a0 54000000 		.4byte	.LFE31
 13721 08a4 0300     		.2byte	0x3
 13722 08a6 71       		.byte	0x71
 13723 08a7 01       		.sleb128 1
 13724 08a8 9F       		.byte	0x9f
 13725 08a9 00000000 		.4byte	0
 13726 08ad 00000000 		.4byte	0
 13727              	.LLST47:
 13728 08b1 0A000000 		.4byte	.LVL125
 13729 08b5 0E000000 		.4byte	.LVL127
 13730 08b9 0100     		.2byte	0x1
 13731 08bb 52       		.byte	0x52
 13732 08bc 10000000 		.4byte	.LVL128
 13733 08c0 30000000 		.4byte	.LVL134
 13734 08c4 0100     		.2byte	0x1
 13735 08c6 52       		.byte	0x52
 13736 08c7 30000000 		.4byte	.LVL134
 13737 08cb 32000000 		.4byte	.LVL135
 13738 08cf 0300     		.2byte	0x3
 13739 08d1 72       		.byte	0x72
 13740 08d2 01       		.sleb128 1
 13741 08d3 9F       		.byte	0x9f
 13742 08d4 32000000 		.4byte	.LVL135
 13743 08d8 38000000 		.4byte	.LVL137
 13744 08dc 0100     		.2byte	0x1
 13745 08de 52       		.byte	0x52
 13746 08df 3C000000 		.4byte	.LVL139
 13747 08e3 54000000 		.4byte	.LFE31
 13748 08e7 0100     		.2byte	0x1
 13749 08e9 52       		.byte	0x52
 13750 08ea 00000000 		.4byte	0
 13751 08ee 00000000 		.4byte	0
 13752              	.LLST48:
 13753 08f2 24000000 		.4byte	.LVL131
 13754 08f6 26000000 		.4byte	.LVL132
 13755 08fa 0100     		.2byte	0x1
 13756 08fc 53       		.byte	0x53
 13757 08fd 26000000 		.4byte	.LVL132
 13758 0901 2E000000 		.4byte	.LVL133
 13759 0905 0300     		.2byte	0x3
 13760 0907 73       		.byte	0x73
 13761 0908 30       		.sleb128 48
 13762 0909 9F       		.byte	0x9f
 13763 090a 2E000000 		.4byte	.LVL133
 13764 090e 36000000 		.4byte	.LVL136
 13765 0912 0100     		.2byte	0x1
 13766 0914 53       		.byte	0x53
 13767 0915 3C000000 		.4byte	.LVL139
 13768 0919 40000000 		.4byte	.LVL140
 13769 091d 0300     		.2byte	0x3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 340


 13770 091f 73       		.byte	0x73
 13771 0920 30       		.sleb128 48
 13772 0921 9F       		.byte	0x9f
 13773 0922 40000000 		.4byte	.LVL140
 13774 0926 48000000 		.4byte	.LVL141
 13775 092a 0800     		.2byte	0x8
 13776 092c 71       		.byte	0x71
 13777 092d 00       		.sleb128 0
 13778 092e 94       		.byte	0x94
 13779 092f 01       		.byte	0x1
 13780 0930 08       		.byte	0x8
 13781 0931 FF       		.byte	0xff
 13782 0932 1A       		.byte	0x1a
 13783 0933 9F       		.byte	0x9f
 13784 0934 48000000 		.4byte	.LVL141
 13785 0938 4C000000 		.4byte	.LVL142
 13786 093c 0100     		.2byte	0x1
 13787 093e 53       		.byte	0x53
 13788 093f 00000000 		.4byte	0
 13789 0943 00000000 		.4byte	0
 13790              	.LLST49:
 13791 0947 00000000 		.4byte	.LVL124
 13792 094b 30000000 		.4byte	.LVL134
 13793 094f 0300     		.2byte	0x3
 13794 0951 09       		.byte	0x9
 13795 0952 FF       		.byte	0xff
 13796 0953 9F       		.byte	0x9f
 13797 0954 30000000 		.4byte	.LVL134
 13798 0958 36000000 		.4byte	.LVL136
 13799 095c 0100     		.2byte	0x1
 13800 095e 53       		.byte	0x53
 13801 095f 36000000 		.4byte	.LVL136
 13802 0963 38000000 		.4byte	.LVL137
 13803 0967 0300     		.2byte	0x3
 13804 0969 09       		.byte	0x9
 13805 096a FF       		.byte	0xff
 13806 096b 9F       		.byte	0x9f
 13807 096c 38000000 		.4byte	.LVL137
 13808 0970 3C000000 		.4byte	.LVL139
 13809 0974 0100     		.2byte	0x1
 13810 0976 53       		.byte	0x53
 13811 0977 3C000000 		.4byte	.LVL139
 13812 097b 4C000000 		.4byte	.LVL142
 13813 097f 0300     		.2byte	0x3
 13814 0981 09       		.byte	0x9
 13815 0982 FF       		.byte	0xff
 13816 0983 9F       		.byte	0x9f
 13817 0984 4C000000 		.4byte	.LVL142
 13818 0988 54000000 		.4byte	.LFE31
 13819 098c 0100     		.2byte	0x1
 13820 098e 53       		.byte	0x53
 13821 098f 00000000 		.4byte	0
 13822 0993 00000000 		.4byte	0
 13823              	.LLST50:
 13824 0997 00000000 		.4byte	.LVL145
 13825 099b 1A000000 		.4byte	.LVL148
 13826 099f 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 341


 13827 09a1 50       		.byte	0x50
 13828 09a2 1A000000 		.4byte	.LVL148
 13829 09a6 28000000 		.4byte	.LVL150
 13830 09aa 0100     		.2byte	0x1
 13831 09ac 54       		.byte	0x54
 13832 09ad 28000000 		.4byte	.LVL150
 13833 09b1 2A000000 		.4byte	.LVL151
 13834 09b5 0100     		.2byte	0x1
 13835 09b7 50       		.byte	0x50
 13836 09b8 2A000000 		.4byte	.LVL151
 13837 09bc 2C000000 		.4byte	.LVL152
 13838 09c0 0100     		.2byte	0x1
 13839 09c2 54       		.byte	0x54
 13840 09c3 2C000000 		.4byte	.LVL152
 13841 09c7 2E000000 		.4byte	.LVL153
 13842 09cb 0100     		.2byte	0x1
 13843 09cd 50       		.byte	0x50
 13844 09ce 2E000000 		.4byte	.LVL153
 13845 09d2 30000000 		.4byte	.LVL154
 13846 09d6 0100     		.2byte	0x1
 13847 09d8 54       		.byte	0x54
 13848 09d9 30000000 		.4byte	.LVL154
 13849 09dd 32000000 		.4byte	.LVL155
 13850 09e1 0100     		.2byte	0x1
 13851 09e3 50       		.byte	0x50
 13852 09e4 32000000 		.4byte	.LVL155
 13853 09e8 34000000 		.4byte	.LVL156
 13854 09ec 0100     		.2byte	0x1
 13855 09ee 54       		.byte	0x54
 13856 09ef 34000000 		.4byte	.LVL156
 13857 09f3 36000000 		.4byte	.LVL157
 13858 09f7 0100     		.2byte	0x1
 13859 09f9 50       		.byte	0x50
 13860 09fa 36000000 		.4byte	.LVL157
 13861 09fe 46000000 		.4byte	.LFE34
 13862 0a02 0100     		.2byte	0x1
 13863 0a04 54       		.byte	0x54
 13864 0a05 00000000 		.4byte	0
 13865 0a09 00000000 		.4byte	0
 13866              	.LLST51:
 13867 0a0d 00000000 		.4byte	.LVL145
 13868 0a11 12000000 		.4byte	.LVL147
 13869 0a15 0100     		.2byte	0x1
 13870 0a17 51       		.byte	0x51
 13871 0a18 12000000 		.4byte	.LVL147
 13872 0a1c 28000000 		.4byte	.LVL150
 13873 0a20 0100     		.2byte	0x1
 13874 0a22 55       		.byte	0x55
 13875 0a23 28000000 		.4byte	.LVL150
 13876 0a27 34000000 		.4byte	.LVL156
 13877 0a2b 0100     		.2byte	0x1
 13878 0a2d 51       		.byte	0x51
 13879 0a2e 34000000 		.4byte	.LVL156
 13880 0a32 46000000 		.4byte	.LFE34
 13881 0a36 0100     		.2byte	0x1
 13882 0a38 55       		.byte	0x55
 13883 0a39 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 342


 13884 0a3d 00000000 		.4byte	0
 13885              	.LLST52:
 13886 0a41 04000000 		.4byte	.LVL146
 13887 0a45 3A000000 		.4byte	.LVL158
 13888 0a49 0200     		.2byte	0x2
 13889 0a4b 39       		.byte	0x39
 13890 0a4c 9F       		.byte	0x9f
 13891 0a4d 3A000000 		.4byte	.LVL158
 13892 0a51 46000000 		.4byte	.LFE34
 13893 0a55 0100     		.2byte	0x1
 13894 0a57 50       		.byte	0x50
 13895 0a58 00000000 		.4byte	0
 13896 0a5c 00000000 		.4byte	0
 13897              	.LLST53:
 13898 0a60 00000000 		.4byte	.LVL159
 13899 0a64 14000000 		.4byte	.LVL161
 13900 0a68 0100     		.2byte	0x1
 13901 0a6a 50       		.byte	0x50
 13902 0a6b 14000000 		.4byte	.LVL161
 13903 0a6f 40000000 		.4byte	.LVL164
 13904 0a73 0100     		.2byte	0x1
 13905 0a75 54       		.byte	0x54
 13906 0a76 40000000 		.4byte	.LVL164
 13907 0a7a 42000000 		.4byte	.LVL165
 13908 0a7e 0100     		.2byte	0x1
 13909 0a80 50       		.byte	0x50
 13910 0a81 42000000 		.4byte	.LVL165
 13911 0a85 44000000 		.4byte	.LVL166
 13912 0a89 0400     		.2byte	0x4
 13913 0a8b F3       		.byte	0xf3
 13914 0a8c 01       		.uleb128 0x1
 13915 0a8d 50       		.byte	0x50
 13916 0a8e 9F       		.byte	0x9f
 13917 0a8f 44000000 		.4byte	.LVL166
 13918 0a93 50000000 		.4byte	.LFE10
 13919 0a97 0100     		.2byte	0x1
 13920 0a99 54       		.byte	0x54
 13921 0a9a 00000000 		.4byte	0
 13922 0a9e 00000000 		.4byte	0
 13923              	.LLST54:
 13924 0aa2 02000000 		.4byte	.LVL160
 13925 0aa6 4E000000 		.4byte	.LVL169
 13926 0aaa 0200     		.2byte	0x2
 13927 0aac 30       		.byte	0x30
 13928 0aad 9F       		.byte	0x9f
 13929 0aae 4E000000 		.4byte	.LVL169
 13930 0ab2 50000000 		.4byte	.LFE10
 13931 0ab6 0100     		.2byte	0x1
 13932 0ab8 50       		.byte	0x50
 13933 0ab9 00000000 		.4byte	0
 13934 0abd 00000000 		.4byte	0
 13935              	.LLST55:
 13936 0ac1 00000000 		.4byte	.LVL170
 13937 0ac5 0F000000 		.4byte	.LVL172-1
 13938 0ac9 0100     		.2byte	0x1
 13939 0acb 50       		.byte	0x50
 13940 0acc 0F000000 		.4byte	.LVL172-1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 343


 13941 0ad0 2E000000 		.4byte	.LVL176
 13942 0ad4 0100     		.2byte	0x1
 13943 0ad6 54       		.byte	0x54
 13944 0ad7 2E000000 		.4byte	.LVL176
 13945 0adb 30000000 		.4byte	.LVL177
 13946 0adf 0100     		.2byte	0x1
 13947 0ae1 50       		.byte	0x50
 13948 0ae2 30000000 		.4byte	.LVL177
 13949 0ae6 34000000 		.4byte	.LFE11
 13950 0aea 0400     		.2byte	0x4
 13951 0aec F3       		.byte	0xf3
 13952 0aed 01       		.uleb128 0x1
 13953 0aee 50       		.byte	0x50
 13954 0aef 9F       		.byte	0x9f
 13955 0af0 00000000 		.4byte	0
 13956 0af4 00000000 		.4byte	0
 13957              	.LLST56:
 13958 0af8 00000000 		.4byte	.LVL170
 13959 0afc 0F000000 		.4byte	.LVL172-1
 13960 0b00 0100     		.2byte	0x1
 13961 0b02 51       		.byte	0x51
 13962 0b03 0F000000 		.4byte	.LVL172-1
 13963 0b07 2E000000 		.4byte	.LVL176
 13964 0b0b 0100     		.2byte	0x1
 13965 0b0d 55       		.byte	0x55
 13966 0b0e 2E000000 		.4byte	.LVL176
 13967 0b12 30000000 		.4byte	.LVL177
 13968 0b16 0100     		.2byte	0x1
 13969 0b18 51       		.byte	0x51
 13970 0b19 00000000 		.4byte	0
 13971 0b1d 00000000 		.4byte	0
 13972              	.LLST57:
 13973 0b21 02000000 		.4byte	.LVL171
 13974 0b25 10000000 		.4byte	.LVL172
 13975 0b29 0200     		.2byte	0x2
 13976 0b2b 30       		.byte	0x30
 13977 0b2c 9F       		.byte	0x9f
 13978 0b2d 10000000 		.4byte	.LVL172
 13979 0b31 1E000000 		.4byte	.LVL173
 13980 0b35 0100     		.2byte	0x1
 13981 0b37 50       		.byte	0x50
 13982 0b38 2A000000 		.4byte	.LVL175
 13983 0b3c 2E000000 		.4byte	.LVL176
 13984 0b40 0100     		.2byte	0x1
 13985 0b42 56       		.byte	0x56
 13986 0b43 2E000000 		.4byte	.LVL176
 13987 0b47 30000000 		.4byte	.LVL177
 13988 0b4b 0200     		.2byte	0x2
 13989 0b4d 30       		.byte	0x30
 13990 0b4e 9F       		.byte	0x9f
 13991 0b4f 30000000 		.4byte	.LVL177
 13992 0b53 34000000 		.4byte	.LFE11
 13993 0b57 0100     		.2byte	0x1
 13994 0b59 56       		.byte	0x56
 13995 0b5a 00000000 		.4byte	0
 13996 0b5e 00000000 		.4byte	0
 13997              	.LLST58:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 344


 13998 0b62 00000000 		.4byte	.LVL178
 13999 0b66 11000000 		.4byte	.LVL179-1
 14000 0b6a 0100     		.2byte	0x1
 14001 0b6c 50       		.byte	0x50
 14002 0b6d 11000000 		.4byte	.LVL179-1
 14003 0b71 66000000 		.4byte	.LVL188
 14004 0b75 0100     		.2byte	0x1
 14005 0b77 54       		.byte	0x54
 14006 0b78 66000000 		.4byte	.LVL188
 14007 0b7c 70000000 		.4byte	.LFE32
 14008 0b80 0400     		.2byte	0x4
 14009 0b82 F3       		.byte	0xf3
 14010 0b83 01       		.uleb128 0x1
 14011 0b84 50       		.byte	0x50
 14012 0b85 9F       		.byte	0x9f
 14013 0b86 00000000 		.4byte	0
 14014 0b8a 00000000 		.4byte	0
 14015              	.LLST59:
 14016 0b8e 00000000 		.4byte	.LVL178
 14017 0b92 11000000 		.4byte	.LVL179-1
 14018 0b96 0100     		.2byte	0x1
 14019 0b98 51       		.byte	0x51
 14020 0b99 11000000 		.4byte	.LVL179-1
 14021 0b9d 70000000 		.4byte	.LFE32
 14022 0ba1 0400     		.2byte	0x4
 14023 0ba3 F3       		.byte	0xf3
 14024 0ba4 01       		.uleb128 0x1
 14025 0ba5 51       		.byte	0x51
 14026 0ba6 9F       		.byte	0x9f
 14027 0ba7 00000000 		.4byte	0
 14028 0bab 00000000 		.4byte	0
 14029              	.LLST60:
 14030 0baf 00000000 		.4byte	.LVL189
 14031 0bb3 11000000 		.4byte	.LVL190-1
 14032 0bb7 0100     		.2byte	0x1
 14033 0bb9 50       		.byte	0x50
 14034 0bba 11000000 		.4byte	.LVL190-1
 14035 0bbe E8020000 		.4byte	.LFE33
 14036 0bc2 0400     		.2byte	0x4
 14037 0bc4 F3       		.byte	0xf3
 14038 0bc5 01       		.uleb128 0x1
 14039 0bc6 50       		.byte	0x50
 14040 0bc7 9F       		.byte	0x9f
 14041 0bc8 00000000 		.4byte	0
 14042 0bcc 00000000 		.4byte	0
 14043              	.LLST61:
 14044 0bd0 00000000 		.4byte	.LVL189
 14045 0bd4 11000000 		.4byte	.LVL190-1
 14046 0bd8 0100     		.2byte	0x1
 14047 0bda 51       		.byte	0x51
 14048 0bdb 11000000 		.4byte	.LVL190-1
 14049 0bdf 78000000 		.4byte	.LVL200
 14050 0be3 0100     		.2byte	0x1
 14051 0be5 56       		.byte	0x56
 14052 0be6 78000000 		.4byte	.LVL200
 14053 0bea 7A000000 		.4byte	.LVL201
 14054 0bee 0400     		.2byte	0x4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 345


 14055 0bf0 F3       		.byte	0xf3
 14056 0bf1 01       		.uleb128 0x1
 14057 0bf2 51       		.byte	0x51
 14058 0bf3 9F       		.byte	0x9f
 14059 0bf4 7A000000 		.4byte	.LVL201
 14060 0bf8 AA000000 		.4byte	.LVL210
 14061 0bfc 0100     		.2byte	0x1
 14062 0bfe 56       		.byte	0x56
 14063 0bff AA000000 		.4byte	.LVL210
 14064 0c03 7E020000 		.4byte	.LVL258
 14065 0c07 0400     		.2byte	0x4
 14066 0c09 F3       		.byte	0xf3
 14067 0c0a 01       		.uleb128 0x1
 14068 0c0b 51       		.byte	0x51
 14069 0c0c 9F       		.byte	0x9f
 14070 0c0d 7E020000 		.4byte	.LVL258
 14071 0c11 96020000 		.4byte	.LVL270
 14072 0c15 0100     		.2byte	0x1
 14073 0c17 56       		.byte	0x56
 14074 0c18 96020000 		.4byte	.LVL270
 14075 0c1c E8020000 		.4byte	.LFE33
 14076 0c20 0400     		.2byte	0x4
 14077 0c22 F3       		.byte	0xf3
 14078 0c23 01       		.uleb128 0x1
 14079 0c24 51       		.byte	0x51
 14080 0c25 9F       		.byte	0x9f
 14081 0c26 00000000 		.4byte	0
 14082 0c2a 00000000 		.4byte	0
 14083              	.LLST62:
 14084 0c2e 00000000 		.4byte	.LVL189
 14085 0c32 11000000 		.4byte	.LVL190-1
 14086 0c36 0100     		.2byte	0x1
 14087 0c38 52       		.byte	0x52
 14088 0c39 11000000 		.4byte	.LVL190-1
 14089 0c3d 2A000000 		.4byte	.LVL192
 14090 0c41 0400     		.2byte	0x4
 14091 0c43 F3       		.byte	0xf3
 14092 0c44 01       		.uleb128 0x1
 14093 0c45 52       		.byte	0x52
 14094 0c46 9F       		.byte	0x9f
 14095 0c47 2A000000 		.4byte	.LVL192
 14096 0c4b 4C010000 		.4byte	.LVL226
 14097 0c4f 0100     		.2byte	0x1
 14098 0c51 57       		.byte	0x57
 14099 0c52 7E020000 		.4byte	.LVL258
 14100 0c56 86020000 		.4byte	.LVL262
 14101 0c5a 0400     		.2byte	0x4
 14102 0c5c F3       		.byte	0xf3
 14103 0c5d 01       		.uleb128 0x1
 14104 0c5e 52       		.byte	0x52
 14105 0c5f 9F       		.byte	0x9f
 14106 0c60 86020000 		.4byte	.LVL262
 14107 0c64 B2020000 		.4byte	.LVL277
 14108 0c68 0100     		.2byte	0x1
 14109 0c6a 57       		.byte	0x57
 14110 0c6b 00000000 		.4byte	0
 14111 0c6f 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 346


 14112              	.LLST63:
 14113 0c73 72000000 		.4byte	.LVL199
 14114 0c77 7A000000 		.4byte	.LVL201
 14115 0c7b 0100     		.2byte	0x1
 14116 0c7d 50       		.byte	0x50
 14117 0c7e A2000000 		.4byte	.LVL208
 14118 0c82 A4000000 		.4byte	.LVL209
 14119 0c86 0100     		.2byte	0x1
 14120 0c88 50       		.byte	0x50
 14121 0c89 C2000000 		.4byte	.LVL213
 14122 0c8d DC000000 		.4byte	.LVL216
 14123 0c91 0100     		.2byte	0x1
 14124 0c93 50       		.byte	0x50
 14125 0c94 82010000 		.4byte	.LVL235
 14126 0c98 8E010000 		.4byte	.LVL236
 14127 0c9c 0200     		.2byte	0x2
 14128 0c9e 30       		.byte	0x30
 14129 0c9f 9F       		.byte	0x9f
 14130 0ca0 8E010000 		.4byte	.LVL236
 14131 0ca4 7E020000 		.4byte	.LVL258
 14132 0ca8 0100     		.2byte	0x1
 14133 0caa 57       		.byte	0x57
 14134 0cab 96020000 		.4byte	.LVL270
 14135 0caf 98020000 		.4byte	.LVL271
 14136 0cb3 0100     		.2byte	0x1
 14137 0cb5 50       		.byte	0x50
 14138 0cb6 9A020000 		.4byte	.LVL272
 14139 0cba 9C020000 		.4byte	.LVL273
 14140 0cbe 0100     		.2byte	0x1
 14141 0cc0 50       		.byte	0x50
 14142 0cc1 BE020000 		.4byte	.LVL283
 14143 0cc5 D0020000 		.4byte	.LVL289
 14144 0cc9 0100     		.2byte	0x1
 14145 0ccb 57       		.byte	0x57
 14146 0ccc 00000000 		.4byte	0
 14147 0cd0 00000000 		.4byte	0
 14148              	.LLST64:
 14149 0cd4 86000000 		.4byte	.LVL202
 14150 0cd8 8C000000 		.4byte	.LVL203
 14151 0cdc 0100     		.2byte	0x1
 14152 0cde 50       		.byte	0x50
 14153 0cdf 8C000000 		.4byte	.LVL203
 14154 0ce3 8F000000 		.4byte	.LVL204-1
 14155 0ce7 0300     		.2byte	0x3
 14156 0ce9 70       		.byte	0x70
 14157 0cea 78       		.sleb128 -8
 14158 0ceb 9F       		.byte	0x9f
 14159 0cec 8F000000 		.4byte	.LVL204-1
 14160 0cf0 92000000 		.4byte	.LVL205
 14161 0cf4 0B00     		.2byte	0xb
 14162 0cf6 75       		.byte	0x75
 14163 0cf7 00       		.sleb128 0
 14164 0cf8 34       		.byte	0x34
 14165 0cf9 24       		.byte	0x24
 14166 0cfa 74       		.byte	0x74
 14167 0cfb 00       		.sleb128 0
 14168 0cfc 22       		.byte	0x22
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 347


 14169 0cfd 23       		.byte	0x23
 14170 0cfe EE03     		.uleb128 0x1ee
 14171 0d00 9F       		.byte	0x9f
 14172 0d01 92000000 		.4byte	.LVL205
 14173 0d05 94000000 		.4byte	.LVL206
 14174 0d09 0100     		.2byte	0x1
 14175 0d0b 50       		.byte	0x50
 14176 0d0c 94000000 		.4byte	.LVL206
 14177 0d10 A0000000 		.4byte	.LVL207
 14178 0d14 0B00     		.2byte	0xb
 14179 0d16 75       		.byte	0x75
 14180 0d17 00       		.sleb128 0
 14181 0d18 34       		.byte	0x34
 14182 0d19 24       		.byte	0x24
 14183 0d1a 74       		.byte	0x74
 14184 0d1b 00       		.sleb128 0
 14185 0d1c 22       		.byte	0x22
 14186 0d1d 23       		.byte	0x23
 14187 0d1e EE03     		.uleb128 0x1ee
 14188 0d20 9F       		.byte	0x9f
 14189 0d21 A0000000 		.4byte	.LVL207
 14190 0d25 A2000000 		.4byte	.LVL208
 14191 0d29 0B00     		.2byte	0xb
 14192 0d2b 75       		.byte	0x75
 14193 0d2c 7F       		.sleb128 -1
 14194 0d2d 34       		.byte	0x34
 14195 0d2e 24       		.byte	0x24
 14196 0d2f 74       		.byte	0x74
 14197 0d30 00       		.sleb128 0
 14198 0d31 22       		.byte	0x22
 14199 0d32 23       		.byte	0x23
 14200 0d33 EE03     		.uleb128 0x1ee
 14201 0d35 9F       		.byte	0x9f
 14202 0d36 00000000 		.4byte	0
 14203 0d3a 00000000 		.4byte	0
 14204              	.LLST65:
 14205 0d3e 12000000 		.4byte	.LVL190
 14206 0d42 30000000 		.4byte	.LVL193
 14207 0d46 0100     		.2byte	0x1
 14208 0d48 50       		.byte	0x50
 14209 0d49 30000000 		.4byte	.LVL193
 14210 0d4d 7A000000 		.4byte	.LVL201
 14211 0d51 0100     		.2byte	0x1
 14212 0d53 55       		.byte	0x55
 14213 0d54 A2000000 		.4byte	.LVL208
 14214 0d58 A4000000 		.4byte	.LVL209
 14215 0d5c 0100     		.2byte	0x1
 14216 0d5e 55       		.byte	0x55
 14217 0d5f 7E020000 		.4byte	.LVL258
 14218 0d63 80020000 		.4byte	.LVL259
 14219 0d67 0100     		.2byte	0x1
 14220 0d69 50       		.byte	0x50
 14221 0d6a 80020000 		.4byte	.LVL259
 14222 0d6e 82020000 		.4byte	.LVL260
 14223 0d72 0100     		.2byte	0x1
 14224 0d74 55       		.byte	0x55
 14225 0d75 82020000 		.4byte	.LVL260
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 348


 14226 0d79 84020000 		.4byte	.LVL261
 14227 0d7d 0100     		.2byte	0x1
 14228 0d7f 50       		.byte	0x50
 14229 0d80 84020000 		.4byte	.LVL261
 14230 0d84 96020000 		.4byte	.LVL270
 14231 0d88 0100     		.2byte	0x1
 14232 0d8a 55       		.byte	0x55
 14233 0d8b 00000000 		.4byte	0
 14234 0d8f 00000000 		.4byte	0
 14235              	.LLST66:
 14236 0d93 34000000 		.4byte	.LVL194
 14237 0d97 4A000000 		.4byte	.LVL195
 14238 0d9b 0100     		.2byte	0x1
 14239 0d9d 50       		.byte	0x50
 14240 0d9e 58000000 		.4byte	.LVL196
 14241 0da2 6E000000 		.4byte	.LVL198
 14242 0da6 0100     		.2byte	0x1
 14243 0da8 50       		.byte	0x50
 14244 0da9 86020000 		.4byte	.LVL262
 14245 0dad 88020000 		.4byte	.LVL263
 14246 0db1 0100     		.2byte	0x1
 14247 0db3 50       		.byte	0x50
 14248 0db4 8A020000 		.4byte	.LVL264
 14249 0db8 8C020000 		.4byte	.LVL265
 14250 0dbc 0100     		.2byte	0x1
 14251 0dbe 50       		.byte	0x50
 14252 0dbf 8E020000 		.4byte	.LVL266
 14253 0dc3 90020000 		.4byte	.LVL267
 14254 0dc7 0100     		.2byte	0x1
 14255 0dc9 50       		.byte	0x50
 14256 0dca 92020000 		.4byte	.LVL268
 14257 0dce 94020000 		.4byte	.LVL269
 14258 0dd2 0100     		.2byte	0x1
 14259 0dd4 50       		.byte	0x50
 14260 0dd5 00000000 		.4byte	0
 14261 0dd9 00000000 		.4byte	0
 14262              	.LLST67:
 14263 0ddd 6A000000 		.4byte	.LVL197
 14264 0de1 AA000000 		.4byte	.LVL210
 14265 0de5 0200     		.2byte	0x2
 14266 0de7 30       		.byte	0x30
 14267 0de8 9F       		.byte	0x9f
 14268 0de9 B4000000 		.4byte	.LVL211
 14269 0ded 7E020000 		.4byte	.LVL258
 14270 0df1 0100     		.2byte	0x1
 14271 0df3 56       		.byte	0x56
 14272 0df4 96020000 		.4byte	.LVL270
 14273 0df8 D0020000 		.4byte	.LVL289
 14274 0dfc 0100     		.2byte	0x1
 14275 0dfe 56       		.byte	0x56
 14276 0dff 00000000 		.4byte	0
 14277 0e03 00000000 		.4byte	0
 14278              	.LLST68:
 14279 0e07 F2000000 		.4byte	.LVL219
 14280 0e0b F8000000 		.4byte	.LVL220
 14281 0e0f 0100     		.2byte	0x1
 14282 0e11 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 349


 14283 0e12 F8000000 		.4byte	.LVL220
 14284 0e16 FE000000 		.4byte	.LVL222
 14285 0e1a 0100     		.2byte	0x1
 14286 0e1c 58       		.byte	0x58
 14287 0e1d FE000000 		.4byte	.LVL222
 14288 0e21 1A010000 		.4byte	.LVL223
 14289 0e25 0100     		.2byte	0x1
 14290 0e27 50       		.byte	0x50
 14291 0e28 1A010000 		.4byte	.LVL223
 14292 0e2c 7E020000 		.4byte	.LVL258
 14293 0e30 0100     		.2byte	0x1
 14294 0e32 59       		.byte	0x59
 14295 0e33 A2020000 		.4byte	.LVL274
 14296 0e37 A4020000 		.4byte	.LVL275
 14297 0e3b 0100     		.2byte	0x1
 14298 0e3d 50       		.byte	0x50
 14299 0e3e A4020000 		.4byte	.LVL275
 14300 0e42 A6020000 		.4byte	.LVL276
 14301 0e46 0100     		.2byte	0x1
 14302 0e48 58       		.byte	0x58
 14303 0e49 A6020000 		.4byte	.LVL276
 14304 0e4d D0020000 		.4byte	.LVL289
 14305 0e51 0100     		.2byte	0x1
 14306 0e53 59       		.byte	0x59
 14307 0e54 00000000 		.4byte	0
 14308 0e58 00000000 		.4byte	0
 14309              	.LLST69:
 14310 0e5c 4C010000 		.4byte	.LVL226
 14311 0e60 52010000 		.4byte	.LVL227
 14312 0e64 0100     		.2byte	0x1
 14313 0e66 50       		.byte	0x50
 14314 0e67 52010000 		.4byte	.LVL227
 14315 0e6b 58010000 		.4byte	.LVL229
 14316 0e6f 0100     		.2byte	0x1
 14317 0e71 57       		.byte	0x57
 14318 0e72 58010000 		.4byte	.LVL229
 14319 0e76 5C010000 		.4byte	.LVL230
 14320 0e7a 0100     		.2byte	0x1
 14321 0e7c 50       		.byte	0x50
 14322 0e7d 5C010000 		.4byte	.LVL230
 14323 0e81 78010000 		.4byte	.LVL233
 14324 0e85 0100     		.2byte	0x1
 14325 0e87 57       		.byte	0x57
 14326 0e88 B2020000 		.4byte	.LVL277
 14327 0e8c BA020000 		.4byte	.LVL281
 14328 0e90 0100     		.2byte	0x1
 14329 0e92 57       		.byte	0x57
 14330 0e93 00000000 		.4byte	0
 14331 0e97 00000000 		.4byte	0
 14332              	.LLST70:
 14333 0e9b 70010000 		.4byte	.LVL232
 14334 0e9f B4010000 		.4byte	.LVL240
 14335 0ea3 0100     		.2byte	0x1
 14336 0ea5 52       		.byte	0x52
 14337 0ea6 B4010000 		.4byte	.LVL240
 14338 0eaa BE010000 		.4byte	.LVL241
 14339 0eae 0B00     		.2byte	0xb
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 350


 14340 0eb0 7A       		.byte	0x7a
 14341 0eb1 00       		.sleb128 0
 14342 0eb2 34       		.byte	0x34
 14343 0eb3 25       		.byte	0x25
 14344 0eb4 70       		.byte	0x70
 14345 0eb5 00       		.sleb128 0
 14346 0eb6 22       		.byte	0x22
 14347 0eb7 79       		.byte	0x79
 14348 0eb8 00       		.sleb128 0
 14349 0eb9 22       		.byte	0x22
 14350 0eba 9F       		.byte	0x9f
 14351 0ebb DA010000 		.4byte	.LVL245
 14352 0ebf F8010000 		.4byte	.LVL249
 14353 0ec3 0B00     		.2byte	0xb
 14354 0ec5 7A       		.byte	0x7a
 14355 0ec6 00       		.sleb128 0
 14356 0ec7 34       		.byte	0x34
 14357 0ec8 25       		.byte	0x25
 14358 0ec9 70       		.byte	0x70
 14359 0eca 00       		.sleb128 0
 14360 0ecb 22       		.byte	0x22
 14361 0ecc 79       		.byte	0x79
 14362 0ecd 00       		.sleb128 0
 14363 0ece 22       		.byte	0x22
 14364 0ecf 9F       		.byte	0x9f
 14365 0ed0 B6020000 		.4byte	.LVL279
 14366 0ed4 C2020000 		.4byte	.LVL285
 14367 0ed8 0100     		.2byte	0x1
 14368 0eda 52       		.byte	0x52
 14369 0edb CA020000 		.4byte	.LVL286
 14370 0edf CC020000 		.4byte	.LVL287
 14371 0ee3 0B00     		.2byte	0xb
 14372 0ee5 7A       		.byte	0x7a
 14373 0ee6 00       		.sleb128 0
 14374 0ee7 34       		.byte	0x34
 14375 0ee8 25       		.byte	0x25
 14376 0ee9 70       		.byte	0x70
 14377 0eea 00       		.sleb128 0
 14378 0eeb 22       		.byte	0x22
 14379 0eec 79       		.byte	0x79
 14380 0eed 00       		.sleb128 0
 14381 0eee 22       		.byte	0x22
 14382 0eef 9F       		.byte	0x9f
 14383 0ef0 00000000 		.4byte	0
 14384 0ef4 00000000 		.4byte	0
 14385              	.LLST71:
 14386 0ef8 7C010000 		.4byte	.LVL234
 14387 0efc AA010000 		.4byte	.LVL239
 14388 0f00 0100     		.2byte	0x1
 14389 0f02 55       		.byte	0x55
 14390 0f03 AA010000 		.4byte	.LVL239
 14391 0f07 D8010000 		.4byte	.LVL244
 14392 0f0b 0300     		.2byte	0x3
 14393 0f0d 75       		.byte	0x75
 14394 0f0e 7E       		.sleb128 -2
 14395 0f0f 9F       		.byte	0x9f
 14396 0f10 DA010000 		.4byte	.LVL245
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 351


 14397 0f14 EA010000 		.4byte	.LVL246
 14398 0f18 0300     		.2byte	0x3
 14399 0f1a 75       		.byte	0x75
 14400 0f1b 7E       		.sleb128 -2
 14401 0f1c 9F       		.byte	0x9f
 14402 0f1d EA010000 		.4byte	.LVL246
 14403 0f21 EC010000 		.4byte	.LVL247
 14404 0f25 0600     		.2byte	0x6
 14405 0f27 74       		.byte	0x74
 14406 0f28 14       		.sleb128 20
 14407 0f29 06       		.byte	0x6
 14408 0f2a 32       		.byte	0x32
 14409 0f2b 1C       		.byte	0x1c
 14410 0f2c 9F       		.byte	0x9f
 14411 0f2d EC010000 		.4byte	.LVL247
 14412 0f31 F4010000 		.4byte	.LVL248
 14413 0f35 0300     		.2byte	0x3
 14414 0f37 75       		.byte	0x75
 14415 0f38 7E       		.sleb128 -2
 14416 0f39 9F       		.byte	0x9f
 14417 0f3a F4010000 		.4byte	.LVL248
 14418 0f3e F8010000 		.4byte	.LVL249
 14419 0f42 0600     		.2byte	0x6
 14420 0f44 74       		.byte	0x74
 14421 0f45 14       		.sleb128 20
 14422 0f46 06       		.byte	0x6
 14423 0f47 32       		.byte	0x32
 14424 0f48 1C       		.byte	0x1c
 14425 0f49 9F       		.byte	0x9f
 14426 0f4a BA020000 		.4byte	.LVL281
 14427 0f4e C2020000 		.4byte	.LVL285
 14428 0f52 0100     		.2byte	0x1
 14429 0f54 55       		.byte	0x55
 14430 0f55 C2020000 		.4byte	.LVL285
 14431 0f59 CE020000 		.4byte	.LVL288
 14432 0f5d 0300     		.2byte	0x3
 14433 0f5f 75       		.byte	0x75
 14434 0f60 7E       		.sleb128 -2
 14435 0f61 9F       		.byte	0x9f
 14436 0f62 00000000 		.4byte	0
 14437 0f66 00000000 		.4byte	0
 14438              	.LLST72:
 14439 0f6a D8010000 		.4byte	.LVL244
 14440 0f6e DA010000 		.4byte	.LVL245
 14441 0f72 0100     		.2byte	0x1
 14442 0f74 55       		.byte	0x55
 14443 0f75 F8010000 		.4byte	.LVL249
 14444 0f79 FC010000 		.4byte	.LVL250
 14445 0f7d 0100     		.2byte	0x1
 14446 0f7f 55       		.byte	0x55
 14447 0f80 FC010000 		.4byte	.LVL250
 14448 0f84 7E020000 		.4byte	.LVL258
 14449 0f88 0400     		.2byte	0x4
 14450 0f8a 75       		.byte	0x75
 14451 0f8b 817C     		.sleb128 -511
 14452 0f8d 9F       		.byte	0x9f
 14453 0f8e CE020000 		.4byte	.LVL288
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 352


 14454 0f92 D0020000 		.4byte	.LVL289
 14455 0f96 0400     		.2byte	0x4
 14456 0f98 75       		.byte	0x75
 14457 0f99 817C     		.sleb128 -511
 14458 0f9b 9F       		.byte	0x9f
 14459 0f9c 00000000 		.4byte	0
 14460 0fa0 00000000 		.4byte	0
 14461              	.LLST73:
 14462 0fa4 60010000 		.4byte	.LVL231
 14463 0fa8 BE010000 		.4byte	.LVL241
 14464 0fac 0100     		.2byte	0x1
 14465 0fae 50       		.byte	0x50
 14466 0faf DA010000 		.4byte	.LVL245
 14467 0fb3 F8010000 		.4byte	.LVL249
 14468 0fb7 0100     		.2byte	0x1
 14469 0fb9 50       		.byte	0x50
 14470 0fba B2020000 		.4byte	.LVL277
 14471 0fbe B4020000 		.4byte	.LVL278
 14472 0fc2 0100     		.2byte	0x1
 14473 0fc4 50       		.byte	0x50
 14474 0fc5 B6020000 		.4byte	.LVL279
 14475 0fc9 B8020000 		.4byte	.LVL280
 14476 0fcd 0100     		.2byte	0x1
 14477 0fcf 50       		.byte	0x50
 14478 0fd0 BA020000 		.4byte	.LVL281
 14479 0fd4 BC020000 		.4byte	.LVL282
 14480 0fd8 0100     		.2byte	0x1
 14481 0fda 50       		.byte	0x50
 14482 0fdb BE020000 		.4byte	.LVL283
 14483 0fdf C0020000 		.4byte	.LVL284
 14484 0fe3 0100     		.2byte	0x1
 14485 0fe5 50       		.byte	0x50
 14486 0fe6 CA020000 		.4byte	.LVL286
 14487 0fea CC020000 		.4byte	.LVL287
 14488 0fee 0100     		.2byte	0x1
 14489 0ff0 50       		.byte	0x50
 14490 0ff1 00000000 		.4byte	0
 14491 0ff5 00000000 		.4byte	0
 14492              	.LLST74:
 14493 0ff9 1E000000 		.4byte	.LVL191
 14494 0ffd 7E020000 		.4byte	.LVL258
 14495 1001 0100     		.2byte	0x1
 14496 1003 54       		.byte	0x54
 14497 1004 82020000 		.4byte	.LVL260
 14498 1008 D0020000 		.4byte	.LVL289
 14499 100c 0100     		.2byte	0x1
 14500 100e 54       		.byte	0x54
 14501 100f 00000000 		.4byte	0
 14502 1013 00000000 		.4byte	0
 14503              	.LLST75:
 14504 1017 7A000000 		.4byte	.LVL201
 14505 101b A2000000 		.4byte	.LVL208
 14506 101f 0100     		.2byte	0x1
 14507 1021 55       		.byte	0x55
 14508 1022 A4000000 		.4byte	.LVL209
 14509 1026 CC000000 		.4byte	.LVL215
 14510 102a 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 353


 14511 102c 55       		.byte	0x55
 14512 102d 00000000 		.4byte	0
 14513 1031 00000000 		.4byte	0
 14514              	.LLST76:
 14515 1035 00000000 		.4byte	.LVL290
 14516 1039 2F000000 		.4byte	.LVL295-1
 14517 103d 0100     		.2byte	0x1
 14518 103f 50       		.byte	0x50
 14519 1040 2F000000 		.4byte	.LVL295-1
 14520 1044 98000000 		.4byte	.LVL302
 14521 1048 0100     		.2byte	0x1
 14522 104a 56       		.byte	0x56
 14523 104b 98000000 		.4byte	.LVL302
 14524 104f A1000000 		.4byte	.LVL304-1
 14525 1053 0100     		.2byte	0x1
 14526 1055 50       		.byte	0x50
 14527 1056 A1000000 		.4byte	.LVL304-1
 14528 105a BE000000 		.4byte	.LVL307
 14529 105e 0100     		.2byte	0x1
 14530 1060 56       		.byte	0x56
 14531 1061 BE000000 		.4byte	.LVL307
 14532 1065 C7000000 		.4byte	.LVL309-1
 14533 1069 0100     		.2byte	0x1
 14534 106b 50       		.byte	0x50
 14535 106c C7000000 		.4byte	.LVL309-1
 14536 1070 F4000000 		.4byte	.LVL317
 14537 1074 0100     		.2byte	0x1
 14538 1076 56       		.byte	0x56
 14539 1077 F4000000 		.4byte	.LVL317
 14540 107b FE000000 		.4byte	.LVL318
 14541 107f 0100     		.2byte	0x1
 14542 1081 50       		.byte	0x50
 14543 1082 FE000000 		.4byte	.LVL318
 14544 1086 04010000 		.4byte	.LFE15
 14545 108a 0400     		.2byte	0x4
 14546 108c F3       		.byte	0xf3
 14547 108d 01       		.uleb128 0x1
 14548 108e 50       		.byte	0x50
 14549 108f 9F       		.byte	0x9f
 14550 1090 00000000 		.4byte	0
 14551 1094 00000000 		.4byte	0
 14552              	.LLST77:
 14553 1098 00000000 		.4byte	.LVL290
 14554 109c 28000000 		.4byte	.LVL294
 14555 10a0 0100     		.2byte	0x1
 14556 10a2 51       		.byte	0x51
 14557 10a3 28000000 		.4byte	.LVL294
 14558 10a7 46000000 		.4byte	.LVL298
 14559 10ab 0100     		.2byte	0x1
 14560 10ad 54       		.byte	0x54
 14561 10ae 46000000 		.4byte	.LVL298
 14562 10b2 98000000 		.4byte	.LVL302
 14563 10b6 0400     		.2byte	0x4
 14564 10b8 F3       		.byte	0xf3
 14565 10b9 01       		.uleb128 0x1
 14566 10ba 51       		.byte	0x51
 14567 10bb 9F       		.byte	0x9f
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 354


 14568 10bc 98000000 		.4byte	.LVL302
 14569 10c0 9A000000 		.4byte	.LVL303
 14570 10c4 0100     		.2byte	0x1
 14571 10c6 51       		.byte	0x51
 14572 10c7 9A000000 		.4byte	.LVL303
 14573 10cb BE000000 		.4byte	.LVL307
 14574 10cf 0100     		.2byte	0x1
 14575 10d1 54       		.byte	0x54
 14576 10d2 BE000000 		.4byte	.LVL307
 14577 10d6 C0000000 		.4byte	.LVL308
 14578 10da 0100     		.2byte	0x1
 14579 10dc 51       		.byte	0x51
 14580 10dd C0000000 		.4byte	.LVL308
 14581 10e1 DC000000 		.4byte	.LVL311
 14582 10e5 0100     		.2byte	0x1
 14583 10e7 54       		.byte	0x54
 14584 10e8 DC000000 		.4byte	.LVL311
 14585 10ec F4000000 		.4byte	.LVL317
 14586 10f0 0400     		.2byte	0x4
 14587 10f2 F3       		.byte	0xf3
 14588 10f3 01       		.uleb128 0x1
 14589 10f4 51       		.byte	0x51
 14590 10f5 9F       		.byte	0x9f
 14591 10f6 F4000000 		.4byte	.LVL317
 14592 10fa FE000000 		.4byte	.LVL318
 14593 10fe 0100     		.2byte	0x1
 14594 1100 51       		.byte	0x51
 14595 1101 FE000000 		.4byte	.LVL318
 14596 1105 04010000 		.4byte	.LFE15
 14597 1109 0400     		.2byte	0x4
 14598 110b F3       		.byte	0xf3
 14599 110c 01       		.uleb128 0x1
 14600 110d 51       		.byte	0x51
 14601 110e 9F       		.byte	0x9f
 14602 110f 00000000 		.4byte	0
 14603 1113 00000000 		.4byte	0
 14604              	.LLST78:
 14605 1117 00000000 		.4byte	.LVL290
 14606 111b 2F000000 		.4byte	.LVL295-1
 14607 111f 0100     		.2byte	0x1
 14608 1121 52       		.byte	0x52
 14609 1122 2F000000 		.4byte	.LVL295-1
 14610 1126 98000000 		.4byte	.LVL302
 14611 112a 0100     		.2byte	0x1
 14612 112c 57       		.byte	0x57
 14613 112d 98000000 		.4byte	.LVL302
 14614 1131 A1000000 		.4byte	.LVL304-1
 14615 1135 0100     		.2byte	0x1
 14616 1137 52       		.byte	0x52
 14617 1138 A1000000 		.4byte	.LVL304-1
 14618 113c BE000000 		.4byte	.LVL307
 14619 1140 0100     		.2byte	0x1
 14620 1142 57       		.byte	0x57
 14621 1143 BE000000 		.4byte	.LVL307
 14622 1147 C7000000 		.4byte	.LVL309-1
 14623 114b 0100     		.2byte	0x1
 14624 114d 52       		.byte	0x52
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 355


 14625 114e C7000000 		.4byte	.LVL309-1
 14626 1152 D0000000 		.4byte	.LVL310
 14627 1156 0100     		.2byte	0x1
 14628 1158 57       		.byte	0x57
 14629 1159 D0000000 		.4byte	.LVL310
 14630 115d E6000000 		.4byte	.LVL314
 14631 1161 0400     		.2byte	0x4
 14632 1163 F3       		.byte	0xf3
 14633 1164 01       		.uleb128 0x1
 14634 1165 52       		.byte	0x52
 14635 1166 9F       		.byte	0x9f
 14636 1167 E6000000 		.4byte	.LVL314
 14637 116b E8000000 		.4byte	.LVL315
 14638 116f 0600     		.2byte	0x6
 14639 1171 77       		.byte	0x77
 14640 1172 00       		.sleb128 0
 14641 1173 71       		.byte	0x71
 14642 1174 00       		.sleb128 0
 14643 1175 21       		.byte	0x21
 14644 1176 9F       		.byte	0x9f
 14645 1177 E8000000 		.4byte	.LVL315
 14646 117b ED000000 		.4byte	.LVL316-1
 14647 117f 0100     		.2byte	0x1
 14648 1181 51       		.byte	0x51
 14649 1182 F4000000 		.4byte	.LVL317
 14650 1186 FE000000 		.4byte	.LVL318
 14651 118a 0100     		.2byte	0x1
 14652 118c 52       		.byte	0x52
 14653 118d 00000000 		.4byte	0
 14654 1191 00000000 		.4byte	0
 14655              	.LLST79:
 14656 1195 22000000 		.4byte	.LVL292
 14657 1199 26000000 		.4byte	.LVL293
 14658 119d 0100     		.2byte	0x1
 14659 119f 51       		.byte	0x51
 14660 11a0 26000000 		.4byte	.LVL293
 14661 11a4 3E000000 		.4byte	.LVL296
 14662 11a8 0100     		.2byte	0x1
 14663 11aa 58       		.byte	0x58
 14664 11ab 3E000000 		.4byte	.LVL296
 14665 11af 78000000 		.4byte	.LVL301
 14666 11b3 0100     		.2byte	0x1
 14667 11b5 59       		.byte	0x59
 14668 11b6 78000000 		.4byte	.LVL301
 14669 11ba 98000000 		.4byte	.LVL302
 14670 11be 0C00     		.2byte	0xc
 14671 11c0 F3       		.byte	0xf3
 14672 11c1 01       		.uleb128 0x1
 14673 11c2 51       		.byte	0x51
 14674 11c3 31       		.byte	0x31
 14675 11c4 25       		.byte	0x25
 14676 11c5 F3       		.byte	0xf3
 14677 11c6 01       		.uleb128 0x1
 14678 11c7 51       		.byte	0x51
 14679 11c8 22       		.byte	0x22
 14680 11c9 23       		.byte	0x23
 14681 11ca 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 356


 14682 11cb 9F       		.byte	0x9f
 14683 11cc 00000000 		.4byte	0
 14684 11d0 00000000 		.4byte	0
 14685              	.LLST80:
 14686 11d4 42000000 		.4byte	.LVL297
 14687 11d8 78000000 		.4byte	.LVL301
 14688 11dc 0600     		.2byte	0x6
 14689 11de 7A       		.byte	0x7a
 14690 11df 00       		.sleb128 0
 14691 11e0 78       		.byte	0x78
 14692 11e1 00       		.sleb128 0
 14693 11e2 22       		.byte	0x22
 14694 11e3 9F       		.byte	0x9f
 14695 11e4 78000000 		.4byte	.LVL301
 14696 11e8 98000000 		.4byte	.LVL302
 14697 11ec 0600     		.2byte	0x6
 14698 11ee 7A       		.byte	0x7a
 14699 11ef 00       		.sleb128 0
 14700 11f0 79       		.byte	0x79
 14701 11f1 00       		.sleb128 0
 14702 11f2 22       		.byte	0x22
 14703 11f3 9F       		.byte	0x9f
 14704 11f4 00000000 		.4byte	0
 14705 11f8 00000000 		.4byte	0
 14706              	.LLST81:
 14707 11fc 04000000 		.4byte	.LVL291
 14708 1200 30000000 		.4byte	.LVL295
 14709 1204 0200     		.2byte	0x2
 14710 1206 32       		.byte	0x32
 14711 1207 9F       		.byte	0x9f
 14712 1208 30000000 		.4byte	.LVL295
 14713 120c 6A000000 		.4byte	.LVL299
 14714 1210 0100     		.2byte	0x1
 14715 1212 50       		.byte	0x50
 14716 1213 6E000000 		.4byte	.LVL300
 14717 1217 98000000 		.4byte	.LVL302
 14718 121b 0100     		.2byte	0x1
 14719 121d 50       		.byte	0x50
 14720 121e 98000000 		.4byte	.LVL302
 14721 1222 A2000000 		.4byte	.LVL304
 14722 1226 0200     		.2byte	0x2
 14723 1228 32       		.byte	0x32
 14724 1229 9F       		.byte	0x9f
 14725 122a A2000000 		.4byte	.LVL304
 14726 122e AA000000 		.4byte	.LVL305
 14727 1232 0100     		.2byte	0x1
 14728 1234 50       		.byte	0x50
 14729 1235 BE000000 		.4byte	.LVL307
 14730 1239 C8000000 		.4byte	.LVL309
 14731 123d 0200     		.2byte	0x2
 14732 123f 32       		.byte	0x32
 14733 1240 9F       		.byte	0x9f
 14734 1241 C8000000 		.4byte	.LVL309
 14735 1245 DE000000 		.4byte	.LVL312
 14736 1249 0100     		.2byte	0x1
 14737 124b 50       		.byte	0x50
 14738 124c F4000000 		.4byte	.LVL317
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 357


 14739 1250 FE000000 		.4byte	.LVL318
 14740 1254 0200     		.2byte	0x2
 14741 1256 32       		.byte	0x32
 14742 1257 9F       		.byte	0x9f
 14743 1258 FE000000 		.4byte	.LVL318
 14744 125c 04010000 		.4byte	.LFE15
 14745 1260 0100     		.2byte	0x1
 14746 1262 55       		.byte	0x55
 14747 1263 00000000 		.4byte	0
 14748 1267 00000000 		.4byte	0
 14749              	.LLST82:
 14750 126b 00000000 		.4byte	.LVL319
 14751 126f 2A000000 		.4byte	.LVL325
 14752 1273 0100     		.2byte	0x1
 14753 1275 50       		.byte	0x50
 14754 1276 2A000000 		.4byte	.LVL325
 14755 127a 6C000000 		.4byte	.LVL334
 14756 127e 0400     		.2byte	0x4
 14757 1280 F3       		.byte	0xf3
 14758 1281 01       		.uleb128 0x1
 14759 1282 50       		.byte	0x50
 14760 1283 9F       		.byte	0x9f
 14761 1284 6C000000 		.4byte	.LVL334
 14762 1288 74000000 		.4byte	.LVL336
 14763 128c 0100     		.2byte	0x1
 14764 128e 50       		.byte	0x50
 14765 128f 74000000 		.4byte	.LVL336
 14766 1293 8C000000 		.4byte	.LVL339
 14767 1297 0400     		.2byte	0x4
 14768 1299 F3       		.byte	0xf3
 14769 129a 01       		.uleb128 0x1
 14770 129b 50       		.byte	0x50
 14771 129c 9F       		.byte	0x9f
 14772 129d 8C000000 		.4byte	.LVL339
 14773 12a1 94000000 		.4byte	.LVL341
 14774 12a5 0100     		.2byte	0x1
 14775 12a7 50       		.byte	0x50
 14776 12a8 94000000 		.4byte	.LVL341
 14777 12ac B0000000 		.4byte	.LVL345
 14778 12b0 0400     		.2byte	0x4
 14779 12b2 F3       		.byte	0xf3
 14780 12b3 01       		.uleb128 0x1
 14781 12b4 50       		.byte	0x50
 14782 12b5 9F       		.byte	0x9f
 14783 12b6 B0000000 		.4byte	.LVL345
 14784 12ba B2000000 		.4byte	.LVL346
 14785 12be 0100     		.2byte	0x1
 14786 12c0 50       		.byte	0x50
 14787 12c1 B2000000 		.4byte	.LVL346
 14788 12c5 B4000000 		.4byte	.LVL347
 14789 12c9 0400     		.2byte	0x4
 14790 12cb F3       		.byte	0xf3
 14791 12cc 01       		.uleb128 0x1
 14792 12cd 50       		.byte	0x50
 14793 12ce 9F       		.byte	0x9f
 14794 12cf B4000000 		.4byte	.LVL347
 14795 12d3 B6000000 		.4byte	.LVL348
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 358


 14796 12d7 0100     		.2byte	0x1
 14797 12d9 50       		.byte	0x50
 14798 12da B6000000 		.4byte	.LVL348
 14799 12de B8000000 		.4byte	.LVL349
 14800 12e2 0400     		.2byte	0x4
 14801 12e4 F3       		.byte	0xf3
 14802 12e5 01       		.uleb128 0x1
 14803 12e6 50       		.byte	0x50
 14804 12e7 9F       		.byte	0x9f
 14805 12e8 B8000000 		.4byte	.LVL349
 14806 12ec BA000000 		.4byte	.LVL350
 14807 12f0 0100     		.2byte	0x1
 14808 12f2 50       		.byte	0x50
 14809 12f3 BA000000 		.4byte	.LVL350
 14810 12f7 D4000000 		.4byte	.LFE14
 14811 12fb 0400     		.2byte	0x4
 14812 12fd F3       		.byte	0xf3
 14813 12fe 01       		.uleb128 0x1
 14814 12ff 50       		.byte	0x50
 14815 1300 9F       		.byte	0x9f
 14816 1301 00000000 		.4byte	0
 14817 1305 00000000 		.4byte	0
 14818              	.LLST83:
 14819 1309 00000000 		.4byte	.LVL319
 14820 130d 24000000 		.4byte	.LVL324
 14821 1311 0100     		.2byte	0x1
 14822 1313 51       		.byte	0x51
 14823 1314 24000000 		.4byte	.LVL324
 14824 1318 6C000000 		.4byte	.LVL334
 14825 131c 0100     		.2byte	0x1
 14826 131e 54       		.byte	0x54
 14827 131f 6C000000 		.4byte	.LVL334
 14828 1323 6E000000 		.4byte	.LVL335
 14829 1327 0100     		.2byte	0x1
 14830 1329 51       		.byte	0x51
 14831 132a 6E000000 		.4byte	.LVL335
 14832 132e 8C000000 		.4byte	.LVL339
 14833 1332 0100     		.2byte	0x1
 14834 1334 54       		.byte	0x54
 14835 1335 8C000000 		.4byte	.LVL339
 14836 1339 8E000000 		.4byte	.LVL340
 14837 133d 0100     		.2byte	0x1
 14838 133f 51       		.byte	0x51
 14839 1340 8E000000 		.4byte	.LVL340
 14840 1344 B0000000 		.4byte	.LVL345
 14841 1348 0100     		.2byte	0x1
 14842 134a 54       		.byte	0x54
 14843 134b B0000000 		.4byte	.LVL345
 14844 134f BC000000 		.4byte	.LVL351
 14845 1353 0100     		.2byte	0x1
 14846 1355 51       		.byte	0x51
 14847 1356 BC000000 		.4byte	.LVL351
 14848 135a D4000000 		.4byte	.LFE14
 14849 135e 0100     		.2byte	0x1
 14850 1360 54       		.byte	0x54
 14851 1361 00000000 		.4byte	0
 14852 1365 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 359


 14853              	.LLST84:
 14854 1369 3E000000 		.4byte	.LVL328
 14855 136d 5C000000 		.4byte	.LVL330
 14856 1371 0100     		.2byte	0x1
 14857 1373 55       		.byte	0x55
 14858 1374 5C000000 		.4byte	.LVL330
 14859 1378 64000000 		.4byte	.LVL331
 14860 137c 0100     		.2byte	0x1
 14861 137e 50       		.byte	0x50
 14862 137f 64000000 		.4byte	.LVL331
 14863 1383 66000000 		.4byte	.LVL332
 14864 1387 0D00     		.2byte	0xd
 14865 1389 73       		.byte	0x73
 14866 138a 30       		.sleb128 48
 14867 138b 94       		.byte	0x94
 14868 138c 01       		.byte	0x1
 14869 138d 08       		.byte	0x8
 14870 138e FF       		.byte	0xff
 14871 138f 1A       		.byte	0x1a
 14872 1390 38       		.byte	0x38
 14873 1391 24       		.byte	0x24
 14874 1392 75       		.byte	0x75
 14875 1393 00       		.sleb128 0
 14876 1394 21       		.byte	0x21
 14877 1395 9F       		.byte	0x9f
 14878 1396 66000000 		.4byte	.LVL332
 14879 139a 6A000000 		.4byte	.LVL333
 14880 139e 0100     		.2byte	0x1
 14881 13a0 50       		.byte	0x50
 14882 13a1 6A000000 		.4byte	.LVL333
 14883 13a5 6C000000 		.4byte	.LVL334
 14884 13a9 0D00     		.2byte	0xd
 14885 13ab 73       		.byte	0x73
 14886 13ac 30       		.sleb128 48
 14887 13ad 94       		.byte	0x94
 14888 13ae 01       		.byte	0x1
 14889 13af 08       		.byte	0x8
 14890 13b0 FF       		.byte	0xff
 14891 13b1 1A       		.byte	0x1a
 14892 13b2 38       		.byte	0x38
 14893 13b3 24       		.byte	0x24
 14894 13b4 75       		.byte	0x75
 14895 13b5 00       		.sleb128 0
 14896 13b6 21       		.byte	0x21
 14897 13b7 9F       		.byte	0x9f
 14898 13b8 C2000000 		.4byte	.LVL352
 14899 13bc C8000000 		.4byte	.LVL353
 14900 13c0 0100     		.2byte	0x1
 14901 13c2 55       		.byte	0x55
 14902 13c3 00000000 		.4byte	0
 14903 13c7 00000000 		.4byte	0
 14904              	.LLST85:
 14905 13cb 1E000000 		.4byte	.LVL322
 14906 13cf 22000000 		.4byte	.LVL323
 14907 13d3 0100     		.2byte	0x1
 14908 13d5 51       		.byte	0x51
 14909 13d6 22000000 		.4byte	.LVL323
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 360


 14910 13da 34000000 		.4byte	.LVL327
 14911 13de 0100     		.2byte	0x1
 14912 13e0 55       		.byte	0x55
 14913 13e1 34000000 		.4byte	.LVL327
 14914 13e5 6C000000 		.4byte	.LVL334
 14915 13e9 0100     		.2byte	0x1
 14916 13eb 57       		.byte	0x57
 14917 13ec BC000000 		.4byte	.LVL351
 14918 13f0 C2000000 		.4byte	.LVL352
 14919 13f4 0100     		.2byte	0x1
 14920 13f6 55       		.byte	0x55
 14921 13f7 C2000000 		.4byte	.LVL352
 14922 13fb C8000000 		.4byte	.LVL353
 14923 13ff 0100     		.2byte	0x1
 14924 1401 57       		.byte	0x57
 14925 1402 00000000 		.4byte	0
 14926 1406 00000000 		.4byte	0
 14927              	.LLST86:
 14928 140a 10000000 		.4byte	.LVL321
 14929 140e 8A000000 		.4byte	.LVL338
 14930 1412 0300     		.2byte	0x3
 14931 1414 09       		.byte	0x9
 14932 1415 FF       		.byte	0xff
 14933 1416 9F       		.byte	0x9f
 14934 1417 8A000000 		.4byte	.LVL338
 14935 141b 8C000000 		.4byte	.LVL339
 14936 141f 0100     		.2byte	0x1
 14937 1421 50       		.byte	0x50
 14938 1422 8C000000 		.4byte	.LVL339
 14939 1426 AE000000 		.4byte	.LVL344
 14940 142a 0300     		.2byte	0x3
 14941 142c 09       		.byte	0x9
 14942 142d FF       		.byte	0xff
 14943 142e 9F       		.byte	0x9f
 14944 142f AE000000 		.4byte	.LVL344
 14945 1433 B0000000 		.4byte	.LVL345
 14946 1437 0100     		.2byte	0x1
 14947 1439 50       		.byte	0x50
 14948 143a B8000000 		.4byte	.LVL349
 14949 143e D2000000 		.4byte	.LVL355
 14950 1442 0300     		.2byte	0x3
 14951 1444 09       		.byte	0x9
 14952 1445 FF       		.byte	0xff
 14953 1446 9F       		.byte	0x9f
 14954 1447 D2000000 		.4byte	.LVL355
 14955 144b D4000000 		.4byte	.LFE14
 14956 144f 0100     		.2byte	0x1
 14957 1451 50       		.byte	0x50
 14958 1452 00000000 		.4byte	0
 14959 1456 00000000 		.4byte	0
 14960              	.LLST87:
 14961 145a 00000000 		.4byte	.LVL356
 14962 145e 3E000000 		.4byte	.LVL361
 14963 1462 0100     		.2byte	0x1
 14964 1464 50       		.byte	0x50
 14965 1465 3E000000 		.4byte	.LVL361
 14966 1469 88000000 		.4byte	.LVL368
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 361


 14967 146d 0100     		.2byte	0x1
 14968 146f 56       		.byte	0x56
 14969 1470 88000000 		.4byte	.LVL368
 14970 1474 8A000000 		.4byte	.LVL369
 14971 1478 0100     		.2byte	0x1
 14972 147a 50       		.byte	0x50
 14973 147b 8A000000 		.4byte	.LVL369
 14974 147f 8E000000 		.4byte	.LVL370
 14975 1483 0400     		.2byte	0x4
 14976 1485 F3       		.byte	0xf3
 14977 1486 01       		.uleb128 0x1
 14978 1487 50       		.byte	0x50
 14979 1488 9F       		.byte	0x9f
 14980 1489 8E000000 		.4byte	.LVL370
 14981 148d 90000000 		.4byte	.LVL371
 14982 1491 0100     		.2byte	0x1
 14983 1493 50       		.byte	0x50
 14984 1494 90000000 		.4byte	.LVL371
 14985 1498 94000000 		.4byte	.LVL372
 14986 149c 0100     		.2byte	0x1
 14987 149e 56       		.byte	0x56
 14988 149f 94000000 		.4byte	.LVL372
 14989 14a3 96000000 		.4byte	.LVL373
 14990 14a7 0100     		.2byte	0x1
 14991 14a9 50       		.byte	0x50
 14992 14aa 96000000 		.4byte	.LVL373
 14993 14ae B2000000 		.4byte	.LFE19
 14994 14b2 0100     		.2byte	0x1
 14995 14b4 56       		.byte	0x56
 14996 14b5 00000000 		.4byte	0
 14997 14b9 00000000 		.4byte	0
 14998              	.LLST88:
 14999 14bd 00000000 		.4byte	.LVL356
 15000 14c1 3E000000 		.4byte	.LVL361
 15001 14c5 0100     		.2byte	0x1
 15002 14c7 51       		.byte	0x51
 15003 14c8 3E000000 		.4byte	.LVL361
 15004 14cc 7E000000 		.4byte	.LVL367
 15005 14d0 0100     		.2byte	0x1
 15006 14d2 54       		.byte	0x54
 15007 14d3 88000000 		.4byte	.LVL368
 15008 14d7 9A000000 		.4byte	.LVL374
 15009 14db 0100     		.2byte	0x1
 15010 14dd 51       		.byte	0x51
 15011 14de 9A000000 		.4byte	.LVL374
 15012 14e2 B2000000 		.4byte	.LFE19
 15013 14e6 0100     		.2byte	0x1
 15014 14e8 54       		.byte	0x54
 15015 14e9 00000000 		.4byte	0
 15016 14ed 00000000 		.4byte	0
 15017              	.LLST89:
 15018 14f1 3C000000 		.4byte	.LVL360
 15019 14f5 6A000000 		.4byte	.LVL366
 15020 14f9 0100     		.2byte	0x1
 15021 14fb 58       		.byte	0x58
 15022 14fc 9A000000 		.4byte	.LVL374
 15023 1500 AC000000 		.4byte	.LVL380
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 362


 15024 1504 0100     		.2byte	0x1
 15025 1506 58       		.byte	0x58
 15026 1507 00000000 		.4byte	0
 15027 150b 00000000 		.4byte	0
 15028              	.LLST90:
 15029 150f 1A000000 		.4byte	.LVL358
 15030 1513 48000000 		.4byte	.LVL363
 15031 1517 0100     		.2byte	0x1
 15032 1519 55       		.byte	0x55
 15033 151a 48000000 		.4byte	.LVL363
 15034 151e 5C000000 		.4byte	.LVL364
 15035 1522 0100     		.2byte	0x1
 15036 1524 50       		.byte	0x50
 15037 1525 5C000000 		.4byte	.LVL364
 15038 1529 88000000 		.4byte	.LVL368
 15039 152d 0100     		.2byte	0x1
 15040 152f 55       		.byte	0x55
 15041 1530 94000000 		.4byte	.LVL372
 15042 1534 9A000000 		.4byte	.LVL374
 15043 1538 0100     		.2byte	0x1
 15044 153a 55       		.byte	0x55
 15045 153b 9A000000 		.4byte	.LVL374
 15046 153f 9C000000 		.4byte	.LVL375
 15047 1543 0100     		.2byte	0x1
 15048 1545 50       		.byte	0x50
 15049 1546 9C000000 		.4byte	.LVL375
 15050 154a A0000000 		.4byte	.LVL376
 15051 154e 0100     		.2byte	0x1
 15052 1550 55       		.byte	0x55
 15053 1551 A0000000 		.4byte	.LVL376
 15054 1555 A2000000 		.4byte	.LVL377
 15055 1559 0100     		.2byte	0x1
 15056 155b 50       		.byte	0x50
 15057 155c A2000000 		.4byte	.LVL377
 15058 1560 A6000000 		.4byte	.LVL378
 15059 1564 0100     		.2byte	0x1
 15060 1566 55       		.byte	0x55
 15061 1567 A6000000 		.4byte	.LVL378
 15062 156b A8000000 		.4byte	.LVL379
 15063 156f 0100     		.2byte	0x1
 15064 1571 50       		.byte	0x50
 15065 1572 A8000000 		.4byte	.LVL379
 15066 1576 B2000000 		.4byte	.LFE19
 15067 157a 0100     		.2byte	0x1
 15068 157c 55       		.byte	0x55
 15069 157d 00000000 		.4byte	0
 15070 1581 00000000 		.4byte	0
 15071              	.LLST91:
 15072 1585 00000000 		.4byte	.LVL381
 15073 1589 1B000000 		.4byte	.LVL385-1
 15074 158d 0100     		.2byte	0x1
 15075 158f 50       		.byte	0x50
 15076 1590 1B000000 		.4byte	.LVL385-1
 15077 1594 30000000 		.4byte	.LVL386
 15078 1598 0100     		.2byte	0x1
 15079 159a 57       		.byte	0x57
 15080 159b 30000000 		.4byte	.LVL386
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 363


 15081 159f 36000000 		.4byte	.LVL389
 15082 15a3 0100     		.2byte	0x1
 15083 15a5 50       		.byte	0x50
 15084 15a6 36000000 		.4byte	.LVL389
 15085 15aa 14010000 		.4byte	.LFE17
 15086 15ae 0100     		.2byte	0x1
 15087 15b0 57       		.byte	0x57
 15088 15b1 00000000 		.4byte	0
 15089 15b5 00000000 		.4byte	0
 15090              	.LLST92:
 15091 15b9 00000000 		.4byte	.LVL381
 15092 15bd 1B000000 		.4byte	.LVL385-1
 15093 15c1 0100     		.2byte	0x1
 15094 15c3 51       		.byte	0x51
 15095 15c4 1B000000 		.4byte	.LVL385-1
 15096 15c8 30000000 		.4byte	.LVL386
 15097 15cc 0100     		.2byte	0x1
 15098 15ce 58       		.byte	0x58
 15099 15cf 30000000 		.4byte	.LVL386
 15100 15d3 36000000 		.4byte	.LVL389
 15101 15d7 0100     		.2byte	0x1
 15102 15d9 51       		.byte	0x51
 15103 15da 36000000 		.4byte	.LVL389
 15104 15de 14010000 		.4byte	.LFE17
 15105 15e2 0100     		.2byte	0x1
 15106 15e4 58       		.byte	0x58
 15107 15e5 00000000 		.4byte	0
 15108 15e9 00000000 		.4byte	0
 15109              	.LLST93:
 15110 15ed 1C000000 		.4byte	.LVL385
 15111 15f1 30000000 		.4byte	.LVL386
 15112 15f5 0100     		.2byte	0x1
 15113 15f7 50       		.byte	0x50
 15114 15f8 52000000 		.4byte	.LVL393
 15115 15fc 60000000 		.4byte	.LVL394
 15116 1600 0100     		.2byte	0x1
 15117 1602 50       		.byte	0x50
 15118 1603 60000000 		.4byte	.LVL394
 15119 1607 6E000000 		.4byte	.LVL396
 15120 160b 0100     		.2byte	0x1
 15121 160d 53       		.byte	0x53
 15122 160e 72000000 		.4byte	.LVL397
 15123 1612 7A000000 		.4byte	.LVL401
 15124 1616 0100     		.2byte	0x1
 15125 1618 53       		.byte	0x53
 15126 1619 94000000 		.4byte	.LVL406
 15127 161d A6000000 		.4byte	.LVL407
 15128 1621 0100     		.2byte	0x1
 15129 1623 50       		.byte	0x50
 15130 1624 F4000000 		.4byte	.LVL414
 15131 1628 F6000000 		.4byte	.LVL415
 15132 162c 0100     		.2byte	0x1
 15133 162e 50       		.byte	0x50
 15134 162f 00010000 		.4byte	.LVL417
 15135 1633 0A010000 		.4byte	.LVL420
 15136 1637 0100     		.2byte	0x1
 15137 1639 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 364


 15138 163a 00000000 		.4byte	0
 15139 163e 00000000 		.4byte	0
 15140              	.LLST94:
 15141 1642 3C000000 		.4byte	.LVL390
 15142 1646 42000000 		.4byte	.LVL391
 15143 164a 0200     		.2byte	0x2
 15144 164c 30       		.byte	0x30
 15145 164d 9F       		.byte	0x9f
 15146 164e 42000000 		.4byte	.LVL391
 15147 1652 6C000000 		.4byte	.LVL395
 15148 1656 0100     		.2byte	0x1
 15149 1658 54       		.byte	0x54
 15150 1659 6E000000 		.4byte	.LVL396
 15151 165d 72000000 		.4byte	.LVL397
 15152 1661 0200     		.2byte	0x2
 15153 1663 30       		.byte	0x30
 15154 1664 9F       		.byte	0x9f
 15155 1665 72000000 		.4byte	.LVL397
 15156 1669 74000000 		.4byte	.LVL398
 15157 166d 0100     		.2byte	0x1
 15158 166f 54       		.byte	0x54
 15159 1670 76000000 		.4byte	.LVL399
 15160 1674 86000000 		.4byte	.LVL404
 15161 1678 0100     		.2byte	0x1
 15162 167a 54       		.byte	0x54
 15163 167b 86000000 		.4byte	.LVL404
 15164 167f 8C000000 		.4byte	.LVL405
 15165 1683 0200     		.2byte	0x2
 15166 1685 32       		.byte	0x32
 15167 1686 9F       		.byte	0x9f
 15168 1687 8C000000 		.4byte	.LVL405
 15169 168b F4000000 		.4byte	.LVL414
 15170 168f 0100     		.2byte	0x1
 15171 1691 54       		.byte	0x54
 15172 1692 FA000000 		.4byte	.LVL416
 15173 1696 00010000 		.4byte	.LVL417
 15174 169a 0200     		.2byte	0x2
 15175 169c 32       		.byte	0x32
 15176 169d 9F       		.byte	0x9f
 15177 169e 00010000 		.4byte	.LVL417
 15178 16a2 10010000 		.4byte	.LVL422
 15179 16a6 0100     		.2byte	0x1
 15180 16a8 54       		.byte	0x54
 15181 16a9 00000000 		.4byte	0
 15182 16ad 00000000 		.4byte	0
 15183              	.LLST95:
 15184 16b1 0E000000 		.4byte	.LVL383
 15185 16b5 18000000 		.4byte	.LVL384
 15186 16b9 0100     		.2byte	0x1
 15187 16bb 55       		.byte	0x55
 15188 16bc 30000000 		.4byte	.LVL386
 15189 16c0 32000000 		.4byte	.LVL387
 15190 16c4 0100     		.2byte	0x1
 15191 16c6 55       		.byte	0x55
 15192 16c7 32000000 		.4byte	.LVL387
 15193 16cb 34000000 		.4byte	.LVL388
 15194 16cf 0200     		.2byte	0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 365


 15195 16d1 76       		.byte	0x76
 15196 16d2 0C       		.sleb128 12
 15197 16d3 34000000 		.4byte	.LVL388
 15198 16d7 78000000 		.4byte	.LVL400
 15199 16db 0100     		.2byte	0x1
 15200 16dd 55       		.byte	0x55
 15201 16de 7A000000 		.4byte	.LVL401
 15202 16e2 F4000000 		.4byte	.LVL414
 15203 16e6 0100     		.2byte	0x1
 15204 16e8 55       		.byte	0x55
 15205 16e9 FA000000 		.4byte	.LVL416
 15206 16ed 10010000 		.4byte	.LVL422
 15207 16f1 0100     		.2byte	0x1
 15208 16f3 55       		.byte	0x55
 15209 16f4 00000000 		.4byte	0
 15210 16f8 00000000 		.4byte	0
 15211              	.LLST96:
 15212 16fc B2000000 		.4byte	.LVL408
 15213 1700 C2000000 		.4byte	.LVL409
 15214 1704 0100     		.2byte	0x1
 15215 1706 50       		.byte	0x50
 15216 1707 C8000000 		.4byte	.LVL411
 15217 170b D0000000 		.4byte	.LVL412
 15218 170f 0100     		.2byte	0x1
 15219 1711 53       		.byte	0x53
 15220 1712 E8000000 		.4byte	.LVL413
 15221 1716 F4000000 		.4byte	.LVL414
 15222 171a 0100     		.2byte	0x1
 15223 171c 53       		.byte	0x53
 15224 171d 0E010000 		.4byte	.LVL421
 15225 1721 10010000 		.4byte	.LVL422
 15226 1725 0100     		.2byte	0x1
 15227 1727 53       		.byte	0x53
 15228 1728 00000000 		.4byte	0
 15229 172c 00000000 		.4byte	0
 15230              	.LLST97:
 15231 1730 00000000 		.4byte	.LVL423
 15232 1734 1C000000 		.4byte	.LVL428
 15233 1738 0100     		.2byte	0x1
 15234 173a 50       		.byte	0x50
 15235 173b 1C000000 		.4byte	.LVL428
 15236 173f 64000000 		.4byte	.LVL436
 15237 1743 0100     		.2byte	0x1
 15238 1745 57       		.byte	0x57
 15239 1746 64000000 		.4byte	.LVL436
 15240 174a 66000000 		.4byte	.LVL437
 15241 174e 0100     		.2byte	0x1
 15242 1750 50       		.byte	0x50
 15243 1751 66000000 		.4byte	.LVL437
 15244 1755 68000000 		.4byte	.LVL438
 15245 1759 0400     		.2byte	0x4
 15246 175b F3       		.byte	0xf3
 15247 175c 01       		.uleb128 0x1
 15248 175d 50       		.byte	0x50
 15249 175e 9F       		.byte	0x9f
 15250 175f 68000000 		.4byte	.LVL438
 15251 1763 6A000000 		.4byte	.LVL439
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 366


 15252 1767 0100     		.2byte	0x1
 15253 1769 50       		.byte	0x50
 15254 176a 6A000000 		.4byte	.LVL439
 15255 176e 7C000000 		.4byte	.LFE16
 15256 1772 0100     		.2byte	0x1
 15257 1774 57       		.byte	0x57
 15258 1775 00000000 		.4byte	0
 15259 1779 00000000 		.4byte	0
 15260              	.LLST98:
 15261 177d 00000000 		.4byte	.LVL423
 15262 1781 0E000000 		.4byte	.LVL426
 15263 1785 0100     		.2byte	0x1
 15264 1787 51       		.byte	0x51
 15265 1788 0E000000 		.4byte	.LVL426
 15266 178c 5A000000 		.4byte	.LVL434
 15267 1790 0100     		.2byte	0x1
 15268 1792 56       		.byte	0x56
 15269 1793 5A000000 		.4byte	.LVL434
 15270 1797 64000000 		.4byte	.LVL436
 15271 179b 0100     		.2byte	0x1
 15272 179d 55       		.byte	0x55
 15273 179e 64000000 		.4byte	.LVL436
 15274 17a2 68000000 		.4byte	.LVL438
 15275 17a6 0100     		.2byte	0x1
 15276 17a8 51       		.byte	0x51
 15277 17a9 68000000 		.4byte	.LVL438
 15278 17ad 7C000000 		.4byte	.LFE16
 15279 17b1 0100     		.2byte	0x1
 15280 17b3 56       		.byte	0x56
 15281 17b4 00000000 		.4byte	0
 15282 17b8 00000000 		.4byte	0
 15283              	.LLST99:
 15284 17bc 00000000 		.4byte	.LVL423
 15285 17c0 1A000000 		.4byte	.LVL427
 15286 17c4 0100     		.2byte	0x1
 15287 17c6 52       		.byte	0x52
 15288 17c7 1A000000 		.4byte	.LVL427
 15289 17cb 1F000000 		.4byte	.LVL429-1
 15290 17cf 0100     		.2byte	0x1
 15291 17d1 51       		.byte	0x51
 15292 17d2 1F000000 		.4byte	.LVL429-1
 15293 17d6 64000000 		.4byte	.LVL436
 15294 17da 0400     		.2byte	0x4
 15295 17dc F3       		.byte	0xf3
 15296 17dd 01       		.uleb128 0x1
 15297 17de 52       		.byte	0x52
 15298 17df 9F       		.byte	0x9f
 15299 17e0 64000000 		.4byte	.LVL436
 15300 17e4 68000000 		.4byte	.LVL438
 15301 17e8 0100     		.2byte	0x1
 15302 17ea 52       		.byte	0x52
 15303 17eb 68000000 		.4byte	.LVL438
 15304 17ef 6C000000 		.4byte	.LVL440
 15305 17f3 0100     		.2byte	0x1
 15306 17f5 51       		.byte	0x51
 15307 17f6 6C000000 		.4byte	.LVL440
 15308 17fa 7C000000 		.4byte	.LFE16
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 367


 15309 17fe 0400     		.2byte	0x4
 15310 1800 F3       		.byte	0xf3
 15311 1801 01       		.uleb128 0x1
 15312 1802 52       		.byte	0x52
 15313 1803 9F       		.byte	0x9f
 15314 1804 00000000 		.4byte	0
 15315 1808 00000000 		.4byte	0
 15316              	.LLST100:
 15317 180c 04000000 		.4byte	.LVL424
 15318 1810 20000000 		.4byte	.LVL429
 15319 1814 0200     		.2byte	0x2
 15320 1816 30       		.byte	0x30
 15321 1817 9F       		.byte	0x9f
 15322 1818 20000000 		.4byte	.LVL429
 15323 181c 22000000 		.4byte	.LVL430
 15324 1820 0100     		.2byte	0x1
 15325 1822 50       		.byte	0x50
 15326 1823 42000000 		.4byte	.LVL433
 15327 1827 62000000 		.4byte	.LVL435
 15328 182b 0100     		.2byte	0x1
 15329 182d 50       		.byte	0x50
 15330 182e 64000000 		.4byte	.LVL436
 15331 1832 6C000000 		.4byte	.LVL440
 15332 1836 0200     		.2byte	0x2
 15333 1838 30       		.byte	0x30
 15334 1839 9F       		.byte	0x9f
 15335 183a 6C000000 		.4byte	.LVL440
 15336 183e 6E000000 		.4byte	.LVL441
 15337 1842 0100     		.2byte	0x1
 15338 1844 50       		.byte	0x50
 15339 1845 7A000000 		.4byte	.LVL447
 15340 1849 7C000000 		.4byte	.LFE16
 15341 184d 0100     		.2byte	0x1
 15342 184f 50       		.byte	0x50
 15343 1850 00000000 		.4byte	0
 15344 1854 00000000 		.4byte	0
 15345              	.LLST101:
 15346 1858 2A000000 		.4byte	.LVL431
 15347 185c 3E000000 		.4byte	.LVL432
 15348 1860 0100     		.2byte	0x1
 15349 1862 50       		.byte	0x50
 15350 1863 3E000000 		.4byte	.LVL432
 15351 1867 64000000 		.4byte	.LVL436
 15352 186b 0100     		.2byte	0x1
 15353 186d 55       		.byte	0x55
 15354 186e 6E000000 		.4byte	.LVL441
 15355 1872 70000000 		.4byte	.LVL442
 15356 1876 0100     		.2byte	0x1
 15357 1878 50       		.byte	0x50
 15358 1879 70000000 		.4byte	.LVL442
 15359 187d 72000000 		.4byte	.LVL443
 15360 1881 0100     		.2byte	0x1
 15361 1883 55       		.byte	0x55
 15362 1884 72000000 		.4byte	.LVL443
 15363 1888 74000000 		.4byte	.LVL444
 15364 188c 0100     		.2byte	0x1
 15365 188e 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 368


 15366 188f 74000000 		.4byte	.LVL444
 15367 1893 76000000 		.4byte	.LVL445
 15368 1897 0100     		.2byte	0x1
 15369 1899 55       		.byte	0x55
 15370 189a 76000000 		.4byte	.LVL445
 15371 189e 78000000 		.4byte	.LVL446
 15372 18a2 0100     		.2byte	0x1
 15373 18a4 50       		.byte	0x50
 15374 18a5 78000000 		.4byte	.LVL446
 15375 18a9 7C000000 		.4byte	.LFE16
 15376 18ad 0100     		.2byte	0x1
 15377 18af 55       		.byte	0x55
 15378 18b0 00000000 		.4byte	0
 15379 18b4 00000000 		.4byte	0
 15380              	.LLST102:
 15381 18b8 00000000 		.4byte	.LVL448
 15382 18bc 0A000000 		.4byte	.LVL450
 15383 18c0 0100     		.2byte	0x1
 15384 18c2 50       		.byte	0x50
 15385 18c3 0A000000 		.4byte	.LVL450
 15386 18c7 20000000 		.4byte	.LFE27
 15387 18cb 0100     		.2byte	0x1
 15388 18cd 54       		.byte	0x54
 15389 18ce 00000000 		.4byte	0
 15390 18d2 00000000 		.4byte	0
 15391              	.LLST103:
 15392 18d6 0E000000 		.4byte	.LVL451
 15393 18da 1E000000 		.4byte	.LVL452
 15394 18de 0100     		.2byte	0x1
 15395 18e0 50       		.byte	0x50
 15396 18e1 00000000 		.4byte	0
 15397 18e5 00000000 		.4byte	0
 15398              	.LLST104:
 15399 18e9 00000000 		.4byte	.LVL453
 15400 18ed 09000000 		.4byte	.LVL454-1
 15401 18f1 0100     		.2byte	0x1
 15402 18f3 50       		.byte	0x50
 15403 18f4 09000000 		.4byte	.LVL454-1
 15404 18f8 52000000 		.4byte	.LFE18
 15405 18fc 0100     		.2byte	0x1
 15406 18fe 55       		.byte	0x55
 15407 18ff 00000000 		.4byte	0
 15408 1903 00000000 		.4byte	0
 15409              	.LLST105:
 15410 1907 00000000 		.4byte	.LVL453
 15411 190b 09000000 		.4byte	.LVL454-1
 15412 190f 0100     		.2byte	0x1
 15413 1911 51       		.byte	0x51
 15414 1912 09000000 		.4byte	.LVL454-1
 15415 1916 2A000000 		.4byte	.LVL459
 15416 191a 0100     		.2byte	0x1
 15417 191c 54       		.byte	0x54
 15418 191d 2A000000 		.4byte	.LVL459
 15419 1921 4E000000 		.4byte	.LVL463
 15420 1925 0400     		.2byte	0x4
 15421 1927 F3       		.byte	0xf3
 15422 1928 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 369


 15423 1929 51       		.byte	0x51
 15424 192a 9F       		.byte	0x9f
 15425 192b 4E000000 		.4byte	.LVL463
 15426 192f 52000000 		.4byte	.LFE18
 15427 1933 0100     		.2byte	0x1
 15428 1935 54       		.byte	0x54
 15429 1936 00000000 		.4byte	0
 15430 193a 00000000 		.4byte	0
 15431              	.LLST106:
 15432 193e 16000000 		.4byte	.LVL456
 15433 1942 24000000 		.4byte	.LVL457
 15434 1946 0100     		.2byte	0x1
 15435 1948 50       		.byte	0x50
 15436 1949 24000000 		.4byte	.LVL457
 15437 194d 4E000000 		.4byte	.LVL463
 15438 1951 0100     		.2byte	0x1
 15439 1953 57       		.byte	0x57
 15440 1954 00000000 		.4byte	0
 15441 1958 00000000 		.4byte	0
 15442              	.LLST107:
 15443 195c 28000000 		.4byte	.LVL458
 15444 1960 2C000000 		.4byte	.LVL460
 15445 1964 0200     		.2byte	0x2
 15446 1966 30       		.byte	0x30
 15447 1967 9F       		.byte	0x9f
 15448 1968 2C000000 		.4byte	.LVL460
 15449 196c 4E000000 		.4byte	.LVL463
 15450 1970 0100     		.2byte	0x1
 15451 1972 54       		.byte	0x54
 15452 1973 00000000 		.4byte	0
 15453 1977 00000000 		.4byte	0
 15454              	.LLST108:
 15455 197b 28000000 		.4byte	.LVL458
 15456 197f 4E000000 		.4byte	.LVL463
 15457 1983 0200     		.2byte	0x2
 15458 1985 31       		.byte	0x31
 15459 1986 9F       		.byte	0x9f
 15460 1987 00000000 		.4byte	0
 15461 198b 00000000 		.4byte	0
 15462              	.LLST109:
 15463 198f 28000000 		.4byte	.LVL458
 15464 1993 4E000000 		.4byte	.LVL463
 15465 1997 0100     		.2byte	0x1
 15466 1999 56       		.byte	0x56
 15467 199a 00000000 		.4byte	0
 15468 199e 00000000 		.4byte	0
 15469              	.LLST110:
 15470 19a2 00000000 		.4byte	.LVL464
 15471 19a6 3A000000 		.4byte	.LVL468
 15472 19aa 0100     		.2byte	0x1
 15473 19ac 50       		.byte	0x50
 15474 19ad 3A000000 		.4byte	.LVL468
 15475 19b1 3E000000 		.4byte	.LVL469
 15476 19b5 0100     		.2byte	0x1
 15477 19b7 54       		.byte	0x54
 15478 19b8 3E000000 		.4byte	.LVL469
 15479 19bc 4B000000 		.4byte	.LVL470-1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 370


 15480 19c0 0100     		.2byte	0x1
 15481 19c2 50       		.byte	0x50
 15482 19c3 4B000000 		.4byte	.LVL470-1
 15483 19c7 AA000000 		.4byte	.LVL482
 15484 19cb 0100     		.2byte	0x1
 15485 19cd 54       		.byte	0x54
 15486 19ce AA000000 		.4byte	.LVL482
 15487 19d2 AC000000 		.4byte	.LVL483
 15488 19d6 0100     		.2byte	0x1
 15489 19d8 50       		.byte	0x50
 15490 19d9 AC000000 		.4byte	.LVL483
 15491 19dd B0000000 		.4byte	.LVL484
 15492 19e1 0400     		.2byte	0x4
 15493 19e3 F3       		.byte	0xf3
 15494 19e4 01       		.uleb128 0x1
 15495 19e5 50       		.byte	0x50
 15496 19e6 9F       		.byte	0x9f
 15497 19e7 B0000000 		.4byte	.LVL484
 15498 19eb B2000000 		.4byte	.LVL485
 15499 19ef 0100     		.2byte	0x1
 15500 19f1 50       		.byte	0x50
 15501 19f2 B2000000 		.4byte	.LVL485
 15502 19f6 B6000000 		.4byte	.LVL486
 15503 19fa 0400     		.2byte	0x4
 15504 19fc F3       		.byte	0xf3
 15505 19fd 01       		.uleb128 0x1
 15506 19fe 50       		.byte	0x50
 15507 19ff 9F       		.byte	0x9f
 15508 1a00 B6000000 		.4byte	.LVL486
 15509 1a04 DA000000 		.4byte	.LFE20
 15510 1a08 0100     		.2byte	0x1
 15511 1a0a 54       		.byte	0x54
 15512 1a0b 00000000 		.4byte	0
 15513 1a0f 00000000 		.4byte	0
 15514              	.LLST111:
 15515 1a13 00000000 		.4byte	.LVL464
 15516 1a17 2A000000 		.4byte	.LVL467
 15517 1a1b 0100     		.2byte	0x1
 15518 1a1d 51       		.byte	0x51
 15519 1a1e 2A000000 		.4byte	.LVL467
 15520 1a22 AA000000 		.4byte	.LVL482
 15521 1a26 0100     		.2byte	0x1
 15522 1a28 58       		.byte	0x58
 15523 1a29 AA000000 		.4byte	.LVL482
 15524 1a2d B6000000 		.4byte	.LVL486
 15525 1a31 0100     		.2byte	0x1
 15526 1a33 51       		.byte	0x51
 15527 1a34 B6000000 		.4byte	.LVL486
 15528 1a38 DA000000 		.4byte	.LFE20
 15529 1a3c 0100     		.2byte	0x1
 15530 1a3e 58       		.byte	0x58
 15531 1a3f 00000000 		.4byte	0
 15532 1a43 00000000 		.4byte	0
 15533              	.LLST112:
 15534 1a47 4E000000 		.4byte	.LVL471
 15535 1a4b 6A000000 		.4byte	.LVL472
 15536 1a4f 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 371


 15537 1a51 50       		.byte	0x50
 15538 1a52 6A000000 		.4byte	.LVL472
 15539 1a56 6E000000 		.4byte	.LVL473
 15540 1a5a 0100     		.2byte	0x1
 15541 1a5c 59       		.byte	0x59
 15542 1a5d 6E000000 		.4byte	.LVL473
 15543 1a61 72000000 		.4byte	.LVL474
 15544 1a65 0100     		.2byte	0x1
 15545 1a67 50       		.byte	0x50
 15546 1a68 72000000 		.4byte	.LVL474
 15547 1a6c 76000000 		.4byte	.LVL475
 15548 1a70 0100     		.2byte	0x1
 15549 1a72 59       		.byte	0x59
 15550 1a73 76000000 		.4byte	.LVL475
 15551 1a77 88000000 		.4byte	.LVL476
 15552 1a7b 0100     		.2byte	0x1
 15553 1a7d 50       		.byte	0x50
 15554 1a7e 88000000 		.4byte	.LVL476
 15555 1a82 8B000000 		.4byte	.LVL477-1
 15556 1a86 0100     		.2byte	0x1
 15557 1a88 51       		.byte	0x51
 15558 1a89 8B000000 		.4byte	.LVL477-1
 15559 1a8d 9C000000 		.4byte	.LVL479
 15560 1a91 0100     		.2byte	0x1
 15561 1a93 59       		.byte	0x59
 15562 1a94 B6000000 		.4byte	.LVL486
 15563 1a98 B8000000 		.4byte	.LVL487
 15564 1a9c 0100     		.2byte	0x1
 15565 1a9e 50       		.byte	0x50
 15566 1a9f B8000000 		.4byte	.LVL487
 15567 1aa3 BC000000 		.4byte	.LVL488
 15568 1aa7 0100     		.2byte	0x1
 15569 1aa9 59       		.byte	0x59
 15570 1aaa BC000000 		.4byte	.LVL488
 15571 1aae BE000000 		.4byte	.LVL489
 15572 1ab2 0100     		.2byte	0x1
 15573 1ab4 50       		.byte	0x50
 15574 1ab5 BE000000 		.4byte	.LVL489
 15575 1ab9 C2000000 		.4byte	.LVL490
 15576 1abd 0100     		.2byte	0x1
 15577 1abf 59       		.byte	0x59
 15578 1ac0 C2000000 		.4byte	.LVL490
 15579 1ac4 C4000000 		.4byte	.LVL491
 15580 1ac8 0100     		.2byte	0x1
 15581 1aca 50       		.byte	0x50
 15582 1acb C4000000 		.4byte	.LVL491
 15583 1acf C8000000 		.4byte	.LVL492
 15584 1ad3 0100     		.2byte	0x1
 15585 1ad5 59       		.byte	0x59
 15586 1ad6 C8000000 		.4byte	.LVL492
 15587 1ada CA000000 		.4byte	.LVL493
 15588 1ade 0100     		.2byte	0x1
 15589 1ae0 50       		.byte	0x50
 15590 1ae1 CA000000 		.4byte	.LVL493
 15591 1ae5 CE000000 		.4byte	.LVL494
 15592 1ae9 0100     		.2byte	0x1
 15593 1aeb 59       		.byte	0x59
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 372


 15594 1aec CE000000 		.4byte	.LVL494
 15595 1af0 D0000000 		.4byte	.LVL495
 15596 1af4 0100     		.2byte	0x1
 15597 1af6 50       		.byte	0x50
 15598 1af7 D0000000 		.4byte	.LVL495
 15599 1afb DA000000 		.4byte	.LFE20
 15600 1aff 0100     		.2byte	0x1
 15601 1b01 59       		.byte	0x59
 15602 1b02 00000000 		.4byte	0
 15603 1b06 00000000 		.4byte	0
 15604              	.LLST113:
 15605 1b0a 06000000 		.4byte	.LVL465
 15606 1b0e A0000000 		.4byte	.LVL480
 15607 1b12 0100     		.2byte	0x1
 15608 1b14 56       		.byte	0x56
 15609 1b15 A0000000 		.4byte	.LVL480
 15610 1b19 A2000000 		.4byte	.LVL481
 15611 1b1d 0300     		.2byte	0x3
 15612 1b1f 76       		.byte	0x76
 15613 1b20 50       		.sleb128 -48
 15614 1b21 9F       		.byte	0x9f
 15615 1b22 AA000000 		.4byte	.LVL482
 15616 1b26 DA000000 		.4byte	.LFE20
 15617 1b2a 0100     		.2byte	0x1
 15618 1b2c 56       		.byte	0x56
 15619 1b2d 00000000 		.4byte	0
 15620 1b31 00000000 		.4byte	0
 15621              	.LLST114:
 15622 1b35 00000000 		.4byte	.LVL497
 15623 1b39 0B000000 		.4byte	.LVL499-1
 15624 1b3d 0100     		.2byte	0x1
 15625 1b3f 50       		.byte	0x50
 15626 1b40 0B000000 		.4byte	.LVL499-1
 15627 1b44 56000000 		.4byte	.LFE25
 15628 1b48 0100     		.2byte	0x1
 15629 1b4a 54       		.byte	0x54
 15630 1b4b 00000000 		.4byte	0
 15631 1b4f 00000000 		.4byte	0
 15632              	.LLST115:
 15633 1b53 0C000000 		.4byte	.LVL499
 15634 1b57 12000000 		.4byte	.LVL500
 15635 1b5b 0100     		.2byte	0x1
 15636 1b5d 50       		.byte	0x50
 15637 1b5e 16000000 		.4byte	.LVL501
 15638 1b62 1C000000 		.4byte	.LVL502
 15639 1b66 0100     		.2byte	0x1
 15640 1b68 50       		.byte	0x50
 15641 1b69 44000000 		.4byte	.LVL507
 15642 1b6d 4E000000 		.4byte	.LVL510
 15643 1b71 0100     		.2byte	0x1
 15644 1b73 50       		.byte	0x50
 15645 1b74 00000000 		.4byte	0
 15646 1b78 00000000 		.4byte	0
 15647              	.LLST116:
 15648 1b7c 1E000000 		.4byte	.LVL503
 15649 1b80 22000000 		.4byte	.LVL504
 15650 1b84 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 373


 15651 1b86 53       		.byte	0x53
 15652 1b87 22000000 		.4byte	.LVL504
 15653 1b8b 28000000 		.4byte	.LVL505
 15654 1b8f 0200     		.2byte	0x2
 15655 1b91 70       		.byte	0x70
 15656 1b92 00       		.sleb128 0
 15657 1b93 4E000000 		.4byte	.LVL510
 15658 1b97 52000000 		.4byte	.LVL511
 15659 1b9b 0100     		.2byte	0x1
 15660 1b9d 53       		.byte	0x53
 15661 1b9e 00000000 		.4byte	0
 15662 1ba2 00000000 		.4byte	0
 15663              	.LLST117:
 15664 1ba6 00000000 		.4byte	.LVL512
 15665 1baa 30000000 		.4byte	.LVL515
 15666 1bae 0100     		.2byte	0x1
 15667 1bb0 50       		.byte	0x50
 15668 1bb1 30000000 		.4byte	.LVL515
 15669 1bb5 8E000000 		.4byte	.LFE30
 15670 1bb9 0100     		.2byte	0x1
 15671 1bbb 54       		.byte	0x54
 15672 1bbc 00000000 		.4byte	0
 15673 1bc0 00000000 		.4byte	0
 15674              	.LLST118:
 15675 1bc4 00000000 		.4byte	.LVL512
 15676 1bc8 2E000000 		.4byte	.LVL514
 15677 1bcc 0100     		.2byte	0x1
 15678 1bce 51       		.byte	0x51
 15679 1bcf 2E000000 		.4byte	.LVL514
 15680 1bd3 38000000 		.4byte	.LVL518
 15681 1bd7 0400     		.2byte	0x4
 15682 1bd9 F3       		.byte	0xf3
 15683 1bda 01       		.uleb128 0x1
 15684 1bdb 51       		.byte	0x51
 15685 1bdc 9F       		.byte	0x9f
 15686 1bdd 00000000 		.4byte	0
 15687 1be1 00000000 		.4byte	0
 15688              	.LLST119:
 15689 1be5 36000000 		.4byte	.LVL517
 15690 1be9 38000000 		.4byte	.LVL518
 15691 1bed 0100     		.2byte	0x1
 15692 1bef 53       		.byte	0x53
 15693 1bf0 40000000 		.4byte	.LVL519
 15694 1bf4 46000000 		.4byte	.LVL520
 15695 1bf8 0100     		.2byte	0x1
 15696 1bfa 50       		.byte	0x50
 15697 1bfb 4A000000 		.4byte	.LVL521
 15698 1bff 7A000000 		.4byte	.LVL523
 15699 1c03 0100     		.2byte	0x1
 15700 1c05 50       		.byte	0x50
 15701 1c06 82000000 		.4byte	.LVL525
 15702 1c0a 88000000 		.4byte	.LVL526
 15703 1c0e 0100     		.2byte	0x1
 15704 1c10 50       		.byte	0x50
 15705 1c11 88000000 		.4byte	.LVL526
 15706 1c15 8E000000 		.4byte	.LFE30
 15707 1c19 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 374


 15708 1c1b 53       		.byte	0x53
 15709 1c1c 00000000 		.4byte	0
 15710 1c20 00000000 		.4byte	0
 15711              	.LLST120:
 15712 1c24 4E000000 		.4byte	.LVL522
 15713 1c28 7D000000 		.4byte	.LVL524-1
 15714 1c2c 0100     		.2byte	0x1
 15715 1c2e 52       		.byte	0x52
 15716 1c2f 82000000 		.4byte	.LVL525
 15717 1c33 88000000 		.4byte	.LVL526
 15718 1c37 0100     		.2byte	0x1
 15719 1c39 52       		.byte	0x52
 15720 1c3a 00000000 		.4byte	0
 15721 1c3e 00000000 		.4byte	0
 15722              	.LLST121:
 15723 1c42 00000000 		.4byte	.LVL527
 15724 1c46 0D000000 		.4byte	.LVL530-1
 15725 1c4a 0100     		.2byte	0x1
 15726 1c4c 50       		.byte	0x50
 15727 1c4d 0D000000 		.4byte	.LVL530-1
 15728 1c51 4C000000 		.4byte	.LFE21
 15729 1c55 0100     		.2byte	0x1
 15730 1c57 54       		.byte	0x54
 15731 1c58 00000000 		.4byte	0
 15732 1c5c 00000000 		.4byte	0
 15733              	.LLST122:
 15734 1c60 00000000 		.4byte	.LVL527
 15735 1c64 0A000000 		.4byte	.LVL529
 15736 1c68 0100     		.2byte	0x1
 15737 1c6a 51       		.byte	0x51
 15738 1c6b 0A000000 		.4byte	.LVL529
 15739 1c6f 4C000000 		.4byte	.LFE21
 15740 1c73 0100     		.2byte	0x1
 15741 1c75 57       		.byte	0x57
 15742 1c76 00000000 		.4byte	0
 15743 1c7a 00000000 		.4byte	0
 15744              	.LLST123:
 15745 1c7e 0E000000 		.4byte	.LVL530
 15746 1c82 18000000 		.4byte	.LVL532
 15747 1c86 0100     		.2byte	0x1
 15748 1c88 50       		.byte	0x50
 15749 1c89 1C000000 		.4byte	.LVL533
 15750 1c8d 38000000 		.4byte	.LVL536
 15751 1c91 0100     		.2byte	0x1
 15752 1c93 50       		.byte	0x50
 15753 1c94 3C000000 		.4byte	.LVL537
 15754 1c98 42000000 		.4byte	.LVL538
 15755 1c9c 0100     		.2byte	0x1
 15756 1c9e 50       		.byte	0x50
 15757 1c9f 42000000 		.4byte	.LVL538
 15758 1ca3 4C000000 		.4byte	.LFE21
 15759 1ca7 0100     		.2byte	0x1
 15760 1ca9 52       		.byte	0x52
 15761 1caa 00000000 		.4byte	0
 15762 1cae 00000000 		.4byte	0
 15763              	.LLST124:
 15764 1cb2 14000000 		.4byte	.LVL531
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 375


 15765 1cb6 42000000 		.4byte	.LVL538
 15766 1cba 0100     		.2byte	0x1
 15767 1cbc 55       		.byte	0x55
 15768 1cbd 00000000 		.4byte	0
 15769 1cc1 00000000 		.4byte	0
 15770              	.LLST125:
 15771 1cc5 00000000 		.4byte	.LVL540
 15772 1cc9 0B000000 		.4byte	.LVL542-1
 15773 1ccd 0100     		.2byte	0x1
 15774 1ccf 50       		.byte	0x50
 15775 1cd0 0B000000 		.4byte	.LVL542-1
 15776 1cd4 3A000000 		.4byte	.LFE26
 15777 1cd8 0100     		.2byte	0x1
 15778 1cda 54       		.byte	0x54
 15779 1cdb 00000000 		.4byte	0
 15780 1cdf 00000000 		.4byte	0
 15781              	.LLST126:
 15782 1ce3 0C000000 		.4byte	.LVL542
 15783 1ce7 14000000 		.4byte	.LVL543
 15784 1ceb 0100     		.2byte	0x1
 15785 1ced 50       		.byte	0x50
 15786 1cee 18000000 		.4byte	.LVL544
 15787 1cf2 22000000 		.4byte	.LVL545
 15788 1cf6 0100     		.2byte	0x1
 15789 1cf8 50       		.byte	0x50
 15790 1cf9 36000000 		.4byte	.LVL548
 15791 1cfd 3A000000 		.4byte	.LFE26
 15792 1d01 0100     		.2byte	0x1
 15793 1d03 55       		.byte	0x55
 15794 1d04 00000000 		.4byte	0
 15795 1d08 00000000 		.4byte	0
 15796              	.LLST127:
 15797 1d0c 00000000 		.4byte	.LVL549
 15798 1d10 0C000000 		.4byte	.LVL552
 15799 1d14 0100     		.2byte	0x1
 15800 1d16 50       		.byte	0x50
 15801 1d17 0C000000 		.4byte	.LVL552
 15802 1d1b 60000000 		.4byte	.LFE24
 15803 1d1f 0100     		.2byte	0x1
 15804 1d21 54       		.byte	0x54
 15805 1d22 00000000 		.4byte	0
 15806 1d26 00000000 		.4byte	0
 15807              	.LLST128:
 15808 1d2a 00000000 		.4byte	.LVL549
 15809 1d2e 0C000000 		.4byte	.LVL552
 15810 1d32 0100     		.2byte	0x1
 15811 1d34 51       		.byte	0x51
 15812 1d35 0C000000 		.4byte	.LVL552
 15813 1d39 60000000 		.4byte	.LFE24
 15814 1d3d 0100     		.2byte	0x1
 15815 1d3f 56       		.byte	0x56
 15816 1d40 00000000 		.4byte	0
 15817 1d44 00000000 		.4byte	0
 15818              	.LLST129:
 15819 1d48 06000000 		.4byte	.LVL550
 15820 1d4c 0C000000 		.4byte	.LVL552
 15821 1d50 0200     		.2byte	0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 376


 15822 1d52 34       		.byte	0x34
 15823 1d53 9F       		.byte	0x9f
 15824 1d54 0C000000 		.4byte	.LVL552
 15825 1d58 12000000 		.4byte	.LVL553
 15826 1d5c 0100     		.2byte	0x1
 15827 1d5e 57       		.byte	0x57
 15828 1d5f 12000000 		.4byte	.LVL553
 15829 1d63 44000000 		.4byte	.LVL557
 15830 1d67 0100     		.2byte	0x1
 15831 1d69 50       		.byte	0x50
 15832 1d6a 48000000 		.4byte	.LVL558
 15833 1d6e 4C000000 		.4byte	.LVL559
 15834 1d72 0100     		.2byte	0x1
 15835 1d74 50       		.byte	0x50
 15836 1d75 4C000000 		.4byte	.LVL559
 15837 1d79 54000000 		.4byte	.LVL560
 15838 1d7d 0100     		.2byte	0x1
 15839 1d7f 57       		.byte	0x57
 15840 1d80 54000000 		.4byte	.LVL560
 15841 1d84 56000000 		.4byte	.LVL561
 15842 1d88 0100     		.2byte	0x1
 15843 1d8a 50       		.byte	0x50
 15844 1d8b 56000000 		.4byte	.LVL561
 15845 1d8f 60000000 		.4byte	.LFE24
 15846 1d93 0100     		.2byte	0x1
 15847 1d95 57       		.byte	0x57
 15848 1d96 00000000 		.4byte	0
 15849 1d9a 00000000 		.4byte	0
 15850              	.LLST130:
 15851 1d9e 22000000 		.4byte	.LVL555
 15852 1da2 34000000 		.4byte	.LVL556
 15853 1da6 0100     		.2byte	0x1
 15854 1da8 53       		.byte	0x53
 15855 1da9 34000000 		.4byte	.LVL556
 15856 1dad 47000000 		.4byte	.LVL558-1
 15857 1db1 0200     		.2byte	0x2
 15858 1db3 74       		.byte	0x74
 15859 1db4 06       		.sleb128 6
 15860 1db5 00000000 		.4byte	0
 15861 1db9 00000000 		.4byte	0
 15862              	.LLST131:
 15863 1dbd 1A000000 		.4byte	.LVL554
 15864 1dc1 47000000 		.4byte	.LVL558-1
 15865 1dc5 0100     		.2byte	0x1
 15866 1dc7 52       		.byte	0x52
 15867 1dc8 54000000 		.4byte	.LVL560
 15868 1dcc 56000000 		.4byte	.LVL561
 15869 1dd0 0100     		.2byte	0x1
 15870 1dd2 52       		.byte	0x52
 15871 1dd3 00000000 		.4byte	0
 15872 1dd7 00000000 		.4byte	0
 15873              	.LLST132:
 15874 1ddb 00000000 		.4byte	.LVL562
 15875 1ddf 07000000 		.4byte	.LVL563-1
 15876 1de3 0100     		.2byte	0x1
 15877 1de5 50       		.byte	0x50
 15878 1de6 07000000 		.4byte	.LVL563-1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 377


 15879 1dea 82000000 		.4byte	.LVL574
 15880 1dee 0100     		.2byte	0x1
 15881 1df0 54       		.byte	0x54
 15882 1df1 82000000 		.4byte	.LVL574
 15883 1df5 8C000000 		.4byte	.LFE12
 15884 1df9 0400     		.2byte	0x4
 15885 1dfb F3       		.byte	0xf3
 15886 1dfc 01       		.uleb128 0x1
 15887 1dfd 50       		.byte	0x50
 15888 1dfe 9F       		.byte	0x9f
 15889 1dff 00000000 		.4byte	0
 15890 1e03 00000000 		.4byte	0
 15891              	.LLST133:
 15892 1e07 08000000 		.4byte	.LVL563
 15893 1e0b 26000000 		.4byte	.LVL564
 15894 1e0f 0100     		.2byte	0x1
 15895 1e11 50       		.byte	0x50
 15896 1e12 7E000000 		.4byte	.LVL573
 15897 1e16 82000000 		.4byte	.LVL574
 15898 1e1a 0100     		.2byte	0x1
 15899 1e1c 55       		.byte	0x55
 15900 1e1d 00000000 		.4byte	0
 15901 1e21 00000000 		.4byte	0
 15902              	.LLST134:
 15903 1e25 00000000 		.4byte	.LVL575
 15904 1e29 0C000000 		.4byte	.LVL576
 15905 1e2d 0100     		.2byte	0x1
 15906 1e2f 50       		.byte	0x50
 15907 1e30 0C000000 		.4byte	.LVL576
 15908 1e34 3A000000 		.4byte	.LVL580
 15909 1e38 0200     		.2byte	0x2
 15910 1e3a 91       		.byte	0x91
 15911 1e3b 6C       		.sleb128 -20
 15912 1e3c 3A000000 		.4byte	.LVL580
 15913 1e40 3F000000 		.4byte	.LVL582-1
 15914 1e44 0200     		.2byte	0x2
 15915 1e46 71       		.byte	0x71
 15916 1e47 00       		.sleb128 0
 15917 1e48 3F000000 		.4byte	.LVL582-1
 15918 1e4c 4C000000 		.4byte	.LVL588
 15919 1e50 0200     		.2byte	0x2
 15920 1e52 91       		.byte	0x91
 15921 1e53 6C       		.sleb128 -20
 15922 1e54 4C000000 		.4byte	.LVL588
 15923 1e58 50000000 		.4byte	.LFE35
 15924 1e5c 0200     		.2byte	0x2
 15925 1e5e 7D       		.byte	0x7d
 15926 1e5f 6C       		.sleb128 -20
 15927 1e60 00000000 		.4byte	0
 15928 1e64 00000000 		.4byte	0
 15929              	.LLST135:
 15930 1e68 00000000 		.4byte	.LVL575
 15931 1e6c 13000000 		.4byte	.LVL577-1
 15932 1e70 0100     		.2byte	0x1
 15933 1e72 51       		.byte	0x51
 15934 1e73 13000000 		.4byte	.LVL577-1
 15935 1e77 4A000000 		.4byte	.LVL587
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 378


 15936 1e7b 0200     		.2byte	0x2
 15937 1e7d 7D       		.byte	0x7d
 15938 1e7e 00       		.sleb128 0
 15939 1e7f 4A000000 		.4byte	.LVL587
 15940 1e83 4C000000 		.4byte	.LVL588
 15941 1e87 0200     		.2byte	0x2
 15942 1e89 91       		.byte	0x91
 15943 1e8a 68       		.sleb128 -24
 15944 1e8b 4C000000 		.4byte	.LVL588
 15945 1e8f 50000000 		.4byte	.LFE35
 15946 1e93 0200     		.2byte	0x2
 15947 1e95 7D       		.byte	0x7d
 15948 1e96 68       		.sleb128 -24
 15949 1e97 00000000 		.4byte	0
 15950 1e9b 00000000 		.4byte	0
 15951              	.LLST136:
 15952 1e9f 00000000 		.4byte	.LVL575
 15953 1ea3 13000000 		.4byte	.LVL577-1
 15954 1ea7 0100     		.2byte	0x1
 15955 1ea9 52       		.byte	0x52
 15956 1eaa 13000000 		.4byte	.LVL577-1
 15957 1eae 50000000 		.4byte	.LFE35
 15958 1eb2 0400     		.2byte	0x4
 15959 1eb4 F3       		.byte	0xf3
 15960 1eb5 01       		.uleb128 0x1
 15961 1eb6 52       		.byte	0x52
 15962 1eb7 9F       		.byte	0x9f
 15963 1eb8 00000000 		.4byte	0
 15964 1ebc 00000000 		.4byte	0
 15965              	.LLST137:
 15966 1ec0 1E000000 		.4byte	.LVL578
 15967 1ec4 26000000 		.4byte	.LVL579
 15968 1ec8 0100     		.2byte	0x1
 15969 1eca 53       		.byte	0x53
 15970 1ecb 00000000 		.4byte	0
 15971 1ecf 00000000 		.4byte	0
 15972              	.LLST138:
 15973 1ed3 14000000 		.4byte	.LVL577
 15974 1ed7 3C000000 		.4byte	.LVL581
 15975 1edb 0100     		.2byte	0x1
 15976 1edd 50       		.byte	0x50
 15977 1ede 42000000 		.4byte	.LVL583
 15978 1ee2 44000000 		.4byte	.LVL584
 15979 1ee6 0100     		.2byte	0x1
 15980 1ee8 50       		.byte	0x50
 15981 1ee9 46000000 		.4byte	.LVL585
 15982 1eed 48000000 		.4byte	.LVL586
 15983 1ef1 0100     		.2byte	0x1
 15984 1ef3 50       		.byte	0x50
 15985 1ef4 00000000 		.4byte	0
 15986 1ef8 00000000 		.4byte	0
 15987              	.LLST139:
 15988 1efc 40000000 		.4byte	.LVL582
 15989 1f00 42000000 		.4byte	.LVL583
 15990 1f04 0100     		.2byte	0x1
 15991 1f06 50       		.byte	0x50
 15992 1f07 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 379


 15993 1f0b 00000000 		.4byte	0
 15994              	.LLST140:
 15995 1f0f 00000000 		.4byte	.LVL589
 15996 1f13 1C000000 		.4byte	.LVL592
 15997 1f17 0100     		.2byte	0x1
 15998 1f19 50       		.byte	0x50
 15999 1f1a 1C000000 		.4byte	.LVL592
 16000 1f1e C2010000 		.4byte	.LVL638
 16001 1f22 0100     		.2byte	0x1
 16002 1f24 55       		.byte	0x55
 16003 1f25 C2010000 		.4byte	.LVL638
 16004 1f29 C4010000 		.4byte	.LVL639
 16005 1f2d 0100     		.2byte	0x1
 16006 1f2f 50       		.byte	0x50
 16007 1f30 C4010000 		.4byte	.LVL639
 16008 1f34 C6010000 		.4byte	.LVL640
 16009 1f38 0400     		.2byte	0x4
 16010 1f3a F3       		.byte	0xf3
 16011 1f3b 01       		.uleb128 0x1
 16012 1f3c 50       		.byte	0x50
 16013 1f3d 9F       		.byte	0x9f
 16014 1f3e C6010000 		.4byte	.LVL640
 16015 1f42 C8010000 		.4byte	.LVL641
 16016 1f46 0100     		.2byte	0x1
 16017 1f48 55       		.byte	0x55
 16018 1f49 C8010000 		.4byte	.LVL641
 16019 1f4d CE010000 		.4byte	.LFE36
 16020 1f51 0400     		.2byte	0x4
 16021 1f53 F3       		.byte	0xf3
 16022 1f54 01       		.uleb128 0x1
 16023 1f55 50       		.byte	0x50
 16024 1f56 9F       		.byte	0x9f
 16025 1f57 00000000 		.4byte	0
 16026 1f5b 00000000 		.4byte	0
 16027              	.LLST141:
 16028 1f5f 00000000 		.4byte	.LVL589
 16029 1f63 1A000000 		.4byte	.LVL591
 16030 1f67 0100     		.2byte	0x1
 16031 1f69 51       		.byte	0x51
 16032 1f6a 1A000000 		.4byte	.LVL591
 16033 1f6e 1C000000 		.4byte	.LVL592
 16034 1f72 0300     		.2byte	0x3
 16035 1f74 91       		.byte	0x91
 16036 1f75 B47F     		.sleb128 -76
 16037 1f77 1C000000 		.4byte	.LVL592
 16038 1f7b 1F000000 		.4byte	.LVL593-1
 16039 1f7f 0200     		.2byte	0x2
 16040 1f81 70       		.byte	0x70
 16041 1f82 00       		.sleb128 0
 16042 1f83 1F000000 		.4byte	.LVL593-1
 16043 1f87 C2010000 		.4byte	.LVL638
 16044 1f8b 0300     		.2byte	0x3
 16045 1f8d 91       		.byte	0x91
 16046 1f8e B47F     		.sleb128 -76
 16047 1f90 C2010000 		.4byte	.LVL638
 16048 1f94 C6010000 		.4byte	.LVL640
 16049 1f98 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 380


 16050 1f9a 51       		.byte	0x51
 16051 1f9b C6010000 		.4byte	.LVL640
 16052 1f9f CE010000 		.4byte	.LFE36
 16053 1fa3 0300     		.2byte	0x3
 16054 1fa5 91       		.byte	0x91
 16055 1fa6 B47F     		.sleb128 -76
 16056 1fa8 00000000 		.4byte	0
 16057 1fac 00000000 		.4byte	0
 16058              	.LLST142:
 16059 1fb0 00000000 		.4byte	.LVL589
 16060 1fb4 16000000 		.4byte	.LVL590
 16061 1fb8 0100     		.2byte	0x1
 16062 1fba 52       		.byte	0x52
 16063 1fbb 16000000 		.4byte	.LVL590
 16064 1fbf 66010000 		.4byte	.LVL622
 16065 1fc3 0100     		.2byte	0x1
 16066 1fc5 57       		.byte	0x57
 16067 1fc6 C2010000 		.4byte	.LVL638
 16068 1fca C6010000 		.4byte	.LVL640
 16069 1fce 0100     		.2byte	0x1
 16070 1fd0 52       		.byte	0x52
 16071 1fd1 00000000 		.4byte	0
 16072 1fd5 00000000 		.4byte	0
 16073              	.LLST143:
 16074 1fd9 20000000 		.4byte	.LVL593
 16075 1fdd 30000000 		.4byte	.LVL594
 16076 1fe1 0100     		.2byte	0x1
 16077 1fe3 50       		.byte	0x50
 16078 1fe4 34000000 		.4byte	.LVL595
 16079 1fe8 42000000 		.4byte	.LVL596
 16080 1fec 0100     		.2byte	0x1
 16081 1fee 50       		.byte	0x50
 16082 1fef 42000000 		.4byte	.LVL596
 16083 1ff3 70000000 		.4byte	.LVL600
 16084 1ff7 0100     		.2byte	0x1
 16085 1ff9 54       		.byte	0x54
 16086 1ffa 72000000 		.4byte	.LVL601
 16087 1ffe CC000000 		.4byte	.LVL610
 16088 2002 0100     		.2byte	0x1
 16089 2004 54       		.byte	0x54
 16090 2005 CC000000 		.4byte	.LVL610
 16091 2009 D4000000 		.4byte	.LVL611
 16092 200d 0100     		.2byte	0x1
 16093 200f 50       		.byte	0x50
 16094 2010 DA000000 		.4byte	.LVL613
 16095 2014 00010000 		.4byte	.LVL615
 16096 2018 0100     		.2byte	0x1
 16097 201a 54       		.byte	0x54
 16098 201b 02010000 		.4byte	.LVL616
 16099 201f B4010000 		.4byte	.LVL635
 16100 2023 0100     		.2byte	0x1
 16101 2025 54       		.byte	0x54
 16102 2026 B6010000 		.4byte	.LVL636
 16103 202a C2010000 		.4byte	.LVL638
 16104 202e 0100     		.2byte	0x1
 16105 2030 54       		.byte	0x54
 16106 2031 C6010000 		.4byte	.LVL640
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 381


 16107 2035 C8010000 		.4byte	.LVL641
 16108 2039 0100     		.2byte	0x1
 16109 203b 54       		.byte	0x54
 16110 203c 00000000 		.4byte	0
 16111 2040 00000000 		.4byte	0
 16112              	.LLST144:
 16113 2044 C2000000 		.4byte	.LVL609
 16114 2048 E4000000 		.4byte	.LVL614
 16115 204c 0100     		.2byte	0x1
 16116 204e 56       		.byte	0x56
 16117 204f 00000000 		.4byte	0
 16118 2053 00000000 		.4byte	0
 16119              	.LLST145:
 16120 2057 8A000000 		.4byte	.LVL604
 16121 205b 8D000000 		.4byte	.LVL605-1
 16122 205f 0100     		.2byte	0x1
 16123 2061 50       		.byte	0x50
 16124 2062 8D000000 		.4byte	.LVL605-1
 16125 2066 E4000000 		.4byte	.LVL614
 16126 206a 0100     		.2byte	0x1
 16127 206c 58       		.byte	0x58
 16128 206d 00000000 		.4byte	0
 16129 2071 00000000 		.4byte	0
 16130              	.LLST146:
 16131 2075 68010000 		.4byte	.LVL623
 16132 2079 96010000 		.4byte	.LVL630
 16133 207d 0100     		.2byte	0x1
 16134 207f 57       		.byte	0x57
 16135 2080 00000000 		.4byte	0
 16136 2084 00000000 		.4byte	0
 16137              	.LLST147:
 16138 2088 6A010000 		.4byte	.LVL624
 16139 208c 71010000 		.4byte	.LVL625-1
 16140 2090 0100     		.2byte	0x1
 16141 2092 51       		.byte	0x51
 16142 2093 74010000 		.4byte	.LVL626
 16143 2097 84010000 		.4byte	.LVL629
 16144 209b 0100     		.2byte	0x1
 16145 209d 50       		.byte	0x50
 16146 209e 84010000 		.4byte	.LVL629
 16147 20a2 9B010000 		.4byte	.LVL631-1
 16148 20a6 0100     		.2byte	0x1
 16149 20a8 51       		.byte	0x51
 16150 20a9 00000000 		.4byte	0
 16151 20ad 00000000 		.4byte	0
 16152              	.LLST148:
 16153 20b1 9C010000 		.4byte	.LVL631
 16154 20b5 AA010000 		.4byte	.LVL632
 16155 20b9 0100     		.2byte	0x1
 16156 20bb 50       		.byte	0x50
 16157 20bc B2010000 		.4byte	.LVL634
 16158 20c0 B6010000 		.4byte	.LVL636
 16159 20c4 0100     		.2byte	0x1
 16160 20c6 50       		.byte	0x50
 16161 20c7 00000000 		.4byte	0
 16162 20cb 00000000 		.4byte	0
 16163              	.LLST149:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 382


 16164 20cf 6A010000 		.4byte	.LVL624
 16165 20d3 B8010000 		.4byte	.LVL637
 16166 20d7 0100     		.2byte	0x1
 16167 20d9 56       		.byte	0x56
 16168 20da 00000000 		.4byte	0
 16169 20de 00000000 		.4byte	0
 16170              	.LLST150:
 16171 20e2 00000000 		.4byte	.LVL642
 16172 20e6 19000000 		.4byte	.LVL646-1
 16173 20ea 0100     		.2byte	0x1
 16174 20ec 50       		.byte	0x50
 16175 20ed 19000000 		.4byte	.LVL646-1
 16176 20f1 74010000 		.4byte	.LFE37
 16177 20f5 0100     		.2byte	0x1
 16178 20f7 54       		.byte	0x54
 16179 20f8 00000000 		.4byte	0
 16180 20fc 00000000 		.4byte	0
 16181              	.LLST151:
 16182 2100 00000000 		.4byte	.LVL642
 16183 2104 16000000 		.4byte	.LVL645
 16184 2108 0100     		.2byte	0x1
 16185 210a 51       		.byte	0x51
 16186 210b 16000000 		.4byte	.LVL645
 16187 210f 42000000 		.4byte	.LVL650
 16188 2113 0100     		.2byte	0x1
 16189 2115 58       		.byte	0x58
 16190 2116 42000000 		.4byte	.LVL650
 16191 211a 6A010000 		.4byte	.LVL681
 16192 211e 0400     		.2byte	0x4
 16193 2120 F3       		.byte	0xf3
 16194 2121 01       		.uleb128 0x1
 16195 2122 51       		.byte	0x51
 16196 2123 9F       		.byte	0x9f
 16197 2124 6A010000 		.4byte	.LVL681
 16198 2128 6E010000 		.4byte	.LVL682
 16199 212c 0100     		.2byte	0x1
 16200 212e 58       		.byte	0x58
 16201 212f 6E010000 		.4byte	.LVL682
 16202 2133 74010000 		.4byte	.LFE37
 16203 2137 0400     		.2byte	0x4
 16204 2139 F3       		.byte	0xf3
 16205 213a 01       		.uleb128 0x1
 16206 213b 51       		.byte	0x51
 16207 213c 9F       		.byte	0x9f
 16208 213d 00000000 		.4byte	0
 16209 2141 00000000 		.4byte	0
 16210              	.LLST152:
 16211 2145 00000000 		.4byte	.LVL642
 16212 2149 19000000 		.4byte	.LVL646-1
 16213 214d 0100     		.2byte	0x1
 16214 214f 52       		.byte	0x52
 16215 2150 19000000 		.4byte	.LVL646-1
 16216 2154 42000000 		.4byte	.LVL650
 16217 2158 0100     		.2byte	0x1
 16218 215a 55       		.byte	0x55
 16219 215b 42000000 		.4byte	.LVL650
 16220 215f 6A010000 		.4byte	.LVL681
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 383


 16221 2163 0100     		.2byte	0x1
 16222 2165 56       		.byte	0x56
 16223 2166 6A010000 		.4byte	.LVL681
 16224 216a 6E010000 		.4byte	.LVL682
 16225 216e 0100     		.2byte	0x1
 16226 2170 55       		.byte	0x55
 16227 2171 00000000 		.4byte	0
 16228 2175 00000000 		.4byte	0
 16229              	.LLST153:
 16230 2179 00000000 		.4byte	.LVL642
 16231 217d 10000000 		.4byte	.LVL644
 16232 2181 0100     		.2byte	0x1
 16233 2183 53       		.byte	0x53
 16234 2184 10000000 		.4byte	.LVL644
 16235 2188 74010000 		.4byte	.LFE37
 16236 218c 0100     		.2byte	0x1
 16237 218e 57       		.byte	0x57
 16238 218f 00000000 		.4byte	0
 16239 2193 00000000 		.4byte	0
 16240              	.LLST154:
 16241 2197 1A000000 		.4byte	.LVL646
 16242 219b 42000000 		.4byte	.LVL650
 16243 219f 0100     		.2byte	0x1
 16244 21a1 50       		.byte	0x50
 16245 21a2 6A010000 		.4byte	.LVL681
 16246 21a6 6E010000 		.4byte	.LVL682
 16247 21aa 0100     		.2byte	0x1
 16248 21ac 50       		.byte	0x50
 16249 21ad 00000000 		.4byte	0
 16250 21b1 00000000 		.4byte	0
 16251              	.LLST155:
 16252 21b5 60000000 		.4byte	.LVL653
 16253 21b9 62000000 		.4byte	.LVL654
 16254 21bd 0100     		.2byte	0x1
 16255 21bf 50       		.byte	0x50
 16256 21c0 6A000000 		.4byte	.LVL655
 16257 21c4 70000000 		.4byte	.LVL656
 16258 21c8 0100     		.2byte	0x1
 16259 21ca 50       		.byte	0x50
 16260 21cb 74000000 		.4byte	.LVL657
 16261 21cf 7C000000 		.4byte	.LVL658
 16262 21d3 0100     		.2byte	0x1
 16263 21d5 50       		.byte	0x50
 16264 21d6 80000000 		.4byte	.LVL659
 16265 21da 82000000 		.4byte	.LVL660
 16266 21de 0100     		.2byte	0x1
 16267 21e0 50       		.byte	0x50
 16268 21e1 00000000 		.4byte	0
 16269 21e5 00000000 		.4byte	0
 16270              	.LLST156:
 16271 21e9 8E000000 		.4byte	.LVL661
 16272 21ed 94000000 		.4byte	.LVL662
 16273 21f1 0100     		.2byte	0x1
 16274 21f3 50       		.byte	0x50
 16275 21f4 94000000 		.4byte	.LVL662
 16276 21f8 98000000 		.4byte	.LVL663
 16277 21fc 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 384


 16278 21fe 5A       		.byte	0x5a
 16279 21ff 98000000 		.4byte	.LVL663
 16280 2203 9A000000 		.4byte	.LVL664
 16281 2207 0100     		.2byte	0x1
 16282 2209 50       		.byte	0x50
 16283 220a 9A000000 		.4byte	.LVL664
 16284 220e 32010000 		.4byte	.LVL673
 16285 2212 0100     		.2byte	0x1
 16286 2214 5A       		.byte	0x5a
 16287 2215 00000000 		.4byte	0
 16288 2219 00000000 		.4byte	0
 16289              	.LLST157:
 16290 221d 38000000 		.4byte	.LVL648
 16291 2221 40000000 		.4byte	.LVL649
 16292 2225 0100     		.2byte	0x1
 16293 2227 56       		.byte	0x56
 16294 2228 40000000 		.4byte	.LVL649
 16295 222c 42000000 		.4byte	.LVL650
 16296 2230 0700     		.2byte	0x7
 16297 2232 74       		.byte	0x74
 16298 2233 0C       		.sleb128 12
 16299 2234 06       		.byte	0x6
 16300 2235 73       		.byte	0x73
 16301 2236 00       		.sleb128 0
 16302 2237 1C       		.byte	0x1c
 16303 2238 9F       		.byte	0x9f
 16304 2239 00000000 		.4byte	0
 16305 223d 00000000 		.4byte	0
 16306              	.LLST158:
 16307 2241 E8000000 		.4byte	.LVL669
 16308 2245 EA000000 		.4byte	.LVL670
 16309 2249 0100     		.2byte	0x1
 16310 224b 55       		.byte	0x55
 16311 224c 3C010000 		.4byte	.LVL674
 16312 2250 5E010000 		.4byte	.LVL679
 16313 2254 0100     		.2byte	0x1
 16314 2256 55       		.byte	0x55
 16315 2257 00000000 		.4byte	0
 16316 225b 00000000 		.4byte	0
 16317              	.LLST159:
 16318 225f 9A000000 		.4byte	.LVL664
 16319 2263 9C000000 		.4byte	.LVL665
 16320 2267 0500     		.2byte	0x5
 16321 2269 76       		.byte	0x76
 16322 226a 00       		.sleb128 0
 16323 226b 39       		.byte	0x39
 16324 226c 25       		.byte	0x25
 16325 226d 9F       		.byte	0x9f
 16326 226e 9C000000 		.4byte	.LVL665
 16327 2272 E8000000 		.4byte	.LVL669
 16328 2276 0100     		.2byte	0x1
 16329 2278 55       		.byte	0x55
 16330 2279 EA000000 		.4byte	.LVL670
 16331 227d 32010000 		.4byte	.LVL673
 16332 2281 0100     		.2byte	0x1
 16333 2283 55       		.byte	0x55
 16334 2284 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 385


 16335 2288 00000000 		.4byte	0
 16336              	.LLST160:
 16337 228c 56000000 		.4byte	.LVL651
 16338 2290 5A000000 		.4byte	.LVL652
 16339 2294 0800     		.2byte	0x8
 16340 2296 73       		.byte	0x73
 16341 2297 00       		.sleb128 0
 16342 2298 39       		.byte	0x39
 16343 2299 25       		.byte	0x25
 16344 229a 79       		.byte	0x79
 16345 229b 00       		.sleb128 0
 16346 229c 1A       		.byte	0x1a
 16347 229d 9F       		.byte	0x9f
 16348 229e 5A000000 		.4byte	.LVL652
 16349 22a2 32010000 		.4byte	.LVL673
 16350 22a6 0100     		.2byte	0x1
 16351 22a8 59       		.byte	0x59
 16352 22a9 00000000 		.4byte	0
 16353 22ad 00000000 		.4byte	0
 16354              	.LLST161:
 16355 22b1 0E000000 		.4byte	.LVL643
 16356 22b5 16000000 		.4byte	.LVL645
 16357 22b9 0100     		.2byte	0x1
 16358 22bb 51       		.byte	0x51
 16359 22bc 16000000 		.4byte	.LVL645
 16360 22c0 74010000 		.4byte	.LFE37
 16361 22c4 0100     		.2byte	0x1
 16362 22c6 58       		.byte	0x58
 16363 22c7 00000000 		.4byte	0
 16364 22cb 00000000 		.4byte	0
 16365              	.LLST162:
 16366 22cf 00000000 		.4byte	.LVL683
 16367 22d3 19000000 		.4byte	.LVL687-1
 16368 22d7 0100     		.2byte	0x1
 16369 22d9 50       		.byte	0x50
 16370 22da 19000000 		.4byte	.LVL687-1
 16371 22de AC010000 		.4byte	.LFE38
 16372 22e2 0100     		.2byte	0x1
 16373 22e4 54       		.byte	0x54
 16374 22e5 00000000 		.4byte	0
 16375 22e9 00000000 		.4byte	0
 16376              	.LLST163:
 16377 22ed 00000000 		.4byte	.LVL683
 16378 22f1 16000000 		.4byte	.LVL686
 16379 22f5 0100     		.2byte	0x1
 16380 22f7 51       		.byte	0x51
 16381 22f8 16000000 		.4byte	.LVL686
 16382 22fc 3E000000 		.4byte	.LVL690
 16383 2300 0100     		.2byte	0x1
 16384 2302 58       		.byte	0x58
 16385 2303 3E000000 		.4byte	.LVL690
 16386 2307 A2010000 		.4byte	.LVL722
 16387 230b 0400     		.2byte	0x4
 16388 230d F3       		.byte	0xf3
 16389 230e 01       		.uleb128 0x1
 16390 230f 51       		.byte	0x51
 16391 2310 9F       		.byte	0x9f
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 386


 16392 2311 A2010000 		.4byte	.LVL722
 16393 2315 A6010000 		.4byte	.LVL723
 16394 2319 0100     		.2byte	0x1
 16395 231b 58       		.byte	0x58
 16396 231c A6010000 		.4byte	.LVL723
 16397 2320 AC010000 		.4byte	.LFE38
 16398 2324 0400     		.2byte	0x4
 16399 2326 F3       		.byte	0xf3
 16400 2327 01       		.uleb128 0x1
 16401 2328 51       		.byte	0x51
 16402 2329 9F       		.byte	0x9f
 16403 232a 00000000 		.4byte	0
 16404 232e 00000000 		.4byte	0
 16405              	.LLST164:
 16406 2332 00000000 		.4byte	.LVL683
 16407 2336 19000000 		.4byte	.LVL687-1
 16408 233a 0100     		.2byte	0x1
 16409 233c 52       		.byte	0x52
 16410 233d 19000000 		.4byte	.LVL687-1
 16411 2341 AC010000 		.4byte	.LFE38
 16412 2345 0100     		.2byte	0x1
 16413 2347 56       		.byte	0x56
 16414 2348 00000000 		.4byte	0
 16415 234c 00000000 		.4byte	0
 16416              	.LLST165:
 16417 2350 00000000 		.4byte	.LVL683
 16418 2354 10000000 		.4byte	.LVL685
 16419 2358 0100     		.2byte	0x1
 16420 235a 53       		.byte	0x53
 16421 235b 10000000 		.4byte	.LVL685
 16422 235f AC010000 		.4byte	.LFE38
 16423 2363 0100     		.2byte	0x1
 16424 2365 57       		.byte	0x57
 16425 2366 00000000 		.4byte	0
 16426 236a 00000000 		.4byte	0
 16427              	.LLST166:
 16428 236e 1A000000 		.4byte	.LVL687
 16429 2372 3E000000 		.4byte	.LVL690
 16430 2376 0100     		.2byte	0x1
 16431 2378 50       		.byte	0x50
 16432 2379 A2010000 		.4byte	.LVL722
 16433 237d A6010000 		.4byte	.LVL723
 16434 2381 0100     		.2byte	0x1
 16435 2383 50       		.byte	0x50
 16436 2384 00000000 		.4byte	0
 16437 2388 00000000 		.4byte	0
 16438              	.LLST167:
 16439 238c 5E000000 		.4byte	.LVL693
 16440 2390 64000000 		.4byte	.LVL694
 16441 2394 0100     		.2byte	0x1
 16442 2396 50       		.byte	0x50
 16443 2397 64000000 		.4byte	.LVL694
 16444 239b 67000000 		.4byte	.LVL695-1
 16445 239f 0200     		.2byte	0x2
 16446 23a1 74       		.byte	0x74
 16447 23a2 08       		.sleb128 8
 16448 23a3 68000000 		.4byte	.LVL695
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 387


 16449 23a7 6A000000 		.4byte	.LVL696
 16450 23ab 0100     		.2byte	0x1
 16451 23ad 50       		.byte	0x50
 16452 23ae 72000000 		.4byte	.LVL697
 16453 23b2 7E000000 		.4byte	.LVL698
 16454 23b6 0100     		.2byte	0x1
 16455 23b8 50       		.byte	0x50
 16456 23b9 82000000 		.4byte	.LVL699
 16457 23bd 8A000000 		.4byte	.LVL700
 16458 23c1 0100     		.2byte	0x1
 16459 23c3 50       		.byte	0x50
 16460 23c4 8E000000 		.4byte	.LVL701
 16461 23c8 96000000 		.4byte	.LVL702
 16462 23cc 0100     		.2byte	0x1
 16463 23ce 50       		.byte	0x50
 16464 23cf 00000000 		.4byte	0
 16465 23d3 00000000 		.4byte	0
 16466              	.LLST168:
 16467 23d7 CA000000 		.4byte	.LVL704
 16468 23db D0000000 		.4byte	.LVL705
 16469 23df 0100     		.2byte	0x1
 16470 23e1 50       		.byte	0x50
 16471 23e2 D0000000 		.4byte	.LVL705
 16472 23e6 D4000000 		.4byte	.LVL706
 16473 23ea 0100     		.2byte	0x1
 16474 23ec 5A       		.byte	0x5a
 16475 23ed D4000000 		.4byte	.LVL706
 16476 23f1 D6000000 		.4byte	.LVL707
 16477 23f5 0100     		.2byte	0x1
 16478 23f7 50       		.byte	0x50
 16479 23f8 D6000000 		.4byte	.LVL707
 16480 23fc 50010000 		.4byte	.LVL715
 16481 2400 0100     		.2byte	0x1
 16482 2402 5A       		.byte	0x5a
 16483 2403 00000000 		.4byte	0
 16484 2407 00000000 		.4byte	0
 16485              	.LLST169:
 16486 240b 24010000 		.4byte	.LVL712
 16487 240f 26010000 		.4byte	.LVL713
 16488 2413 0100     		.2byte	0x1
 16489 2415 55       		.byte	0x55
 16490 2416 5A010000 		.4byte	.LVL716
 16491 241a 84010000 		.4byte	.LVL721
 16492 241e 0100     		.2byte	0x1
 16493 2420 55       		.byte	0x55
 16494 2421 00000000 		.4byte	0
 16495 2425 00000000 		.4byte	0
 16496              	.LLST170:
 16497 2429 D6000000 		.4byte	.LVL707
 16498 242d D8000000 		.4byte	.LVL708
 16499 2431 0500     		.2byte	0x5
 16500 2433 76       		.byte	0x76
 16501 2434 00       		.sleb128 0
 16502 2435 39       		.byte	0x39
 16503 2436 25       		.byte	0x25
 16504 2437 9F       		.byte	0x9f
 16505 2438 D8000000 		.4byte	.LVL708
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 388


 16506 243c 24010000 		.4byte	.LVL712
 16507 2440 0100     		.2byte	0x1
 16508 2442 55       		.byte	0x55
 16509 2443 26010000 		.4byte	.LVL713
 16510 2447 50010000 		.4byte	.LVL715
 16511 244b 0100     		.2byte	0x1
 16512 244d 55       		.byte	0x55
 16513 244e 00000000 		.4byte	0
 16514 2452 00000000 		.4byte	0
 16515              	.LLST171:
 16516 2456 54000000 		.4byte	.LVL691
 16517 245a 58000000 		.4byte	.LVL692
 16518 245e 0800     		.2byte	0x8
 16519 2460 73       		.byte	0x73
 16520 2461 00       		.sleb128 0
 16521 2462 39       		.byte	0x39
 16522 2463 25       		.byte	0x25
 16523 2464 79       		.byte	0x79
 16524 2465 00       		.sleb128 0
 16525 2466 1A       		.byte	0x1a
 16526 2467 9F       		.byte	0x9f
 16527 2468 58000000 		.4byte	.LVL692
 16528 246c 50010000 		.4byte	.LVL715
 16529 2470 0100     		.2byte	0x1
 16530 2472 59       		.byte	0x59
 16531 2473 00000000 		.4byte	0
 16532 2477 00000000 		.4byte	0
 16533              	.LLST172:
 16534 247b 0E000000 		.4byte	.LVL684
 16535 247f 16000000 		.4byte	.LVL686
 16536 2483 0100     		.2byte	0x1
 16537 2485 51       		.byte	0x51
 16538 2486 16000000 		.4byte	.LVL686
 16539 248a AC010000 		.4byte	.LFE38
 16540 248e 0100     		.2byte	0x1
 16541 2490 58       		.byte	0x58
 16542 2491 00000000 		.4byte	0
 16543 2495 00000000 		.4byte	0
 16544              	.LLST173:
 16545 2499 00000000 		.4byte	.LVL724
 16546 249d 0B000000 		.4byte	.LVL725-1
 16547 24a1 0100     		.2byte	0x1
 16548 24a3 50       		.byte	0x50
 16549 24a4 0B000000 		.4byte	.LVL725-1
 16550 24a8 9C000000 		.4byte	.LFE39
 16551 24ac 0100     		.2byte	0x1
 16552 24ae 54       		.byte	0x54
 16553 24af 00000000 		.4byte	0
 16554 24b3 00000000 		.4byte	0
 16555              	.LLST174:
 16556 24b7 0C000000 		.4byte	.LVL725
 16557 24bb 28000000 		.4byte	.LVL726
 16558 24bf 0100     		.2byte	0x1
 16559 24c1 50       		.byte	0x50
 16560 24c2 46000000 		.4byte	.LVL731
 16561 24c6 58000000 		.4byte	.LVL733
 16562 24ca 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 389


 16563 24cc 50       		.byte	0x50
 16564 24cd 86000000 		.4byte	.LVL738
 16565 24d1 94000000 		.4byte	.LVL740
 16566 24d5 0100     		.2byte	0x1
 16567 24d7 50       		.byte	0x50
 16568 24d8 00000000 		.4byte	0
 16569 24dc 00000000 		.4byte	0
 16570              	.LLST175:
 16571 24e0 3E000000 		.4byte	.LVL729
 16572 24e4 42000000 		.4byte	.LVL730
 16573 24e8 0100     		.2byte	0x1
 16574 24ea 50       		.byte	0x50
 16575 24eb 42000000 		.4byte	.LVL730
 16576 24ef 90000000 		.4byte	.LVL739
 16577 24f3 0100     		.2byte	0x1
 16578 24f5 56       		.byte	0x56
 16579 24f6 00000000 		.4byte	0
 16580 24fa 00000000 		.4byte	0
 16581              	.LLST176:
 16582 24fe 4A000000 		.4byte	.LVL732
 16583 2502 90000000 		.4byte	.LVL739
 16584 2506 0100     		.2byte	0x1
 16585 2508 55       		.byte	0x55
 16586 2509 00000000 		.4byte	0
 16587 250d 00000000 		.4byte	0
 16588              	.LLST177:
 16589 2511 00000000 		.4byte	.LVL742
 16590 2515 09000000 		.4byte	.LVL743-1
 16591 2519 0100     		.2byte	0x1
 16592 251b 50       		.byte	0x50
 16593 251c 09000000 		.4byte	.LVL743-1
 16594 2520 24000000 		.4byte	.LFE40
 16595 2524 0100     		.2byte	0x1
 16596 2526 54       		.byte	0x54
 16597 2527 00000000 		.4byte	0
 16598 252b 00000000 		.4byte	0
 16599              	.LLST178:
 16600 252f 0A000000 		.4byte	.LVL743
 16601 2533 12000000 		.4byte	.LVL744
 16602 2537 0100     		.2byte	0x1
 16603 2539 50       		.byte	0x50
 16604 253a 16000000 		.4byte	.LVL745
 16605 253e 1E000000 		.4byte	.LVL746
 16606 2542 0100     		.2byte	0x1
 16607 2544 50       		.byte	0x50
 16608 2545 1E000000 		.4byte	.LVL746
 16609 2549 24000000 		.4byte	.LFE40
 16610 254d 0100     		.2byte	0x1
 16611 254f 53       		.byte	0x53
 16612 2550 00000000 		.4byte	0
 16613 2554 00000000 		.4byte	0
 16614              	.LLST179:
 16615 2558 00000000 		.4byte	.LVL747
 16616 255c 11000000 		.4byte	.LVL749-1
 16617 2560 0100     		.2byte	0x1
 16618 2562 50       		.byte	0x50
 16619 2563 11000000 		.4byte	.LVL749-1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 390


 16620 2567 7A010000 		.4byte	.LFE41
 16621 256b 0100     		.2byte	0x1
 16622 256d 54       		.byte	0x54
 16623 256e 00000000 		.4byte	0
 16624 2572 00000000 		.4byte	0
 16625              	.LLST180:
 16626 2576 00000000 		.4byte	.LVL747
 16627 257a 0E000000 		.4byte	.LVL748
 16628 257e 0100     		.2byte	0x1
 16629 2580 51       		.byte	0x51
 16630 2581 0E000000 		.4byte	.LVL748
 16631 2585 8A000000 		.4byte	.LVL769
 16632 2589 0100     		.2byte	0x1
 16633 258b 55       		.byte	0x55
 16634 258c 8C000000 		.4byte	.LVL770
 16635 2590 FC000000 		.4byte	.LVL789
 16636 2594 0100     		.2byte	0x1
 16637 2596 55       		.byte	0x55
 16638 2597 FE000000 		.4byte	.LVL790
 16639 259b 00010000 		.4byte	.LVL791
 16640 259f 0100     		.2byte	0x1
 16641 25a1 55       		.byte	0x55
 16642 25a2 02010000 		.4byte	.LVL792
 16643 25a6 04010000 		.4byte	.LVL793
 16644 25aa 0100     		.2byte	0x1
 16645 25ac 55       		.byte	0x55
 16646 25ad 6A010000 		.4byte	.LVL800
 16647 25b1 6E010000 		.4byte	.LVL801
 16648 25b5 0100     		.2byte	0x1
 16649 25b7 55       		.byte	0x55
 16650 25b8 00000000 		.4byte	0
 16651 25bc 00000000 		.4byte	0
 16652              	.LLST181:
 16653 25c0 12000000 		.4byte	.LVL749
 16654 25c4 18000000 		.4byte	.LVL750
 16655 25c8 0100     		.2byte	0x1
 16656 25ca 50       		.byte	0x50
 16657 25cb 18000000 		.4byte	.LVL750
 16658 25cf 6E000000 		.4byte	.LVL762
 16659 25d3 0100     		.2byte	0x1
 16660 25d5 56       		.byte	0x56
 16661 25d6 74000000 		.4byte	.LVL764
 16662 25da 7C000000 		.4byte	.LVL765
 16663 25de 0100     		.2byte	0x1
 16664 25e0 56       		.byte	0x56
 16665 25e1 82000000 		.4byte	.LVL767
 16666 25e5 B8000000 		.4byte	.LVL776
 16667 25e9 0100     		.2byte	0x1
 16668 25eb 56       		.byte	0x56
 16669 25ec BE000000 		.4byte	.LVL778
 16670 25f0 CC000000 		.4byte	.LVL779
 16671 25f4 0100     		.2byte	0x1
 16672 25f6 56       		.byte	0x56
 16673 25f7 D2000000 		.4byte	.LVL781
 16674 25fb F2000000 		.4byte	.LVL786
 16675 25ff 0100     		.2byte	0x1
 16676 2601 56       		.byte	0x56
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 391


 16677 2602 F8000000 		.4byte	.LVL788
 16678 2606 3C010000 		.4byte	.LVL795
 16679 260a 0100     		.2byte	0x1
 16680 260c 56       		.byte	0x56
 16681 260d 42010000 		.4byte	.LVL796
 16682 2611 5E010000 		.4byte	.LVL798
 16683 2615 0100     		.2byte	0x1
 16684 2617 56       		.byte	0x56
 16685 2618 64010000 		.4byte	.LVL799
 16686 261c 74010000 		.4byte	.LVL802
 16687 2620 0100     		.2byte	0x1
 16688 2622 56       		.byte	0x56
 16689 2623 00000000 		.4byte	0
 16690 2627 00000000 		.4byte	0
 16691              	.LLST182:
 16692 262b 5A000000 		.4byte	.LVL757
 16693 262f 5C000000 		.4byte	.LVL758
 16694 2633 0100     		.2byte	0x1
 16695 2635 51       		.byte	0x51
 16696 2636 5E000000 		.4byte	.LVL759
 16697 263a 65000000 		.4byte	.LVL760-1
 16698 263e 0100     		.2byte	0x1
 16699 2640 51       		.byte	0x51
 16700 2641 68000000 		.4byte	.LVL761
 16701 2645 72000000 		.4byte	.LVL763
 16702 2649 0100     		.2byte	0x1
 16703 264b 50       		.byte	0x50
 16704 264c 72000000 		.4byte	.LVL763
 16705 2650 74000000 		.4byte	.LVL764
 16706 2654 0100     		.2byte	0x1
 16707 2656 51       		.byte	0x51
 16708 2657 74000000 		.4byte	.LVL764
 16709 265b 80000000 		.4byte	.LVL766
 16710 265f 0100     		.2byte	0x1
 16711 2661 50       		.byte	0x50
 16712 2662 80000000 		.4byte	.LVL766
 16713 2666 82000000 		.4byte	.LVL767
 16714 266a 0100     		.2byte	0x1
 16715 266c 51       		.byte	0x51
 16716 266d 82000000 		.4byte	.LVL767
 16717 2671 84000000 		.4byte	.LVL768
 16718 2675 0100     		.2byte	0x1
 16719 2677 50       		.byte	0x50
 16720 2678 84000000 		.4byte	.LVL768
 16721 267c A1000000 		.4byte	.LVL772-1
 16722 2680 0100     		.2byte	0x1
 16723 2682 51       		.byte	0x51
 16724 2683 A2000000 		.4byte	.LVL772
 16725 2687 A8000000 		.4byte	.LVL773
 16726 268b 0100     		.2byte	0x1
 16727 268d 50       		.byte	0x50
 16728 268e A8000000 		.4byte	.LVL773
 16729 2692 AD000000 		.4byte	.LVL774-1
 16730 2696 0100     		.2byte	0x1
 16731 2698 51       		.byte	0x51
 16732 2699 B0000000 		.4byte	.LVL775
 16733 269d BC000000 		.4byte	.LVL777
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 392


 16734 26a1 0100     		.2byte	0x1
 16735 26a3 50       		.byte	0x50
 16736 26a4 BC000000 		.4byte	.LVL777
 16737 26a8 BE000000 		.4byte	.LVL778
 16738 26ac 0100     		.2byte	0x1
 16739 26ae 51       		.byte	0x51
 16740 26af BE000000 		.4byte	.LVL778
 16741 26b3 D0000000 		.4byte	.LVL780
 16742 26b7 0100     		.2byte	0x1
 16743 26b9 50       		.byte	0x50
 16744 26ba D0000000 		.4byte	.LVL780
 16745 26be D2000000 		.4byte	.LVL781
 16746 26c2 0100     		.2byte	0x1
 16747 26c4 51       		.byte	0x51
 16748 26c5 D2000000 		.4byte	.LVL781
 16749 26c9 D4000000 		.4byte	.LVL782
 16750 26cd 0100     		.2byte	0x1
 16751 26cf 50       		.byte	0x50
 16752 26d0 D4000000 		.4byte	.LVL782
 16753 26d4 DA000000 		.4byte	.LVL783
 16754 26d8 0100     		.2byte	0x1
 16755 26da 51       		.byte	0x51
 16756 26db DA000000 		.4byte	.LVL783
 16757 26df DC000000 		.4byte	.LVL784
 16758 26e3 0100     		.2byte	0x1
 16759 26e5 50       		.byte	0x50
 16760 26e6 DC000000 		.4byte	.LVL784
 16761 26ea ED000000 		.4byte	.LVL785-1
 16762 26ee 0100     		.2byte	0x1
 16763 26f0 51       		.byte	0x51
 16764 26f1 02010000 		.4byte	.LVL792
 16765 26f5 04010000 		.4byte	.LVL793
 16766 26f9 0100     		.2byte	0x1
 16767 26fb 51       		.byte	0x51
 16768 26fc 00000000 		.4byte	0
 16769 2700 00000000 		.4byte	0
 16770              	.LLST183:
 16771 2704 3E000000 		.4byte	.LVL753
 16772 2708 FE000000 		.4byte	.LVL790
 16773 270c 0100     		.2byte	0x1
 16774 270e 57       		.byte	0x57
 16775 270f 02010000 		.4byte	.LVL792
 16776 2713 04010000 		.4byte	.LVL793
 16777 2717 0100     		.2byte	0x1
 16778 2719 57       		.byte	0x57
 16779 271a 00000000 		.4byte	0
 16780 271e 00000000 		.4byte	0
 16781              	.LLST184:
 16782 2722 30000000 		.4byte	.LVL752
 16783 2726 EE000000 		.4byte	.LVL785
 16784 272a 0200     		.2byte	0x2
 16785 272c 30       		.byte	0x30
 16786 272d 9F       		.byte	0x9f
 16787 272e EE000000 		.4byte	.LVL785
 16788 2732 F6000000 		.4byte	.LVL787
 16789 2736 0100     		.2byte	0x1
 16790 2738 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 393


 16791 2739 F8000000 		.4byte	.LVL788
 16792 273d FC000000 		.4byte	.LVL789
 16793 2741 0100     		.2byte	0x1
 16794 2743 50       		.byte	0x50
 16795 2744 FC000000 		.4byte	.LVL789
 16796 2748 FE000000 		.4byte	.LVL790
 16797 274c 0100     		.2byte	0x1
 16798 274e 55       		.byte	0x55
 16799 274f FE000000 		.4byte	.LVL790
 16800 2753 04010000 		.4byte	.LVL793
 16801 2757 0200     		.2byte	0x2
 16802 2759 30       		.byte	0x30
 16803 275a 9F       		.byte	0x9f
 16804 275b 04010000 		.4byte	.LVL793
 16805 275f 6A010000 		.4byte	.LVL800
 16806 2763 0100     		.2byte	0x1
 16807 2765 55       		.byte	0x55
 16808 2766 6E010000 		.4byte	.LVL801
 16809 276a 74010000 		.4byte	.LVL802
 16810 276e 0100     		.2byte	0x1
 16811 2770 55       		.byte	0x55
 16812 2771 00000000 		.4byte	0
 16813 2775 00000000 		.4byte	0
 16814              	.LLST185:
 16815 2779 30000000 		.4byte	.LVL752
 16816 277d 48000000 		.4byte	.LVL754
 16817 2781 0100     		.2byte	0x1
 16818 2783 53       		.byte	0x53
 16819 2784 48000000 		.4byte	.LVL754
 16820 2788 54000000 		.4byte	.LVL755
 16821 278c 0300     		.2byte	0x3
 16822 278e 73       		.byte	0x73
 16823 278f 01       		.sleb128 1
 16824 2790 9F       		.byte	0x9f
 16825 2791 FE000000 		.4byte	.LVL790
 16826 2795 02010000 		.4byte	.LVL792
 16827 2799 0100     		.2byte	0x1
 16828 279b 53       		.byte	0x53
 16829 279c 00000000 		.4byte	0
 16830 27a0 00000000 		.4byte	0
 16831              	.LLST186:
 16832 27a4 00000000 		.4byte	.LVL803
 16833 27a8 10000000 		.4byte	.LVL805
 16834 27ac 0100     		.2byte	0x1
 16835 27ae 50       		.byte	0x50
 16836 27af 10000000 		.4byte	.LVL805
 16837 27b3 68000000 		.4byte	.LVL816
 16838 27b7 0100     		.2byte	0x1
 16839 27b9 55       		.byte	0x55
 16840 27ba 68000000 		.4byte	.LVL816
 16841 27be 6A000000 		.4byte	.LVL817
 16842 27c2 0100     		.2byte	0x1
 16843 27c4 50       		.byte	0x50
 16844 27c5 6A000000 		.4byte	.LVL817
 16845 27c9 6C000000 		.4byte	.LVL818
 16846 27cd 0400     		.2byte	0x4
 16847 27cf F3       		.byte	0xf3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 394


 16848 27d0 01       		.uleb128 0x1
 16849 27d1 50       		.byte	0x50
 16850 27d2 9F       		.byte	0x9f
 16851 27d3 6C000000 		.4byte	.LVL818
 16852 27d7 6E000000 		.4byte	.LVL819
 16853 27db 0100     		.2byte	0x1
 16854 27dd 55       		.byte	0x55
 16855 27de 6E000000 		.4byte	.LVL819
 16856 27e2 72000000 		.4byte	.LFE42
 16857 27e6 0400     		.2byte	0x4
 16858 27e8 F3       		.byte	0xf3
 16859 27e9 01       		.uleb128 0x1
 16860 27ea 50       		.byte	0x50
 16861 27eb 9F       		.byte	0x9f
 16862 27ec 00000000 		.4byte	0
 16863 27f0 00000000 		.4byte	0
 16864              	.LLST187:
 16865 27f4 00000000 		.4byte	.LVL803
 16866 27f8 0E000000 		.4byte	.LVL804
 16867 27fc 0100     		.2byte	0x1
 16868 27fe 51       		.byte	0x51
 16869 27ff 0E000000 		.4byte	.LVL804
 16870 2803 10000000 		.4byte	.LVL805
 16871 2807 0200     		.2byte	0x2
 16872 2809 91       		.byte	0x91
 16873 280a 64       		.sleb128 -28
 16874 280b 10000000 		.4byte	.LVL805
 16875 280f 13000000 		.4byte	.LVL806-1
 16876 2813 0200     		.2byte	0x2
 16877 2815 70       		.byte	0x70
 16878 2816 00       		.sleb128 0
 16879 2817 13000000 		.4byte	.LVL806-1
 16880 281b 68000000 		.4byte	.LVL816
 16881 281f 0200     		.2byte	0x2
 16882 2821 91       		.byte	0x91
 16883 2822 64       		.sleb128 -28
 16884 2823 68000000 		.4byte	.LVL816
 16885 2827 6C000000 		.4byte	.LVL818
 16886 282b 0100     		.2byte	0x1
 16887 282d 51       		.byte	0x51
 16888 282e 6C000000 		.4byte	.LVL818
 16889 2832 72000000 		.4byte	.LFE42
 16890 2836 0200     		.2byte	0x2
 16891 2838 91       		.byte	0x91
 16892 2839 64       		.sleb128 -28
 16893 283a 00000000 		.4byte	0
 16894 283e 00000000 		.4byte	0
 16895              	.LLST188:
 16896 2842 14000000 		.4byte	.LVL806
 16897 2846 20000000 		.4byte	.LVL807
 16898 284a 0100     		.2byte	0x1
 16899 284c 50       		.byte	0x50
 16900 284d 24000000 		.4byte	.LVL808
 16901 2851 3C000000 		.4byte	.LVL809
 16902 2855 0100     		.2byte	0x1
 16903 2857 50       		.byte	0x50
 16904 2858 44000000 		.4byte	.LVL811
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 395


 16905 285c 46000000 		.4byte	.LVL812
 16906 2860 0100     		.2byte	0x1
 16907 2862 50       		.byte	0x50
 16908 2863 46000000 		.4byte	.LVL812
 16909 2867 68000000 		.4byte	.LVL816
 16910 286b 0100     		.2byte	0x1
 16911 286d 54       		.byte	0x54
 16912 286e 6C000000 		.4byte	.LVL818
 16913 2872 6E000000 		.4byte	.LVL819
 16914 2876 0100     		.2byte	0x1
 16915 2878 54       		.byte	0x54
 16916 2879 00000000 		.4byte	0
 16917 287d 00000000 		.4byte	0
 16918              	.LLST189:
 16919 2881 00000000 		.4byte	.LVL820
 16920 2885 0B000000 		.4byte	.LVL821-1
 16921 2889 0100     		.2byte	0x1
 16922 288b 50       		.byte	0x50
 16923 288c 0B000000 		.4byte	.LVL821-1
 16924 2890 1A000000 		.4byte	.LFE43
 16925 2894 0100     		.2byte	0x1
 16926 2896 54       		.byte	0x54
 16927 2897 00000000 		.4byte	0
 16928 289b 00000000 		.4byte	0
 16929              	.LLST190:
 16930 289f 0C000000 		.4byte	.LVL821
 16931 28a3 16000000 		.4byte	.LVL822
 16932 28a7 0100     		.2byte	0x1
 16933 28a9 50       		.byte	0x50
 16934 28aa 00000000 		.4byte	0
 16935 28ae 00000000 		.4byte	0
 16936              	.LLST191:
 16937 28b2 00000000 		.4byte	.LVL823
 16938 28b6 0D000000 		.4byte	.LVL825-1
 16939 28ba 0100     		.2byte	0x1
 16940 28bc 50       		.byte	0x50
 16941 28bd 0D000000 		.4byte	.LVL825-1
 16942 28c1 4C000000 		.4byte	.LFE44
 16943 28c5 0100     		.2byte	0x1
 16944 28c7 55       		.byte	0x55
 16945 28c8 00000000 		.4byte	0
 16946 28cc 00000000 		.4byte	0
 16947              	.LLST192:
 16948 28d0 00000000 		.4byte	.LVL823
 16949 28d4 0A000000 		.4byte	.LVL824
 16950 28d8 0100     		.2byte	0x1
 16951 28da 51       		.byte	0x51
 16952 28db 0A000000 		.4byte	.LVL824
 16953 28df 4C000000 		.4byte	.LFE44
 16954 28e3 0100     		.2byte	0x1
 16955 28e5 56       		.byte	0x56
 16956 28e6 00000000 		.4byte	0
 16957 28ea 00000000 		.4byte	0
 16958              	.LLST193:
 16959 28ee 0E000000 		.4byte	.LVL825
 16960 28f2 18000000 		.4byte	.LVL826
 16961 28f6 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 396


 16962 28f8 50       		.byte	0x50
 16963 28f9 1E000000 		.4byte	.LVL828
 16964 28fd 20000000 		.4byte	.LVL829
 16965 2901 0100     		.2byte	0x1
 16966 2903 54       		.byte	0x54
 16967 2904 20000000 		.4byte	.LVL829
 16968 2908 24000000 		.4byte	.LVL830
 16969 290c 0100     		.2byte	0x1
 16970 290e 50       		.byte	0x50
 16971 290f 28000000 		.4byte	.LVL831
 16972 2913 2E000000 		.4byte	.LVL832
 16973 2917 0100     		.2byte	0x1
 16974 2919 50       		.byte	0x50
 16975 291a 2E000000 		.4byte	.LVL832
 16976 291e 40000000 		.4byte	.LVL834
 16977 2922 0100     		.2byte	0x1
 16978 2924 54       		.byte	0x54
 16979 2925 40000000 		.4byte	.LVL834
 16980 2929 46000000 		.4byte	.LVL835
 16981 292d 0100     		.2byte	0x1
 16982 292f 50       		.byte	0x50
 16983 2930 46000000 		.4byte	.LVL835
 16984 2934 4C000000 		.4byte	.LFE44
 16985 2938 0100     		.2byte	0x1
 16986 293a 54       		.byte	0x54
 16987 293b 00000000 		.4byte	0
 16988 293f 00000000 		.4byte	0
 16989              	.LLST194:
 16990 2943 00000000 		.4byte	.LVL836
 16991 2947 0E000000 		.4byte	.LVL838
 16992 294b 0100     		.2byte	0x1
 16993 294d 50       		.byte	0x50
 16994 294e 0E000000 		.4byte	.LVL838
 16995 2952 11000000 		.4byte	.LVL839-1
 16996 2956 0200     		.2byte	0x2
 16997 2958 70       		.byte	0x70
 16998 2959 00       		.sleb128 0
 16999 295a 11000000 		.4byte	.LVL839-1
 17000 295e 3E000000 		.4byte	.LFE45
 17001 2962 0300     		.2byte	0x3
 17002 2964 91       		.byte	0x91
 17003 2965 BC7F     		.sleb128 -68
 17004 2967 00000000 		.4byte	0
 17005 296b 00000000 		.4byte	0
 17006              	.LLST195:
 17007 296f 00000000 		.4byte	.LVL836
 17008 2973 0C000000 		.4byte	.LVL837
 17009 2977 0100     		.2byte	0x1
 17010 2979 51       		.byte	0x51
 17011 297a 0C000000 		.4byte	.LVL837
 17012 297e 3E000000 		.4byte	.LFE45
 17013 2982 0100     		.2byte	0x1
 17014 2984 55       		.byte	0x55
 17015 2985 00000000 		.4byte	0
 17016 2989 00000000 		.4byte	0
 17017              	.LLST196:
 17018 298d 12000000 		.4byte	.LVL839
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 397


 17019 2991 1A000000 		.4byte	.LVL840
 17020 2995 0100     		.2byte	0x1
 17021 2997 50       		.byte	0x50
 17022 2998 1E000000 		.4byte	.LVL841
 17023 299c 30000000 		.4byte	.LVL842
 17024 29a0 0100     		.2byte	0x1
 17025 29a2 50       		.byte	0x50
 17026 29a3 36000000 		.4byte	.LVL844
 17027 29a7 38000000 		.4byte	.LVL845
 17028 29ab 0100     		.2byte	0x1
 17029 29ad 50       		.byte	0x50
 17030 29ae 38000000 		.4byte	.LVL845
 17031 29b2 3E000000 		.4byte	.LFE45
 17032 29b6 0100     		.2byte	0x1
 17033 29b8 54       		.byte	0x54
 17034 29b9 00000000 		.4byte	0
 17035 29bd 00000000 		.4byte	0
 17036              	.LLST197:
 17037 29c1 00000000 		.4byte	.LVL846
 17038 29c5 12000000 		.4byte	.LVL849
 17039 29c9 0100     		.2byte	0x1
 17040 29cb 50       		.byte	0x50
 17041 29cc 12000000 		.4byte	.LVL849
 17042 29d0 15000000 		.4byte	.LVL850-1
 17043 29d4 0200     		.2byte	0x2
 17044 29d6 70       		.byte	0x70
 17045 29d7 00       		.sleb128 0
 17046 29d8 15000000 		.4byte	.LVL850-1
 17047 29dc CE000000 		.4byte	.LFE46
 17048 29e0 0200     		.2byte	0x2
 17049 29e2 91       		.byte	0x91
 17050 29e3 44       		.sleb128 -60
 17051 29e4 00000000 		.4byte	0
 17052 29e8 00000000 		.4byte	0
 17053              	.LLST198:
 17054 29ec 00000000 		.4byte	.LVL846
 17055 29f0 10000000 		.4byte	.LVL848
 17056 29f4 0100     		.2byte	0x1
 17057 29f6 51       		.byte	0x51
 17058 29f7 10000000 		.4byte	.LVL848
 17059 29fb CE000000 		.4byte	.LFE46
 17060 29ff 0100     		.2byte	0x1
 17061 2a01 59       		.byte	0x59
 17062 2a02 00000000 		.4byte	0
 17063 2a06 00000000 		.4byte	0
 17064              	.LLST199:
 17065 2a0a 00000000 		.4byte	.LVL846
 17066 2a0e 0E000000 		.4byte	.LVL847
 17067 2a12 0100     		.2byte	0x1
 17068 2a14 52       		.byte	0x52
 17069 2a15 0E000000 		.4byte	.LVL847
 17070 2a19 3A000000 		.4byte	.LVL853
 17071 2a1d 0100     		.2byte	0x1
 17072 2a1f 54       		.byte	0x54
 17073 2a20 3A000000 		.4byte	.LVL853
 17074 2a24 5E000000 		.4byte	.LVL858
 17075 2a28 0400     		.2byte	0x4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 398


 17076 2a2a F3       		.byte	0xf3
 17077 2a2b 01       		.uleb128 0x1
 17078 2a2c 52       		.byte	0x52
 17079 2a2d 9F       		.byte	0x9f
 17080 2a2e 5E000000 		.4byte	.LVL858
 17081 2a32 62000000 		.4byte	.LVL860
 17082 2a36 0100     		.2byte	0x1
 17083 2a38 54       		.byte	0x54
 17084 2a39 62000000 		.4byte	.LVL860
 17085 2a3d CE000000 		.4byte	.LFE46
 17086 2a41 0400     		.2byte	0x4
 17087 2a43 F3       		.byte	0xf3
 17088 2a44 01       		.uleb128 0x1
 17089 2a45 52       		.byte	0x52
 17090 2a46 9F       		.byte	0x9f
 17091 2a47 00000000 		.4byte	0
 17092 2a4b 00000000 		.4byte	0
 17093              	.LLST200:
 17094 2a4f 16000000 		.4byte	.LVL850
 17095 2a53 3C000000 		.4byte	.LVL854
 17096 2a57 0100     		.2byte	0x1
 17097 2a59 50       		.byte	0x50
 17098 2a5a 5E000000 		.4byte	.LVL858
 17099 2a5e 64000000 		.4byte	.LVL861
 17100 2a62 0100     		.2byte	0x1
 17101 2a64 50       		.byte	0x50
 17102 2a65 64000000 		.4byte	.LVL861
 17103 2a69 72000000 		.4byte	.LVL863
 17104 2a6d 0100     		.2byte	0x1
 17105 2a6f 58       		.byte	0x58
 17106 2a70 72000000 		.4byte	.LVL863
 17107 2a74 78000000 		.4byte	.LVL864
 17108 2a78 0100     		.2byte	0x1
 17109 2a7a 50       		.byte	0x50
 17110 2a7b 78000000 		.4byte	.LVL864
 17111 2a7f AC000000 		.4byte	.LVL873
 17112 2a83 0100     		.2byte	0x1
 17113 2a85 58       		.byte	0x58
 17114 2a86 B6000000 		.4byte	.LVL874
 17115 2a8a CE000000 		.4byte	.LFE46
 17116 2a8e 0100     		.2byte	0x1
 17117 2a90 58       		.byte	0x58
 17118 2a91 00000000 		.4byte	0
 17119 2a95 00000000 		.4byte	0
 17120              	.LLST201:
 17121 2a99 30000000 		.4byte	.LVL851
 17122 2a9d 3C000000 		.4byte	.LVL854
 17123 2aa1 0200     		.2byte	0x2
 17124 2aa3 30       		.byte	0x30
 17125 2aa4 9F       		.byte	0x9f
 17126 2aa5 3C000000 		.4byte	.LVL854
 17127 2aa9 5E000000 		.4byte	.LVL858
 17128 2aad 0100     		.2byte	0x1
 17129 2aaf 56       		.byte	0x56
 17130 2ab0 5E000000 		.4byte	.LVL858
 17131 2ab4 64000000 		.4byte	.LVL861
 17132 2ab8 0200     		.2byte	0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 399


 17133 2aba 30       		.byte	0x30
 17134 2abb 9F       		.byte	0x9f
 17135 2abc 64000000 		.4byte	.LVL861
 17136 2ac0 C6000000 		.4byte	.LVL875
 17137 2ac4 0100     		.2byte	0x1
 17138 2ac6 56       		.byte	0x56
 17139 2ac7 00000000 		.4byte	0
 17140 2acb 00000000 		.4byte	0
 17141              	.LLST202:
 17142 2acf 36000000 		.4byte	.LVL852
 17143 2ad3 3C000000 		.4byte	.LVL854
 17144 2ad7 0200     		.2byte	0x2
 17145 2ad9 32       		.byte	0x32
 17146 2ada 9F       		.byte	0x9f
 17147 2adb 3C000000 		.4byte	.LVL854
 17148 2adf 5E000000 		.4byte	.LVL858
 17149 2ae3 0100     		.2byte	0x1
 17150 2ae5 54       		.byte	0x54
 17151 2ae6 5E000000 		.4byte	.LVL858
 17152 2aea A6000000 		.4byte	.LVL871
 17153 2aee 0100     		.2byte	0x1
 17154 2af0 55       		.byte	0x55
 17155 2af1 A6000000 		.4byte	.LVL871
 17156 2af5 A8000000 		.4byte	.LVL872
 17157 2af9 0300     		.2byte	0x3
 17158 2afb 75       		.byte	0x75
 17159 2afc 7F       		.sleb128 -1
 17160 2afd 9F       		.byte	0x9f
 17161 2afe A8000000 		.4byte	.LVL872
 17162 2b02 AC000000 		.4byte	.LVL873
 17163 2b06 0100     		.2byte	0x1
 17164 2b08 55       		.byte	0x55
 17165 2b09 AC000000 		.4byte	.LVL873
 17166 2b0d B6000000 		.4byte	.LVL874
 17167 2b11 0100     		.2byte	0x1
 17168 2b13 54       		.byte	0x54
 17169 2b14 00000000 		.4byte	0
 17170 2b18 00000000 		.4byte	0
 17171              	.LLST203:
 17172 2b1c 60000000 		.4byte	.LVL859
 17173 2b20 6A000000 		.4byte	.LVL862
 17174 2b24 0100     		.2byte	0x1
 17175 2b26 57       		.byte	0x57
 17176 2b27 6A000000 		.4byte	.LVL862
 17177 2b2b 78000000 		.4byte	.LVL864
 17178 2b2f 0100     		.2byte	0x1
 17179 2b31 5A       		.byte	0x5a
 17180 2b32 78000000 		.4byte	.LVL864
 17181 2b36 AC000000 		.4byte	.LVL873
 17182 2b3a 0100     		.2byte	0x1
 17183 2b3c 57       		.byte	0x57
 17184 2b3d 00000000 		.4byte	0
 17185 2b41 00000000 		.4byte	0
 17186              	.LLST204:
 17187 2b45 44000000 		.4byte	.LVL855
 17188 2b49 5E000000 		.4byte	.LVL858
 17189 2b4d 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 400


 17190 2b4f 50       		.byte	0x50
 17191 2b50 AC000000 		.4byte	.LVL873
 17192 2b54 B6000000 		.4byte	.LVL874
 17193 2b58 0100     		.2byte	0x1
 17194 2b5a 50       		.byte	0x50
 17195 2b5b 00000000 		.4byte	0
 17196 2b5f 00000000 		.4byte	0
 17197              	.LLST205:
 17198 2b63 60000000 		.4byte	.LVL859
 17199 2b67 64000000 		.4byte	.LVL861
 17200 2b6b 0200     		.2byte	0x2
 17201 2b6d 30       		.byte	0x30
 17202 2b6e 9F       		.byte	0x9f
 17203 2b6f 64000000 		.4byte	.LVL861
 17204 2b73 AC000000 		.4byte	.LVL873
 17205 2b77 0100     		.2byte	0x1
 17206 2b79 54       		.byte	0x54
 17207 2b7a 00000000 		.4byte	0
 17208 2b7e 00000000 		.4byte	0
 17209              	.LLST206:
 17210 2b82 00000000 		.4byte	.LVL876
 17211 2b86 0B000000 		.4byte	.LVL877-1
 17212 2b8a 0100     		.2byte	0x1
 17213 2b8c 50       		.byte	0x50
 17214 2b8d 0B000000 		.4byte	.LVL877-1
 17215 2b91 B4000000 		.4byte	.LFE47
 17216 2b95 0100     		.2byte	0x1
 17217 2b97 55       		.byte	0x55
 17218 2b98 00000000 		.4byte	0
 17219 2b9c 00000000 		.4byte	0
 17220              	.LLST207:
 17221 2ba0 0C000000 		.4byte	.LVL877
 17222 2ba4 12000000 		.4byte	.LVL878
 17223 2ba8 0100     		.2byte	0x1
 17224 2baa 50       		.byte	0x50
 17225 2bab 12000000 		.4byte	.LVL878
 17226 2baf 42000000 		.4byte	.LVL881
 17227 2bb3 0100     		.2byte	0x1
 17228 2bb5 54       		.byte	0x54
 17229 2bb6 42000000 		.4byte	.LVL881
 17230 2bba 4A000000 		.4byte	.LVL882
 17231 2bbe 0200     		.2byte	0x2
 17232 2bc0 30       		.byte	0x30
 17233 2bc1 9F       		.byte	0x9f
 17234 2bc2 4A000000 		.4byte	.LVL882
 17235 2bc6 A0000000 		.4byte	.LVL889
 17236 2bca 0100     		.2byte	0x1
 17237 2bcc 54       		.byte	0x54
 17238 2bcd A0000000 		.4byte	.LVL889
 17239 2bd1 A2000000 		.4byte	.LVL890
 17240 2bd5 0100     		.2byte	0x1
 17241 2bd7 50       		.byte	0x50
 17242 2bd8 A2000000 		.4byte	.LVL890
 17243 2bdc B0000000 		.4byte	.LVL891
 17244 2be0 0100     		.2byte	0x1
 17245 2be2 54       		.byte	0x54
 17246 2be3 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 401


 17247 2be7 00000000 		.4byte	0
 17248              	.LLST208:
 17249 2beb 42000000 		.4byte	.LVL881
 17250 2bef 60000000 		.4byte	.LVL884
 17251 2bf3 0100     		.2byte	0x1
 17252 2bf5 50       		.byte	0x50
 17253 2bf6 60000000 		.4byte	.LVL884
 17254 2bfa 63000000 		.4byte	.LVL885-1
 17255 2bfe 0100     		.2byte	0x1
 17256 2c00 51       		.byte	0x51
 17257 2c01 00000000 		.4byte	0
 17258 2c05 00000000 		.4byte	0
 17259              	.LLST209:
 17260 2c09 00000000 		.4byte	.LVL892
 17261 2c0d 0C000000 		.4byte	.LVL894
 17262 2c11 0100     		.2byte	0x1
 17263 2c13 50       		.byte	0x50
 17264 2c14 0C000000 		.4byte	.LVL894
 17265 2c18 0F000000 		.4byte	.LVL895-1
 17266 2c1c 0200     		.2byte	0x2
 17267 2c1e 70       		.byte	0x70
 17268 2c1f 00       		.sleb128 0
 17269 2c20 0F000000 		.4byte	.LVL895-1
 17270 2c24 AC000000 		.4byte	.LFE48
 17271 2c28 0300     		.2byte	0x3
 17272 2c2a 91       		.byte	0x91
 17273 2c2b 8C7F     		.sleb128 -116
 17274 2c2d 00000000 		.4byte	0
 17275 2c31 00000000 		.4byte	0
 17276              	.LLST210:
 17277 2c35 10000000 		.4byte	.LVL895
 17278 2c39 1E000000 		.4byte	.LVL896
 17279 2c3d 0100     		.2byte	0x1
 17280 2c3f 50       		.byte	0x50
 17281 2c40 22000000 		.4byte	.LVL897
 17282 2c44 42000000 		.4byte	.LVL898
 17283 2c48 0100     		.2byte	0x1
 17284 2c4a 50       		.byte	0x50
 17285 2c4b 42000000 		.4byte	.LVL898
 17286 2c4f 66000000 		.4byte	.LVL902
 17287 2c53 0100     		.2byte	0x1
 17288 2c55 54       		.byte	0x54
 17289 2c56 66000000 		.4byte	.LVL902
 17290 2c5a 6E000000 		.4byte	.LVL903
 17291 2c5e 0100     		.2byte	0x1
 17292 2c60 50       		.byte	0x50
 17293 2c61 72000000 		.4byte	.LVL904
 17294 2c65 78000000 		.4byte	.LVL905
 17295 2c69 0100     		.2byte	0x1
 17296 2c6b 50       		.byte	0x50
 17297 2c6c 78000000 		.4byte	.LVL905
 17298 2c70 80000000 		.4byte	.LVL906
 17299 2c74 0100     		.2byte	0x1
 17300 2c76 53       		.byte	0x53
 17301 2c77 80000000 		.4byte	.LVL906
 17302 2c7b 8A000000 		.4byte	.LVL908
 17303 2c7f 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 402


 17304 2c81 54       		.byte	0x54
 17305 2c82 8A000000 		.4byte	.LVL908
 17306 2c86 96000000 		.4byte	.LVL909
 17307 2c8a 0100     		.2byte	0x1
 17308 2c8c 50       		.byte	0x50
 17309 2c8d 9C000000 		.4byte	.LVL911
 17310 2c91 AC000000 		.4byte	.LFE48
 17311 2c95 0100     		.2byte	0x1
 17312 2c97 54       		.byte	0x54
 17313 2c98 00000000 		.4byte	0
 17314 2c9c 00000000 		.4byte	0
 17315              	.LLST211:
 17316 2ca0 06000000 		.4byte	.LVL893
 17317 2ca4 50000000 		.4byte	.LVL900
 17318 2ca8 0200     		.2byte	0x2
 17319 2caa 30       		.byte	0x30
 17320 2cab 9F       		.byte	0x9f
 17321 2cac 50000000 		.4byte	.LVL900
 17322 2cb0 62000000 		.4byte	.LVL901
 17323 2cb4 0100     		.2byte	0x1
 17324 2cb6 50       		.byte	0x50
 17325 2cb7 62000000 		.4byte	.LVL901
 17326 2cbb 80000000 		.4byte	.LVL906
 17327 2cbf 0100     		.2byte	0x1
 17328 2cc1 55       		.byte	0x55
 17329 2cc2 80000000 		.4byte	.LVL906
 17330 2cc6 82000000 		.4byte	.LVL907
 17331 2cca 0200     		.2byte	0x2
 17332 2ccc 30       		.byte	0x30
 17333 2ccd 9F       		.byte	0x9f
 17334 2cce 82000000 		.4byte	.LVL907
 17335 2cd2 A6000000 		.4byte	.LVL913
 17336 2cd6 0100     		.2byte	0x1
 17337 2cd8 55       		.byte	0x55
 17338 2cd9 00000000 		.4byte	0
 17339 2cdd 00000000 		.4byte	0
 17340              	.LLST212:
 17341 2ce1 00000000 		.4byte	.LVL914
 17342 2ce5 0E000000 		.4byte	.LVL915
 17343 2ce9 0100     		.2byte	0x1
 17344 2ceb 50       		.byte	0x50
 17345 2cec 0E000000 		.4byte	.LVL915
 17346 2cf0 11000000 		.4byte	.LVL916-1
 17347 2cf4 0200     		.2byte	0x2
 17348 2cf6 70       		.byte	0x70
 17349 2cf7 00       		.sleb128 0
 17350 2cf8 11000000 		.4byte	.LVL916-1
 17351 2cfc 12010000 		.4byte	.LFE49
 17352 2d00 0300     		.2byte	0x3
 17353 2d02 91       		.byte	0x91
 17354 2d03 AC7F     		.sleb128 -84
 17355 2d05 00000000 		.4byte	0
 17356 2d09 00000000 		.4byte	0
 17357              	.LLST213:
 17358 2d0d 12000000 		.4byte	.LVL916
 17359 2d11 20000000 		.4byte	.LVL917
 17360 2d15 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 403


 17361 2d17 50       		.byte	0x50
 17362 2d18 24000000 		.4byte	.LVL918
 17363 2d1c 2A000000 		.4byte	.LVL919
 17364 2d20 0100     		.2byte	0x1
 17365 2d22 50       		.byte	0x50
 17366 2d23 2A000000 		.4byte	.LVL919
 17367 2d27 35000000 		.4byte	.LVL920-1
 17368 2d2b 0100     		.2byte	0x1
 17369 2d2d 53       		.byte	0x53
 17370 2d2e 3E000000 		.4byte	.LVL921
 17371 2d32 44000000 		.4byte	.LVL922
 17372 2d36 0200     		.2byte	0x2
 17373 2d38 30       		.byte	0x30
 17374 2d39 9F       		.byte	0x9f
 17375 2d3a 44000000 		.4byte	.LVL922
 17376 2d3e 6C000000 		.4byte	.LVL931
 17377 2d42 0100     		.2byte	0x1
 17378 2d44 54       		.byte	0x54
 17379 2d45 6C000000 		.4byte	.LVL931
 17380 2d49 7C000000 		.4byte	.LVL933
 17381 2d4d 0100     		.2byte	0x1
 17382 2d4f 50       		.byte	0x50
 17383 2d50 C4000000 		.4byte	.LVL940
 17384 2d54 08010000 		.4byte	.LVL950
 17385 2d58 0100     		.2byte	0x1
 17386 2d5a 54       		.byte	0x54
 17387 2d5b 08010000 		.4byte	.LVL950
 17388 2d5f 0A010000 		.4byte	.LVL951
 17389 2d63 0100     		.2byte	0x1
 17390 2d65 53       		.byte	0x53
 17391 2d66 0A010000 		.4byte	.LVL951
 17392 2d6a 12010000 		.4byte	.LFE49
 17393 2d6e 0100     		.2byte	0x1
 17394 2d70 54       		.byte	0x54
 17395 2d71 00000000 		.4byte	0
 17396 2d75 00000000 		.4byte	0
 17397              	.LLST214:
 17398 2d79 76000000 		.4byte	.LVL932
 17399 2d7d C4000000 		.4byte	.LVL940
 17400 2d81 0100     		.2byte	0x1
 17401 2d83 58       		.byte	0x58
 17402 2d84 D2000000 		.4byte	.LVL943
 17403 2d88 FC000000 		.4byte	.LVL948
 17404 2d8c 0100     		.2byte	0x1
 17405 2d8e 56       		.byte	0x56
 17406 2d8f 00000000 		.4byte	0
 17407 2d93 00000000 		.4byte	0
 17408              	.LLST215:
 17409 2d97 36000000 		.4byte	.LVL920
 17410 2d9b 56000000 		.4byte	.LVL925
 17411 2d9f 0100     		.2byte	0x1
 17412 2da1 50       		.byte	0x50
 17413 2da2 56000000 		.4byte	.LVL925
 17414 2da6 08010000 		.4byte	.LVL950
 17415 2daa 0100     		.2byte	0x1
 17416 2dac 55       		.byte	0x55
 17417 2dad 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 404


 17418 2db1 00000000 		.4byte	0
 17419              	.LLST216:
 17420 2db5 B4000000 		.4byte	.LVL938
 17421 2db9 BD000000 		.4byte	.LVL939-1
 17422 2dbd 0300     		.2byte	0x3
 17423 2dbf 91       		.byte	0x91
 17424 2dc0 BC7F     		.sleb128 -68
 17425 2dc2 00000000 		.4byte	0
 17426 2dc6 00000000 		.4byte	0
 17427              	.LLST217:
 17428 2dca 62000000 		.4byte	.LVL929
 17429 2dce 68000000 		.4byte	.LVL930
 17430 2dd2 0100     		.2byte	0x1
 17431 2dd4 50       		.byte	0x50
 17432 2dd5 68000000 		.4byte	.LVL930
 17433 2dd9 08010000 		.4byte	.LVL950
 17434 2ddd 0100     		.2byte	0x1
 17435 2ddf 57       		.byte	0x57
 17436 2de0 00000000 		.4byte	0
 17437 2de4 00000000 		.4byte	0
 17438              	.LLST218:
 17439 2de8 00000000 		.4byte	.LVL952
 17440 2dec 08000000 		.4byte	.LVL953
 17441 2df0 0100     		.2byte	0x1
 17442 2df2 50       		.byte	0x50
 17443 2df3 08000000 		.4byte	.LVL953
 17444 2df7 16000000 		.4byte	.LVL955
 17445 2dfb 0300     		.2byte	0x3
 17446 2dfd 91       		.byte	0x91
 17447 2dfe EC7E     		.sleb128 -148
 17448 2e00 16000000 		.4byte	.LVL955
 17449 2e04 19000000 		.4byte	.LVL956-1
 17450 2e08 0200     		.2byte	0x2
 17451 2e0a 70       		.byte	0x70
 17452 2e0b 00       		.sleb128 0
 17453 2e0c 19000000 		.4byte	.LVL956-1
 17454 2e10 1C010000 		.4byte	.LFE50
 17455 2e14 0300     		.2byte	0x3
 17456 2e16 91       		.byte	0x91
 17457 2e17 EC7E     		.sleb128 -148
 17458 2e19 00000000 		.4byte	0
 17459 2e1d 00000000 		.4byte	0
 17460              	.LLST219:
 17461 2e21 00000000 		.4byte	.LVL952
 17462 2e25 0F000000 		.4byte	.LVL954-1
 17463 2e29 0100     		.2byte	0x1
 17464 2e2b 51       		.byte	0x51
 17465 2e2c 0F000000 		.4byte	.LVL954-1
 17466 2e30 1C010000 		.4byte	.LFE50
 17467 2e34 0300     		.2byte	0x3
 17468 2e36 91       		.byte	0x91
 17469 2e37 E87E     		.sleb128 -152
 17470 2e39 00000000 		.4byte	0
 17471 2e3d 00000000 		.4byte	0
 17472              	.LLST220:
 17473 2e41 1A000000 		.4byte	.LVL956
 17474 2e45 28000000 		.4byte	.LVL957
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 405


 17475 2e49 0100     		.2byte	0x1
 17476 2e4b 50       		.byte	0x50
 17477 2e4c 2C000000 		.4byte	.LVL958
 17478 2e50 3C000000 		.4byte	.LVL959
 17479 2e54 0100     		.2byte	0x1
 17480 2e56 50       		.byte	0x50
 17481 2e57 3C000000 		.4byte	.LVL959
 17482 2e5b 5C000000 		.4byte	.LVL962
 17483 2e5f 0100     		.2byte	0x1
 17484 2e61 54       		.byte	0x54
 17485 2e62 5C000000 		.4byte	.LVL962
 17486 2e66 7A000000 		.4byte	.LVL963
 17487 2e6a 0100     		.2byte	0x1
 17488 2e6c 50       		.byte	0x50
 17489 2e6d 7A000000 		.4byte	.LVL963
 17490 2e71 84000000 		.4byte	.LVL964
 17491 2e75 0100     		.2byte	0x1
 17492 2e77 54       		.byte	0x54
 17493 2e78 84000000 		.4byte	.LVL964
 17494 2e7c 96000000 		.4byte	.LVL966
 17495 2e80 0100     		.2byte	0x1
 17496 2e82 50       		.byte	0x50
 17497 2e83 DE000000 		.4byte	.LVL971
 17498 2e87 F4000000 		.4byte	.LVL973
 17499 2e8b 0100     		.2byte	0x1
 17500 2e8d 50       		.byte	0x50
 17501 2e8e 02010000 		.4byte	.LVL976
 17502 2e92 0A010000 		.4byte	.LVL977
 17503 2e96 0100     		.2byte	0x1
 17504 2e98 54       		.byte	0x54
 17505 2e99 0A010000 		.4byte	.LVL977
 17506 2e9d 10010000 		.4byte	.LVL978
 17507 2ea1 0100     		.2byte	0x1
 17508 2ea3 50       		.byte	0x50
 17509 2ea4 16010000 		.4byte	.LVL980
 17510 2ea8 1C010000 		.4byte	.LFE50
 17511 2eac 0100     		.2byte	0x1
 17512 2eae 54       		.byte	0x54
 17513 2eaf 00000000 		.4byte	0
 17514 2eb3 00000000 		.4byte	0
 17515              	.LLST221:
 17516 2eb7 8C000000 		.4byte	.LVL965
 17517 2ebb E4000000 		.4byte	.LVL972
 17518 2ebf 0100     		.2byte	0x1
 17519 2ec1 55       		.byte	0x55
 17520 2ec2 E4000000 		.4byte	.LVL972
 17521 2ec6 F7000000 		.4byte	.LVL974-1
 17522 2eca 0100     		.2byte	0x1
 17523 2ecc 51       		.byte	0x51
 17524 2ecd 00010000 		.4byte	.LVL975
 17525 2ed1 02010000 		.4byte	.LVL976
 17526 2ed5 0100     		.2byte	0x1
 17527 2ed7 55       		.byte	0x55
 17528 2ed8 00000000 		.4byte	0
 17529 2edc 00000000 		.4byte	0
 17530              	.LLST222:
 17531 2ee0 D4000000 		.4byte	.LVL969
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 406


 17532 2ee4 DA000000 		.4byte	.LVL970
 17533 2ee8 0100     		.2byte	0x1
 17534 2eea 50       		.byte	0x50
 17535 2eeb DA000000 		.4byte	.LVL970
 17536 2eef DD000000 		.4byte	.LVL971-1
 17537 2ef3 0100     		.2byte	0x1
 17538 2ef5 51       		.byte	0x51
 17539 2ef6 00010000 		.4byte	.LVL975
 17540 2efa 02010000 		.4byte	.LVL976
 17541 2efe 0100     		.2byte	0x1
 17542 2f00 50       		.byte	0x50
 17543 2f01 00000000 		.4byte	0
 17544 2f05 00000000 		.4byte	0
 17545              		.section	.debug_aranges,"",%progbits
 17546 0000 AC010000 		.4byte	0x1ac
 17547 0004 0200     		.2byte	0x2
 17548 0006 00000000 		.4byte	.Ldebug_info0
 17549 000a 04       		.byte	0x4
 17550 000b 00       		.byte	0
 17551 000c 0000     		.2byte	0
 17552 000e 0000     		.2byte	0
 17553 0010 00000000 		.4byte	.LFB0
 17554 0014 0A000000 		.4byte	.LFE0-.LFB0
 17555 0018 00000000 		.4byte	.LFB1
 17556 001c 16000000 		.4byte	.LFE1-.LFB1
 17557 0020 00000000 		.4byte	.LFB2
 17558 0024 08000000 		.4byte	.LFE2-.LFB2
 17559 0028 00000000 		.4byte	.LFB3
 17560 002c 14000000 		.4byte	.LFE3-.LFB3
 17561 0030 00000000 		.4byte	.LFB4
 17562 0034 12000000 		.4byte	.LFE4-.LFB4
 17563 0038 00000000 		.4byte	.LFB5
 17564 003c 0A000000 		.4byte	.LFE5-.LFB5
 17565 0040 00000000 		.4byte	.LFB6
 17566 0044 1E000000 		.4byte	.LFE6-.LFB6
 17567 0048 00000000 		.4byte	.LFB7
 17568 004c 10000000 		.4byte	.LFE7-.LFB7
 17569 0050 00000000 		.4byte	.LFB8
 17570 0054 24000000 		.4byte	.LFE8-.LFB8
 17571 0058 00000000 		.4byte	.LFB9
 17572 005c 26000000 		.4byte	.LFE9-.LFB9
 17573 0060 00000000 		.4byte	.LFB13
 17574 0064 18000000 		.4byte	.LFE13-.LFB13
 17575 0068 00000000 		.4byte	.LFB22
 17576 006c 24000000 		.4byte	.LFE22-.LFB22
 17577 0070 00000000 		.4byte	.LFB23
 17578 0074 24000000 		.4byte	.LFE23-.LFB23
 17579 0078 00000000 		.4byte	.LFB28
 17580 007c 6A000000 		.4byte	.LFE28-.LFB28
 17581 0080 00000000 		.4byte	.LFB29
 17582 0084 00010000 		.4byte	.LFE29-.LFB29
 17583 0088 00000000 		.4byte	.LFB31
 17584 008c 54000000 		.4byte	.LFE31-.LFB31
 17585 0090 00000000 		.4byte	.LFB34
 17586 0094 46000000 		.4byte	.LFE34-.LFB34
 17587 0098 00000000 		.4byte	.LFB10
 17588 009c 50000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 407


 17589 00a0 00000000 		.4byte	.LFB11
 17590 00a4 34000000 		.4byte	.LFE11-.LFB11
 17591 00a8 00000000 		.4byte	.LFB32
 17592 00ac 70000000 		.4byte	.LFE32-.LFB32
 17593 00b0 00000000 		.4byte	.LFB33
 17594 00b4 E8020000 		.4byte	.LFE33-.LFB33
 17595 00b8 00000000 		.4byte	.LFB15
 17596 00bc 04010000 		.4byte	.LFE15-.LFB15
 17597 00c0 00000000 		.4byte	.LFB14
 17598 00c4 D4000000 		.4byte	.LFE14-.LFB14
 17599 00c8 00000000 		.4byte	.LFB19
 17600 00cc B2000000 		.4byte	.LFE19-.LFB19
 17601 00d0 00000000 		.4byte	.LFB17
 17602 00d4 14010000 		.4byte	.LFE17-.LFB17
 17603 00d8 00000000 		.4byte	.LFB16
 17604 00dc 7C000000 		.4byte	.LFE16-.LFB16
 17605 00e0 00000000 		.4byte	.LFB27
 17606 00e4 20000000 		.4byte	.LFE27-.LFB27
 17607 00e8 00000000 		.4byte	.LFB18
 17608 00ec 52000000 		.4byte	.LFE18-.LFB18
 17609 00f0 00000000 		.4byte	.LFB20
 17610 00f4 DA000000 		.4byte	.LFE20-.LFB20
 17611 00f8 00000000 		.4byte	.LFB25
 17612 00fc 56000000 		.4byte	.LFE25-.LFB25
 17613 0100 00000000 		.4byte	.LFB30
 17614 0104 8E000000 		.4byte	.LFE30-.LFB30
 17615 0108 00000000 		.4byte	.LFB21
 17616 010c 4C000000 		.4byte	.LFE21-.LFB21
 17617 0110 00000000 		.4byte	.LFB26
 17618 0114 3A000000 		.4byte	.LFE26-.LFB26
 17619 0118 00000000 		.4byte	.LFB24
 17620 011c 60000000 		.4byte	.LFE24-.LFB24
 17621 0120 00000000 		.4byte	.LFB12
 17622 0124 8C000000 		.4byte	.LFE12-.LFB12
 17623 0128 00000000 		.4byte	.LFB35
 17624 012c 50000000 		.4byte	.LFE35-.LFB35
 17625 0130 00000000 		.4byte	.LFB36
 17626 0134 CE010000 		.4byte	.LFE36-.LFB36
 17627 0138 00000000 		.4byte	.LFB37
 17628 013c 74010000 		.4byte	.LFE37-.LFB37
 17629 0140 00000000 		.4byte	.LFB38
 17630 0144 AC010000 		.4byte	.LFE38-.LFB38
 17631 0148 00000000 		.4byte	.LFB39
 17632 014c 9C000000 		.4byte	.LFE39-.LFB39
 17633 0150 00000000 		.4byte	.LFB40
 17634 0154 24000000 		.4byte	.LFE40-.LFB40
 17635 0158 00000000 		.4byte	.LFB41
 17636 015c 7A010000 		.4byte	.LFE41-.LFB41
 17637 0160 00000000 		.4byte	.LFB42
 17638 0164 72000000 		.4byte	.LFE42-.LFB42
 17639 0168 00000000 		.4byte	.LFB43
 17640 016c 1A000000 		.4byte	.LFE43-.LFB43
 17641 0170 00000000 		.4byte	.LFB44
 17642 0174 4C000000 		.4byte	.LFE44-.LFB44
 17643 0178 00000000 		.4byte	.LFB45
 17644 017c 3E000000 		.4byte	.LFE45-.LFB45
 17645 0180 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 408


 17646 0184 CE000000 		.4byte	.LFE46-.LFB46
 17647 0188 00000000 		.4byte	.LFB47
 17648 018c B4000000 		.4byte	.LFE47-.LFB47
 17649 0190 00000000 		.4byte	.LFB48
 17650 0194 AC000000 		.4byte	.LFE48-.LFB48
 17651 0198 00000000 		.4byte	.LFB49
 17652 019c 12010000 		.4byte	.LFE49-.LFB49
 17653 01a0 00000000 		.4byte	.LFB50
 17654 01a4 1C010000 		.4byte	.LFE50-.LFB50
 17655 01a8 00000000 		.4byte	0
 17656 01ac 00000000 		.4byte	0
 17657              		.section	.debug_ranges,"",%progbits
 17658              	.Ldebug_ranges0:
 17659 0000 00000000 		.4byte	.LFB0
 17660 0004 0A000000 		.4byte	.LFE0
 17661 0008 00000000 		.4byte	.LFB1
 17662 000c 16000000 		.4byte	.LFE1
 17663 0010 00000000 		.4byte	.LFB2
 17664 0014 08000000 		.4byte	.LFE2
 17665 0018 00000000 		.4byte	.LFB3
 17666 001c 14000000 		.4byte	.LFE3
 17667 0020 00000000 		.4byte	.LFB4
 17668 0024 12000000 		.4byte	.LFE4
 17669 0028 00000000 		.4byte	.LFB5
 17670 002c 0A000000 		.4byte	.LFE5
 17671 0030 00000000 		.4byte	.LFB6
 17672 0034 1E000000 		.4byte	.LFE6
 17673 0038 00000000 		.4byte	.LFB7
 17674 003c 10000000 		.4byte	.LFE7
 17675 0040 00000000 		.4byte	.LFB8
 17676 0044 24000000 		.4byte	.LFE8
 17677 0048 00000000 		.4byte	.LFB9
 17678 004c 26000000 		.4byte	.LFE9
 17679 0050 00000000 		.4byte	.LFB13
 17680 0054 18000000 		.4byte	.LFE13
 17681 0058 00000000 		.4byte	.LFB22
 17682 005c 24000000 		.4byte	.LFE22
 17683 0060 00000000 		.4byte	.LFB23
 17684 0064 24000000 		.4byte	.LFE23
 17685 0068 00000000 		.4byte	.LFB28
 17686 006c 6A000000 		.4byte	.LFE28
 17687 0070 00000000 		.4byte	.LFB29
 17688 0074 00010000 		.4byte	.LFE29
 17689 0078 00000000 		.4byte	.LFB31
 17690 007c 54000000 		.4byte	.LFE31
 17691 0080 00000000 		.4byte	.LFB34
 17692 0084 46000000 		.4byte	.LFE34
 17693 0088 00000000 		.4byte	.LFB10
 17694 008c 50000000 		.4byte	.LFE10
 17695 0090 00000000 		.4byte	.LFB11
 17696 0094 34000000 		.4byte	.LFE11
 17697 0098 00000000 		.4byte	.LFB32
 17698 009c 70000000 		.4byte	.LFE32
 17699 00a0 00000000 		.4byte	.LFB33
 17700 00a4 E8020000 		.4byte	.LFE33
 17701 00a8 00000000 		.4byte	.LFB15
 17702 00ac 04010000 		.4byte	.LFE15
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 409


 17703 00b0 00000000 		.4byte	.LFB14
 17704 00b4 D4000000 		.4byte	.LFE14
 17705 00b8 00000000 		.4byte	.LFB19
 17706 00bc B2000000 		.4byte	.LFE19
 17707 00c0 00000000 		.4byte	.LFB17
 17708 00c4 14010000 		.4byte	.LFE17
 17709 00c8 00000000 		.4byte	.LFB16
 17710 00cc 7C000000 		.4byte	.LFE16
 17711 00d0 00000000 		.4byte	.LFB27
 17712 00d4 20000000 		.4byte	.LFE27
 17713 00d8 00000000 		.4byte	.LFB18
 17714 00dc 52000000 		.4byte	.LFE18
 17715 00e0 00000000 		.4byte	.LFB20
 17716 00e4 DA000000 		.4byte	.LFE20
 17717 00e8 00000000 		.4byte	.LFB25
 17718 00ec 56000000 		.4byte	.LFE25
 17719 00f0 00000000 		.4byte	.LFB30
 17720 00f4 8E000000 		.4byte	.LFE30
 17721 00f8 00000000 		.4byte	.LFB21
 17722 00fc 4C000000 		.4byte	.LFE21
 17723 0100 00000000 		.4byte	.LFB26
 17724 0104 3A000000 		.4byte	.LFE26
 17725 0108 00000000 		.4byte	.LFB24
 17726 010c 60000000 		.4byte	.LFE24
 17727 0110 00000000 		.4byte	.LFB12
 17728 0114 8C000000 		.4byte	.LFE12
 17729 0118 00000000 		.4byte	.LFB35
 17730 011c 50000000 		.4byte	.LFE35
 17731 0120 00000000 		.4byte	.LFB36
 17732 0124 CE010000 		.4byte	.LFE36
 17733 0128 00000000 		.4byte	.LFB37
 17734 012c 74010000 		.4byte	.LFE37
 17735 0130 00000000 		.4byte	.LFB38
 17736 0134 AC010000 		.4byte	.LFE38
 17737 0138 00000000 		.4byte	.LFB39
 17738 013c 9C000000 		.4byte	.LFE39
 17739 0140 00000000 		.4byte	.LFB40
 17740 0144 24000000 		.4byte	.LFE40
 17741 0148 00000000 		.4byte	.LFB41
 17742 014c 7A010000 		.4byte	.LFE41
 17743 0150 00000000 		.4byte	.LFB42
 17744 0154 72000000 		.4byte	.LFE42
 17745 0158 00000000 		.4byte	.LFB43
 17746 015c 1A000000 		.4byte	.LFE43
 17747 0160 00000000 		.4byte	.LFB44
 17748 0164 4C000000 		.4byte	.LFE44
 17749 0168 00000000 		.4byte	.LFB45
 17750 016c 3E000000 		.4byte	.LFE45
 17751 0170 00000000 		.4byte	.LFB46
 17752 0174 CE000000 		.4byte	.LFE46
 17753 0178 00000000 		.4byte	.LFB47
 17754 017c B4000000 		.4byte	.LFE47
 17755 0180 00000000 		.4byte	.LFB48
 17756 0184 AC000000 		.4byte	.LFE48
 17757 0188 00000000 		.4byte	.LFB49
 17758 018c 12010000 		.4byte	.LFE49
 17759 0190 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 410


 17760 0194 1C010000 		.4byte	.LFE50
 17761 0198 00000000 		.4byte	0
 17762 019c 00000000 		.4byte	0
 17763              		.section	.debug_line,"",%progbits
 17764              	.Ldebug_line0:
 17765 0000 1A0C0000 		.section	.debug_str,"MS",%progbits,1
 17765      02003C00 
 17765      00000201 
 17765      FB0E0D00 
 17765      01010101 
 17766              	.LASF73:
 17767 0000 5245535F 		.ascii	"RES_WRPRT\000"
 17767      57525052 
 17767      5400
 17768              	.LASF67:
 17769 000a 46525F54 		.ascii	"FR_TOO_MANY_OPEN_FILES\000"
 17769      4F4F5F4D 
 17769      414E595F 
 17769      4F50454E 
 17769      5F46494C 
 17770              	.LASF108:
 17771 0021 7075745F 		.ascii	"put_fat\000"
 17771      66617400 
 17772              	.LASF14:
 17773 0029 66735F74 		.ascii	"fs_type\000"
 17773      79706500 
 17774              	.LASF132:
 17775 0031 63736563 		.ascii	"csect\000"
 17775      7400
 17776              	.LASF83:
 17777 0037 63686B5F 		.ascii	"chk_chr\000"
 17777      63687200 
 17778              	.LASF156:
 17779 003f 46617446 		.ascii	"FatFs\000"
 17779      7300
 17780              	.LASF166:
 17781 0045 66662E63 		.ascii	"ff.c\000"
 17781      00
 17782              	.LASF141:
 17783 004a 69667074 		.ascii	"ifptr\000"
 17783      7200
 17784              	.LASF128:
 17785 0050 665F7265 		.ascii	"f_read\000"
 17785      616400
 17786              	.LASF74:
 17787 0057 5245535F 		.ascii	"RES_NOTRDY\000"
 17787      4E4F5452 
 17787      445900
 17788              	.LASF19:
 17789 0062 6E5F726F 		.ascii	"n_rootdir\000"
 17789      6F746469 
 17789      7200
 17790              	.LASF92:
 17791 006c 70617468 		.ascii	"path\000"
 17791      00
 17792              	.LASF123:
 17793 0071 6469725F 		.ascii	"dir_register\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 411


 17793      72656769 
 17793      73746572 
 17793      00
 17794              	.LASF133:
 17795 007e 72627566 		.ascii	"rbuff\000"
 17795      6600
 17796              	.LASF10:
 17797 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 17797      206C6F6E 
 17797      6720756E 
 17797      7369676E 
 17797      65642069 
 17798              	.LASF119:
 17799 009b 6469725F 		.ascii	"dir_find\000"
 17799      66696E64 
 17799      00
 17800              	.LASF40:
 17801 00a4 73656374 		.ascii	"sect\000"
 17801      00
 17802              	.LASF102:
 17803 00a9 66617369 		.ascii	"fasize\000"
 17803      7A6500
 17804              	.LASF107:
 17805 00b0 6E727376 		.ascii	"nrsv\000"
 17805      00
 17806              	.LASF41:
 17807 00b5 6469725F 		.ascii	"dir_sect\000"
 17807      73656374 
 17807      00
 17808              	.LASF27:
 17809 00be 64697262 		.ascii	"dirbase\000"
 17809      61736500 
 17810              	.LASF148:
 17811 00c6 6E667265 		.ascii	"nfree\000"
 17811      6500
 17812              	.LASF129:
 17813 00cc 62756666 		.ascii	"buff\000"
 17813      00
 17814              	.LASF68:
 17815 00d1 46525F49 		.ascii	"FR_INVALID_PARAMETER\000"
 17815      4E56414C 
 17815      49445F50 
 17815      4152414D 
 17815      45544552 
 17816              	.LASF24:
 17817 00e6 6673697A 		.ascii	"fsize\000"
 17817      6500
 17818              	.LASF23:
 17819 00ec 6E5F6661 		.ascii	"n_fatent\000"
 17819      74656E74 
 17819      00
 17820              	.LASF58:
 17821 00f5 46525F49 		.ascii	"FR_INVALID_OBJECT\000"
 17821      4E56414C 
 17821      49445F4F 
 17821      424A4543 
 17821      5400
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 412


 17822              	.LASF7:
 17823 0107 6C6F6E67 		.ascii	"long int\000"
 17823      20696E74 
 17823      00
 17824              	.LASF114:
 17825 0110 6469725F 		.ascii	"dir_remove\000"
 17825      72656D6F 
 17825      766500
 17826              	.LASF75:
 17827 011b 5245535F 		.ascii	"RES_PARERR\000"
 17827      50415245 
 17827      525200
 17828              	.LASF16:
 17829 0126 6E5F6661 		.ascii	"n_fats\000"
 17829      747300
 17830              	.LASF89:
 17831 012d 73745F63 		.ascii	"st_clust\000"
 17831      6C757374 
 17831      00
 17832              	.LASF62:
 17833 0136 46525F4E 		.ascii	"FR_NO_FILESYSTEM\000"
 17833      4F5F4649 
 17833      4C455359 
 17833      5354454D 
 17833      00
 17834              	.LASF66:
 17835 0147 46525F4E 		.ascii	"FR_NOT_ENOUGH_CORE\000"
 17835      4F545F45 
 17835      4E4F5547 
 17835      485F434F 
 17835      524500
 17836              	.LASF57:
 17837 015a 46525F45 		.ascii	"FR_EXIST\000"
 17837      58495354 
 17837      00
 17838              	.LASF26:
 17839 0163 66617462 		.ascii	"fatbase\000"
 17839      61736500 
 17840              	.LASF8:
 17841 016b 44574F52 		.ascii	"DWORD\000"
 17841      4400
 17842              	.LASF134:
 17843 0171 665F7772 		.ascii	"f_write\000"
 17843      69746500 
 17844              	.LASF13:
 17845 0179 4653495A 		.ascii	"FSIZE_t\000"
 17845      455F7400 
 17846              	.LASF145:
 17847 0181 665F7374 		.ascii	"f_stat\000"
 17847      617400
 17848              	.LASF95:
 17849 0188 73796E63 		.ascii	"sync_window\000"
 17849      5F77696E 
 17849      646F7700 
 17850              	.LASF118:
 17851 0194 73747265 		.ascii	"stretch\000"
 17851      74636800 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 413


 17852              	.LASF20:
 17853 019c 6373697A 		.ascii	"csize\000"
 17853      6500
 17854              	.LASF162:
 17855 01a2 6469736B 		.ascii	"disk_initialize\000"
 17855      5F696E69 
 17855      7469616C 
 17855      697A6500 
 17856              	.LASF15:
 17857 01b2 70647276 		.ascii	"pdrv\000"
 17857      00
 17858              	.LASF22:
 17859 01b7 66726565 		.ascii	"free_clst\000"
 17859      5F636C73 
 17859      7400
 17860              	.LASF2:
 17861 01c1 42595445 		.ascii	"BYTE\000"
 17861      00
 17862              	.LASF42:
 17863 01c6 6469725F 		.ascii	"dir_ptr\000"
 17863      70747200 
 17864              	.LASF32:
 17865 01ce 61747472 		.ascii	"attr\000"
 17865      00
 17866              	.LASF100:
 17867 01d3 6D6F6465 		.ascii	"mode\000"
 17867      00
 17868              	.LASF86:
 17869 01d8 636C7374 		.ascii	"clst2sect\000"
 17869      32736563 
 17869      7400
 17870              	.LASF110:
 17871 01e2 6469725F 		.ascii	"dir_sdi\000"
 17871      73646900 
 17872              	.LASF0:
 17873 01ea 756E7369 		.ascii	"unsigned int\000"
 17873      676E6564 
 17873      20696E74 
 17873      00
 17874              	.LASF1:
 17875 01f7 55494E54 		.ascii	"UINT\000"
 17875      00
 17876              	.LASF45:
 17877 01fc 6674696D 		.ascii	"ftime\000"
 17877      6500
 17878              	.LASF9:
 17879 0202 6C6F6E67 		.ascii	"long unsigned int\000"
 17879      20756E73 
 17879      69676E65 
 17879      6420696E 
 17879      7400
 17880              	.LASF159:
 17881 0214 6469736B 		.ascii	"disk_status\000"
 17881      5F737461 
 17881      74757300 
 17882              	.LASF167:
 17883 0220 433A5C55 		.ascii	"C:\\Users\\Nusair Islam\\Desktop\\PSOC\\SD\\SD.cyds"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 414


 17883      73657273 
 17883      5C4E7573 
 17883      61697220 
 17883      49736C61 
 17884 024d 6E00     		.ascii	"n\000"
 17885              	.LASF138:
 17886 024f 665F636C 		.ascii	"f_close\000"
 17886      6F736500 
 17887              	.LASF101:
 17888 0257 62736563 		.ascii	"bsect\000"
 17888      7400
 17889              	.LASF104:
 17890 025d 73797365 		.ascii	"sysect\000"
 17890      637400
 17891              	.LASF6:
 17892 0264 73686F72 		.ascii	"short unsigned int\000"
 17892      7420756E 
 17892      7369676E 
 17892      65642069 
 17892      6E7400
 17893              	.LASF28:
 17894 0277 64617461 		.ascii	"database\000"
 17894      62617365 
 17894      00
 17895              	.LASF153:
 17896 0280 665F7265 		.ascii	"f_rename\000"
 17896      6E616D65 
 17896      00
 17897              	.LASF87:
 17898 0289 636C7374 		.ascii	"clst\000"
 17898      00
 17899              	.LASF51:
 17900 028e 46525F49 		.ascii	"FR_INT_ERR\000"
 17900      4E545F45 
 17900      525200
 17901              	.LASF155:
 17902 0299 70617468 		.ascii	"path_new\000"
 17902      5F6E6577 
 17902      00
 17903              	.LASF50:
 17904 02a2 46525F44 		.ascii	"FR_DISK_ERR\000"
 17904      49534B5F 
 17904      45525200 
 17905              	.LASF29:
 17906 02ae 77696E73 		.ascii	"winsect\000"
 17906      65637400 
 17907              	.LASF82:
 17908 02b6 6D656D5F 		.ascii	"mem_cmp\000"
 17908      636D7000 
 17909              	.LASF97:
 17910 02be 73656374 		.ascii	"sector\000"
 17910      6F7200
 17911              	.LASF106:
 17912 02c5 737A6266 		.ascii	"szbfat\000"
 17912      617400
 17913              	.LASF117:
 17914 02cc 6469725F 		.ascii	"dir_next\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 415


 17914      6E657874 
 17914      00
 17915              	.LASF158:
 17916 02d5 44626354 		.ascii	"DbcTbl\000"
 17916      626C00
 17917              	.LASF47:
 17918 02dc 666E616D 		.ascii	"fname\000"
 17918      6500
 17919              	.LASF59:
 17920 02e2 46525F57 		.ascii	"FR_WRITE_PROTECTED\000"
 17920      52495445 
 17920      5F50524F 
 17920      54454354 
 17920      454400
 17921              	.LASF163:
 17922 02f5 6469736B 		.ascii	"disk_ioctl\000"
 17922      5F696F63 
 17922      746C00
 17923              	.LASF31:
 17924 0300 46415446 		.ascii	"FATFS\000"
 17924      5300
 17925              	.LASF152:
 17926 0306 665F6D6B 		.ascii	"f_mkdir\000"
 17926      64697200 
 17927              	.LASF44:
 17928 030e 66646174 		.ascii	"fdate\000"
 17928      6500
 17929              	.LASF135:
 17930 0314 77636E74 		.ascii	"wcnt\000"
 17930      00
 17931              	.LASF38:
 17932 0319 66707472 		.ascii	"fptr\000"
 17932      00
 17933              	.LASF81:
 17934 031e 6D656D5F 		.ascii	"mem_set\000"
 17934      73657400 
 17935              	.LASF30:
 17936 0326 73697A65 		.ascii	"sizetype\000"
 17936      74797065 
 17936      00
 17937              	.LASF90:
 17938 032f 6765745F 		.ascii	"get_fileinfo\000"
 17938      66696C65 
 17938      696E666F 
 17938      00
 17939              	.LASF105:
 17940 033c 6E636C73 		.ascii	"nclst\000"
 17940      7400
 17941              	.LASF64:
 17942 0342 46525F54 		.ascii	"FR_TIMEOUT\000"
 17942      494D454F 
 17942      555400
 17943              	.LASF5:
 17944 034d 574F5244 		.ascii	"WORD\000"
 17944      00
 17945              	.LASF34:
 17946 0352 73636C75 		.ascii	"sclust\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 416


 17946      737400
 17947              	.LASF71:
 17948 0359 5245535F 		.ascii	"RES_OK\000"
 17948      4F4B00
 17949              	.LASF53:
 17950 0360 46525F4E 		.ascii	"FR_NO_FILE\000"
 17950      4F5F4649 
 17950      4C4500
 17951              	.LASF147:
 17952 036b 66617466 		.ascii	"fatfs\000"
 17952      7300
 17953              	.LASF11:
 17954 0371 54434841 		.ascii	"TCHAR\000"
 17954      5200
 17955              	.LASF115:
 17956 0377 6469725F 		.ascii	"dir_clear\000"
 17956      636C6561 
 17956      7200
 17957              	.LASF79:
 17958 0381 73745F64 		.ascii	"st_dword\000"
 17958      776F7264 
 17958      00
 17959              	.LASF125:
 17960 038a 73796E63 		.ascii	"sync_fs\000"
 17960      5F667300 
 17961              	.LASF61:
 17962 0392 46525F4E 		.ascii	"FR_NOT_ENABLED\000"
 17962      4F545F45 
 17962      4E41424C 
 17962      454400
 17963              	.LASF164:
 17964 03a1 6765745F 		.ascii	"get_fattime\000"
 17964      66617474 
 17964      696D6500 
 17965              	.LASF165:
 17966 03ad 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 17966      43313120 
 17966      352E342E 
 17966      31203230 
 17966      31363036 
 17967 03e0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 17967      20726576 
 17967      6973696F 
 17967      6E203233 
 17967      37373135 
 17968 0413 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 17968      70202D6D 
 17968      6670753D 
 17968      66707634 
 17968      2D73702D 
 17969 0446 65637469 		.ascii	"ections -ffat-lto-objects\000"
 17969      6F6E7320 
 17969      2D666661 
 17969      742D6C74 
 17969      6F2D6F62 
 17970              	.LASF21:
 17971 0460 6C617374 		.ascii	"last_clst\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 417


 17971      5F636C73 
 17971      7400
 17972              	.LASF146:
 17973 046a 665F6765 		.ascii	"f_getfree\000"
 17973      74667265 
 17973      6500
 17974              	.LASF93:
 17975 0474 6765745F 		.ascii	"get_ldnumber\000"
 17975      6C646E75 
 17975      6D626572 
 17975      00
 17976              	.LASF116:
 17977 0481 69627566 		.ascii	"ibuf\000"
 17977      00
 17978              	.LASF35:
 17979 0486 6F626A73 		.ascii	"objsize\000"
 17979      697A6500 
 17980              	.LASF126:
 17981 048e 665F6D6F 		.ascii	"f_mount\000"
 17981      756E7400 
 17982              	.LASF151:
 17983 0496 64636C73 		.ascii	"dclst\000"
 17983      7400
 17984              	.LASF109:
 17985 049c 6765745F 		.ascii	"get_fat\000"
 17985      66617400 
 17986              	.LASF111:
 17987 04a4 63726561 		.ascii	"create_chain\000"
 17987      74655F63 
 17987      6861696E 
 17987      00
 17988              	.LASF139:
 17989 04b1 665F6C73 		.ascii	"f_lseek\000"
 17989      65656B00 
 17990              	.LASF3:
 17991 04b9 756E7369 		.ascii	"unsigned char\000"
 17991      676E6564 
 17991      20636861 
 17991      7200
 17992              	.LASF150:
 17993 04c7 665F756E 		.ascii	"f_unlink\000"
 17993      6C696E6B 
 17993      00
 17994              	.LASF136:
 17995 04d0 77627566 		.ascii	"wbuff\000"
 17995      6600
 17996              	.LASF4:
 17997 04d6 73686F72 		.ascii	"short int\000"
 17997      7420696E 
 17997      7400
 17998              	.LASF137:
 17999 04e0 665F7379 		.ascii	"f_sync\000"
 17999      6E6300
 18000              	.LASF99:
 18001 04e7 66696E64 		.ascii	"find_volume\000"
 18001      5F766F6C 
 18001      756D6500 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 418


 18002              	.LASF84:
 18003 04f3 6462635F 		.ascii	"dbc_1st\000"
 18003      31737400 
 18004              	.LASF37:
 18005 04fb 666C6167 		.ascii	"flag\000"
 18005      00
 18006              	.LASF120:
 18007 0500 666F6C6C 		.ascii	"follow_path\000"
 18007      6F775F70 
 18007      61746800 
 18008              	.LASF98:
 18009 050c 63686563 		.ascii	"check_fs\000"
 18009      6B5F6673 
 18009      00
 18010              	.LASF60:
 18011 0515 46525F49 		.ascii	"FR_INVALID_DRIVE\000"
 18011      4E56414C 
 18011      49445F44 
 18011      52495645 
 18011      00
 18012              	.LASF56:
 18013 0526 46525F44 		.ascii	"FR_DENIED\000"
 18013      454E4945 
 18013      4400
 18014              	.LASF94:
 18015 0530 76616C69 		.ascii	"validate\000"
 18015      64617465 
 18015      00
 18016              	.LASF43:
 18017 0539 64707472 		.ascii	"dptr\000"
 18017      00
 18018              	.LASF63:
 18019 053e 46525F4D 		.ascii	"FR_MKFS_ABORTED\000"
 18019      4B46535F 
 18019      41424F52 
 18019      54454400 
 18020              	.LASF144:
 18021 054e 665F7265 		.ascii	"f_readdir\000"
 18021      61646469 
 18021      7200
 18022              	.LASF65:
 18023 0558 46525F4C 		.ascii	"FR_LOCKED\000"
 18023      4F434B45 
 18023      4400
 18024              	.LASF17:
 18025 0562 77666C61 		.ascii	"wflag\000"
 18025      6700
 18026              	.LASF88:
 18027 0568 6C645F63 		.ascii	"ld_clust\000"
 18027      6C757374 
 18027      00
 18028              	.LASF12:
 18029 0571 63686172 		.ascii	"char\000"
 18029      00
 18030              	.LASF91:
 18031 0576 63726561 		.ascii	"create_name\000"
 18031      74655F6E 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 419


 18031      616D6500 
 18032              	.LASF49:
 18033 0582 46525F4F 		.ascii	"FR_OK\000"
 18033      4B00
 18034              	.LASF113:
 18035 0588 70636C73 		.ascii	"pclst\000"
 18035      7400
 18036              	.LASF121:
 18037 058e 6469725F 		.ascii	"dir_alloc\000"
 18037      616C6C6F 
 18037      6300
 18038              	.LASF112:
 18039 0598 72656D6F 		.ascii	"remove_chain\000"
 18039      76655F63 
 18039      6861696E 
 18039      00
 18040              	.LASF70:
 18041 05a5 44535441 		.ascii	"DSTATUS\000"
 18041      54555300 
 18042              	.LASF122:
 18043 05ad 6E656E74 		.ascii	"nent\000"
 18043      00
 18044              	.LASF85:
 18045 05b2 6462635F 		.ascii	"dbc_2nd\000"
 18045      326E6400 
 18046              	.LASF25:
 18047 05ba 766F6C62 		.ascii	"volbase\000"
 18047      61736500 
 18048              	.LASF76:
 18049 05c2 6C645F77 		.ascii	"ld_word\000"
 18049      6F726400 
 18050              	.LASF142:
 18051 05ca 665F6F70 		.ascii	"f_opendir\000"
 18051      656E6469 
 18051      7200
 18052              	.LASF55:
 18053 05d4 46525F49 		.ascii	"FR_INVALID_NAME\000"
 18053      4E56414C 
 18053      49445F4E 
 18053      414D4500 
 18054              	.LASF160:
 18055 05e4 6469736B 		.ascii	"disk_write\000"
 18055      5F777269 
 18055      746500
 18056              	.LASF96:
 18057 05ef 6D6F7665 		.ascii	"move_window\000"
 18057      5F77696E 
 18057      646F7700 
 18058              	.LASF77:
 18059 05fb 6C645F64 		.ascii	"ld_dword\000"
 18059      776F7264 
 18059      00
 18060              	.LASF18:
 18061 0604 6673695F 		.ascii	"fsi_flag\000"
 18061      666C6167 
 18061      00
 18062              	.LASF80:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 420


 18063 060d 6D656D5F 		.ascii	"mem_cpy\000"
 18063      63707900 
 18064              	.LASF130:
 18065 0615 72656D61 		.ascii	"remain\000"
 18065      696E00
 18066              	.LASF46:
 18067 061c 66617474 		.ascii	"fattrib\000"
 18067      72696200 
 18068              	.LASF154:
 18069 0624 70617468 		.ascii	"path_old\000"
 18069      5F6F6C64 
 18069      00
 18070              	.LASF78:
 18071 062d 73745F77 		.ascii	"st_word\000"
 18071      6F726400 
 18072              	.LASF48:
 18073 0635 46494C49 		.ascii	"FILINFO\000"
 18073      4E464F00 
 18074              	.LASF149:
 18075 063d 665F7472 		.ascii	"f_truncate\000"
 18075      756E6361 
 18075      746500
 18076              	.LASF131:
 18077 0648 72636E74 		.ascii	"rcnt\000"
 18077      00
 18078              	.LASF140:
 18079 064d 6E736563 		.ascii	"nsect\000"
 18079      7400
 18080              	.LASF33:
 18081 0653 73746174 		.ascii	"stat\000"
 18081      00
 18082              	.LASF69:
 18083 0658 46524553 		.ascii	"FRESULT\000"
 18083      554C5400 
 18084              	.LASF72:
 18085 0660 5245535F 		.ascii	"RES_ERROR\000"
 18085      4552524F 
 18085      5200
 18086              	.LASF124:
 18087 066a 6469725F 		.ascii	"dir_read\000"
 18087      72656164 
 18087      00
 18088              	.LASF127:
 18089 0673 665F6F70 		.ascii	"f_open\000"
 18089      656E00
 18090              	.LASF54:
 18091 067a 46525F4E 		.ascii	"FR_NO_PATH\000"
 18091      4F5F5041 
 18091      544800
 18092              	.LASF143:
 18093 0685 665F636C 		.ascii	"f_closedir\000"
 18093      6F736564 
 18093      697200
 18094              	.LASF52:
 18095 0690 46525F4E 		.ascii	"FR_NOT_READY\000"
 18095      4F545F52 
 18095      45414459 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccqbZxeH.s 			page 421


 18095      00
 18096              	.LASF36:
 18097 069d 46464F42 		.ascii	"FFOBJID\000"
 18097      4A494400 
 18098              	.LASF161:
 18099 06a5 6469736B 		.ascii	"disk_read\000"
 18099      5F726561 
 18099      6400
 18100              	.LASF157:
 18101 06af 46736964 		.ascii	"Fsid\000"
 18101      00
 18102              	.LASF39:
 18103 06b4 636C7573 		.ascii	"clust\000"
 18103      7400
 18104              	.LASF103:
 18105 06ba 74736563 		.ascii	"tsect\000"
 18105      7400
 18106              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

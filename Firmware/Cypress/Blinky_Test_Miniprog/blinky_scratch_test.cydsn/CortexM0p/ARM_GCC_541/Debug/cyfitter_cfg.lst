ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyfitter_cfg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CyClockStartupError,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CyClockStartupError, %function
  24              	CyClockStartupError:
  25              	.LFB187:
  26              		.file 1 "Generated_Source\\PSoC6\\cyfitter_cfg.c"
   1:Generated_Source\PSoC6/cyfitter_cfg.c **** 
   2:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
   3:Generated_Source\PSoC6/cyfitter_cfg.c **** * File Name: cyfitter_cfg.c
   4:Generated_Source\PSoC6/cyfitter_cfg.c **** * 
   5:Generated_Source\PSoC6/cyfitter_cfg.c **** * PSoC Creator  4.4
   6:Generated_Source\PSoC6/cyfitter_cfg.c **** *
   7:Generated_Source\PSoC6/cyfitter_cfg.c **** * Description:
   8:Generated_Source\PSoC6/cyfitter_cfg.c **** * This file contains device initialization code.
   9:Generated_Source\PSoC6/cyfitter_cfg.c **** * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10:Generated_Source\PSoC6/cyfitter_cfg.c **** * This file is automatically generated by PSoC Creator.
  11:Generated_Source\PSoC6/cyfitter_cfg.c **** *
  12:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
  13:Generated_Source\PSoC6/cyfitter_cfg.c **** * Copyright (c) 2007-2020 Cypress Semiconductor.  All rights reserved.
  14:Generated_Source\PSoC6/cyfitter_cfg.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC6/cyfitter_cfg.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC6/cyfitter_cfg.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************/
  18:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  19:Generated_Source\PSoC6/cyfitter_cfg.c **** #include <string.h>
  20:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cydevice_trm.h"
  21:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyfitter.h"
  22:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "gpio/cy_gpio.h"
  23:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "syslib/cy_syslib.h"
  24:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyfitter_cfg.h"
  25:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "sysclk/cy_sysclk.h"
  27:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "systick/cy_systick.h"
  28:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  29:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CY_NEED_CYCLOCKSTARTUPERROR 1
  30:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "syspm/cy_syspm.h"
  31:Generated_Source\PSoC6/cyfitter_cfg.c **** 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 2


  32:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  33:Generated_Source\PSoC6/cyfitter_cfg.c **** #if defined(__GNUC__) || defined(__ARMCC_VERSION)
  34:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED 
  35:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED_ATTR __attribute__ ((packed))
  36:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYALIGNED __attribute__ ((aligned))
  37:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_UNUSED __attribute__ ((unused))
  38:Generated_Source\PSoC6/cyfitter_cfg.c ****     #ifndef CY_CFG_SECTION
  39:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_SECTION __attribute__ ((section(".psocinit")))
  40:Generated_Source\PSoC6/cyfitter_cfg.c ****     #endif
  41:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  42:Generated_Source\PSoC6/cyfitter_cfg.c ****     #if defined(__ARMCC_VERSION)
  43:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __memory_changed()
  44:Generated_Source\PSoC6/cyfitter_cfg.c ****     #else
  45:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __sync_synchronize()
  46:Generated_Source\PSoC6/cyfitter_cfg.c ****     #endif
  47:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  48:Generated_Source\PSoC6/cyfitter_cfg.c **** #elif defined(__ICCARM__)
  49:Generated_Source\PSoC6/cyfitter_cfg.c ****     #include <intrinsics.h>
  50:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  51:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED __packed
  52:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED_ATTR 
  53:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYALIGNED _Pragma("data_alignment=4")
  54:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_UNUSED _Pragma("diag_suppress=Pe177")
  55:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_SECTION _Pragma("location=\".psocinit\"")
  56:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  57:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_MEMORY_BARRIER() __DMB()
  58:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  59:Generated_Source\PSoC6/cyfitter_cfg.c **** #else
  60:Generated_Source\PSoC6/cyfitter_cfg.c ****     #error Unsupported toolchain
  61:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  62:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  63:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYCODE
  64:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYCODE
  65:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  66:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYDATA
  67:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYDATA
  68:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  69:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYFAR
  70:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYFAR
  71:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  72:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYXDATA
  73:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYXDATA
  74:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  75:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  76:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  77:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  78:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n);
  79:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  80:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n)
  81:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  82:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memset(s, 0, n);
  83:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  84:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  85:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n);
  86:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  87:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n)
  88:Generated_Source\PSoC6/cyfitter_cfg.c **** {
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 3


  89:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  90:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  91:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  92:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n);
  93:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  94:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n)
  95:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  96:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  97:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  98:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  99:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 100:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 101:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 102:Generated_Source\PSoC6/cyfitter_cfg.c **** /* Clock startup error codes                                                   */
 103:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_NO_ERROR    0u
 104:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_XTAL_ERROR  1u
 105:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_32KHZ_ERROR 2u
 106:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_PLL_ERROR   3u
 107:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_FLL_ERROR   4u
 108:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_WCO_ERROR   5u
 109:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 110:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 111:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifdef CY_NEED_CYCLOCKSTARTUPERROR
 112:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: CyClockStartupError
 114:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 115:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 116:Generated_Source\PSoC6/cyfitter_cfg.c **** *  If an error is encountered during clock configuration (crystal startup error,
 117:Generated_Source\PSoC6/cyfitter_cfg.c **** *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
 118:Generated_Source\PSoC6/cyfitter_cfg.c **** *  the customer, this function will stop in an infinite loop.
 119:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 120:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 121:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 122:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 123:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 124:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 125:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 126:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 127:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
 128:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode);
 129:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
 130:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode)
 131:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  27              		.loc 1 131 0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE187:
  38              		.size	CyClockStartupError, .-CyClockStartupError
  39 0002 C046     		.section	.text.ClockInit,"ax",%progbits
  40              		.align	2
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 4


  41              		.code	16
  42              		.thumb_func
  43              		.type	ClockInit, %function
  44              	ClockInit:
  45              	.LFB188:
 132:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* To remove the compiler warning if errorCode not used.                */
 133:Generated_Source\PSoC6/cyfitter_cfg.c ****     errorCode = errorCode;
 134:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 135:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
 136:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* we will end up here to allow the customer to implement something to  */
 137:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* deal with the clock condition.                                       */
 138:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 139:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
 140:Generated_Source\PSoC6/cyfitter_cfg.c ****     CY_CFG_Clock_Startup_ErrorCallback();
 141:Generated_Source\PSoC6/cyfitter_cfg.c **** #else
 142:Generated_Source\PSoC6/cyfitter_cfg.c ****     while(1) {}
 143:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
 144:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 145:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
 146:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 147:Generated_Source\PSoC6/cyfitter_cfg.c **** static void ClockInit(void);
 148:Generated_Source\PSoC6/cyfitter_cfg.c **** static void ClockInit(void)
 149:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  46              		.loc 1 149 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 24
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		.loc 1 149 0
  51 0000 30B5     		push	{r4, r5, lr}
  52              		.cfi_def_cfa_offset 12
  53              		.cfi_offset 4, -12
  54              		.cfi_offset 5, -8
  55              		.cfi_offset 14, -4
  56 0002 87B0     		sub	sp, sp, #28
  57              		.cfi_def_cfa_offset 40
  58              	.LVL1:
  59              	.LBB45:
  60              	.LBB46:
  61              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2020, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 5


  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 6


  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>2.0</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the ECO trimming values calculation algorithm in the \ref Cy_SysClk_EcoConfigure 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         This change may invalidate the already used crystals, in cases: \n
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The crystal frequency is less than 16 MHz (the supported crystal frequency range was ch
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The maximum amplitude (internal calculation value) is less than 0.65 V. \n
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Also the second parameter cSum takes into account both C0 (the crystal itself shunt capac
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         For detail, refer the \ref Cy_SysClk_EcoConfigure documentation and the ECO Trimming sect
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Enhanced the ECO performance for high-noise conditions that result from simultaneous swit
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 7


 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 8


 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 9


 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 10


 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 11


 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 12


 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 13


 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 14


 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 15


 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   2
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   0
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 16


 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoDisable
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 17


 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 18


 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllLocked
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 19


 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllDisable
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 20


 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLocked
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLostLock
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 21


 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllDisable
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 22


 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloEnable
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloDisable
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 23


1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloEnable
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 24


1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloDisable
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 25


1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 26


1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 27


1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 28


1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoEnable
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 29


1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoOkay
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoDisable
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoBypass
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 30


1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 31


1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 32


1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 33


1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 34


1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 35


1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 36


1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 37


1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 38


1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 39


1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 40


2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 41


2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 42


2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnablePhaseAlignDivider
2181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * First disables a selected divider (\ref Cy_SysClk_PeriphDisableDivider),
2184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * then aligns that divider to another programmable divider, and enables the
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 43


2185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * selected divider. The divider to align to must already be enabled in order
2186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to align a divider to it.
2187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerTypePA type of divider to phase-align to; \ref cy_en_divider_types_t.
2193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNumPA divider number of type specified to phase align to.
2195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * To phase-align a divider to clk_peri, set dividerTypePA to 3 and dividerNumPA
2198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to 63.
2199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnablePhaseAlignDivider
2202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t dividerType, uint32_t
2206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                         cy_en_divider_types_t dividerTypePA, uint32
2207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerTypePA <= CY_SYSCLK_DIV_24_5_BIT)
2210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerTypePA == CY_SYSCLK_DIV_8_BIT)    && (dividerNumPA < PERI_DIV_8_NR))    ||
2212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_16_BIT)   && (dividerNumPA < PERI_DIV_16_NR))   ||
2213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_16_5_BIT) && (dividerNumPA < PERI_DIV_16_5_NR)) ||
2214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_24_5_BIT) && ((dividerNumPA < PERI_DIV_24_5_NR) || (di
2215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* First, disable the divider that is to be phase-aligned.
2217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                The other two parameters are checked in that function;
2218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                if they're not valid, the divider is not disabled. */
2219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = Cy_SysClk_PeriphDisableDivider(dividerType, dividerNum);
2220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             if (retVal == CY_SYSCLK_SUCCESS)
2221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             {
2222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 /* Then, specify the reference divider, and the divider, and enable the divider. */
2223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk             |
2224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_PA_TYPE_SEL, dividerTypePA) |
2225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_PA_DIV_SEL,  dividerNumPA)  |
2226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType)   |
2227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             }
2229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDividerEnabled
2236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the enabled/disabled atate of the selected divider.
2239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 44


2242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The enabled/disabled state;<br>
2245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = disabled<br>
2246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = enabled
2247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphGetDividerEnabled
2250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
2253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = false;
2255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)));
2260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     switch(dividerType)
2262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_8_BIT:
2264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_8_CTL_EN, PERI_DIV_8_CTL[dividerNum]);
2265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_16_BIT:
2267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_16_CTL_EN, PERI_DIV_16_CTL[dividerNum]);
2268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_16_5_BIT:
2270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_16_5_CTL_EN, PERI_DIV_16_5_CTL[dividerNum]);
2271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_24_5_BIT:
2273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_24_5_CTL_EN, PERI_DIV_24_5_CTL[dividerNum]);
2274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         default:
2276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_funcs */
2281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_slow SECTION    ========================= */
2285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_slow_funcs
2288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkSlowSetDivider(uint8_t divider);
2291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkSlowGetDivider(void);
2292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkSlowSetDivider
2295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the slow clock. The source of this clock is the
2298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clock (clkPeri), which is sourced from clkHf[0].
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 45


2299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider Divider value between 0 and 255.
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
2302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
2304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
2305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkSlowSetDivider
2308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkSlowSetDivider(uint8_t divider)
2311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_SLOW_INT_DIV, divider);
2313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkSlowGetDivider
2317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the slow clock.
2320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
2322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
2323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkSlowSetDivider
2326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkSlowGetDivider(void)
2329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_SLOW_INT_DIV, CPUSS_CM0_CLOCK_CTL));
2331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_slow_funcs */
2333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    clkLf SECTION    ========================== */
2337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_lf_enums
2340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Low frequency (clkLf) input sources. See CLK_SELECT register, LFCLK_SEL bits.
2344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkLfSetSource, and \ref Cy_SysClk_ClkLfGetSource.
2345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_ILO   = 0U, /**< clkLf is sourced by the internal low speed oscillator (ILO)
2349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_WCO   = 1U, /**< clkLf is sourced by the watch crystal oscillator (WCO) */
2350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_ALTLF = 2U, /**< clkLf is sourced by the Alternate Low Frequency Clock (ALTL
2351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_PILO  = 3U  /**< clkLf is sourced by the precision low speed oscillator (PIL
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clklf_in_sources_t;
2353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_lf_enums */
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 46


2356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_lf_funcs
2357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkLfSetSource(cy_en_clklf_in_sources_t source);
2360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clklf_in_sources_t Cy_SysClk_ClkLfGetSource(void);
2361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkLfSetSource
2364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the low frequency clock(clkLf).
2367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clklf_in_sources_t
2369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
2371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkLfSetSource
2374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkLfSetSource(cy_en_clklf_in_sources_t source)
2377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_CLKLF_IN_PILO);
2379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_LFCLK_SEL, source);
  62              		.loc 2 2379 0
  63 0004 5949     		ldr	r1, .L9
  64 0006 A022     		movs	r2, #160
  65 0008 D200     		lsls	r2, r2, #3
  66 000a 8B58     		ldr	r3, [r1, r2]
  67 000c 0320     		movs	r0, #3
  68 000e 8343     		bics	r3, r0
  69 0010 8B50     		str	r3, [r1, r2]
  70              	.LVL2:
  71              	.LBE46:
  72              	.LBE45:
  73              	.LBB47:
  74              	.LBB48:
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
  75              		.loc 2 1740 0
  76 0012 574A     		ldr	r2, .L9+4
  77 0014 1168     		ldr	r1, [r2]
  78 0016 0868     		ldr	r0, [r1]
  79 0018 8823     		movs	r3, #136
  80 001a CB58     		ldr	r3, [r1, r3]
  81 001c C318     		adds	r3, r0, r3
  82 001e 1868     		ldr	r0, [r3]
  83 0020 5449     		ldr	r1, .L9+8
  84 0022 0840     		ands	r0, r1
  85 0024 1860     		str	r0, [r3]
  86              	.LVL3:
  87              	.LBE48:
  88              	.LBE47:
  89              	.LBB49:
  90              	.LBB50:
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
  91              		.loc 2 1793 0
  92 0026 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 47


  93 0028 1868     		ldr	r0, [r3]
  94 002a 8424     		movs	r4, #132
  95 002c 1B59     		ldr	r3, [r3, r4]
  96 002e C018     		adds	r0, r0, r3
  97 0030 0368     		ldr	r3, [r0]
  98 0032 1B02     		lsls	r3, r3, #8
  99 0034 1B0A     		lsrs	r3, r3, #8
 100 0036 8025     		movs	r5, #128
 101 0038 6D04     		lsls	r5, r5, #17
 102 003a 2B43     		orrs	r3, r5
 103 003c 0360     		str	r3, [r0]
 104              	.LVL4:
 105              	.LBE50:
 106              	.LBE49:
 107              	.LBB51:
 108              	.LBB52:
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 109              		.loc 2 2312 0
 110 003e 1068     		ldr	r0, [r2]
 111 0040 0568     		ldr	r5, [r0]
 112 0042 0359     		ldr	r3, [r0, r4]
 113 0044 EB18     		adds	r3, r5, r3
 114 0046 1868     		ldr	r0, [r3]
 115 0048 0140     		ands	r1, r0
 116 004a 1960     		str	r1, [r3]
 117              	.LVL5:
 118              	.LBE52:
 119              	.LBE51:
 120              	.LBB53:
 121              	.LBB54:
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 122              		.loc 2 1612 0
 123 004c 1368     		ldr	r3, [r2]
 124 004e 3E22     		movs	r2, #62
 125 0050 9A5C     		ldrb	r2, [r3, r2]
 126 0052 002A     		cmp	r2, #0
 127 0054 06D0     		beq	.L4
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 128              		.loc 2 1614 0
 129 0056 4548     		ldr	r0, .L9
 130 0058 E021     		movs	r1, #224
 131 005a 8900     		lsls	r1, r1, #2
 132 005c 4258     		ldr	r2, [r0, r1]
 133 005e 753C     		subs	r4, r4, #117
 134 0060 A243     		bics	r2, r4
 135 0062 4250     		str	r2, [r0, r1]
 136              	.LVL6:
 137              	.L4:
 138              	.LBE54:
 139              	.LBE53:
 140              	.LBB55:
 141              	.LBB56:
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 142              		.loc 2 1673 0
 143 0064 3E22     		movs	r2, #62
 144 0066 9A5C     		ldrb	r2, [r3, r2]
 145 0068 002A     		cmp	r2, #0
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 48


 146 006a 06D0     		beq	.L5
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 147              		.loc 2 1675 0
 148 006c 3F48     		ldr	r0, .L9
 149 006e E021     		movs	r1, #224
 150 0070 8900     		lsls	r1, r1, #2
 151 0072 4258     		ldr	r2, [r0, r1]
 152 0074 3024     		movs	r4, #48
 153 0076 A243     		bics	r2, r4
 154 0078 4250     		str	r2, [r0, r1]
 155              	.LVL7:
 156              	.L5:
 157              	.LBE56:
 158              	.LBE55:
 159              	.LBB57:
 160              	.LBB58:
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 161              		.loc 2 1545 0
 162 007a 3E22     		movs	r2, #62
 163 007c 9B5C     		ldrb	r3, [r3, r2]
 164 007e 002B     		cmp	r3, #0
 165 0080 07D0     		beq	.L6
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 166              		.loc 2 1547 0
 167 0082 3A49     		ldr	r1, .L9
 168 0084 E022     		movs	r2, #224
 169 0086 9200     		lsls	r2, r2, #2
 170 0088 8B58     		ldr	r3, [r1, r2]
 171 008a 8020     		movs	r0, #128
 172 008c 0006     		lsls	r0, r0, #24
 173 008e 0343     		orrs	r3, r0
 174 0090 8B50     		str	r3, [r1, r2]
 175              	.LVL8:
 176              	.L6:
 177              	.LBE58:
 178              	.LBE57:
 150:Generated_Source\PSoC6/cyfitter_cfg.c **** 	uint32_t status;
 151:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 152:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Enable all source clocks */
 153:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkLfSetSource(CY_SYSCLK_CLKLF_IN_ILO);
 154:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 155:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure CPU clock dividers */
 156:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkFastSetDivider(0u);
 157:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPeriSetDivider(1u);
 158:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkSlowSetDivider(0u);
 159:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 160:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure LF & HF clocks */
 161:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfSetSource(0u, CY_SYSCLK_CLKHF_IN_CLKPATH0);
 162:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfSetDivider(0u, CY_SYSCLK_CLKHF_NO_DIVIDE);
 163:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfEnable(0u);
 164:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 165:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure Path Clocks */
 166:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(1, CY_SYSCLK_CLKPATH_IN_IMO);
 179              		.loc 1 166 0
 180 0092 0021     		movs	r1, #0
 181 0094 0120     		movs	r0, #1
 182 0096 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 49


 183              	.LVL9:
 167:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(2, CY_SYSCLK_CLKPATH_IN_IMO);
 184              		.loc 1 167 0
 185 009a 0021     		movs	r1, #0
 186 009c 0220     		movs	r0, #2
 187 009e FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 188              	.LVL10:
 168:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(3, CY_SYSCLK_CLKPATH_IN_IMO);
 189              		.loc 1 168 0
 190 00a2 0021     		movs	r1, #0
 191 00a4 0320     		movs	r0, #3
 192 00a6 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 193              	.LVL11:
 169:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(4, CY_SYSCLK_CLKPATH_IN_IMO);
 194              		.loc 1 169 0
 195 00aa 0021     		movs	r1, #0
 196 00ac 0420     		movs	r0, #4
 197 00ae FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 198              	.LVL12:
 170:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(0, CY_SYSCLK_CLKPATH_IN_IMO);
 199              		.loc 1 170 0
 200 00b2 0021     		movs	r1, #0
 201 00b4 0020     		movs	r0, #0
 202 00b6 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 203              	.LVL13:
 204              	.LBB59:
 171:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 172:Generated_Source\PSoC6/cyfitter_cfg.c **** 		const cy_stc_fll_manual_config_t fllConfig = 
 205              		.loc 1 172 0
 206 00ba 01A8     		add	r0, sp, #4
 207 00bc 2E49     		ldr	r1, .L9+12
 208 00be 0300     		movs	r3, r0
 209 00c0 0A00     		movs	r2, r1
 210 00c2 32CA     		ldmia	r2!, {r1, r4, r5}
 211 00c4 32C3     		stmia	r3!, {r1, r4, r5}
 212 00c6 12CA     		ldmia	r2!, {r1, r4}
 213 00c8 12C3     		stmia	r3!, {r1, r4}
 173:Generated_Source\PSoC6/cyfitter_cfg.c **** 		{
 174:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.fllMult =         500u,
 175:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.refDiv =          20u,
 176:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.ccoRange =        CY_SYSCLK_FLL_CCO_RANGE4,
 177:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.enableOutputDiv = true,
 178:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.lockTolerance =   10u,
 179:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.igain =           9u,
 180:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.pgain =           5u,
 181:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.settlingCount =   8u,
 182:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.outputMode =      CY_SYSCLK_FLLPLL_OUTPUT_AUTO,
 183:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.cco_Freq =        355u
 184:Generated_Source\PSoC6/cyfitter_cfg.c **** 		};
 185:Generated_Source\PSoC6/cyfitter_cfg.c **** 		status = Cy_SysClk_FllManualConfigure(&fllConfig);
 214              		.loc 1 185 0
 215 00ca FFF7FEFF 		bl	Cy_SysClk_FllManualConfigure
 216              	.LVL14:
 186:Generated_Source\PSoC6/cyfitter_cfg.c **** 		if (CY_RET_SUCCESS != status)
 217              		.loc 1 186 0
 218 00ce 0028     		cmp	r0, #0
 219 00d0 02D0     		beq	.L7
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 50


 187:Generated_Source\PSoC6/cyfitter_cfg.c **** 		{
 188:Generated_Source\PSoC6/cyfitter_cfg.c **** 			CyClockStartupError(CYCLOCKSTART_FLL_ERROR);
 220              		.loc 1 188 0
 221 00d2 0420     		movs	r0, #4
 222              	.LVL15:
 223 00d4 FFF7FEFF 		bl	CyClockStartupError
 224              	.LVL16:
 225              	.L7:
 226              	.LBE59:
 189:Generated_Source\PSoC6/cyfitter_cfg.c **** 		}
 190:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 191:Generated_Source\PSoC6/cyfitter_cfg.c **** 	SRSS->CLK_TRIM_CCO_CTL |= 1u << 31;
 227              		.loc 1 191 0
 228 00d8 2449     		ldr	r1, .L9
 229 00da 284A     		ldr	r2, .L9+16
 230 00dc 8B58     		ldr	r3, [r1, r2]
 231 00de 8020     		movs	r0, #128
 232              	.LVL17:
 233 00e0 0006     		lsls	r0, r0, #24
 234 00e2 0343     		orrs	r3, r0
 235 00e4 8B50     		str	r3, [r1, r2]
 192:Generated_Source\PSoC6/cyfitter_cfg.c **** 	status = Cy_SysClk_FllEnable(200000u);
 236              		.loc 1 192 0
 237 00e6 2648     		ldr	r0, .L9+20
 238 00e8 FFF7FEFF 		bl	Cy_SysClk_FllEnable
 239              	.LVL18:
 193:Generated_Source\PSoC6/cyfitter_cfg.c **** 	if (CY_RET_SUCCESS != status)
 240              		.loc 1 193 0
 241 00ec 0028     		cmp	r0, #0
 242 00ee 02D0     		beq	.L8
 194:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 195:Generated_Source\PSoC6/cyfitter_cfg.c **** 		CyClockStartupError(CYCLOCKSTART_FLL_ERROR);
 243              		.loc 1 195 0
 244 00f0 0420     		movs	r0, #4
 245              	.LVL19:
 246 00f2 FFF7FEFF 		bl	CyClockStartupError
 247              	.LVL20:
 248              	.L8:
 249              	.LBB60:
 250              	.LBB61:
2380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkLfGetSource
2384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the low frequency clock (clkLf).
2387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clklf_in_sources_t
2389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkLfSetSource
2392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clklf_in_sources_t Cy_SysClk_ClkLfGetSource(void)
2395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clklf_in_sources_t)(_FLD2VAL(SRSS_CLK_SELECT_LFCLK_SEL, SRSS_CLK_SELECT));
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 51


2397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_lf_funcs */
2399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_timer SECTION    ========================= */
2403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_timer_enums
2406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Timer clock (clk_timer) input sources. See CLK_TIMER_CTL register, TIMER_SEL
2410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and TIMER_HF0_DIV bits. Used with functions \ref Cy_SysClk_ClkTimerSetSource, and
2411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkTimerGetSource.
2412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_IMO       = 0x000U, /**< clk_timer is sourced by the internal main oscill
2416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_NODIV = 0x001U, /**< clk_timer is sourced by clkHf[0] undivided */
2417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV2  = 0x101U, /**< clk_timer is sourced by clkHf[0] divided by 2 */
2418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV4  = 0x201U, /**< clk_timer is sourced by clkHf[0] divided by 4 */
2419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV8  = 0x301U  /**< clk_timer is sourced by clkHf[0] divided by 8 */
2420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clktimer_in_sources_t;
2421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_timer_enums */
2422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond */
2424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SRSS_CLK_TIMER_CTL_TIMER_Pos (SRSS_CLK_TIMER_CTL_TIMER_SEL_Pos)
2425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SRSS_CLK_TIMER_CTL_TIMER_Msk (SRSS_CLK_TIMER_CTL_TIMER_SEL_Msk | SRSS_CLK_TIMER_CTL_TIME
2426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
2427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_timer_funcs
2430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetSource(cy_en_clktimer_in_sources_t source);
2433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clktimer_in_sources_t Cy_SysClk_ClkTimerGetSource(void);
2434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetDivider(uint8_t divider);
2435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkTimerGetDivider(void);
2436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerEnable(void);
2437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerDisable(void);
2438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerSetSource
2441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the timer clock (clk_timer). The timer clock can be used
2444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * as a source for SYSTICK as an alternate clock and one or more of the energy 
2445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * profiler counters.
2446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clktimer_in_sources_t
2448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerSetSource
2451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetSource(cy_en_clktimer_in_sources_t source)
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 52


2454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_CLKTIMER_IN_HF0_DIV8);
2456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* set both fields TIMER_SEL and TIMER_HF0_DIV with the same input value */
2457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_TIMER_CTL, CY_SRSS_CLK_TIMER_CTL_TIMER, source);
 251              		.loc 2 2457 0
 252 00f6 1D4C     		ldr	r4, .L9
 253 00f8 224B     		ldr	r3, .L9+24
 254 00fa E158     		ldr	r1, [r4, r3]
 255 00fc 224A     		ldr	r2, .L9+28
 256 00fe 0A40     		ands	r2, r1
 257 0100 E250     		str	r2, [r4, r3]
 258              	.LVL21:
 259              	.LBE61:
 260              	.LBE60:
 261              	.LBB62:
 262              	.LBB63:
2458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerGetSource
2462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the timer clock (clk_timer).
2465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clktimer_in_sources_t
2467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerSetSource
2470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clktimer_in_sources_t Cy_SysClk_ClkTimerGetSource(void)
2473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* return both fields TIMER_SEL and TIMER_HF0_DIV as a single combined value */
2475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clktimer_in_sources_t)(SRSS_CLK_TIMER_CTL & CY_SRSS_CLK_TIMER_CTL_TIMER_Msk);
2476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerSetDivider
2480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the divider for the timer clock (clk_timer).
2483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider Divider value; valid range is 0 to 255. Divides the selected
2485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * source (\ref Cy_SysClk_ClkTimerSetSource) by the (value + 1).
2486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the divider value while the timer clock is enabled.
2489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerSetDivider
2492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetDivider(uint8_t divider)
2495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_TIMER_CTL, SRSS_CLK_TIMER_CTL_TIMER_DIV, divider);
 263              		.loc 2 2496 0
 264 0102 E158     		ldr	r1, [r4, r3]
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 53


 265 0104 214A     		ldr	r2, .L9+32
 266 0106 0A40     		ands	r2, r1
 267 0108 E250     		str	r2, [r4, r3]
 268              	.LVL22:
 269              	.LBE63:
 270              	.LBE62:
 271              	.LBB64:
 272              	.LBB65:
2497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerGetDivider
2501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the timer clock (clk_timer).
2504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value
2506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerSetDivider
2509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkTimerGetDivider(void)
2512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(SRSS_CLK_TIMER_CTL_TIMER_DIV, SRSS_CLK_TIMER_CTL));
2514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerEnable
2518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the timer clock (clk_timer). The timer clock can be used as a source
2521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for SYSTICK and one or more of the energy profiler counters.
2522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerEnable
2525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerEnable(void)
2528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_TIMER_CTL |= SRSS_CLK_TIMER_CTL_ENABLE_Msk;
 273              		.loc 2 2529 0
 274 010a E258     		ldr	r2, [r4, r3]
 275 010c 8025     		movs	r5, #128
 276 010e 2D06     		lsls	r5, r5, #24
 277 0110 2A43     		orrs	r2, r5
 278 0112 E250     		str	r2, [r4, r3]
 279              	.LVL23:
 280              	.LBE65:
 281              	.LBE64:
 282              	.LBB66:
 283              	.LBB67:
2530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerDisable
2534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 54


2535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the timer clock (clk_timer).
2537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerDisable
2540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerDisable(void)
2543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_TIMER_CTL &= ~SRSS_CLK_TIMER_CTL_ENABLE_Msk;
2545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_timer_funcs */
2547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_pump SECTION    ========================= */
2551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_pump_enums
2554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Pump clock (clk_pump) input sources. See CLK_SELECT register, PUMP_SEL bits.
2558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkPumpSetSource, and
2559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkPumpGetSource.
2560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH0,  /**< Pump clock input is clock path 0 */
2564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH1,  /**< Pump clock input is clock path 1 */
2565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH2,  /**< Pump clock input is clock path 2 */
2566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH3,  /**< Pump clock input is clock path 3 */
2567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH4,  /**< Pump clock input is clock path 4 */
2568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH5,  /**< Pump clock input is clock path 5 */
2569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH6,  /**< Pump clock input is clock path 6 */
2570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH7,  /**< Pump clock input is clock path 7 */
2571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH8,  /**< Pump clock input is clock path 8 */
2572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH9,  /**< Pump clock input is clock path 9 */
2573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH10, /**< Pump clock input is clock path 10 */
2574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH11, /**< Pump clock input is clock path 11 */
2575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH12, /**< Pump clock input is clock path 12 */
2576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH13, /**< Pump clock input is clock path 13 */
2577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH14, /**< Pump clock input is clock path 14 */
2578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH15  /**< Pump clock input is clock path 15 */
2579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpump_in_sources_t;
2580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Pump clock (clk_pump) divide options. See CLK_SELECT register, PUMP_DIV bits.
2583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkPumpSetDivider, and
2584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkPumpGetDivider.
2585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_NO_DIV = 0U, /**< No division on pump clock */
2589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_2  = 1U, /**< Pump clock divided by 2 */
2590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_4  = 2U, /**< Pump clock divided by 4 */
2591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_8  = 3U, /**< Pump clock divided by 8 */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 55


2592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_16 = 4U  /**< Pump clock divided by 16 */
2593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpump_divide_t;
2594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_pump_enums */
2595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond */
2597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_FLL_IS_DIVIDER_VALID(div) (((div) == CY_SYSCLK_PUMP_NO_DIV) || \
2598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_2)  || \
2599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_4)  || \
2600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_8)  || \
2601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_16))
2602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
2603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_pump_funcs
2606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetSource(cy_en_clkpump_in_sources_t source);
2609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_in_sources_t Cy_SysClk_ClkPumpGetSource(void);
2610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetDivider(cy_en_clkpump_divide_t divider);
2611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_divide_t Cy_SysClk_ClkPumpGetDivider(void);
2612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpEnable(void);
2613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpDisable(void);
2614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpSetSource
2617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the pump clock (clk_pump). The pump clock can be used for
2620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the analog pumps in the CTBm block.
2621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkpump_in_sources_t
2623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the source while the pump clock is enabled.
2626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpSetSource
2629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetSource(cy_en_clkpump_in_sources_t source)
2632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_PUMP_IN_CLKPATH15);
2634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_PUMP_SEL, source);
 284              		.loc 2 2634 0
 285 0114 043B     		subs	r3, r3, #4
 286 0116 E158     		ldr	r1, [r4, r3]
 287 0118 1D4A     		ldr	r2, .L9+36
 288 011a 0A40     		ands	r2, r1
 289 011c E250     		str	r2, [r4, r3]
 290              	.LVL24:
 291              	.LBE67:
 292              	.LBE66:
 293              	.LBB68:
 294              	.LBB69:
2635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 56


2638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpGetSource
2639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the pump clock (clk_pump).
2642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkpump_in_sources_t
2644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpSetSource
2647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_in_sources_t Cy_SysClk_ClkPumpGetSource(void)
2650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkpump_in_sources_t)_FLD2VAL(SRSS_CLK_SELECT_PUMP_SEL, SRSS_CLK_SELECT);
2652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpSetDivider
2656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the divider of the pump clock (clk_pump).
2659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkpump_divide_t
2661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the divider value while the pump clock is enabled.
2664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpSetDivider
2667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetDivider(cy_en_clkpump_divide_t divider)
2670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(CY_SYSCLK_FLL_IS_DIVIDER_VALID(divider));
2672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_PUMP_DIV, divider);
 295              		.loc 2 2672 0
 296 011e E158     		ldr	r1, [r4, r3]
 297 0120 1C4A     		ldr	r2, .L9+40
 298 0122 0A40     		ands	r2, r1
 299 0124 8021     		movs	r1, #128
 300 0126 8901     		lsls	r1, r1, #6
 301 0128 0A43     		orrs	r2, r1
 302 012a E250     		str	r2, [r4, r3]
 303              	.LVL25:
 304              	.LBE69:
 305              	.LBE68:
 306              	.LBB70:
 307              	.LBB71:
2673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpGetDivider
2677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the pump clock (clk_pump).
2680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkpump_divide_t
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 57


2682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpSetDivider
2685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_divide_t Cy_SysClk_ClkPumpGetDivider(void)
2688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkpump_divide_t)_FLD2VAL(SRSS_CLK_SELECT_PUMP_DIV, SRSS_CLK_SELECT);
2690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpEnable
2694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the pump clock (clk_pump). The pump clock can be used for the analog
2697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * pumps in the CTBm block.
2698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpEnable
2701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpEnable(void)
2704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_SELECT |= SRSS_CLK_SELECT_PUMP_ENABLE_Msk;
 308              		.loc 2 2705 0
 309 012c E258     		ldr	r2, [r4, r3]
 310 012e 8021     		movs	r1, #128
 311 0130 0902     		lsls	r1, r1, #8
 312 0132 0A43     		orrs	r2, r1
 313 0134 E250     		str	r2, [r4, r3]
 314              	.LVL26:
 315              	.LBE71:
 316              	.LBE70:
 317              	.LBB72:
 318              	.LBB73:
2706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpDisable
2710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the pump clock (clk_pump).
2713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpDisable
2716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpDisable(void)
2719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_SELECT &= ~SRSS_CLK_SELECT_PUMP_ENABLE_Msk;
2721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_pump_funcs */
2723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    clk_bak SECTION    ========================= */
2727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 58


2728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_bak_enums
2730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Backup domain clock (clk_bak) input sources. See BACKUP->CTL register,
2734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_SEL bits. Used with functions \ref Cy_SysClk_ClkBakSetSource, and
2735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkBakGetSource.
2736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAK_IN_WCO,   /**< Backup domain clock input is WCO */
2740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAK_IN_CLKLF  /**< Backup domain clock input is clkLf */
2741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkbak_in_sources_t;
2742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_bak_enums */
2743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_bak_funcs
2746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkBakSetSource(cy_en_clkbak_in_sources_t source);
2749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkbak_in_sources_t Cy_SysClk_ClkBakGetSource(void);
2750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkBakSetSource
2753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the backup domain clock (clk_bak).
2756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkbak_in_sources_t
2758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkLf is not available in all power modes.  For this reason, WCO is the
2761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * preferred source. If the WCO is routed through the clkLf multiplexer
2762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (see \ref Cy_SysClk_ClkLfSetSource), select WCO directly - do not select clkLf.
2763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkBakSetSource
2766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkBakSetSource(cy_en_clkbak_in_sources_t source)
2769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_BAK_IN_CLKLF);
2771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_CLK_SEL, source);
 319              		.loc 2 2771 0
 320 0136 184A     		ldr	r2, .L9+44
 321 0138 1168     		ldr	r1, [r2]
 322 013a 184B     		ldr	r3, .L9+48
 323 013c 0B40     		ands	r3, r1
 324 013e 8021     		movs	r1, #128
 325 0140 4900     		lsls	r1, r1, #1
 326 0142 0B43     		orrs	r3, r1
 327 0144 1360     		str	r3, [r2]
 328              	.LVL27:
 329              	.LBE73:
 330              	.LBE72:
 196:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 59


 197:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 198:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure miscellaneous clocks */
 199:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerSetSource(CY_SYSCLK_CLKTIMER_IN_IMO);
 200:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerSetDivider(0);
 201:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerEnable();
 202:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpSetSource(CY_SYSCLK_PUMP_IN_CLKPATH0);
 203:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpSetDivider(CY_SYSCLK_PUMP_DIV_4);
 204:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpEnable();
 205:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkBakSetSource(CY_SYSCLK_BAK_IN_CLKLF);
 206:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysTick_SetClockSource(CY_SYSTICK_CLOCK_SOURCE_CLK_LF);
 331              		.loc 1 206 0
 332 0146 0020     		movs	r0, #0
 333              	.LVL28:
 334 0148 FFF7FEFF 		bl	Cy_SysTick_SetClockSource
 335              	.LVL29:
 336              	.LBB74:
 337              	.LBB75:
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 338              		.loc 2 1014 0
 339 014c 144B     		ldr	r3, .L9+52
 340 014e E258     		ldr	r2, [r4, r3]
 341 0150 1543     		orrs	r5, r2
 342 0152 E550     		str	r5, [r4, r3]
 343              	.LVL30:
 344              	.LBE75:
 345              	.LBE74:
 346              	.LBB76:
 347              	.LBB77:
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 348              		.loc 2 1065 0
 349 0154 E158     		ldr	r1, [r4, r3]
 350 0156 0122     		movs	r2, #1
 351 0158 9143     		bics	r1, r2
 352 015a 0A43     		orrs	r2, r1
 353 015c E250     		str	r2, [r4, r3]
 354              	.LVL31:
 355              	.LBE77:
 356              	.LBE76:
 207:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_IloEnable();
 208:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_IloHibernateOn(1u);
 209:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 210:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Set memory wait states based on 100 MHz HFClk[0] */
 211:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysLib_SetWaitStates(false, 100);
 357              		.loc 1 211 0
 358 015e 6421     		movs	r1, #100
 359 0160 0020     		movs	r0, #0
 360 0162 FFF7FEFF 		bl	Cy_SysLib_SetWaitStates
 361              	.LVL32:
 212:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 362              		.loc 1 212 0
 363 0166 07B0     		add	sp, sp, #28
 364              		@ sp needed
 365 0168 30BD     		pop	{r4, r5, pc}
 366              	.L10:
 367 016a C046     		.align	2
 368              	.L9:
 369 016c 00002640 		.word	1076232192
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 60


 370 0170 00000000 		.word	cy_device
 371 0174 FF00FFFF 		.word	-65281
 372 0178 00000000 		.word	.LANCHOR0
 373 017c 087F0000 		.word	32520
 374 0180 400D0300 		.word	200000
 375 0184 04050000 		.word	1284
 376 0188 FEFCFFFF 		.word	-770
 377 018c FFFF00FF 		.word	-16711681
 378 0190 FFF0FFFF 		.word	-3841
 379 0194 FF8FFFFF 		.word	-28673
 380 0198 00002740 		.word	1076297728
 381 019c FFFCFFFF 		.word	-769
 382 01a0 0C050000 		.word	1292
 383              		.cfi_endproc
 384              	.LFE188:
 385              		.size	ClockInit, .-ClockInit
 386              		.section	.text.Cy_SystemInit,"ax",%progbits
 387              		.align	2
 388              		.global	Cy_SystemInit
 389              		.code	16
 390              		.thumb_func
 391              		.type	Cy_SystemInit, %function
 392              	Cy_SystemInit:
 393              	.LFB190:
 213:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 214:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 215:Generated_Source\PSoC6/cyfitter_cfg.c **** /* Analog API Functions */
 216:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 217:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 218:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 219:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: AnalogSetDefault
 220:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 221:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 222:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 223:Generated_Source\PSoC6/cyfitter_cfg.c **** *  Sets up the analog portions of the chip to default values based on chip
 224:Generated_Source\PSoC6/cyfitter_cfg.c **** *  configuration options from the project.
 225:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 226:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 227:Generated_Source\PSoC6/cyfitter_cfg.c **** *  void
 228:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 229:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 230:Generated_Source\PSoC6/cyfitter_cfg.c **** *  void
 231:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 232:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 233:Generated_Source\PSoC6/cyfitter_cfg.c **** static void AnalogSetDefault(void);
 234:Generated_Source\PSoC6/cyfitter_cfg.c **** static void AnalogSetDefault(void)
 235:Generated_Source\PSoC6/cyfitter_cfg.c **** {
 236:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 237:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 238:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 239:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 240:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 241:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 242:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: Cy_SystemInit
 243:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 244:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 245:Generated_Source\PSoC6/cyfitter_cfg.c **** *  This function is called by the start-up code for the selected device. It
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 61


 246:Generated_Source\PSoC6/cyfitter_cfg.c **** *  performs all of the necessary device configuration based on the design
 247:Generated_Source\PSoC6/cyfitter_cfg.c **** *  settings.  This includes settings from the Design Wide Resources (DWR) such
 248:Generated_Source\PSoC6/cyfitter_cfg.c **** *  as Clocks and Pins as well as any component configuration that is necessary.
 249:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 250:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 251:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 252:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 253:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 254:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 255:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 256:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 257:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 258:Generated_Source\PSoC6/cyfitter_cfg.c **** void Cy_SystemInit(void)
 259:Generated_Source\PSoC6/cyfitter_cfg.c **** {
 394              		.loc 1 259 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 40
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 30B5     		push	{r4, r5, lr}
 399              		.cfi_def_cfa_offset 12
 400              		.cfi_offset 4, -12
 401              		.cfi_offset 5, -8
 402              		.cfi_offset 14, -4
 403 0002 8BB0     		sub	sp, sp, #44
 404              		.cfi_def_cfa_offset 56
 260:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Set worst case memory wait states (150 MHz), ClockInit() will update */
 261:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysLib_SetWaitStates(false, 150);
 405              		.loc 1 261 0
 406 0004 9621     		movs	r1, #150
 407 0006 0020     		movs	r0, #0
 408 0008 FFF7FEFF 		bl	Cy_SysLib_SetWaitStates
 409              	.LVL33:
 262:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 263:Generated_Source\PSoC6/cyfitter_cfg.c **** 	if(0u == Cy_SysLib_GetResetReason()) /* POR, XRES, or BOD */
 410              		.loc 1 263 0
 411 000c FFF7FEFF 		bl	Cy_SysLib_GetResetReason
 412              	.LVL34:
 413 0010 0028     		cmp	r0, #0
 414 0012 14D1     		bne	.L12
 264:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 265:Generated_Source\PSoC6/cyfitter_cfg.c **** 		Cy_SysLib_ResetBackupDomain();
 415              		.loc 1 265 0
 416 0014 FFF7FEFF 		bl	Cy_SysLib_ResetBackupDomain
 417              	.LVL35:
 418              	.LBB78:
 419              	.LBB79:
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 420              		.loc 2 1038 0
 421 0018 C023     		movs	r3, #192
 422 001a 5B00     		lsls	r3, r3, #1
 423 001c 234A     		ldr	r2, .L15
 424 001e D358     		ldr	r3, [r2, r3]
 425 0020 DB07     		lsls	r3, r3, #31
 426 0022 05D4     		bmi	.L13
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 427              		.loc 2 1040 0
 428 0024 1100     		movs	r1, r2
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 62


 429 0026 224A     		ldr	r2, .L15+4
 430 0028 8B58     		ldr	r3, [r1, r2]
 431 002a 5B00     		lsls	r3, r3, #1
 432 002c 5B08     		lsrs	r3, r3, #1
 433 002e 8B50     		str	r3, [r1, r2]
 434              	.LVL36:
 435              	.L13:
 436              	.LBE79:
 437              	.LBE78:
 438              	.LBB80:
 439              	.LBB81:
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 440              		.loc 2 1014 0
 441 0030 1E49     		ldr	r1, .L15
 442 0032 1F4A     		ldr	r2, .L15+4
 443 0034 8B58     		ldr	r3, [r1, r2]
 444 0036 8020     		movs	r0, #128
 445 0038 0006     		lsls	r0, r0, #24
 446 003a 0343     		orrs	r3, r0
 447 003c 8B50     		str	r3, [r1, r2]
 448              	.L12:
 449              	.LBE81:
 450              	.LBE80:
 266:Generated_Source\PSoC6/cyfitter_cfg.c **** 		Cy_SysClk_IloDisable();
 267:Generated_Source\PSoC6/cyfitter_cfg.c **** 		Cy_SysClk_IloEnable();
 268:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 269:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 270:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Power Mode */
 271:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_1_1V);
 451              		.loc 1 271 0
 452 003e 0120     		movs	r0, #1
 453 0040 FFF7FEFF 		bl	Cy_SysPm_LdoSetVoltage
 454              	.LVL37:
 455              	.LBB82:
 456              	.LBB83:
 457              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \file cy_syspm.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \version 4.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Provides the function definitions for the power management API.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Use the System Power Management (SysPm) driver to change power modes and 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reduce system power consumption in power sensitive designs. 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 63


  22:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The functions and other declarations used in this driver are in cy_syspm.h. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and declarations in the PDL. 
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, this library allows you to individually enter low power  
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * modes for each CPU.
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This document contains the following topics:
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_power_modes
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_system_power_modes
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_ulp
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_ulp_limitations
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_lp
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_lp_limitations
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_sleep
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_deepsleep
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_wakingup_from_sleep_deepsleep
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_hibernate
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_wakingup_from_hibernate
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_system_reg_curr_mode
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_system_set_min_reg_curr_mode
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_system_set_normal_reg_curr_mode
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_migration_guide_for_syspm_4_0
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_managing_pmic
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_managing_backup_domain
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_cb
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_cb_example
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_cb_config_consideration
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_parameters
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_structures
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_function_implementation
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_flow
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_unregistering
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_definitions
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_section_configuration Configuration Considerations
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_power_modes Power Modes
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * PSoC 6 MCUs support four system and three CPU power modes. These power modes
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are intended to minimize average power consumption in an application.
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * System power modes:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Low Power</b> - All peripheral and CPU power modes
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   are available to be used at maximum device frequency and current 
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   consumption.
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Ultra Low Power</b> - All peripheral and 
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   CPU power modes are available, but the frequency and current consumption 
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   are limited to a device specific number.
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Deep Sleep</b> - Device and I/O states is retained. Low-frequency 
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   peripherals are available. Both CPUs are in CPU Deep Sleep power mode. 
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Hibernate</b> - The device and I/O states are frozen and the device 
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   resets on wakeup.
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU <b>Active</b>, <b>Sleep</b> and <b>Deep Sleep</b> power modes are 
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Arm-defined power modes supported by the Arm CPU instruction 
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * set architecture (ISA). 
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 64


  79:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_power_modes System Power Modes
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>LP</b> - In this mode, code is executed and all logic and 
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   memories are powered. Firmware may disable/reduce clocks for specific 
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   peripherals and power down specific analog power domains.
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>ULP</b> - This power mode is like LP mode, but 
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   with clock restrictions and limited/slower peripherals to achieve lower
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   current consumption. Refer to \ref group_syspm_switching_into_ulp in 
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations.
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Deep Sleep</b> - Is a lower power mode where high-frequency clocks are 
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   disabled. Refer to \ref group_syspm_switching_into_deepsleep in 
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations. Deep-sleep-capable peripherals are available. 
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   A normal wakeup from Deep Sleep returns to either system LP or ULP mode, 
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   depending on the previous state and programmed behavior for the configured 
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   wakeup interrupt. Likewise, a debug wakes up from system Deep Sleep and 
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   woken CPU returns to CPU Sleep. Refer 
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   to \ref group_syspm_wakingup_from_sleep_deepsleep in Configuration 
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   considerations.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Hibernate</b> - Is the lowest power mode that is entered from 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   firmware. Refer to \ref group_syspm_switching_into_hibernate in 
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations. On wakeup the CPU(s) and all peripherals 
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   go through a full reset. The I/O's state is frozen so that the 
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   output driver state is held in system Hibernate. Note that in this mode, 
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   the CPU(s) and all peripherals lose their states, so the system and firmware
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   reboot on a wakeup event. Backup memory (if present) can be used to store 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   limited system state for use on the next reboot. Refer to 
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \ref group_syspm_wakingup_from_hibernate in Configuration considerations.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_lp Switching the System into Low Power
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set system LP mode you need to set LP voltage for the active core 
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * regulator:
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the LDO, call:
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \code{.c}
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_LP);
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \endcode
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the Buck, call:
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \code{.c}
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Cy_SysPm_BuckSetVoltage1(CY_SYSPM_BUCK_OUT1_VOLTAGE_LP)
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \endcode
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After switching into system LP mode, the operating frequency and current 
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * consumption may now be increased up to \ref group_syspm_lp_limitations.
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The wait states for flash may be changed to increase device performance by 
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * calling SysLib function Cy_SysLib_SetWaitStates(true, hfClkFreqMz), where 
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * hfClkFreqMz is the frequency of HfClk0 in MHz.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_lp_limitations LP Limitations
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the system is in LP mode, the core regulator voltage is set to
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <b>1.1 V (nominal)</b> and the following limitations must be met:
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The maximum operating frequency for all Clk_HF paths must not exceed 
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>150 MHz*</b>, and peripheral and slow clock must 
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     not exceed <b>100 MHz *</b>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The total current consumption must be less than or equal to 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 65


 136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>250 mA *</b>
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning * - Numbers shown are approximate and real limit values may be
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * different because they are device specific. You should refer to the device 
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * datasheet for exact values of maximum frequency and current in system LP mode.
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_ulp Switching the System into Ultra Low Power
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before switching into system ULP mode, ensure that the device meets 
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_ulp_limitations. Decrease the clock frequencies, 
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and slow or disable peripherals. Also ensure that appropriate wait state 
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * values are set for the flash. Flash wait states can be set by calling 
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysLib function Cy_SysLib_SetWaitStates(true, hfClkFreqMz), where hfClkFreqMz 
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is the frequency of HfClk0 in MHz.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the \ref group_syspm_ulp_limitations are met and appropriate wait 
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * states are set, you must set ULP voltage for the active core regulator:
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the LDO Core Voltage Regulator, call 
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_ULP)
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the Buck Core Voltage Regulator, then call 
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_BuckSetVoltage1(CY_SYSPM_BUCK_OUT1_VOLTAGE_ULP)
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_ulp_limitations ULP Limitations
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the system is in ULP mode the core regulator voltage is set to <b>0.9 V 
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (nominal)</b> and the following limitations must be meet:
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The maximum operating frequency for all Clk_HF paths must not exceed 
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>50 MHz *</b>, whereas the peripheral and slow clock must not exceed 
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>25 MHz *</b>. 
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The total current consumption must be less than or equal 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     to <b>20 mA*</b>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - the flash write operations are prohibited. The flash works in the 
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     Read-only operation. If Write operations are required, you must switch to
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     the system LP mode.
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning * - Numbers shown are approximate and real limit values may be
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * different because they are device specific. You should refer to the device 
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * datasheet for exact values of maximum frequency and current in system
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * ULP mode.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_sleep Switching CPU into Sleep
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, the Cy_SysPm_CpuEnterSleep() switches only the CPU 
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that calls the function into the CPU Sleep power mode. 
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * All pending interrupts must be cleared before the CPU is put into a 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode, even if they are masked.
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU event register can be set in the past, for example, as a result of 
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internal system calls. So an old event can cause the CPU to not enter 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode upon WFE(). Therefore usually the WFE() is used in an idle loop or 
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * polling loop as it might or might not cause entering of CPU Sleep mode. If 
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the idle loop or polling loop is not used, then it is recommended to use 
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * WFI() instruction.
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_deepsleep Switching the System or CPU into Deep Sleep
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, the Cy_SysPm_CpuEnterDeepSleep() function switches 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 66


 193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * only the CPU that calls the function into the CPU Deep Sleep power mode. 
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set the whole system into Deep Sleep power mode, ensure that all CPUs call 
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Cy_SysPm_CpuEnterDeepSleep() function.
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * There are situations when the system does not switch into the Deep Sleep 
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power mode immediately after the last CPU calls Cy_SysPm_CpuEnterDeepSleep(). 
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The system will switch into Deep Sleep mode automatically a short time later, 
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * after the low power circuits are ready to switch into Deep Sleep. Refer to 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Cy_SysPm_CpuEnterDeepSleep() description for more detail.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * All pending interrupts must be cleared before the system is put into a 
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Deep Sleep mode, even if they are masked.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU event register can be set in the past, for example, as a result of 
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internal system calls. So an old event can cause the CPU to not enter Deep 
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode upon WFE(). Therefore usually the WFE() is used in an idle loop or 
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * polling loop as it might or might not cause entering of CPU Deep Sleep mode. 
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If the idle loop or polling loop is not used, then it is recommended to use 
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * WFI() instruction. 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For single-CPU devices, SysPm functions that return the status of the 
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * unsupported CPU always return CY_SYSPM_STATUS_<CPU>_DEEPSLEEP.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_wakingup_from_sleep_deepsleep Waking Up from Sleep or Deep Sleep
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For Arm-based devices, an interrupt is required for the CPU to wake up. 
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, one CPU can wake up the other CPU by sending the 
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * event instruction. Use the Cy_SysPm_CpuSendWakeupEvent() function.
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_hibernate Switching System to Hibernate
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If you call Cy_SysPm_SystemEnterHibernate() from either CPU, the system will
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be switched into the Hibernate power mode directly, because there is no 
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * handshake between CPUs.
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_wakingup_from_hibernate Waking Up from Hibernate
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The system can wake up from Hibernate mode by configuring the following wakeup
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * sources:
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - Wakeup pin
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - LP Comparator
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - RTC alarm
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - WDT interrupt
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Wakeup is supported from device specific pin(s) with programmable polarity. 
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Additionally, unregulated peripherals can wake the system under some 
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * conditions. For example, a low power comparator can wake the system by 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * comparing two external voltages, but does not support comparison to an 
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internally-generated voltage. The backup power domain remains functional, and 
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * if present it can schedule an alarm to wake the system from Hibernate using 
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the RTC. Alternatively, the Watchdog Timer (WDT) can be configured to wake-up 
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system by WDT interrupt. Refer to \ref Cy_SysPm_SetHibernateWakeupSource()
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * for more detail.
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_reg_curr_mode System Regulator Current Mode
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In addition to system ULP and LP modes, the five different resource 
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power settings can be configured to reduce current consumption:
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Linear regulator low power mode</b>. Can be used only if core current
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    is below the LDO regulator LP threshold.
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 67


 250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>POR/BOD circuit low power mode</b>. Requires compatible power supply 
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    stability due to stability increase response time.
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Bandgap reference circuits low power mode</b> (turns on Deep Sleep 
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    Bandgap). Requires design to accept reduced Vref accuracy. Active ref can 
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    be turned off after this feature is enabled.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Reference buffer circuit low power mode</b>. Requires design to accept 
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    reduced Vref accuracy.
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Current reference circuit low power mode</b>. Require design to accept 
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    reduced Iref accuracy.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * These five sub features can modify both system LP or ULP modes as they are 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * independent from LP/ULP settings. 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When all five sub features are set to their low power modes, the system 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * operates in regulator minimum current mode. In regulator minimum current mode,
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system current consumption is limited to a device-specific value. Refer to 
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the device datasheet for the exact current consumption value in regulator 
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * minimum current mode.
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When all five sub features are set to their normal mode, the system operates
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in regulator normal current mode. When regulator normal current mode is set, 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system may operate at device maximum current.
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_set_min_reg_curr_mode Setting Minimum System Regulator Current Mod
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before setting the regulator minimum current mode ensure that current limits 
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are be met. After current limits are met, call the 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SystemSetNormalRegulatorCurrent() function. 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_set_normal_reg_curr_mode Setting Normal System Regulator Current M
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set regulator normal current mode, call the 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SystemSetNormalRegulatorCurrent() function. After the function call, 
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the current limits can be increased to a maximum current, depending on what 
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * system power mode is set: LP or ULP.
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_managing_pmic Managing PMIC
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver also provides an API to configure the internal power 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * management integrated circuit (PMIC) controller for an external PMIC that 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * supplies Vddd. Use the API to enable the internal PMIC controller output that
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is routed to pmic_wakeup_out pin, and configure the polarity of the PMIC 
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller input (pmic_wakeup_in) that is used to wake up the PMIC.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller is automatically enabled when:
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * The PMIC is locked by a call to Cy_SysPm_PmicLock()
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * The configured polarity of the PMIC input and the polarity driven to 
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   pmic_wakeup_in pin matches.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Because a call to Cy_SysPm_PmicLock() automatically enables the PMIC
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller, the PMIC can remain disabled only when it is unlocked. See Cy_SysPm_PmicUnlock() 
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * for more detail.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Use Cy_SysPm_PmicIsLocked() to read the current PMIC lock status.
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To enable the PMIC, use these functions in this order:
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \code{.c}
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 68


 307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicEnable();
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicLock();
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \endcode
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller, unlock the PMIC. Then call 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisable() with the inverted value of the current active state of 
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the pmic_wakeup_in pin.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For example, assume the current state of the pmic_wakeup_in pin is active low.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller, call these functions in this order:
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \code{.c}
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_HIGH);
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \endcode
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Note that you do not call Cy_SysPm_PmicLock(), because that automatically 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enables the PMIC.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * While disabled, the PMIC controller is automatically enabled when the 
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pmic_wakeup_in pin state is changed into a high state.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller output, call these functions in this order:
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisableOutput();
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not call Cy_SysPm_PmicLock() (which automatically enables the PMIC 
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller output).
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When disabled, the PMIC controller output is enabled when the PMIC is locked, 
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * or by calling Cy_SysPm_PmicEnableOutput().
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_managing_backup_domain Managing the Backup Domain
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver provide functions to:
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Configure Supercapacitor charging
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Select power supply source (Vbackup or Vddd) for Vddbackup
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Measure Vddbackup using the ADC
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the \ref group_syspm_functions_backup functions for more detail.
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb SysPm Callbacks
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver handles low power callbacks declared in the application. 
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If there are no callbacks registered, the device executes the power mode 
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition. However, frequently your application firmware must make 
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * modifications for low power mode. For example, you may need to disable a 
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * peripheral, or ensure that a message is not being transmitted or received.
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To enable this, the SysPm driver implements a callback mechanism. When a lower
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power mode transition is about to take place (either entering or exiting 
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_system_power_modes), the registered callbacks for that 
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition are called.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver organizes all the callbacks into a linked list. While 
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering a low power mode, SysPm goes through that linked list from first to 
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * last, executing the callbacks one after another. While exiting low power mode,
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm goes through that linked list again, but in the opposite direction from 
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * last to first. This ordering supports prioritization of callbacks relative to 
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the transition event. 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 69


 364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For example, the picture below shows three callback structures organized into 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a linked list: myDeepSleep1, myDeepSleep2, myDeepSleep3 (represented with the 
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_t configuration structure). Each structure 
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains, among other fields, the address of the callback function. The code 
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * snippets below set this up so that myDeepSleep1 is called first when entering 
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the low power mode. This also means that myDeepSleep1 will be the last one to 
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execute when exiting the low power mode.
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures after registration:
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_after_registration.png
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Your application must register each callback, so that SysPm can execute it. 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Upon registration, the linked list is built by the SysPm driver. Notice 
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the &myDeepSleep1 address in the myDeepSleep1 
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_t structure. This is filled in by the SysPm driver 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * when you register myDeepSleep1. The order in which the callbacks are 
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * registered in the application defines the order of their execution by the 
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm driver. Call \ref Cy_SysPm_RegisterCallback() to register each 
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback function. 
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback function is typically associated with a particular driver that 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * handles the peripheral. So the callback mechanism enables a peripheral to 
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * prepare for a low power mode (for instance, shutting down the analog part); 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * or to perform tasks while exiting a low power mode (like enabling the analog 
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * part again).
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * With the callback mechanism you can prevent switching into a low power mode if
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a peripheral is not ready. For example, driver X is in the process of 
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * receiving a message. In the callback function implementation simply return 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_FAIL in a response to CY_SYSPM_CHECK_READY.
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If success is returned while executing a callback, the SysPm driver calls the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * next callback and so on to the end of the list. If at some point a callback 
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * returns CY_SYSPM_FAIL in response to the CY_SYSPM_CHECK_READY step, all the 
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks that have already executed are executed in reverse order, with the 
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_FAIL mode parameter. This allows each callback to know that 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode has failed. The callback can then undo whatever it
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * did to prepare for low power mode, if required. For example, if the driver X 
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback shut down the analog part, it can re-enable the analog part.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Let's switch to an example explaining the implementation, setup, and 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * registration of three callbacks (myDeepSleep1, myDeepSleep2, myDeepSleep2) in 
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the application. The \ref group_syspm_cb_config_consideration are provided 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * after the \ref group_syspm_cb_example.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb_example SysPm Callbacks Example
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The following code snippets demonstrate how use the SysPm callbacks mechanism.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We will build the prototype for an application that registers 
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * three callback functions:
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep1 - Handles CPU Deep Sleep.
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep1 - Handles CPU Deep Sleep and is associated with peripheral 
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       HW1_address (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> 
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       section to learn about the base hardware address).
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep2 - Handles entering and exiting system Deep Sleep and is 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       associated with peripheral HW2_address.
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 70


 421:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We set things up so that the myDeepSleep1 and myDeepSleep2 callbacks do 
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nothing while entering the low power mode (skip on 
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_SKIP_BEFORE_TRANSITION - 
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * see \ref group_syspm_cb_function_implementation in 
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration).
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Skipping the actions while entering low power might be useful if you need 
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to save time while switching low power modes. This is because the callback
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * function with a skipped mode is not even called avoiding the call and return
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * overhead.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Let's first declare the callback functions. Each gets the pointer to the 
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t structure as the argument.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Func_Declaration
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we setup the \ref cy_stc_syspm_callback_params_t structures that we will
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pass to the callback functions. Note that for the myDeepSleep1 and 
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * myDeepSleep2 callbacks we also pass pointers to the peripherals related to 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that callback (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> section 
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about base hardware addresses). 
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The configuration considerations related to this structure are described 
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in \ref group_syspm_cb_parameters in \ref group_syspm_cb_config_consideration.
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Params_Declaration
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we setup the actual callback configuration structures. Each of these 
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains, among the other fields, the address of the 
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t we just set up. We will use the callback 
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * configuration structures later in the code to register the callbacks in the 
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm driver. Again, we set things up so that the myDeepSleep1 and 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * myDeepSleep1 callbacks do nothing while entering the low power mode 
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (skip on CY_SYSPM_SKIP_BEFORE_TRANSITION) - see 
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_function_implementation in 
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Structure_Declaration
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Note that in each case the last two fields are NULL. These are fields used by 
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the SysPm driver to set up the linked list of callback functions.
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures are now defined and allocated in the user's 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * memory space:
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_before_registration.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we implement the callback functions. See 
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_function_implementation in 
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration for the instructions on how the 
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback functions should be implemented.
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Func_Implementation
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Finally, we register the callbacks so that the SysPm driver knows about them. 
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The order in which the callbacks will be called depends upon the order in 
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * which the callbacks are registered. If there are no callbacks registered, 
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the device just executes the power mode transition.
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 71


 478:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Callbacks that reconfigure global resources, such as clock frequencies, should
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be registered last. They then modify global resources as the final step before
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode, and restore those resources first, as the system
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * returns from low power mode.
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_RegisterCallback
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We are done configuring three callbacks. Now the SysPm driver will execute the
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks appropriately whenever there is a call to a power mode transition 
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * function: \ref Cy_SysPm_CpuEnterSleep(), \ref Cy_SysPm_CpuEnterDeepSleep(), 
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterUlp(), \ref Cy_SysPm_SystemEnterLp(), and 
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate().
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note On a wakeup from hibernate the device goes through a reset, so the 
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks with CY_SYSPM_AFTER_TRANSITION are not executed. Refer to 
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate() for more detail.
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to \ref group_syspm_cb_unregistering in 
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration to learn what to do if you need to 
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * remove the callback from the linked list. You might want to unregister the 
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback for debug purposes.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to \ref group_syspm_cb_flow in \ref group_syspm_cb_config_consideration 
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about how the SysPm processes the callbacks.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb_config_consideration Callback Configuration Considerations
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_parameters Callback Function Parameters
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The <b>callbackParams</b> parameter of the callback function is a 
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t structure. The second parameter 
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (<b>mode</b>) is for internal use. In the example code we used a 
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * dummy value CY_SYSPM_CHECK_READY to eliminate compilation errors associated 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * with the enumeration. The driver sets the <b>mode</b> field to the correct 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * value when calling the callback functions (the mode is referred to as step in 
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the \ref group_syspm_cb_function_implementation). The callback function reads 
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the value and executes code based on the mode set by the SysPm driver. 
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The <b>base</b> and <b>context</b> fields are optional and can be NULL. 
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Some drivers require a base hardware address and context to store information 
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * about the mode transition. If your callback routine requires access to the 
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driver registers or context, provide those values 
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> section 
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about Base Hardware Address). Be aware of MISRA warnings if these 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * parameters are NULL.
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_structures Callback Function Structure
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For each callback, provide a \ref cy_stc_syspm_callback_t structure. Some 
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * fields in this structure are maintained by the driver. Use NULL for 
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <b>prevItm</b> and <b>nextItm</b>. The driver uses these fields to build a 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * linked list of callback functions.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning The Cy_SysPm_RegisterCallback() function stores a pointer to the 
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * cy_stc_syspm_callback_t structure. Do not modify elements of the 
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * cy_stc_syspm_callback_t structure after the callback is registered. 
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You are responsible for ensuring that the structure remains in scope. 
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Typically the structure is declared as a global or static variable, or as a 
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * local variable in the main() function.
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 72


 535:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_function_implementation Callback Function Implementation
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Every callback function should handle four possible steps (referred to as 
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * "mode") defined in \ref cy_en_syspm_callback_mode_t :
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_CHECK_READY - Check if ready to enter a power mode.
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_BEFORE_TRANSITION - The actions to be done before entering 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      the low power mode.
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_AFTER_TRANSITION - The actions to be done after exiting the 
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      low power mode.
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_CHECK_FAIL - Roll back any actions performed in the callback 
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      executed previously with CY_SYSPM_CHECK_READY.
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback function can skip steps (see \ref group_syspm_skip_callback_modes).
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In our example myDeepSleep1 and myDeepSleep2 callbacks do nothing while 
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode (skip on CY_SYSPM_BEFORE_TRANSITION). If there is
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * anything preventing low power mode entry - return CY_SYSPM_FAIL in response to
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_READY in your callback implementation. Note that the callback 
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * should return CY_SYSPM_FAIL only in response to CY_SYSPM_CHECK_READY. The 
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback function should always return CY_SYSPM_PASS for other modes: 
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_FAIL, CY_SYSPM_BEFORE_TRANSITION, and CY_SYSPM_AFTER_TRANSITION
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (see \ref group_syspm_cb_flow).
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_flow Callbacks Execution Flow
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This section explains what happens during a power transition, when callbacks 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are implemented and set up correctly. The following discussion assumes:
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All required callback functions are defined and implemented
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All cy_stc_syspm_callback_t structures are filled with required values
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All callbacks are successfully registered 
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * User calls one of the power mode transition functions: \ref Cy_SysPm_CpuEnterSleep(), 
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_CpuEnterDeepSleep(), \ref Cy_SysPm_SystemEnterUlp(), 
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterLp(), or \ref Cy_SysPm_SystemEnterHibernate(). 
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * It calls each callback with the mode set to CY_SYSPM_CHECK_READY. This 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * triggers execution of the code for that mode inside of each user callback.
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The intent of CY_SYSPM_CHECK_READY is to only signal if the resources is ready
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to transition. Ideally, no transition changes should be made at this time. 
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In some cases a small change may be required. For example a communication 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * resource callback may set a flag telling firmware not to start any new 
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition.
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If that process is successful for all callbacks, then 
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_ExecuteCallback() calls each callback with the mode set to 
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_BEFORE_TRANSITION. This triggers execution of the code for that mode 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * inside each user callback. We then enter the low power mode after all callback
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are executes.
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When exiting the low power mode, the SysPm driver executes 
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_ExecuteCallback() again. This time it calls each callback in 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reverse order, with the mode set to CY_SYSPM_AFTER_TRANSITION. This triggers 
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execution of the code for that mode inside each user callback. The final 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execution of callbacks depends on the low power mode in which callbacks were 
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * called:
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For CPU Sleep or Deep Sleep power modes, the CY_SYSPM_AFTER_TRANSITION mode 
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   is called after the CPU wakes from Sleep or Deep Sleep.
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For system Hibernate, the CY_SYSPM_AFTER_TRANSITION mode is not executed 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 73


 592:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   because the device reboots after the wakeup from the Hibernate.
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For system LP and ULP modes, after the CY_SYSPM_AFTER_TRANSITION mode was 
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   called the system remains in the new power mode: LP or ULP.
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback can return CY_SYSPM_FAIL only while executing the 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_READY mode. If that happens, then the remaining callbacks are 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * not executed. Any callbacks that have already executed are called again, in 
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reverse order, with CY_SYSPM_CHECK_FAIL. This allows the system to return to 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the previous state. If a callback returns a fail then any of the functions 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (\ref Cy_SysPm_CpuEnterSleep(), \ref Cy_SysPm_CpuEnterDeepSleep(), 
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterUlp(), \ref Cy_SysPm_SystemEnterLp(), or 
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate()) that attempt to switch the device into 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a low power mode will also return CY_SYSPM_FAIL.
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Callbacks that reconfigure global resources, such as clock frequencies, 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * should be registered last. They then modify global resources as the final 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * step before entering the low power mode, and restore those resources first, 
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * as the system returns from low power mode.
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_unregistering Callback Unregistering
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Unregistering the callback might be useful when you need to dynamically manage
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the callbacks.
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_UnregisterCallback
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures after myDeepSleep2 callback is unregistered:
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_unregistration.png
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_definitions Definitions
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <th>Term</th>
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <th>Definition</th>
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>LDO</td>
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Low dropout linear regulator. The functions that manage this 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         block are grouped as \ref group_syspm_functions_ldo under 
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>SIMO Buck</td>
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Single inductor multiple Output Buck regulator, referred as 
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         "Buck regulator" throughout the documentation. The functions that 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         manage this block are grouped as \ref group_syspm_functions_buck under
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>SISO Buck</td>
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Single inductor single output Buck regulator, referred as 
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         "Buck regulator" throughout the documentation. The functions that 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         manage this block are grouped as \ref group_syspm_functions_buck under
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 74


 649:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>PMIC</td>
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Power management integrated circuit. The functions that manage this 
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         block are grouped as \ref group_syspm_functions_pmic</td>
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>LP</td>
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>System low power mode. See the \ref group_syspm_switching_into_lp 
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         section for details.</td>
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>ULP</td>
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>System ultra low power mode. See the 
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_switching_into_ulp section for details.</td>
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_section_more_information More Information
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For more information on the SysPm driver,
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * refer to the technical reference manual (TRM).
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_MISRA MISRA-C Compliance
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver does not have any specific deviations.
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_changelog Changelog
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td rowspan="6">4.0</td>
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Flattened the organization of the driver source code into the single source directory an
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Driver library directory-structure simplification.</td>
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Changed power modes names. See \ref group_syspm_system_power_modes.
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Renamed the following functions: 
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_Sleep to Cy_SysPm_CpuEnterSleep
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_DeepSleep to Cy_SysPm_CpuEnterDeepSleep
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_Hibernate to Cy_SysPm_SystemEnterHibernate
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_SleepOnExit to Cy_SysPm_CpuSleepOnExit
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_EnterLowPowerMode to Cy_SysPm_SystemSetMinRegulatorCurrent
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_ExitLowPowerMode to Cy_SysPm_SystemSetNormalRegulatorCurrent
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_IsLowPower to Cy_SysPm_IsSystemUlp
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          For all renamed functions, added BWC macros to simplify migration.
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Device power modes simplification</td>
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 75


 706:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Added the following functions:
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_LdoSetMode
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_LdoGetMode
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_WriteVoltageBitForFlash
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SaveRegisters
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_RestoreRegisters
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_CpuSendWakeupEvent
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemIsMinRegulatorCurrentSet
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemEnterLp
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemEnterUlp
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_IsSystemLp
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added new functionality to configure device power modes</td>
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Callback mechanism changes:
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Removed the limitation for numbers of registered callbacks. Previously it 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            was possible to register up to 32 callbacks. Now the maximum registered 
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            callbacks is not limited by the SysPm driver.
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Internal enhancement in callback execution flow.
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - <b>Changes with BWC issues</b>:
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            -# Removed the <b>mode</b> element from cy_stc_syspm_callback_params_t
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               structure. Now this element is a separate parameter in the 
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               callback function.
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            -# Changed the interface of the callback function, 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               added the cy_en_syspm_callback_mode_t mode parameter:
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               - was cy_en_syspm_status_t FuncName (cy_stc_syspm_callback_params_t *callbackParams
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               - now cy_en_syspm_status_t FuncName (cy_stc_syspm_callback_params_t *callbackParams
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *                 cy_en_syspm_callback_mode_t mode);
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Callback mechanism enhancements</td>
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added register access layer. Use register access macros instead
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         of direct register access using dereferenced pointers.</td>
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Makes register access device-independent, so that the PDL does 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         not need to be recompiled for each supported part number.</td>
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added \ref group_syspm_migration_guide_for_syspm_4_0.</td>
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Provided a guidance for migrating to the latest SysPm driver version</td>
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td rowspan="2">3.0</td>
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed three functions:
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_Cm4IsLowPower
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_Cm0IsLowPower
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_IoFreeze
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed the following macros:
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - CY_SYSPM_STATUS_CM0_LOWPOWER
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - CY_SYSPM_STATUS_CM4_LOWPOWER
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed the two functions Cy_SysPm_Cm4IsLowPower, 
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Cy_SysPm_Cm0IsLowPower because low power mode is related to the 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 76


 763:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         device and not to the CPU.
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The function Cy_SysPm_IsSystemUlp must be used instead of these two 
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         functions.
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed Cy_SysPm_IoFreeze because the are no known use cases with IOs 
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         freeze in power modes, except Hibernate. In Hibernate power mode, the
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         IOs are frozen automatically.
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Corrected the syspm callback mechanism behavior. Now callbacks with 
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         CY_SYSPM_AFTER_TRANSITION mode are executed from the last registered
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         to the first registered. Previously callbacks with 
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         CY_SYSPM_AFTER_TRANSITION mode were executed from last executed to 
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         the first registered.
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Corrected the syspm callbacks execution sequence</td>
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.21</td>
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed saving/restoring the SysClk measurement counters while 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         in Deep Sleep routine
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed possible corruption of SysClk measurement counters if the 
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         core wakes up from the Deep Sleep.
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.20</td>
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added support for changing core voltage when the protection context
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            is other that zero. Such support is available only for devices 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            that support modifying registers via syscall.
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * For preproduction PSoC 6 devices the changing core voltage
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            is prohibited when the protection context is other than zero.
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Updated the following functions. They now have a 
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            \ref cy_en_syspm_status_t return value and use a syscall:
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_LdoSetVoltage
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_BuckSetVoltage1
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_BuckEnable
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            No backward compatibility issues.
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added new CY_SYSPM_CANCELED element in 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            the \ref cy_en_syspm_status_t.
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation updates.
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added warning that
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_LOW) is not 
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            supported by hardware.
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added support for changing the core voltage in protection context 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         higher than zero (PC > 0).
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 77


 820:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Documentation update and clarification
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.10</td>
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed names for all Backup, Buck-related functions, defines, 
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            and enums
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed next power mode function names:
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_EnterLowPowerMode
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_ExitLpMode
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_SetHibWakeupSource
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_ClearHibWakeupSource
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_GetIoFreezeStatus
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed following enumeration names:
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_hib_wakeup_source_t
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_simo_buck_voltage1_t
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_simo_buck_voltage2_t
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Updated Power Modes documentation section
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added Low Power Callback Managements section
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation edits 
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Improvements made based on usability feedback
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation update and clarification
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.0</td>
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Enhancement and defect fixes:
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Added input parameter(s) validation to all public functions
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Removed "_SysPm_" prefixes from the internal functions names
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Changed the type of elements with limited set of values, from 
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           uint32_t to enumeration
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Enhanced syspm callback mechanism
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Added functions to control:
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Power supply for the Vddbackup
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Supercapacitor charge
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Vddbackup measurement by ADC
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td></td>
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>1.0</td>
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Initial version</td>
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td></td>
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_migration_guide_for_syspm_4_0 Migration Guide: Moving to SysPm v4.0
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This section provides a guideline to migrate from v2.21 to v4.0 of the SysPm 
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driver.
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_intro Introduction
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 78


 877:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If your application currently uses SysPm v2.21 APIs, you must
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * migrate to SysPm v4.0 so that your application continues to operate.
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Take a few minutes to review the following information:
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - The APIs related to PSoC 6 \ref group_syspm_power_modes are changed. Old 
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power modes APIs function names are now deprecated and should not be used 
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   in new applications.
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - The \ref group_syspm_cb mechanism is changed. The mode element is removed 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   from cy_stc_syspm_callback_params_t structure. Now this element is a 
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   separate parameter in the callback function.
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_names Migrating to new power modes APIs.
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The table below shows the new APIs names that should be used in the 
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * application instead of old names:
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>SysPm v2.21 API name</th><th>SysPm v4.0 API name</th><th>Comment</th></tr>
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Sleep</td>
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuEnterSleep</td>
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_DeepSleep</td>
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuEnterDeepSleep</td>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Hibernate</td>
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemEnterHibernate</td>
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_SleepOnExit</td>
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuSleepOnExit</td>
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_IsLowPower</td>
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_IsSystemUlp</td>
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Now this function checks whether the device is in ULP mode</td>
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_EnterLowPowerMode</td>
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemSetMinRegulatorCurrent</td>
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The low power active mode does not exist anymore. 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The \ref group_syspm_system_reg_curr_mode is implemented instead </td>
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </tr>
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_ExitLowPowerMode</td>
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemSetNormalRegulatorCurrent</td>
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The low power active mode does not exist anymore. 
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The \ref group_syspm_system_reg_curr_mode is implemented instead</td>
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Cm4IsLowPower</td>
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 79


 934:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because low power mode is related to the system
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and not to the CPU</td>
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Cm0IsLowPower</td>
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because low power mode is related to the system
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and not to the CPU</td>
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_IoFreeze</td>
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because there are no known use cases to
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         freeze in power modes other than Hibernate</td>
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In addition to renamed power modes APIs, the following defines and enum 
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * elements names are changed:
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>SysPm v2.21 defines</th><th>SysPm v4.0 defines</th><th>Comment</th></tr>
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_ENTER_LP_MODE</td>
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_ULP</td>
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The \ref cy_en_syspm_callback_type_t element is renamed to align 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         callback types names to new power modes names</td>
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_EXIT_LP_MODE</td>
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_LP</td>
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The \ref cy_en_syspm_callback_type_t element is renamed to align 
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         callback types names to new power modes names</td>
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_STATUS_SYSTEM_LOWPOWER</td>
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_STATUS_SYSTEM_ULP</td>
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Status define, renamed to align new power modes names 
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and abbreviations</td>
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_callbacks Migrating to SysPm v4.0 callbacks
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Review this section if your application is using the syspm callback mechanism.
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To migrate to SysPm v4.0 callbacks you need to perform the following steps:
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Remove mode element from all \ref cy_stc_syspm_callback_params_t 
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    structures defined in your application. In SysPm v2.21 this structure is:
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_stc_syspm_callback_params_t deepSleepParam1 = 
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        CY_SYSPM_CHECK_READY, 
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &HW1_address,
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &context
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    };
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    In SysPm v4.0 this structure should be:
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 80


 991:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_stc_syspm_callback_params_t deepSleepParam1 = 
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &HW1_address,
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &context
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    };
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Update all defined syspm callback function prototypes to have two 
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    parameters instead of one. The SysPm v2.21 callback function prototype is:
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1 (cy_stc_syspm_callback_params_t *callbackParams);
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    The SysPm v4.0 callback function prototype should be:
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1 (cy_stc_syspm_callback_params_t *callbackParams, cy_en_syspm_callba
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Change the syspm callback function implementation to not use a mode
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    value as an element of the callbackParams structure, but, as separate 
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    function parameter:
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    SysPm v2.21 callback function implementation:
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1(cy_stc_syspm_callback_params_t *callbackParams)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        cy_en_syspm_status_t retVal = CY_SYSPM_FAIL;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        switch(callbackParams->mode)
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        {
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            case CY_SYSPM_CHECK_READY:
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            ...
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        }
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        return (retVal);
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    }
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    SysPm v4.0 callback function implementation:
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1(cy_stc_syspm_callback_params_t *callbackParams, cy_en_syspm_callbac
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        cy_en_syspm_status_t retVal = CY_SYSPM_FAIL;
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        switch(mode)
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        {
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            case CY_SYSPM_CHECK_READY:
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            ...
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        }
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        return (retVal);
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    }
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the changes above are done, you have successfully migrated to SysPm v4.0.
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not forget to review newly added functionality for SysPm v4.0 in the 
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_changelog.
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_macros Macros
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_functions Functions
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 81


1048:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     \defgroup group_syspm_functions_general        General
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_power          Power Modes
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_power_status   Power Status
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_iofreeze       I/Os Freeze
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_core_regulators    Core Voltage Regulation 
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     \defgroup group_syspm_functions_ldo      LDO
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     \defgroup group_syspm_functions_buck     Buck
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \}
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_pmic       PMIC
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_backup     Backup Domain
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_callback   Low Power Callbacks
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \}
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_data_structures Data Structures
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_data_enumerates Enumerated Types
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #if !defined (CY_SYSPM_H)
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_H
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include <stdbool.h>
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include <stddef.h>
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_device.h"
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_device_headers.h"
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_syslib.h"
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #ifdef __cplusplus
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** extern "C" {
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #endif
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Register Constants
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_macros
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Driver major version */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_DRV_VERSION_MAJOR       4
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Driver minor version */
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_DRV_VERSION_MINOR       0
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** SysPm driver identifier */
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_ID                      (CY_PDL_DRV_ID(0x10U))
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Internal Defines
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \cond INTERNAL */
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_SetHibernateWakeupSource() and for Cy_SysPm_ClearHibern
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 82


1105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_WAKE_UP_SOURCE_VALID(wakeupSource)   (0UL == ((wakeupSource) & \
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((uint32_t) ~(CY_SYSPM_HIB_WAKEUP_SOURSE_M
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_PmicDisable() function */
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_POLARITY_VALID(polarity)            (((polarity) == CY_SYSPM_PMIC_POLARITY_LOW)
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((polarity) == CY_SYSPM_PMIC_POLARITY_HIGH
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckSetVoltage1() function */
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_VOLTAGE1_VALID(voltage)        (((voltage) == CY_SYSPM_BUCK_OUT1_VOLTAGE_0
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT1_VOLTAGE_1
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckSetVoltage2() function */
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_VOLTAGE2_VALID(voltage)        (((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckIsOutputEnabled() function */
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_OUTPUT_VALID(output)           (((output) == CY_SYSPM_BUCK_VBUCK_1) || \
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((output) == CY_SYSPM_BUCK_VRF))
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_LdoSetVoltage() function */
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_LDO_VOLTAGE_VALID(voltage)          (((voltage) == CY_SYSPM_LDO_VOLTAGE_0_9V) |
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_LDO_VOLTAGE_1_1V))
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_ExecuteCallback() function */
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_CALLBACK_TYPE_VALID(type)           (((type) == CY_SYSPM_SLEEP) || \
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_DEEPSLEEP) || \
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_HIBERNATE) || \
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_ULP) || \
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_LP))
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_ExecuteCallback() function */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_CALLBACK_MODE_VALID(mode)           (((mode) == CY_SYSPM_CHECK_READY) || \
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_CHECK_FAIL) || \
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_BEFORE_TRANSITION) || 
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_AFTER_TRANSITION))
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_CpuEnterSleep() and for Cy_SysPm_CpuEnterDeepSleep() fu
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_WAIT_FOR_VALID(waitFor)             (((waitFor) == CY_SYSPM_WAIT_FOR_INTERRUPT)
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((waitFor) == CY_SYSPM_WAIT_FOR_EVENT))
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BackupSetSupply() function */
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_VDDBACKUP_VALID(vddBackControl)      (((vddBackControl) == CY_SYSPM_VDDBACKUP_D
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           ((vddBackControl) == CY_SYSPM_VDDBACKUP_V
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BackupSuperCapCharge() function */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_SC_CHARGE_KEY_VALID(key)            (((key) == CY_SYSPM_SC_CHARGE_ENABLE) || \
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((key) == CY_SYSPM_SC_CHARGE_DISABLE))
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_LdoSetMode() function */
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_LDO_MODE_VALID(key)            (((mode) == CY_SYSPM_LDO_MODE_DISABLED) || \
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((mode) == CY_SYSPM_LDO_MODE_NORMAL) || \
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 83


1162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((mode) == CY_SYSPM_LDO_MODE_MIN))
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_WriteVoltageBitForFlash() function */
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BIT_FOR_FLASH_VALID(value)     (((value) == CY_SYSPM_FLASH_VOLTAGE_BIT_ULP) || 
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((value) == CY_SYSPM_FLASH_VOLTAGE_BIT_LP))
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the unlock value for the PMIC functions */
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PMIC_UNLOCK_KEY                    (0x3AU)
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the first wakeup pin bit used in the
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SetHibernateWakeupSource() function
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_POS                (1UL)
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the second wakeup pin bit 
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_POS                (2UL)
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first LPComparator bit 
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_POS             (4UL)
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define for the second LPComparator bit 
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_POS             (8UL)
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first LPComparator value 
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the second LPComparator value 
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first wake-up pin value 
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_WAK
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the second wake-up pin value used 
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in the Cy_SysPm_SetHibernateWakeupSource() function
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_WAK
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the first LPComparator polarity configuration */
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_POLARITY_HIGH_MASK    \
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 84


1219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the second LPComparator polarity configuration */
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_POLARITY_HIGH_MASK    \
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the first wake-up pin polarity configuration */
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_POLARITY_HIGH_MASK    \
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the second wake-up pin polarity configuration */
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_POLARITY_HIGH_MASK    \
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Internal macro of all possible wakeup sources from hibernate power mode */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_SOURSE_MASK    (CY_SYSPM_HIBERNATE_LPCOMP0_HIGH | CY_SYSPM_HIBERNATE_LP
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             CY_SYSPM_HIBERNATE_RTC_ALARM    | CY_SYSPM_HIBERNATE_WD
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             CY_SYSPM_HIBERNATE_PIN0_HIGH    | CY_SYSPM_HIBERNATE_PI
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* The mask for low power modes the power circuits (POR/BOD, Bandgap 
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  reference, Reference buffer, Current reference) when active core regulator is
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  LDO
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_LDO_MASK    (SRSS_PWR_CTL_LINREG_LPMODE_Msk | CY_SYSPM_
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* The mask for low power modes the power circuits (POR/BOD, Bandgap 
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  reference, Reference buffer, Current reference) when active core regulator is
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  Buck
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_BUCK_MASK    (SRSS_PWR_CTL_PORBOD_LPMODE_Msk |\
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_ACT_REF_DIS_Msk |\
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_VREFBUF_LPMODE_Msk |\
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_IREF_LPMODE_Msk)
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \endcond */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_return_status The Power Mode Status Defines
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Defines for the CPU and system power modes status.
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Active mode */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_ACTIVE       (0x01U)
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Sleep mode */
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_SLEEP        (0x02U)
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Deep Sleep mode */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_DEEPSLEEP    (0x04U)
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is CPU Active mode */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_ACTIVE       ((uint32_t) 0x01U << 8U)
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is in CPU Sleep mode */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_SLEEP        ((uint32_t) 0x02U << 8U)
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 85


1276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is in CPU Deep Sleep mode */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_DEEPSLEEP    ((uint32_t) 0x04U << 8U)
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The system is Low Power mode */
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_SYSTEM_LP        (0x80U)
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The system is in Ultra Low Power mode */
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_SYSTEM_ULP       ((uint32_t) 0x08U << 8U)
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_return_status */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_macros */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Configuration Structures
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_data_enumerates
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The SysPm function return value status definitions. */
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SUCCESS        = 0x0U,                                         /**< Successful. */
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BAD_PARAM      = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x01U,    /**< One or more invali
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_TIMEOUT        = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x02U,    /**< A time-out occurre
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_INVALID_STATE  = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x03U,    /**< The operation is n
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                                                  improper state. */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CANCELED       = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x04U,    /**< Operation canceled
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FAIL           = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0xFFU     /**< Unknown failure. *
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_status_t;
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to initialize the functions wait action. The wait actions can be - 
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * an interrupt or an event. Refer to the CMSIS for WFE and WFI instruction explanations.
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_WAIT_FOR_INTERRUPT,    /**< Wait for an interrupt. */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_WAIT_FOR_EVENT         /**< Wait for an event. */
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_waitfor_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to configure wakeup sources for the System Hibernate 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power mode.
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a low logic level for the LPComp0. */
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP0_LOW  = CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK,
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a high logic level for the LPComp0. */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP0_HIGH = CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK | CY_SYSPM_HIB_WAKEUP_LPCOMP
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a low logic level for the LPComp1. */
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP1_LOW  = CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK,
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 86


1333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a high logic level for the LPComp1. */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP1_HIGH = CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK | CY_SYSPM_HIB_WAKEUP_LPCOMP
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure the RTC alarm as wakeup source. */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_RTC_ALARM = SRSS_PWR_HIBERNATE_MASK_HIBALARM_Msk,
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure the WDT interrupt as wakeup source. */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_WDT = SRSS_PWR_HIBERNATE_MASK_HIBWDT_Msk,
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a low logic level for the first wakeup-pin. See device datasheet for specific pin
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN0_LOW  = CY_SYSPM_HIB_WAKEUP_PIN0_MASK,
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a high logic level for the first wakeup-pin. See device datasheet for specific pi
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN0_HIGH = CY_SYSPM_HIB_WAKEUP_PIN0_MASK | CY_SYSPM_HIB_WAKEUP_PIN0_POLARIT
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a low logic level for the second wakeup-pin. See device datasheet for specific pi
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN1_LOW  = CY_SYSPM_HIB_WAKEUP_PIN1_MASK,
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a high logic level for the second wakeup-pin. See device datasheet for specific p
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN1_HIGH = CY_SYSPM_HIB_WAKEUP_PIN1_MASK | CY_SYSPM_HIB_WAKEUP_PIN1_POLARIT
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_hibernate_wakeup_source_t;
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select LDO regulator output voltage. */
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_ULP  = 0U,    /**< System ULP nominal LDO voltage. 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             See device datasheet for specific voltage. */
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_LP   = 1U,    /**< System LP nominal LDO voltage.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             See device datasheet for specific voltage. */
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_0_9V = 0U,    /**< 0.9 V nominal LDO voltage */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_1_1V = 1U     /**< 1.1 V nominal LDO voltage */
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_ldo_voltage_t;
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select the LDO regulator operating mode. */
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_DISABLED = 0U,    /**< Disables the LDO. */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_NORMAL   = 1U,    /**< Sets normal current mode. See device datasheet for 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                              specific maximum current limit. */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_MIN      = 2U     /**< Sets minimum current mode. See device datasheet for 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                              specific  current limit.  */
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_ldo_mode_t;
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  This enumeration is used to select the output voltage for the Buck regulator output 1.
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_ULP  = 0x02U,    /**< System ULP nominal Buck voltage. 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      See device datasheet for specific voltage. */
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_LP   = 0x05U,    /**< LP nominal Buck voltage. 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      See device datasheet for specific voltage. */
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_0_9V = 0x02U,    /**< 0.9 V nominal Buck voltage */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_1_1V = 0x05U     /**< 1.1 V nominal Buck voltage */
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_voltage1_t;
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 87


1390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select the Buck regulator outputs. */
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_VBUCK_1 = 0x0U,    /**< Buck output 1 Voltage (Vbuck1). Typically used to 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                           supply the PSoC digital core logic. */
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_VRF                /**< Buck out 2 Voltage (Vbuckrf). Typically used to 
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                           supply the BLE radio logic. */
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_out_t;
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to select the output voltage for the Buck regulator
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * output 2, which can source the BLE radio.
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_15V = 0U,    /**< 1.15 V nominal voltage. */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_2V  = 1U,    /**< 1.20 V nominal voltage. */
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_25V = 2U,    /**< 1.25 V nominal voltage. */
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_3V  = 3U,    /**< 1.3 V nominal voltage.  */
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_35V = 4U,    /**< 1.35 V nominal voltage. */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_4V  = 5U,    /**< 1.4 V nominal voltage. */
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_45V = 6U,    /**< 1.45 V nominal voltage. */
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_5V  = 7U     /**< 1.5 V nominal voltage. */
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_voltage2_t;
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to set the polarity for the PMIC input. The PMIC output is 
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * automatically enabled when the configured polarity of the PMIC input and the logic level
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driven to the pmic_wakeup_in pin match.
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not use CY_SYSPM_PMIC_POLARITY_LOW as it is not supported by hardware.
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_PMIC_POLARITY_LOW   = 0U,    /**< Set active low logic level for the PMIC input. */
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_PMIC_POLARITY_HIGH  = 1U     /**< Set active high logic level for the PMIC input. */
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_pmic_wakeup_polarity_t;
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration selects Vbackup or Vddd to supply Vddbackup. */
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_VDDBACKUP_DEFAULT         = 0U,    /**< Logic automatically selects Vddd if present or
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      Vbackup if Vddd is not present to supply Vddba
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_VDDBACKUP_VBACKUP         = 2U     /**< Sets only Vbackup to supply Vddbackup */
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_vddbackup_control_t;
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration enables supercapacitor charging. */
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SC_CHARGE_ENABLE     = 0x3CU,    /**< Enables supercapacitor charging */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SC_CHARGE_DISABLE    = 0x00U     /**< Disables supercapacitor charging */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_sc_charge_key_t;
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration configures the flash voltage bit for different system power modes. */
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 88


1447:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FLASH_VOLTAGE_BIT_LP  = 0U,    /**< Set the flash voltage bit for system LP mode */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FLASH_VOLTAGE_BIT_ULP = 1U,    /**< Set the flash voltage bit for system ULP mode */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_flash_voltage_bit_t;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to select the low power mode for which the
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * appropriate registered callback handler will be executed. For example,
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the registered callback of the type CY_SYSPM_SLEEP will be executed while
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * switching into the Sleep power mode.
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SLEEP      = 0U,    /**< The Sleep enum callback type */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_DEEPSLEEP  = 1U,    /**< The Deep Sleep enum callback type */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE  = 2U,    /**< The Hibernate enum callback type */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LP         = 3U,    /**< The Low Power enum callback type */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_ULP        = 4U     /**< The Ultra Low Power enum callback type */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_callback_type_t;
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration specifies the associated callback mode. This enum defines the callback mode. *
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CHECK_READY        = 0x01U,    /**< Callbacks with this mode are executed before enter
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  low power mode. The purpose of his callback functi
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  if the device is ready to enter the low power mode
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CHECK_FAIL         = 0x02U,    /**< Callbacks with this mode are executed after the CY
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  callbacks execution returns CY_SYSPM_FAIL. 
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  The callback with the CY_SYSPM_CHECK_FAIL mode sho
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  actions performed in the previously executed callb
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  CY_SYSPM_CHECK_READY */
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BEFORE_TRANSITION  = 0x04U,    /**< Callbacks with this mode are executed after the CY
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  callbacks execution returns CY_SYSPM_SUCCESS.
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  Performs the actions to be done before entering in
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  low power mode. */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_AFTER_TRANSITION   = 0x08U     /**< Performs the actions to be done after exiting the 
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  if entered. */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_callback_mode_t;
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_data_enumerates */
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_macros
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_skip_callback_modes Defines to skip the callbacks modes
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Defines for the SysPm callbacks modes that can be skipped during execution.
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For more information about callbacks modes, refer 
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to \ref cy_en_syspm_callback_mode_t.
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_CHECK_READY                   (0x01U)   /**< Define to skip check ready mode 
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_CHECK_FAIL                    (0x02U)   /**< Define to skip check fail mode i
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_BEFORE_TRANSITION             (0x04U)   /**< Define to skip before transition
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_AFTER_TRANSITION              (0x08U)   /**< Define to skip after transition 
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_skip_callback_modes */
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_macros */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 89


1504:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_data_structures
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The structure contains syspm callback parameters */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     void *base;         /**< Base address of a HW instance, matches name of the driver in
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              the API for the base address. Can be undefined if not required. Base a
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              required for the SysPm driver as the device has only one set of power 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     void *context;      /**< Context for the handler function. This item can be 
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              skipped if not required. Can be undefined if not required. */
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_callback_params_t;
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The type for syspm callbacks */
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef cy_en_syspm_status_t (*Cy_SysPmCallback) (cy_stc_syspm_callback_params_t *callbackParams, c
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Structure with syspm callback configuration elements */
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct cy_stc_syspm_callback
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     Cy_SysPmCallback callback;                         /**< The callback handler function. */
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     cy_en_syspm_callback_type_t type;                  /**< The callback type, see \ref cy_en_syspm
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t skipMode;                                 /**< The mask of modes to be skipped during 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             execution, see \ref group_syspm_skip_ca
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             corresponding callback mode won't execu
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             appropriate define is set. These values
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             If all modes are required to be execute
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             should be equal to zero. Skipping unnee
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             power mode transitions by skipping unne
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     cy_stc_syspm_callback_params_t *callbackParams;    /**< The address of a cy_stc_syspm_callback_
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             the callback is executed with these par
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     struct cy_stc_syspm_callback *prevItm;             /**< The previous list item. This element sh
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             defined, or defined as NULL. It is for 
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             usage to link this structure to the nex
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             structure. It will be updated during ca
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             registration. Do not modify this elemen
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     struct cy_stc_syspm_callback *nextItm;             /**< The next list item. This element should
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             defined, or defined as NULL. It is for 
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             link this structure to the previous reg
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             It will be updated during callback regi
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             modify this element at run-time. */
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_callback_t;
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This internal structure stores non-retained registers in the system Deep Sleep
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power mode. On wakeup from system Deep Sleep, these registers are restored.
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_UDBIF_BANK_CTL_REG;    /**< UDB interface control register */
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_MDCLK_EN_REG;    /**< UDB bank MDCLK_EN register */
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 90


1561:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_MBCLK_EN_REG;    /**< UDB bank MBCLK_EN register */
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_BOTSEL_L_REG;    /**< UDB bank BOTSEL_L register */
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_BOTSEL_U_REG;    /**< UDB bank BOTSEL_U register */
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN0_REG;    /**< UDB bank QCLK_EN0 register */
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN1_REG;    /**< UDB bank QCLK_EN1 register */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN2_REG;    /**< UDB bank QCLK_EN2 register */
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_backup_regs_t;
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_data_structures */
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_general
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_WriteVoltageBitForFlash(cy_en_syspm_flash_voltage_bit_t value);
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_SaveRegisters(cy_stc_syspm_backup_regs_t *regs);
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_RestoreRegisters(cy_stc_syspm_backup_regs_t const *regs);
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_general */
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power_status
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsActive(void);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsSleep(void);
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsDeepSleep(void);
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsActive(void);
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsSleep(void);
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsDeepSleep(void);
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemLp(void);
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemUlp(void);
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** uint32_t Cy_SysPm_ReadStatus(void);
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power_status */
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_CpuEnterSleep(cy_en_syspm_waitfor_t waitFor);
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_CpuEnterDeepSleep(cy_en_syspm_waitfor_t waitFor);
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterLp(void);
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterUlp(void);
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterHibernate(void);
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_SetHibernateWakeupSource(uint32_t wakeupSource);
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_ClearHibernateWakeupSource(uint32_t wakeupSource);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemSetMinRegulatorCurrent(void);
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemSetNormalRegulatorCurrent(void);
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 91


1618:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_SystemIsMinRegulatorCurrentSet(void);
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_CpuSleepOnExit(bool enable);
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_CpuSendWakeupEvent(void);
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power */
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_iofreeze
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_IoUnfreeze(void);
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IoIsFrozen(void);
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_iofreeze */
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_ldo
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_LdoSetVoltage(cy_en_syspm_ldo_voltage_t voltage);
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_ldo_voltage_t Cy_SysPm_LdoGetVoltage(void);
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_LdoIsEnabled(void);
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_LdoSetMode(cy_en_syspm_ldo_mode_t mode);
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_ldo_mode_t Cy_SysPm_LdoGetMode(void);
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_ldo */
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_pmic
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnable(void);
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisable(cy_en_syspm_pmic_wakeup_polarity_t polarity); 
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsEnabled(void);
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicAlwaysEnable(void);
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnableOutput(void);
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisableOutput(void); 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsOutputEnabled(void);
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicLock(void);
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicUnlock(void);
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsLocked(void);
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_pmic */
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_backup
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupSetSupply(cy_en_syspm_vddbackup_control_t vddBackControl);
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_vddbackup_control_t Cy_SysPm_BackupGetSupply(void);
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupEnableVoltageMeasurement(void);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupDisableVoltageMeasurement(void);
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupSuperCapCharge(cy_en_syspm_sc_charge_key_t key);
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_backup */
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_buck
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 92


1675:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_BuckEnable(cy_en_syspm_buck_voltage1_t voltage);
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsEnabled(void);
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_BuckSetVoltage1(cy_en_syspm_buck_voltage1_t voltage);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage1_t Cy_SysPm_BuckGetVoltage1(void);
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_BuckSetVoltage2(cy_en_syspm_buck_voltage2_t voltage, bool waitToSettle);
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage2_t Cy_SysPm_BuckGetVoltage2(void);
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_BuckEnableVoltage2(void);
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckDisableVoltage2(void);
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckSetVoltage2HwControl(bool hwControl);
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsVoltage2HwControlled(void);
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_BuckIsOutputEnabled(cy_en_syspm_buck_out_t output);
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_buck */
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_callback
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_RegisterCallback(cy_stc_syspm_callback_t *handler);
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_UnregisterCallback(cy_stc_syspm_callback_t const *handler);
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_ExecuteCallback(cy_en_syspm_callback_type_t type, cy_en_syspm_callbac
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_callback */
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power_status
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsActive
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if CM4 is in CPU Active mode.
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if CM4 is in CPU Active mode.
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not in CPU Active mode.
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsActive
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsActive(void)
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_ACTIVE) != 0U);
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsSleep
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM4 is in CPU Sleep mode.
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM4 is in CPU Sleep mode.
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not in CPU Sleep mode.
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 93


1732:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsSleep
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsSleep(void)
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_SLEEP) != 0U);
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsDeepSleep
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM4 is in the CPU Deep Sleep mode.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if CM4 is in CPU Deep Sleep mode.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not CPU in Deep Sleep mode.
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsDeepSleep
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsDeepSleep(void)
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_DEEPSLEEP) != 0U);
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsActive
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Active mode.
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Sleep mode.
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Sleep mode.
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsActive
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsActive(void)
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_ACTIVE) != 0U);
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsSleep
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Sleep mode.
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 94


1789:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Sleep mode.
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Sleep mode.
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsSleep
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsSleep(void)
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_SLEEP) != 0U);
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsDeepSleep
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Deep Sleep mode.
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Deep Sleep mode
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Deep Sleep mode
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsDeepSleep
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsDeepSleep(void)
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_DEEPSLEEP) != 0U);
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IsSystemLp
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the system is in LP mode.
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True the system is in LP mode.
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False the system is not in LP mode.
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IsSystemLp
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemLp(void)
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_SYSTEM_LP) != 0U);
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IsSystemUlp
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 95


1846:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the system is in ULP mode.
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True the system is in ULP mode.
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False the system is is not ULP mode.
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IsSystemUlp
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemUlp(void)
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_SYSTEM_ULP) != 0U);
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power_status */
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_CpuSendWakeupEvent
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sends the SEV (Send Event) ARM instruction to the system.
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_CpuSendWakeupEvent
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_CpuSendWakeupEvent(void)
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     __SEV();
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_SystemIsMinRegulatorCurrentSet
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Check whether the system regulator is set to minimal current mode.
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True - system is in regulator minimum current mode.
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False - system is in normal regulator current mode.
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_SystemSetNormalRegulatorCurrent
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_SystemIsMinRegulatorCurrentSet(void)
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t regMask = Cy_SysPm_LdoIsEnabled() ? CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_LDO_MASK : CY_
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((SRSS_PWR_CTL & regMask) == regMask);
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 96


1903:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power */
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_buck
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckIsEnabled
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Get the current status of the Buck regulator.
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the Buck regulator is enabled.
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if it is disabled.
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsEnabled(void)
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return (0U != _FLD2VAL(SRSS_PWR_BUCK_CTL_BUCK_EN, SRSS_PWR_BUCK_CTL));
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckGetVoltage1
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current nominal output 1 voltage (Vccbuck1) of 
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Buck regulator.
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device output 1 voltage (Vccbuck1) can be different from
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the nominal voltage because the actual voltage value depends on conditions 
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including load current.
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage 1 (Vccbuck1) of the Buck regulator.
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * See \ref cy_en_syspm_buck_voltage1_t.
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage1_t Cy_SysPm_BuckGetVoltage1(void)
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t retVal;
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     retVal = _FLD2VAL(SRSS_PWR_BUCK_CTL_BUCK_OUT1_SEL, SRSS_PWR_BUCK_CTL);
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((cy_en_syspm_buck_voltage1_t) retVal);
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckGetVoltage2
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 97


1960:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current output 2 nominal voltage (Vbuckrf) of the SIMO 
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Buck regulator.
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device output 2 voltage (Vbuckrf) can be different from the 
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nominal voltage because the actual voltage value depends on conditions 
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including load current.
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage of the Buck SIMO regulator output 2 
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * voltage (Vbuckrf). See \ref cy_en_syspm_buck_voltage2_t.
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function returns zero for devices without a SIMO Buck regulator.
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet about information on whether device contains 
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a SIMO Buck.
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckGetVoltage2
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage2_t Cy_SysPm_BuckGetVoltage2(void)
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t retVal = 0UL;
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         retVal = _FLD2VAL(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_SEL, SRSS_PWR_BUCK_CTL2);
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((cy_en_syspm_buck_voltage2_t) retVal);
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckDisableVoltage2
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disables the output 2 voltage (Vbuckrf) of the SIMO Buck regulator. The 
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * output 2 voltage (Vbuckrf) of the Buck regulator is typically used to supply 
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the BLE radio.
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The function does not have effect, if the Buck regulator is
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * switched off.
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note If you are switching the voltage supply source for BLE radio, ensure 
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that the new voltage supply for the BLE HW block is settled 
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and is stable before calling the Cy_SysPm_BuckDisableVoltage2() function.
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function is applicable for devices with the SIMO Buck regulator.
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet for information about whether the device 
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains a SIMO Buck.
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckDisableVoltage2
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 98


2017:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckDisableVoltage2(void)
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         /* Disable the Vbuck2 output */
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         SRSS_PWR_BUCK_CTL2 &= (uint32_t) ~_VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_EN, 1U);
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckSetVoltage2HwControl
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sets the hardware control for SIMO Buck output 2 (Vbuckrf).
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When hardware control is enabled for the Vbuckrf output, the firmware 
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controlled enable register setting is ignored and the hardware signal is used 
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * instead. If the product has supporting hardware like BLE radio, it can 
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * directly control the enable signal for Vbuckrf.
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \param hwControl
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enables/disables hardware control for the SIMO Buck output 2.
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function does not have an effect if SIMO Buck regulator is disabled.
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is applicable for devices with the SIMO Buck regulator.
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet for information about whether the device 
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains a SIMO Buck.
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckSetVoltage2HwControl
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckSetVoltage2HwControl(bool hwControl)
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     bool isBuckEnabled = Cy_SysPm_BuckIsEnabled();
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if ((0U != cy_device->sysPmSimoPresent) && isBuckEnabled)
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         if(hwControl)
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         {
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****             SRSS_PWR_BUCK_CTL2 |= _VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, 1U);
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         }
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         else
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         {
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****             SRSS_PWR_BUCK_CTL2 &= (uint32_t) ~_VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, 1U);
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         }
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckIsVoltage2HwControlled
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 99


2074:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Returns the hardware control state for Buck output 2 (Vbuckrf).
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When hardware control is enabled for the Vbuckrf output, the firmware 
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controlled enable register setting is ignored and the hardware signal is used 
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * instead. If the product has supporting hardware like BLE radio, it can 
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * directly control the enable signal for Vbuckrf.
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if HW control is set.
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if FW control is set for the Buck output 2.
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is applicable for devices with the SIMO Buck regulator.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to device datasheet about information if device contains 
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SIMO Buck.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckIsVoltage2HwControlled
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsVoltage2HwControlled(void)
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     bool retVal = false;
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         retVal = (0U != _FLD2VAL(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, SRSS_PWR_BUCK_CTL2));
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return retVal;
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_buck */
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_ldo
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_LdoGetVoltage
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current output voltage value of the core LDO regulator.
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device Vccd voltage can be different from the 
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nominal voltage because the actual voltage value depends on conditions 
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including the load current.
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage of the LDO. See \ref cy_en_syspm_ldo_voltage_t.
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_ldo_voltage_t Cy_SysPm_LdoGetVoltage(void)
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t curVoltage;
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 100


2131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     curVoltage = _FLD2VAL(SRSS_PWR_TRIM_PWRSYS_CTL_ACT_REG_TRIM, SRSS_PWR_TRIM_PWRSYS_CTL);
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((curVoltage == (SFLASH_LDO_0P9V_TRIM)) ? CY_SYSPM_LDO_VOLTAGE_ULP : CY_SYSPM_LDO_VOLTAG
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_LdoIsEnabled
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Reads the current status of the core LDO regulator.
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True means the LDO is enabled. 
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False means it is disabled.
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_LdoIsEnabled(void)
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((0U != _FLD2VAL(SRSS_PWR_CTL_LINREG_DIS, SRSS_PWR_CTL)) ? false : true);
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_ldo */
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_iofreeze
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IoIsFrozen
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks whether IOs are frozen.
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return 
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if IOs are frozen.
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if IOs are unfrozen.
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IoUnfreeze
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IoIsFrozen(void)
2178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return (0U != _FLD2VAL(SRSS_PWR_HIBERNATE_FREEZE, SRSS_PWR_HIBERNATE));
2180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_iofreeze */
2182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_pmic
2185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 101


2188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicEnable
2191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enable the external PMIC controller that supplies Vddd (if present).
2194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in specific devices, refer to the appropriate device TRM.
2197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
2198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function is not effective when the PMIC controller is locked. Call 
2199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC.
2200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnable
2203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnable(void)
2206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL =
2210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) |
2211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U) |
2212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN, 1U);
2213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicDisable
2219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disable the external PMIC controller that supplies Vddd (if present).
2222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function does not affect the PMIC controller output pin. The PMIC 
2223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller input pin has programmable polarity to 
2224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enable the external PMIC using different input polarities. The PMIC controller
2225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is automatically enabled when the input pin polarity and configured polarity 
2226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * match. This function is not effective when the active level of PMIC controller
2227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * input pin is equal to the configured PMIC controller polarity.
2228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is not effective when the PMIC controller is locked. Call 
2230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC controller.
2231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \param polarity
2233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Configures the PMIC controller wakeup input pin to be active low or active 
2234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * high. The PMIC will be automatically enabled when the set polarity and the 
2235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * active level of PMIC input pin match. 
2236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * See \ref cy_en_syspm_pmic_wakeup_polarity_t.
2237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller will be enabled automatically by any of RTC alarm or 
2239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * PMIC wakeup events, regardless of the PMIC controller lock state.
2240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
2242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before disabling the PMIC controller, ensure that PMIC input and PMIC output 
2243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pins are configured correctly to enable expected PMIC operation.
2244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 102


2245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC is enabled automatically when you call Cy_SysPm_PmicLock(). 
2247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To keep the external PMIC disabled, the PMIC controller must remain unlocked.
2248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning 
2250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not call Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_LOW) because this 
2251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is not supported by hardware.
2252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in the specific devices, refer to the appropriate 
2255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * device TRM.
2256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicDisable
2259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisable(cy_en_syspm_pmic_wakeup_polarity_t polarity)
2262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_ASSERT_L3(CY_SYSPM_IS_POLARITY_VALID(polarity));
2264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
2265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL = 
2268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (_VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) | 
2269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****          _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_POLARITY, (uint32_t) polarity)) &
2270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN, 1U));
2271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicAlwaysEnable
2277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enable the external PMIC controller that supplies Vddd (if present) and force 
2280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * active. This is a Write once API. It ensures that the PMIC controller cannot 
2281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be disabled or polarity changed until a next device reset.
2282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
2283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in the specific devices, refer to the appropriate device TRM.
2285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicAlwaysEnable
2288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicAlwaysEnable(void)
2291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL |= _VAL2FLD(BACKUP_PMIC_CTL_PMIC_ALWAYSEN, 1U);
2293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicEnableOutput
2298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enables the PMIC controller output pin. 
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 103


2302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is not effective when the PMIC controller is locked. Call 
2303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC controller.
2304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller output pin and its assignment in 
2306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * specific devices, refer to the appropriate device TRM.
2307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnableOutput
2310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnableOutput(void)
2313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL |=
2317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) | _VAL2FLD(BACKUP_PMIC_CTL_PMIC_
2318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicDisableOutput
2324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disables the PMIC controller output pin. 
2327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the PMIC controller output pin is disabled and is unlocked, the PMIC 
2329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller output pin can be used for the another purpose.
2330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function has no effect when the PMIC is locked. Call 
2332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC.
2333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller output pin and its assignment in 
2335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * specific devices, refer to the appropriate device TRM.
2336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
2338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the PMIC controller output is disabled, the PMIC output pin returns to 
2339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * its GPIO configured state. 
2340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller output is enabled automatically when you call 
2343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicLock(). To keep the PMIC controller output disabled, the PMIC
2344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller must remain unlocked.
2345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicDisableOutput
2348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisableOutput(void)
2351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL = 
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (BACKUP_PMIC_CTL | _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY)) &
2356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U));
2357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     } 
2358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 104


2359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicLock
2363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Locks the PMIC control controller register so that no changes can be made. 
2366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The changes are related to PMIC enabling/disabling and PMIC output pin 
2367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enabling/disabling.
2368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller and/or the PMIC output are enabled automatically when 
2371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * you call Cy_SysPm_PmicLock(). To keep the PMIC or PMIC controller output 
2372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disabled, the PMIC controller must remain unlocked.
2373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicLock
2376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicLock(void)
2379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL = _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_UNLOCK, 0U);
2381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicUnlock
2386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Unlocks the PMIC control register so that changes can be made. The changes are
2389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * related to the PMIC controller enabling/disabling and PMIC output pin 
2390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enabling/disabling.
2391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller and/or the PMIC output are enabled automatically when 
2394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * you call Cy_SysPm_PmicLock(). To keep the PMIC controller or PMIC output 
2395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disabled, the PMIC must remain unlocked.
2396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnable
2399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicUnlock(void)
2402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL = _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK
 458              		.loc 3 2403 0
 459 0044 1B4A     		ldr	r2, .L15+8
 460 0046 516C     		ldr	r1, [r2, #68]
 461 0048 1B4B     		ldr	r3, .L15+12
 462 004a 0B40     		ands	r3, r1
 463 004c E821     		movs	r1, #232
 464 004e 8901     		lsls	r1, r1, #6
 465 0050 0B43     		orrs	r3, r1
 466 0052 5364     		str	r3, [r2, #68]
 467              	.LBE83:
 468              	.LBE82:
 469              	.LBB84:
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 105


 470              	.LBB85:
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
 471              		.loc 3 2352 0
 472 0054 536C     		ldr	r3, [r2, #68]
 473 0056 1B0A     		lsrs	r3, r3, #8
 474 0058 FF22     		movs	r2, #255
 475 005a 1340     		ands	r3, r2
 476 005c 3A2B     		cmp	r3, #58
 477 005e 07D1     		bne	.L14
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U));
 478              		.loc 3 2355 0
 479 0060 144A     		ldr	r2, .L15+8
 480 0062 516C     		ldr	r1, [r2, #68]
 481 0064 154B     		ldr	r3, .L15+16
 482 0066 0B40     		ands	r3, r1
 483 0068 E821     		movs	r1, #232
 484 006a 8901     		lsls	r1, r1, #6
 485 006c 0B43     		orrs	r3, r1
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (BACKUP_PMIC_CTL | _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY)) &
 486              		.loc 3 2354 0
 487 006e 5364     		str	r3, [r2, #68]
 488              	.L14:
 489              	.LBE85:
 490              	.LBE84:
 272:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 273:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* PMIC Control */
 274:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_UnlockPmic();
 275:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_DisablePmicOutput();
 276:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 277:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Clock */
 278:Generated_Source\PSoC6/cyfitter_cfg.c **** 	ClockInit();
 491              		.loc 1 278 0
 492 0070 FFF7FEFF 		bl	ClockInit
 493              	.LVL38:
 494              	.LBB86:
 279:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 280:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Port6 configuration */
 281:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 282:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    const cy_stc_gpio_prt_config_t port6_cfg =
 495              		.loc 1 282 0
 496 0074 01AC     		add	r4, sp, #4
 497 0076 2200     		movs	r2, r4
 498 0078 114B     		ldr	r3, .L15+20
 499 007a 1433     		adds	r3, r3, #20
 500 007c 23CB     		ldmia	r3!, {r0, r1, r5}
 501 007e 23C2     		stmia	r2!, {r0, r1, r5}
 502 0080 23CB     		ldmia	r3!, {r0, r1, r5}
 503 0082 23C2     		stmia	r2!, {r0, r1, r5}
 504 0084 23CB     		ldmia	r3!, {r0, r1, r5}
 505 0086 23C2     		stmia	r2!, {r0, r1, r5}
 283:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    {
 284:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .out        = 0x00000000u,
 285:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrMask   = 0x00000000u,
 286:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrCfg    = 0x00000000u,
 287:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfg        = 0xBA000000u,
 288:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgIn      = 0x00000000u,
 289:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgOut     = 0x00000000u,
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 106


 290:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgSIO     = 0x00000000u,
 291:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel0Active = 0x00000000u,
 292:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel1Active = 0x1D1D0000u,
 293:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    };
 294:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    (void)Cy_GPIO_Port_Init(GPIO_PRT6, &port6_cfg);
 506              		.loc 1 294 0
 507 0088 2100     		movs	r1, r4
 508 008a 0E48     		ldr	r0, .L15+24
 509 008c FFF7FEFF 		bl	Cy_GPIO_Port_Init
 510              	.LVL39:
 511              	.LBE86:
 512              	.LBB87:
 295:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 296:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 297:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Port11 configuration */
 298:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 299:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    const cy_stc_gpio_prt_config_t port11_cfg =
 513              		.loc 1 299 0
 514 0090 2422     		movs	r2, #36
 515 0092 0021     		movs	r1, #0
 516 0094 2000     		movs	r0, r4
 517 0096 FFF7FEFF 		bl	memset
 518              	.LVL40:
 519 009a CC23     		movs	r3, #204
 520 009c DB05     		lsls	r3, r3, #23
 521 009e E360     		str	r3, [r4, #12]
 300:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    {
 301:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .out        = 0x00000000u,
 302:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrMask   = 0x00000000u,
 303:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrCfg    = 0x00000000u,
 304:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfg        = 0x66000000u,
 305:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgIn      = 0x00000000u,
 306:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgOut     = 0x00000000u,
 307:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgSIO     = 0x00000000u,
 308:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel0Active = 0x00000000u,
 309:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel1Active = 0x00000000u,
 310:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    };
 311:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    (void)Cy_GPIO_Port_Init(GPIO_PRT11, &port11_cfg);
 522              		.loc 1 311 0
 523 00a0 2100     		movs	r1, r4
 524 00a2 0948     		ldr	r0, .L15+28
 525 00a4 FFF7FEFF 		bl	Cy_GPIO_Port_Init
 526              	.LVL41:
 527              	.LBE87:
 312:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 313:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 314:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 315:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Perform basic analog initialization to defaults */
 316:Generated_Source\PSoC6/cyfitter_cfg.c **** 	AnalogSetDefault();
 317:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 318:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 528              		.loc 1 318 0
 529 00a8 0BB0     		add	sp, sp, #44
 530              		@ sp needed
 531 00aa 30BD     		pop	{r4, r5, pc}
 532              	.L16:
 533              		.align	2
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 107


 534              	.L15:
 535 00ac 00002640 		.word	1076232192
 536 00b0 0C050000 		.word	1292
 537 00b4 00002740 		.word	1076297728
 538 00b8 FF00FFFF 		.word	-65281
 539 00bc FFC5FFDF 		.word	-536885761
 540 00c0 00000000 		.word	.LANCHOR0
 541 00c4 00033240 		.word	1077019392
 542 00c8 80053240 		.word	1077020032
 543              		.cfi_endproc
 544              	.LFE190:
 545              		.size	Cy_SystemInit, .-Cy_SystemInit
 546              		.section	.rodata
 547              		.align	2
 548              		.set	.LANCHOR0,. + 0
 549              	.LC1:
 550 0000 F4010000 		.word	500
 551 0004 1400     		.short	20
 552 0006 04       		.byte	4
 553 0007 01       		.byte	1
 554 0008 0A00     		.short	10
 555 000a 09       		.byte	9
 556 000b 05       		.byte	5
 557 000c 0800     		.short	8
 558 000e 00       		.byte	0
 559 000f 00       		.space	1
 560 0010 6301     		.short	355
 561 0012 0000     		.space	2
 562              	.LC0:
 563 0014 00000000 		.word	0
 564 0018 00000000 		.word	0
 565 001c 00000000 		.word	0
 566 0020 000000BA 		.word	-1174405120
 567 0024 00000000 		.word	0
 568 0028 00000000 		.word	0
 569 002c 00000000 		.word	0
 570 0030 00000000 		.word	0
 571 0034 00001D1D 		.word	488439808
 572              		.text
 573              	.Letext0:
 574              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 575              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 576              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_srss.h"
 577              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_backup.h"
 578              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_gpio.h"
 579              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 580              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 581              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 582              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
 583              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/systick/cy_systick.h"
 584              		.section	.debug_info,"",%progbits
 585              	.Ldebug_info0:
 586 0000 80190000 		.4byte	0x1980
 587 0004 0400     		.2byte	0x4
 588 0006 00000000 		.4byte	.Ldebug_abbrev0
 589 000a 04       		.byte	0x4
 590 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 108


 591 000c C20F0000 		.4byte	.LASF384
 592 0010 0C       		.byte	0xc
 593 0011 9F0E0000 		.4byte	.LASF385
 594 0015 46090000 		.4byte	.LASF386
 595 0019 00000000 		.4byte	.Ldebug_ranges0+0
 596 001d 00000000 		.4byte	0
 597 0021 00000000 		.4byte	.Ldebug_line0
 598 0025 02       		.uleb128 0x2
 599 0026 04       		.byte	0x4
 600 0027 05       		.byte	0x5
 601 0028 696E7400 		.ascii	"int\000"
 602 002c 03       		.uleb128 0x3
 603 002d 04       		.byte	0x4
 604 002e 07       		.byte	0x7
 605 002f 3C0E0000 		.4byte	.LASF0
 606 0033 03       		.uleb128 0x3
 607 0034 08       		.byte	0x8
 608 0035 05       		.byte	0x5
 609 0036 4B0F0000 		.4byte	.LASF1
 610 003a 03       		.uleb128 0x3
 611 003b 08       		.byte	0x8
 612 003c 04       		.byte	0x4
 613 003d 18120000 		.4byte	.LASF2
 614 0041 03       		.uleb128 0x3
 615 0042 01       		.byte	0x1
 616 0043 06       		.byte	0x6
 617 0044 84190000 		.4byte	.LASF3
 618 0048 04       		.uleb128 0x4
 619 0049 73150000 		.4byte	.LASF5
 620 004d 04       		.byte	0x4
 621 004e 1D       		.byte	0x1d
 622 004f 53000000 		.4byte	0x53
 623 0053 03       		.uleb128 0x3
 624 0054 01       		.byte	0x1
 625 0055 08       		.byte	0x8
 626 0056 2C170000 		.4byte	.LASF4
 627 005a 04       		.uleb128 0x4
 628 005b 54100000 		.4byte	.LASF6
 629 005f 04       		.byte	0x4
 630 0060 29       		.byte	0x29
 631 0061 65000000 		.4byte	0x65
 632 0065 03       		.uleb128 0x3
 633 0066 02       		.byte	0x2
 634 0067 05       		.byte	0x5
 635 0068 F4030000 		.4byte	.LASF7
 636 006c 04       		.uleb128 0x4
 637 006d D6080000 		.4byte	.LASF8
 638 0071 04       		.byte	0x4
 639 0072 2B       		.byte	0x2b
 640 0073 77000000 		.4byte	0x77
 641 0077 03       		.uleb128 0x3
 642 0078 02       		.byte	0x2
 643 0079 07       		.byte	0x7
 644 007a 05120000 		.4byte	.LASF9
 645 007e 03       		.uleb128 0x3
 646 007f 04       		.byte	0x4
 647 0080 05       		.byte	0x5
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 109


 648 0081 26000000 		.4byte	.LASF10
 649 0085 04       		.uleb128 0x4
 650 0086 3A170000 		.4byte	.LASF11
 651 008a 04       		.byte	0x4
 652 008b 41       		.byte	0x41
 653 008c 90000000 		.4byte	0x90
 654 0090 03       		.uleb128 0x3
 655 0091 04       		.byte	0x4
 656 0092 07       		.byte	0x7
 657 0093 9D160000 		.4byte	.LASF12
 658 0097 03       		.uleb128 0x3
 659 0098 08       		.byte	0x8
 660 0099 07       		.byte	0x7
 661 009a 6B070000 		.4byte	.LASF13
 662 009e 03       		.uleb128 0x3
 663 009f 04       		.byte	0x4
 664 00a0 07       		.byte	0x7
 665 00a1 E3120000 		.4byte	.LASF14
 666 00a5 03       		.uleb128 0x3
 667 00a6 01       		.byte	0x1
 668 00a7 08       		.byte	0x8
 669 00a8 EB0D0000 		.4byte	.LASF15
 670 00ac 04       		.uleb128 0x4
 671 00ad 680E0000 		.4byte	.LASF16
 672 00b1 05       		.byte	0x5
 673 00b2 18       		.byte	0x18
 674 00b3 48000000 		.4byte	0x48
 675 00b7 04       		.uleb128 0x4
 676 00b8 20070000 		.4byte	.LASF17
 677 00bc 05       		.byte	0x5
 678 00bd 20       		.byte	0x20
 679 00be 5A000000 		.4byte	0x5a
 680 00c2 04       		.uleb128 0x4
 681 00c3 24120000 		.4byte	.LASF18
 682 00c7 05       		.byte	0x5
 683 00c8 24       		.byte	0x24
 684 00c9 6C000000 		.4byte	0x6c
 685 00cd 04       		.uleb128 0x4
 686 00ce F4050000 		.4byte	.LASF19
 687 00d2 05       		.byte	0x5
 688 00d3 30       		.byte	0x30
 689 00d4 85000000 		.4byte	0x85
 690 00d8 05       		.uleb128 0x5
 691 00d9 CD000000 		.4byte	0xcd
 692 00dd 06       		.uleb128 0x6
 693 00de D8000000 		.4byte	0xd8
 694 00e2 07       		.uleb128 0x7
 695 00e3 DD000000 		.4byte	0xdd
 696 00e7 F2000000 		.4byte	0xf2
 697 00eb 08       		.uleb128 0x8
 698 00ec 9E000000 		.4byte	0x9e
 699 00f0 01       		.byte	0x1
 700 00f1 00       		.byte	0
 701 00f2 07       		.uleb128 0x7
 702 00f3 DD000000 		.4byte	0xdd
 703 00f7 02010000 		.4byte	0x102
 704 00fb 08       		.uleb128 0x8
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 110


 705 00fc 9E000000 		.4byte	0x9e
 706 0100 07       		.byte	0x7
 707 0101 00       		.byte	0
 708 0102 07       		.uleb128 0x7
 709 0103 D8000000 		.4byte	0xd8
 710 0107 12010000 		.4byte	0x112
 711 010b 08       		.uleb128 0x8
 712 010c 9E000000 		.4byte	0x9e
 713 0110 0F       		.byte	0xf
 714 0111 00       		.byte	0
 715 0112 07       		.uleb128 0x7
 716 0113 DD000000 		.4byte	0xdd
 717 0117 22010000 		.4byte	0x122
 718 011b 08       		.uleb128 0x8
 719 011c 9E000000 		.4byte	0x9e
 720 0120 2F       		.byte	0x2f
 721 0121 00       		.byte	0
 722 0122 07       		.uleb128 0x7
 723 0123 D8000000 		.4byte	0xd8
 724 0127 32010000 		.4byte	0x132
 725 012b 08       		.uleb128 0x8
 726 012c 9E000000 		.4byte	0x9e
 727 0130 3F       		.byte	0x3f
 728 0131 00       		.byte	0
 729 0132 07       		.uleb128 0x7
 730 0133 DD000000 		.4byte	0xdd
 731 0137 42010000 		.4byte	0x142
 732 013b 08       		.uleb128 0x8
 733 013c 9E000000 		.4byte	0x9e
 734 0140 04       		.byte	0x4
 735 0141 00       		.byte	0
 736 0142 07       		.uleb128 0x7
 737 0143 DD000000 		.4byte	0xdd
 738 0147 52010000 		.4byte	0x152
 739 014b 08       		.uleb128 0x8
 740 014c 9E000000 		.4byte	0x9e
 741 0150 0F       		.byte	0xf
 742 0151 00       		.byte	0
 743 0152 07       		.uleb128 0x7
 744 0153 DD000000 		.4byte	0xdd
 745 0157 62010000 		.4byte	0x162
 746 015b 08       		.uleb128 0x8
 747 015c 9E000000 		.4byte	0x9e
 748 0160 1A       		.byte	0x1a
 749 0161 00       		.byte	0
 750 0162 07       		.uleb128 0x7
 751 0163 DD000000 		.4byte	0xdd
 752 0167 72010000 		.4byte	0x172
 753 016b 08       		.uleb128 0x8
 754 016c 9E000000 		.4byte	0x9e
 755 0170 1C       		.byte	0x1c
 756 0171 00       		.byte	0
 757 0172 09       		.uleb128 0x9
 758 0173 40       		.byte	0x40
 759 0174 06       		.byte	0x6
 760 0175 22       		.byte	0x22
 761 0176 0B020000 		.4byte	0x20b
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 111


 762 017a 0A       		.uleb128 0xa
 763 017b 2F000000 		.4byte	.LASF20
 764 017f 06       		.byte	0x6
 765 0180 23       		.byte	0x23
 766 0181 DD000000 		.4byte	0xdd
 767 0185 00       		.byte	0
 768 0186 0A       		.uleb128 0xa
 769 0187 160F0000 		.4byte	.LASF21
 770 018b 06       		.byte	0x6
 771 018c 24       		.byte	0x24
 772 018d D8000000 		.4byte	0xd8
 773 0191 04       		.byte	0x4
 774 0192 0A       		.uleb128 0xa
 775 0193 C6050000 		.4byte	.LASF22
 776 0197 06       		.byte	0x6
 777 0198 25       		.byte	0x25
 778 0199 D8000000 		.4byte	0xd8
 779 019d 08       		.byte	0x8
 780 019e 0A       		.uleb128 0xa
 781 019f 771A0000 		.4byte	.LASF23
 782 01a3 06       		.byte	0x6
 783 01a4 26       		.byte	0x26
 784 01a5 D8000000 		.4byte	0xd8
 785 01a9 0C       		.byte	0xc
 786 01aa 0A       		.uleb128 0xa
 787 01ab ED180000 		.4byte	.LASF24
 788 01af 06       		.byte	0x6
 789 01b0 27       		.byte	0x27
 790 01b1 D8000000 		.4byte	0xd8
 791 01b5 10       		.byte	0x10
 792 01b6 0A       		.uleb128 0xa
 793 01b7 A4180000 		.4byte	.LASF25
 794 01bb 06       		.byte	0x6
 795 01bc 28       		.byte	0x28
 796 01bd D8000000 		.4byte	0xd8
 797 01c1 14       		.byte	0x14
 798 01c2 0A       		.uleb128 0xa
 799 01c3 EF110000 		.4byte	.LASF26
 800 01c7 06       		.byte	0x6
 801 01c8 29       		.byte	0x29
 802 01c9 D8000000 		.4byte	0xd8
 803 01cd 18       		.byte	0x18
 804 01ce 0A       		.uleb128 0xa
 805 01cf E2140000 		.4byte	.LASF27
 806 01d3 06       		.byte	0x6
 807 01d4 2A       		.byte	0x2a
 808 01d5 D8000000 		.4byte	0xd8
 809 01d9 1C       		.byte	0x1c
 810 01da 0A       		.uleb128 0xa
 811 01db F00B0000 		.4byte	.LASF28
 812 01df 06       		.byte	0x6
 813 01e0 2B       		.byte	0x2b
 814 01e1 D8000000 		.4byte	0xd8
 815 01e5 20       		.byte	0x20
 816 01e6 0A       		.uleb128 0xa
 817 01e7 BB060000 		.4byte	.LASF29
 818 01eb 06       		.byte	0x6
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 112


 819 01ec 2C       		.byte	0x2c
 820 01ed DD000000 		.4byte	0xdd
 821 01f1 24       		.byte	0x24
 822 01f2 0A       		.uleb128 0xa
 823 01f3 FA110000 		.4byte	.LASF30
 824 01f7 06       		.byte	0x6
 825 01f8 2D       		.byte	0x2d
 826 01f9 D8000000 		.4byte	0xd8
 827 01fd 28       		.byte	0x28
 828 01fe 0A       		.uleb128 0xa
 829 01ff 16070000 		.4byte	.LASF31
 830 0203 06       		.byte	0x6
 831 0204 2E       		.byte	0x2e
 832 0205 10020000 		.4byte	0x210
 833 0209 2C       		.byte	0x2c
 834 020a 00       		.byte	0
 835 020b 05       		.uleb128 0x5
 836 020c 32010000 		.4byte	0x132
 837 0210 06       		.uleb128 0x6
 838 0211 0B020000 		.4byte	0x20b
 839 0215 04       		.uleb128 0x4
 840 0216 10010000 		.4byte	.LASF32
 841 021a 06       		.byte	0x6
 842 021b 2F       		.byte	0x2f
 843 021c 72010000 		.4byte	0x172
 844 0220 0B       		.uleb128 0xb
 845 0221 30FF     		.2byte	0xff30
 846 0223 06       		.byte	0x6
 847 0224 34       		.byte	0x34
 848 0225 94050000 		.4byte	0x594
 849 0229 0A       		.uleb128 0xa
 850 022a 80050000 		.4byte	.LASF33
 851 022e 06       		.byte	0x6
 852 022f 35       		.byte	0x35
 853 0230 D8000000 		.4byte	0xd8
 854 0234 00       		.byte	0
 855 0235 0A       		.uleb128 0xa
 856 0236 72110000 		.4byte	.LASF34
 857 023a 06       		.byte	0x6
 858 023b 36       		.byte	0x36
 859 023c D8000000 		.4byte	0xd8
 860 0240 04       		.byte	0x4
 861 0241 0A       		.uleb128 0xa
 862 0242 110E0000 		.4byte	.LASF35
 863 0246 06       		.byte	0x6
 864 0247 37       		.byte	0x37
 865 0248 D8000000 		.4byte	0xd8
 866 024c 08       		.byte	0x8
 867 024d 0A       		.uleb128 0xa
 868 024e 2F000000 		.4byte	.LASF20
 869 0252 06       		.byte	0x6
 870 0253 38       		.byte	0x38
 871 0254 99050000 		.4byte	0x599
 872 0258 0C       		.byte	0xc
 873 0259 0A       		.uleb128 0xa
 874 025a 04140000 		.4byte	.LASF36
 875 025e 06       		.byte	0x6
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 113


 876 025f 39       		.byte	0x39
 877 0260 D8000000 		.4byte	0xd8
 878 0264 14       		.byte	0x14
 879 0265 0A       		.uleb128 0xa
 880 0266 E1080000 		.4byte	.LASF37
 881 026a 06       		.byte	0x6
 882 026b 3A       		.byte	0x3a
 883 026c D8000000 		.4byte	0xd8
 884 0270 18       		.byte	0x18
 885 0271 0A       		.uleb128 0xa
 886 0272 C4010000 		.4byte	.LASF38
 887 0276 06       		.byte	0x6
 888 0277 3B       		.byte	0x3b
 889 0278 DD000000 		.4byte	0xdd
 890 027c 1C       		.byte	0x1c
 891 027d 0A       		.uleb128 0xa
 892 027e 16070000 		.4byte	.LASF31
 893 0282 06       		.byte	0x6
 894 0283 3C       		.byte	0x3c
 895 0284 B3050000 		.4byte	0x5b3
 896 0288 20       		.byte	0x20
 897 0289 0A       		.uleb128 0xa
 898 028a 9A050000 		.4byte	.LASF39
 899 028e 06       		.byte	0x6
 900 028f 3D       		.byte	0x3d
 901 0290 B8050000 		.4byte	0x5b8
 902 0294 80       		.byte	0x80
 903 0295 0A       		.uleb128 0xa
 904 0296 41130000 		.4byte	.LASF40
 905 029a 06       		.byte	0x6
 906 029b 3E       		.byte	0x3e
 907 029c C2050000 		.4byte	0x5c2
 908 02a0 C0       		.byte	0xc0
 909 02a1 0C       		.uleb128 0xc
 910 02a2 24170000 		.4byte	.LASF41
 911 02a6 06       		.byte	0x6
 912 02a7 3F       		.byte	0x3f
 913 02a8 D8000000 		.4byte	0xd8
 914 02ac 8001     		.2byte	0x180
 915 02ae 0C       		.uleb128 0xc
 916 02af 340E0000 		.4byte	.LASF42
 917 02b3 06       		.byte	0x6
 918 02b4 40       		.byte	0x40
 919 02b5 D8000000 		.4byte	0xd8
 920 02b9 8401     		.2byte	0x184
 921 02bb 0C       		.uleb128 0xc
 922 02bc F70E0000 		.4byte	.LASF43
 923 02c0 06       		.byte	0x6
 924 02c1 41       		.byte	0x41
 925 02c2 D8000000 		.4byte	0xd8
 926 02c6 8801     		.2byte	0x188
 927 02c8 0C       		.uleb128 0xc
 928 02c9 4B130000 		.4byte	.LASF44
 929 02cd 06       		.byte	0x6
 930 02ce 42       		.byte	0x42
 931 02cf CC050000 		.4byte	0x5cc
 932 02d3 8C01     		.2byte	0x18c
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 114


 933 02d5 0C       		.uleb128 0xc
 934 02d6 86140000 		.4byte	.LASF45
 935 02da 06       		.byte	0x6
 936 02db 43       		.byte	0x43
 937 02dc D1050000 		.4byte	0x5d1
 938 02e0 0002     		.2byte	0x200
 939 02e2 0C       		.uleb128 0xc
 940 02e3 4E1A0000 		.4byte	.LASF46
 941 02e7 06       		.byte	0x6
 942 02e8 44       		.byte	0x44
 943 02e9 E1050000 		.4byte	0x5e1
 944 02ed 0003     		.2byte	0x300
 945 02ef 0C       		.uleb128 0xc
 946 02f0 99130000 		.4byte	.LASF47
 947 02f4 06       		.byte	0x6
 948 02f5 45       		.byte	0x45
 949 02f6 E6050000 		.4byte	0x5e6
 950 02fa 4003     		.2byte	0x340
 951 02fc 0C       		.uleb128 0xc
 952 02fd AA120000 		.4byte	.LASF48
 953 0301 06       		.byte	0x6
 954 0302 46       		.byte	0x46
 955 0303 EB050000 		.4byte	0x5eb
 956 0307 8003     		.2byte	0x380
 957 0309 0C       		.uleb128 0xc
 958 030a 55130000 		.4byte	.LASF49
 959 030e 06       		.byte	0x6
 960 030f 47       		.byte	0x47
 961 0310 05060000 		.4byte	0x605
 962 0314 C003     		.2byte	0x3c0
 963 0316 0C       		.uleb128 0xc
 964 0317 FE030000 		.4byte	.LASF50
 965 031b 06       		.byte	0x6
 966 031c 48       		.byte	0x48
 967 031d D8000000 		.4byte	0xd8
 968 0321 0005     		.2byte	0x500
 969 0323 0C       		.uleb128 0xc
 970 0324 700E0000 		.4byte	.LASF51
 971 0328 06       		.byte	0x6
 972 0329 49       		.byte	0x49
 973 032a D8000000 		.4byte	0xd8
 974 032e 0405     		.2byte	0x504
 975 0330 0C       		.uleb128 0xc
 976 0331 5F130000 		.4byte	.LASF52
 977 0335 06       		.byte	0x6
 978 0336 4A       		.byte	0x4a
 979 0337 DD000000 		.4byte	0xdd
 980 033b 0805     		.2byte	0x508
 981 033d 0C       		.uleb128 0xc
 982 033e 74020000 		.4byte	.LASF53
 983 0342 06       		.byte	0x6
 984 0343 4B       		.byte	0x4b
 985 0344 D8000000 		.4byte	0xd8
 986 0348 0C05     		.2byte	0x50c
 987 034a 0C       		.uleb128 0xc
 988 034b 8D020000 		.4byte	.LASF54
 989 034f 06       		.byte	0x6
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 115


 990 0350 4C       		.byte	0x4c
 991 0351 D8000000 		.4byte	0xd8
 992 0355 1005     		.2byte	0x510
 993 0357 0C       		.uleb128 0xc
 994 0358 B20F0000 		.4byte	.LASF55
 995 035c 06       		.byte	0x6
 996 035d 4D       		.byte	0x4d
 997 035e D8000000 		.4byte	0xd8
 998 0362 1405     		.2byte	0x514
 999 0364 0C       		.uleb128 0xc
 1000 0365 A9030000 		.4byte	.LASF56
 1001 0369 06       		.byte	0x6
 1002 036a 4E       		.byte	0x4e
 1003 036b D8000000 		.4byte	0xd8
 1004 036f 1805     		.2byte	0x518
 1005 0371 0C       		.uleb128 0xc
 1006 0372 4C0B0000 		.4byte	.LASF57
 1007 0376 06       		.byte	0x6
 1008 0377 4F       		.byte	0x4f
 1009 0378 D8000000 		.4byte	0xd8
 1010 037c 1C05     		.2byte	0x51c
 1011 037e 0C       		.uleb128 0xc
 1012 037f 590B0000 		.4byte	.LASF58
 1013 0383 06       		.byte	0x6
 1014 0384 50       		.byte	0x50
 1015 0385 DD000000 		.4byte	0xdd
 1016 0389 2005     		.2byte	0x520
 1017 038b 0C       		.uleb128 0xc
 1018 038c 69130000 		.4byte	.LASF59
 1019 0390 06       		.byte	0x6
 1020 0391 51       		.byte	0x51
 1021 0392 0F060000 		.4byte	0x60f
 1022 0396 2405     		.2byte	0x524
 1023 0398 0C       		.uleb128 0xc
 1024 0399 3D0B0000 		.4byte	.LASF60
 1025 039d 06       		.byte	0x6
 1026 039e 52       		.byte	0x52
 1027 039f D8000000 		.4byte	0xd8
 1028 03a3 2C05     		.2byte	0x52c
 1029 03a5 0C       		.uleb128 0xc
 1030 03a6 340A0000 		.4byte	.LASF61
 1031 03aa 06       		.byte	0x6
 1032 03ab 53       		.byte	0x53
 1033 03ac DD000000 		.4byte	0xdd
 1034 03b0 3005     		.2byte	0x530
 1035 03b2 0C       		.uleb128 0xc
 1036 03b3 73130000 		.4byte	.LASF62
 1037 03b7 06       		.byte	0x6
 1038 03b8 54       		.byte	0x54
 1039 03b9 19060000 		.4byte	0x619
 1040 03bd 3405     		.2byte	0x534
 1041 03bf 0C       		.uleb128 0xc
 1042 03c0 8E110000 		.4byte	.LASF63
 1043 03c4 06       		.byte	0x6
 1044 03c5 55       		.byte	0x55
 1045 03c6 D8000000 		.4byte	0xd8
 1046 03ca 3C05     		.2byte	0x53c
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 116


 1047 03cc 0C       		.uleb128 0xc
 1048 03cd 7D130000 		.4byte	.LASF64
 1049 03d1 06       		.byte	0x6
 1050 03d2 56       		.byte	0x56
 1051 03d3 23060000 		.4byte	0x623
 1052 03d7 4005     		.2byte	0x540
 1053 03d9 0C       		.uleb128 0xc
 1054 03da F4090000 		.4byte	.LASF65
 1055 03de 06       		.byte	0x6
 1056 03df 57       		.byte	0x57
 1057 03e0 D8000000 		.4byte	0xd8
 1058 03e4 8005     		.2byte	0x580
 1059 03e6 0C       		.uleb128 0xc
 1060 03e7 0D0B0000 		.4byte	.LASF66
 1061 03eb 06       		.byte	0x6
 1062 03ec 58       		.byte	0x58
 1063 03ed D8000000 		.4byte	0xd8
 1064 03f1 8405     		.2byte	0x584
 1065 03f3 0C       		.uleb128 0xc
 1066 03f4 1D0B0000 		.4byte	.LASF67
 1067 03f8 06       		.byte	0x6
 1068 03f9 59       		.byte	0x59
 1069 03fa D8000000 		.4byte	0xd8
 1070 03fe 8805     		.2byte	0x588
 1071 0400 0C       		.uleb128 0xc
 1072 0401 2D0B0000 		.4byte	.LASF68
 1073 0405 06       		.byte	0x6
 1074 0406 5A       		.byte	0x5a
 1075 0407 D8000000 		.4byte	0xd8
 1076 040b 8C05     		.2byte	0x58c
 1077 040d 0C       		.uleb128 0xc
 1078 040e 45020000 		.4byte	.LASF69
 1079 0412 06       		.byte	0x6
 1080 0413 5B       		.byte	0x5b
 1081 0414 D8000000 		.4byte	0xd8
 1082 0418 9005     		.2byte	0x590
 1083 041a 0C       		.uleb128 0xc
 1084 041b 87130000 		.4byte	.LASF70
 1085 041f 06       		.byte	0x6
 1086 0420 5C       		.byte	0x5c
 1087 0421 2D060000 		.4byte	0x62d
 1088 0425 9405     		.2byte	0x594
 1089 0427 0C       		.uleb128 0xc
 1090 0428 33110000 		.4byte	.LASF71
 1091 042c 06       		.byte	0x6
 1092 042d 5D       		.byte	0x5d
 1093 042e 42060000 		.4byte	0x642
 1094 0432 0006     		.2byte	0x600
 1095 0434 0C       		.uleb128 0xc
 1096 0435 B7170000 		.4byte	.LASF72
 1097 0439 06       		.byte	0x6
 1098 043a 5E       		.byte	0x5e
 1099 043b DD000000 		.4byte	0xdd
 1100 043f 3C06     		.2byte	0x63c
 1101 0441 0C       		.uleb128 0xc
 1102 0442 4E0C0000 		.4byte	.LASF73
 1103 0446 06       		.byte	0x6
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 117


 1104 0447 5F       		.byte	0x5f
 1105 0448 47060000 		.4byte	0x647
 1106 044c 4006     		.2byte	0x640
 1107 044e 0C       		.uleb128 0xc
 1108 044f C2170000 		.4byte	.LASF74
 1109 0453 06       		.byte	0x6
 1110 0454 60       		.byte	0x60
 1111 0455 61060000 		.4byte	0x661
 1112 0459 7C06     		.2byte	0x67c
 1113 045b 0C       		.uleb128 0xc
 1114 045c 181A0000 		.4byte	.LASF75
 1115 0460 06       		.byte	0x6
 1116 0461 61       		.byte	0x61
 1117 0462 D8000000 		.4byte	0xd8
 1118 0466 0007     		.2byte	0x700
 1119 0468 0C       		.uleb128 0xc
 1120 0469 5A0E0000 		.4byte	.LASF76
 1121 046d 06       		.byte	0x6
 1122 046e 62       		.byte	0x62
 1123 046f D8000000 		.4byte	0xd8
 1124 0473 0407     		.2byte	0x704
 1125 0475 0C       		.uleb128 0xc
 1126 0476 2E020000 		.4byte	.LASF77
 1127 047a 06       		.byte	0x6
 1128 047b 63       		.byte	0x63
 1129 047c D8000000 		.4byte	0xd8
 1130 0480 0807     		.2byte	0x708
 1131 0482 0C       		.uleb128 0xc
 1132 0483 F3130000 		.4byte	.LASF78
 1133 0487 06       		.byte	0x6
 1134 0488 64       		.byte	0x64
 1135 0489 DD000000 		.4byte	0xdd
 1136 048d 0C07     		.2byte	0x70c
 1137 048f 0C       		.uleb128 0xc
 1138 0490 DF040000 		.4byte	.LASF79
 1139 0494 06       		.byte	0x6
 1140 0495 65       		.byte	0x65
 1141 0496 D8000000 		.4byte	0xd8
 1142 049a 1007     		.2byte	0x710
 1143 049c 0C       		.uleb128 0xc
 1144 049d CD170000 		.4byte	.LASF80
 1145 04a1 06       		.byte	0x6
 1146 04a2 66       		.byte	0x66
 1147 04a3 7B060000 		.4byte	0x67b
 1148 04a7 1407     		.2byte	0x714
 1149 04a9 0C       		.uleb128 0xc
 1150 04aa 93160000 		.4byte	.LASF81
 1151 04ae 06       		.byte	0x6
 1152 04af 67       		.byte	0x67
 1153 04b0 D8000000 		.4byte	0xd8
 1154 04b4 0008     		.2byte	0x800
 1155 04b6 0C       		.uleb128 0xc
 1156 04b7 D3010000 		.4byte	.LASF82
 1157 04bb 06       		.byte	0x6
 1158 04bc 68       		.byte	0x68
 1159 04bd D8000000 		.4byte	0xd8
 1160 04c1 0408     		.2byte	0x804
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 118


 1161 04c3 0C       		.uleb128 0xc
 1162 04c4 D8170000 		.4byte	.LASF83
 1163 04c8 06       		.byte	0x6
 1164 04c9 69       		.byte	0x69
 1165 04ca 96060000 		.4byte	0x696
 1166 04ce 0808     		.2byte	0x808
 1167 04d0 0C       		.uleb128 0xc
 1168 04d1 B4110000 		.4byte	.LASF84
 1169 04d5 06       		.byte	0x6
 1170 04d6 6A       		.byte	0x6a
 1171 04d7 D8000000 		.4byte	0xd8
 1172 04db 007F     		.2byte	0x7f00
 1173 04dd 0C       		.uleb128 0xc
 1174 04de AA040000 		.4byte	.LASF85
 1175 04e2 06       		.byte	0x6
 1176 04e3 6B       		.byte	0x6b
 1177 04e4 D8000000 		.4byte	0xd8
 1178 04e8 047F     		.2byte	0x7f04
 1179 04ea 0C       		.uleb128 0xc
 1180 04eb A9140000 		.4byte	.LASF86
 1181 04ef 06       		.byte	0x6
 1182 04f0 6C       		.byte	0x6c
 1183 04f1 D8000000 		.4byte	0xd8
 1184 04f5 087F     		.2byte	0x7f08
 1185 04f7 0C       		.uleb128 0xc
 1186 04f8 90190000 		.4byte	.LASF87
 1187 04fc 06       		.byte	0x6
 1188 04fd 6D       		.byte	0x6d
 1189 04fe D8000000 		.4byte	0xd8
 1190 0502 0C7F     		.2byte	0x7f0c
 1191 0504 0C       		.uleb128 0xc
 1192 0505 E3170000 		.4byte	.LASF88
 1193 0509 06       		.byte	0x6
 1194 050a 6E       		.byte	0x6e
 1195 050b A0060000 		.4byte	0x6a0
 1196 050f 107F     		.2byte	0x7f10
 1197 0511 0C       		.uleb128 0xc
 1198 0512 88050000 		.4byte	.LASF89
 1199 0516 06       		.byte	0x6
 1200 0517 6F       		.byte	0x6f
 1201 0518 D8000000 		.4byte	0xd8
 1202 051c 307F     		.2byte	0x7f30
 1203 051e 0C       		.uleb128 0xc
 1204 051f EE170000 		.4byte	.LASF90
 1205 0523 06       		.byte	0x6
 1206 0524 70       		.byte	0x70
 1207 0525 BB060000 		.4byte	0x6bb
 1208 0529 347F     		.2byte	0x7f34
 1209 052b 0C       		.uleb128 0xc
 1210 052c 5A070000 		.4byte	.LASF91
 1211 0530 06       		.byte	0x6
 1212 0531 71       		.byte	0x71
 1213 0532 D8000000 		.4byte	0xd8
 1214 0536 10FF     		.2byte	0xff10
 1215 0538 0C       		.uleb128 0xc
 1216 0539 F9170000 		.4byte	.LASF92
 1217 053d 06       		.byte	0x6
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 119


 1218 053e 72       		.byte	0x72
 1219 053f DD000000 		.4byte	0xdd
 1220 0543 14FF     		.2byte	0xff14
 1221 0545 0C       		.uleb128 0xc
 1222 0546 AA060000 		.4byte	.LASF93
 1223 054a 06       		.byte	0x6
 1224 054b 73       		.byte	0x73
 1225 054c D8000000 		.4byte	0xd8
 1226 0550 18FF     		.2byte	0xff18
 1227 0552 0C       		.uleb128 0xc
 1228 0553 0B190000 		.4byte	.LASF94
 1229 0557 06       		.byte	0x6
 1230 0558 74       		.byte	0x74
 1231 0559 D8000000 		.4byte	0xd8
 1232 055d 1CFF     		.2byte	0xff1c
 1233 055f 0C       		.uleb128 0xc
 1234 0560 3B070000 		.4byte	.LASF95
 1235 0564 06       		.byte	0x6
 1236 0565 75       		.byte	0x75
 1237 0566 D8000000 		.4byte	0xd8
 1238 056a 20FF     		.2byte	0xff20
 1239 056c 0C       		.uleb128 0xc
 1240 056d E1130000 		.4byte	.LASF96
 1241 0571 06       		.byte	0x6
 1242 0572 76       		.byte	0x76
 1243 0573 D8000000 		.4byte	0xd8
 1244 0577 24FF     		.2byte	0xff24
 1245 0579 0C       		.uleb128 0xc
 1246 057a C00C0000 		.4byte	.LASF97
 1247 057e 06       		.byte	0x6
 1248 057f 77       		.byte	0x77
 1249 0580 D8000000 		.4byte	0xd8
 1250 0584 28FF     		.2byte	0xff28
 1251 0586 0C       		.uleb128 0xc
 1252 0587 D30C0000 		.4byte	.LASF98
 1253 058b 06       		.byte	0x6
 1254 058c 78       		.byte	0x78
 1255 058d D8000000 		.4byte	0xd8
 1256 0591 2CFF     		.2byte	0xff2c
 1257 0593 00       		.byte	0
 1258 0594 05       		.uleb128 0x5
 1259 0595 E2000000 		.4byte	0xe2
 1260 0599 06       		.uleb128 0x6
 1261 059a 94050000 		.4byte	0x594
 1262 059e 07       		.uleb128 0x7
 1263 059f DD000000 		.4byte	0xdd
 1264 05a3 AE050000 		.4byte	0x5ae
 1265 05a7 08       		.uleb128 0x8
 1266 05a8 9E000000 		.4byte	0x9e
 1267 05ac 17       		.byte	0x17
 1268 05ad 00       		.byte	0
 1269 05ae 05       		.uleb128 0x5
 1270 05af 9E050000 		.4byte	0x59e
 1271 05b3 06       		.uleb128 0x6
 1272 05b4 AE050000 		.4byte	0x5ae
 1273 05b8 05       		.uleb128 0x5
 1274 05b9 02010000 		.4byte	0x102
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 120


 1275 05bd 05       		.uleb128 0x5
 1276 05be 12010000 		.4byte	0x112
 1277 05c2 06       		.uleb128 0x6
 1278 05c3 BD050000 		.4byte	0x5bd
 1279 05c7 05       		.uleb128 0x5
 1280 05c8 62010000 		.4byte	0x162
 1281 05cc 06       		.uleb128 0x6
 1282 05cd C7050000 		.4byte	0x5c7
 1283 05d1 07       		.uleb128 0x7
 1284 05d2 15020000 		.4byte	0x215
 1285 05d6 E1050000 		.4byte	0x5e1
 1286 05da 08       		.uleb128 0x8
 1287 05db 9E000000 		.4byte	0x9e
 1288 05df 03       		.byte	0x3
 1289 05e0 00       		.byte	0
 1290 05e1 05       		.uleb128 0x5
 1291 05e2 02010000 		.4byte	0x102
 1292 05e6 05       		.uleb128 0x5
 1293 05e7 02010000 		.4byte	0x102
 1294 05eb 05       		.uleb128 0x5
 1295 05ec 02010000 		.4byte	0x102
 1296 05f0 07       		.uleb128 0x7
 1297 05f1 DD000000 		.4byte	0xdd
 1298 05f5 00060000 		.4byte	0x600
 1299 05f9 08       		.uleb128 0x8
 1300 05fa 9E000000 		.4byte	0x9e
 1301 05fe 4F       		.byte	0x4f
 1302 05ff 00       		.byte	0
 1303 0600 05       		.uleb128 0x5
 1304 0601 F0050000 		.4byte	0x5f0
 1305 0605 06       		.uleb128 0x6
 1306 0606 00060000 		.4byte	0x600
 1307 060a 05       		.uleb128 0x5
 1308 060b E2000000 		.4byte	0xe2
 1309 060f 06       		.uleb128 0x6
 1310 0610 0A060000 		.4byte	0x60a
 1311 0614 05       		.uleb128 0x5
 1312 0615 E2000000 		.4byte	0xe2
 1313 0619 06       		.uleb128 0x6
 1314 061a 14060000 		.4byte	0x614
 1315 061e 05       		.uleb128 0x5
 1316 061f 42010000 		.4byte	0x142
 1317 0623 06       		.uleb128 0x6
 1318 0624 1E060000 		.4byte	0x61e
 1319 0628 05       		.uleb128 0x5
 1320 0629 52010000 		.4byte	0x152
 1321 062d 06       		.uleb128 0x6
 1322 062e 28060000 		.4byte	0x628
 1323 0632 07       		.uleb128 0x7
 1324 0633 D8000000 		.4byte	0xd8
 1325 0637 42060000 		.4byte	0x642
 1326 063b 08       		.uleb128 0x8
 1327 063c 9E000000 		.4byte	0x9e
 1328 0640 0E       		.byte	0xe
 1329 0641 00       		.byte	0
 1330 0642 05       		.uleb128 0x5
 1331 0643 32060000 		.4byte	0x632
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 121


 1332 0647 05       		.uleb128 0x5
 1333 0648 32060000 		.4byte	0x632
 1334 064c 07       		.uleb128 0x7
 1335 064d DD000000 		.4byte	0xdd
 1336 0651 5C060000 		.4byte	0x65c
 1337 0655 08       		.uleb128 0x8
 1338 0656 9E000000 		.4byte	0x9e
 1339 065a 20       		.byte	0x20
 1340 065b 00       		.byte	0
 1341 065c 05       		.uleb128 0x5
 1342 065d 4C060000 		.4byte	0x64c
 1343 0661 06       		.uleb128 0x6
 1344 0662 5C060000 		.4byte	0x65c
 1345 0666 07       		.uleb128 0x7
 1346 0667 DD000000 		.4byte	0xdd
 1347 066b 76060000 		.4byte	0x676
 1348 066f 08       		.uleb128 0x8
 1349 0670 9E000000 		.4byte	0x9e
 1350 0674 3A       		.byte	0x3a
 1351 0675 00       		.byte	0
 1352 0676 05       		.uleb128 0x5
 1353 0677 66060000 		.4byte	0x666
 1354 067b 06       		.uleb128 0x6
 1355 067c 76060000 		.4byte	0x676
 1356 0680 07       		.uleb128 0x7
 1357 0681 DD000000 		.4byte	0xdd
 1358 0685 91060000 		.4byte	0x691
 1359 0689 0D       		.uleb128 0xd
 1360 068a 9E000000 		.4byte	0x9e
 1361 068e BD1D     		.2byte	0x1dbd
 1362 0690 00       		.byte	0
 1363 0691 05       		.uleb128 0x5
 1364 0692 80060000 		.4byte	0x680
 1365 0696 06       		.uleb128 0x6
 1366 0697 91060000 		.4byte	0x691
 1367 069b 05       		.uleb128 0x5
 1368 069c F2000000 		.4byte	0xf2
 1369 06a0 06       		.uleb128 0x6
 1370 06a1 9B060000 		.4byte	0x69b
 1371 06a5 07       		.uleb128 0x7
 1372 06a6 DD000000 		.4byte	0xdd
 1373 06aa B6060000 		.4byte	0x6b6
 1374 06ae 0D       		.uleb128 0xd
 1375 06af 9E000000 		.4byte	0x9e
 1376 06b3 F61F     		.2byte	0x1ff6
 1377 06b5 00       		.byte	0
 1378 06b6 05       		.uleb128 0x5
 1379 06b7 A5060000 		.4byte	0x6a5
 1380 06bb 06       		.uleb128 0x6
 1381 06bc B6060000 		.4byte	0x6b6
 1382 06c0 04       		.uleb128 0x4
 1383 06c1 950F0000 		.4byte	.LASF99
 1384 06c5 06       		.byte	0x6
 1385 06c6 79       		.byte	0x79
 1386 06c7 20020000 		.4byte	0x220
 1387 06cb 0B       		.uleb128 0xb
 1388 06cc 04FF     		.2byte	0xff04
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 122


 1389 06ce 07       		.byte	0x7
 1390 06cf 21       		.byte	0x21
 1391 06d0 EC070000 		.4byte	0x7ec
 1392 06d4 0E       		.uleb128 0xe
 1393 06d5 43544C00 		.ascii	"CTL\000"
 1394 06d9 07       		.byte	0x7
 1395 06da 22       		.byte	0x22
 1396 06db D8000000 		.4byte	0xd8
 1397 06df 00       		.byte	0
 1398 06e0 0A       		.uleb128 0xa
 1399 06e1 2F000000 		.4byte	.LASF20
 1400 06e5 07       		.byte	0x7
 1401 06e6 23       		.byte	0x23
 1402 06e7 DD000000 		.4byte	0xdd
 1403 06eb 04       		.byte	0x4
 1404 06ec 0A       		.uleb128 0xa
 1405 06ed C5110000 		.4byte	.LASF100
 1406 06f1 07       		.byte	0x7
 1407 06f2 24       		.byte	0x24
 1408 06f3 D8000000 		.4byte	0xd8
 1409 06f7 08       		.byte	0x8
 1410 06f8 0A       		.uleb128 0xa
 1411 06f9 36150000 		.4byte	.LASF101
 1412 06fd 07       		.byte	0x7
 1413 06fe 25       		.byte	0x25
 1414 06ff D8000000 		.4byte	0xd8
 1415 0703 0C       		.byte	0xc
 1416 0704 0A       		.uleb128 0xa
 1417 0705 921A0000 		.4byte	.LASF102
 1418 0709 07       		.byte	0x7
 1419 070a 26       		.byte	0x26
 1420 070b DD000000 		.4byte	0xdd
 1421 070f 10       		.byte	0x10
 1422 0710 0A       		.uleb128 0xa
 1423 0711 14040000 		.4byte	.LASF103
 1424 0715 07       		.byte	0x7
 1425 0716 27       		.byte	0x27
 1426 0717 D8000000 		.4byte	0xd8
 1427 071b 14       		.byte	0x14
 1428 071c 0A       		.uleb128 0xa
 1429 071d 9B180000 		.4byte	.LASF104
 1430 0721 07       		.byte	0x7
 1431 0722 28       		.byte	0x28
 1432 0723 D8000000 		.4byte	0xd8
 1433 0727 18       		.byte	0x18
 1434 0728 0A       		.uleb128 0xa
 1435 0729 0B0A0000 		.4byte	.LASF105
 1436 072d 07       		.byte	0x7
 1437 072e 29       		.byte	0x29
 1438 072f D8000000 		.4byte	0xd8
 1439 0733 1C       		.byte	0x1c
 1440 0734 0A       		.uleb128 0xa
 1441 0735 320C0000 		.4byte	.LASF106
 1442 0739 07       		.byte	0x7
 1443 073a 2A       		.byte	0x2a
 1444 073b D8000000 		.4byte	0xd8
 1445 073f 20       		.byte	0x20
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 123


 1446 0740 0A       		.uleb128 0xa
 1447 0741 221A0000 		.4byte	.LASF107
 1448 0745 07       		.byte	0x7
 1449 0746 2B       		.byte	0x2b
 1450 0747 D8000000 		.4byte	0xd8
 1451 074b 24       		.byte	0x24
 1452 074c 0A       		.uleb128 0xa
 1453 074d 3E1B0000 		.4byte	.LASF108
 1454 0751 07       		.byte	0x7
 1455 0752 2C       		.byte	0x2c
 1456 0753 D8000000 		.4byte	0xd8
 1457 0757 28       		.byte	0x28
 1458 0758 0A       		.uleb128 0xa
 1459 0759 A5060000 		.4byte	.LASF109
 1460 075d 07       		.byte	0x7
 1461 075e 2D       		.byte	0x2d
 1462 075f D8000000 		.4byte	0xd8
 1463 0763 2C       		.byte	0x2c
 1464 0764 0A       		.uleb128 0xa
 1465 0765 51040000 		.4byte	.LASF110
 1466 0769 07       		.byte	0x7
 1467 076a 2E       		.byte	0x2e
 1468 076b D8000000 		.4byte	0xd8
 1469 076f 30       		.byte	0x30
 1470 0770 0A       		.uleb128 0xa
 1471 0771 E3180000 		.4byte	.LASF111
 1472 0775 07       		.byte	0x7
 1473 0776 2F       		.byte	0x2f
 1474 0777 D8000000 		.4byte	0xd8
 1475 077b 34       		.byte	0x34
 1476 077c 0A       		.uleb128 0xa
 1477 077d F5150000 		.4byte	.LASF112
 1478 0781 07       		.byte	0x7
 1479 0782 30       		.byte	0x30
 1480 0783 DD000000 		.4byte	0xdd
 1481 0787 38       		.byte	0x38
 1482 0788 0A       		.uleb128 0xa
 1483 0789 E9160000 		.4byte	.LASF113
 1484 078d 07       		.byte	0x7
 1485 078e 31       		.byte	0x31
 1486 078f DD000000 		.4byte	0xdd
 1487 0793 3C       		.byte	0x3c
 1488 0794 0A       		.uleb128 0xa
 1489 0795 790C0000 		.4byte	.LASF114
 1490 0799 07       		.byte	0x7
 1491 079a 32       		.byte	0x32
 1492 079b DD000000 		.4byte	0xdd
 1493 079f 40       		.byte	0x40
 1494 07a0 0A       		.uleb128 0xa
 1495 07a1 97070000 		.4byte	.LASF115
 1496 07a5 07       		.byte	0x7
 1497 07a6 33       		.byte	0x33
 1498 07a7 D8000000 		.4byte	0xd8
 1499 07ab 44       		.byte	0x44
 1500 07ac 0A       		.uleb128 0xa
 1501 07ad 9A140000 		.4byte	.LASF116
 1502 07b1 07       		.byte	0x7
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 124


 1503 07b2 34       		.byte	0x34
 1504 07b3 D8000000 		.4byte	0xd8
 1505 07b7 48       		.byte	0x48
 1506 07b8 0A       		.uleb128 0xa
 1507 07b9 16070000 		.4byte	.LASF31
 1508 07bd 07       		.byte	0x7
 1509 07be 35       		.byte	0x35
 1510 07bf 02080000 		.4byte	0x802
 1511 07c3 4C       		.byte	0x4c
 1512 07c4 0C       		.uleb128 0xc
 1513 07c5 F20E0000 		.4byte	.LASF117
 1514 07c9 07       		.byte	0x7
 1515 07ca 36       		.byte	0x36
 1516 07cb 07080000 		.4byte	0x807
 1517 07cf 0010     		.2byte	0x1000
 1518 07d1 0C       		.uleb128 0xc
 1519 07d2 41130000 		.4byte	.LASF40
 1520 07d6 07       		.byte	0x7
 1521 07d7 37       		.byte	0x37
 1522 07d8 22080000 		.4byte	0x822
 1523 07dc 0011     		.2byte	0x1100
 1524 07de 0C       		.uleb128 0xc
 1525 07df F00D0000 		.4byte	.LASF118
 1526 07e3 07       		.byte	0x7
 1527 07e4 38       		.byte	0x38
 1528 07e5 D8000000 		.4byte	0xd8
 1529 07e9 00FF     		.2byte	0xff00
 1530 07eb 00       		.byte	0
 1531 07ec 07       		.uleb128 0x7
 1532 07ed DD000000 		.4byte	0xdd
 1533 07f1 FD070000 		.4byte	0x7fd
 1534 07f5 0D       		.uleb128 0xd
 1535 07f6 9E000000 		.4byte	0x9e
 1536 07fa EC03     		.2byte	0x3ec
 1537 07fc 00       		.byte	0
 1538 07fd 05       		.uleb128 0x5
 1539 07fe EC070000 		.4byte	0x7ec
 1540 0802 06       		.uleb128 0x6
 1541 0803 FD070000 		.4byte	0x7fd
 1542 0807 05       		.uleb128 0x5
 1543 0808 22010000 		.4byte	0x122
 1544 080c 07       		.uleb128 0x7
 1545 080d DD000000 		.4byte	0xdd
 1546 0811 1D080000 		.4byte	0x81d
 1547 0815 0D       		.uleb128 0xd
 1548 0816 9E000000 		.4byte	0x9e
 1549 081a 7F3B     		.2byte	0x3b7f
 1550 081c 00       		.byte	0
 1551 081d 05       		.uleb128 0x5
 1552 081e 0C080000 		.4byte	0x80c
 1553 0822 06       		.uleb128 0x6
 1554 0823 1D080000 		.4byte	0x81d
 1555 0827 04       		.uleb128 0x4
 1556 0828 D10D0000 		.4byte	.LASF119
 1557 082c 07       		.byte	0x7
 1558 082d 39       		.byte	0x39
 1559 082e CB060000 		.4byte	0x6cb
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 125


 1560 0832 09       		.uleb128 0x9
 1561 0833 80       		.byte	0x80
 1562 0834 08       		.byte	0x8
 1563 0835 22       		.byte	0x22
 1564 0836 06090000 		.4byte	0x906
 1565 083a 0E       		.uleb128 0xe
 1566 083b 4F555400 		.ascii	"OUT\000"
 1567 083f 08       		.byte	0x8
 1568 0840 23       		.byte	0x23
 1569 0841 D8000000 		.4byte	0xd8
 1570 0845 00       		.byte	0
 1571 0846 0A       		.uleb128 0xa
 1572 0847 0E070000 		.4byte	.LASF120
 1573 084b 08       		.byte	0x8
 1574 084c 24       		.byte	0x24
 1575 084d D8000000 		.4byte	0xd8
 1576 0851 04       		.byte	0x4
 1577 0852 0A       		.uleb128 0xa
 1578 0853 EF0A0000 		.4byte	.LASF121
 1579 0857 08       		.byte	0x8
 1580 0858 25       		.byte	0x25
 1581 0859 D8000000 		.4byte	0xd8
 1582 085d 08       		.byte	0x8
 1583 085e 0A       		.uleb128 0xa
 1584 085f 56150000 		.4byte	.LASF122
 1585 0863 08       		.byte	0x8
 1586 0864 26       		.byte	0x26
 1587 0865 D8000000 		.4byte	0xd8
 1588 0869 0C       		.byte	0xc
 1589 086a 0E       		.uleb128 0xe
 1590 086b 494E00   		.ascii	"IN\000"
 1591 086e 08       		.byte	0x8
 1592 086f 27       		.byte	0x27
 1593 0870 DD000000 		.4byte	0xdd
 1594 0874 10       		.byte	0x10
 1595 0875 0A       		.uleb128 0xa
 1596 0876 A5060000 		.4byte	.LASF109
 1597 087a 08       		.byte	0x8
 1598 087b 28       		.byte	0x28
 1599 087c D8000000 		.4byte	0xd8
 1600 0880 14       		.byte	0x14
 1601 0881 0A       		.uleb128 0xa
 1602 0882 E3180000 		.4byte	.LASF111
 1603 0886 08       		.byte	0x8
 1604 0887 29       		.byte	0x29
 1605 0888 D8000000 		.4byte	0xd8
 1606 088c 18       		.byte	0x18
 1607 088d 0A       		.uleb128 0xa
 1608 088e F5150000 		.4byte	.LASF112
 1609 0892 08       		.byte	0x8
 1610 0893 2A       		.byte	0x2a
 1611 0894 DD000000 		.4byte	0xdd
 1612 0898 1C       		.byte	0x1c
 1613 0899 0A       		.uleb128 0xa
 1614 089a 51040000 		.4byte	.LASF110
 1615 089e 08       		.byte	0x8
 1616 089f 2B       		.byte	0x2b
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 126


 1617 08a0 D8000000 		.4byte	0xd8
 1618 08a4 20       		.byte	0x20
 1619 08a5 0A       		.uleb128 0xa
 1620 08a6 95170000 		.4byte	.LASF123
 1621 08aa 08       		.byte	0x8
 1622 08ab 2C       		.byte	0x2c
 1623 08ac D8000000 		.4byte	0xd8
 1624 08b0 24       		.byte	0x24
 1625 08b1 0E       		.uleb128 0xe
 1626 08b2 43464700 		.ascii	"CFG\000"
 1627 08b6 08       		.byte	0x8
 1628 08b7 2D       		.byte	0x2d
 1629 08b8 D8000000 		.4byte	0xd8
 1630 08bc 28       		.byte	0x28
 1631 08bd 0A       		.uleb128 0xa
 1632 08be 67050000 		.4byte	.LASF124
 1633 08c2 08       		.byte	0x8
 1634 08c3 2E       		.byte	0x2e
 1635 08c4 D8000000 		.4byte	0xd8
 1636 08c8 2C       		.byte	0x2c
 1637 08c9 0A       		.uleb128 0xa
 1638 08ca 030A0000 		.4byte	.LASF125
 1639 08ce 08       		.byte	0x8
 1640 08cf 2F       		.byte	0x2f
 1641 08d0 D8000000 		.4byte	0xd8
 1642 08d4 30       		.byte	0x30
 1643 08d5 0A       		.uleb128 0xa
 1644 08d6 3D020000 		.4byte	.LASF126
 1645 08da 08       		.byte	0x8
 1646 08db 30       		.byte	0x30
 1647 08dc D8000000 		.4byte	0xd8
 1648 08e0 34       		.byte	0x34
 1649 08e1 0A       		.uleb128 0xa
 1650 08e2 2F000000 		.4byte	.LASF20
 1651 08e6 08       		.byte	0x8
 1652 08e7 31       		.byte	0x31
 1653 08e8 DD000000 		.4byte	0xdd
 1654 08ec 38       		.byte	0x38
 1655 08ed 0A       		.uleb128 0xa
 1656 08ee D4140000 		.4byte	.LASF127
 1657 08f2 08       		.byte	0x8
 1658 08f3 32       		.byte	0x32
 1659 08f4 D8000000 		.4byte	0xd8
 1660 08f8 3C       		.byte	0x3c
 1661 08f9 0A       		.uleb128 0xa
 1662 08fa 16070000 		.4byte	.LASF31
 1663 08fe 08       		.byte	0x8
 1664 08ff 33       		.byte	0x33
 1665 0900 0B090000 		.4byte	0x90b
 1666 0904 40       		.byte	0x40
 1667 0905 00       		.byte	0
 1668 0906 05       		.uleb128 0x5
 1669 0907 42010000 		.4byte	0x142
 1670 090b 06       		.uleb128 0x6
 1671 090c 06090000 		.4byte	0x906
 1672 0910 04       		.uleb128 0x4
 1673 0911 45140000 		.4byte	.LASF128
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 127


 1674 0915 08       		.byte	0x8
 1675 0916 34       		.byte	0x34
 1676 0917 32080000 		.4byte	0x832
 1677 091b 0B       		.uleb128 0xb
 1678 091c 2440     		.2byte	0x4024
 1679 091e 08       		.byte	0x8
 1680 091f 39       		.byte	0x39
 1681 0920 A6090000 		.4byte	0x9a6
 1682 0924 0E       		.uleb128 0xe
 1683 0925 50525400 		.ascii	"PRT\000"
 1684 0929 08       		.byte	0x8
 1685 092a 3A       		.byte	0x3a
 1686 092b A6090000 		.4byte	0x9a6
 1687 092f 00       		.byte	0
 1688 0930 0C       		.uleb128 0xc
 1689 0931 43000000 		.4byte	.LASF129
 1690 0935 08       		.byte	0x8
 1691 0936 3B       		.byte	0x3b
 1692 0937 DD000000 		.4byte	0xdd
 1693 093b 0040     		.2byte	0x4000
 1694 093d 0C       		.uleb128 0xc
 1695 093e 4F000000 		.4byte	.LASF130
 1696 0942 08       		.byte	0x8
 1697 0943 3C       		.byte	0x3c
 1698 0944 DD000000 		.4byte	0xdd
 1699 0948 0440     		.2byte	0x4004
 1700 094a 0C       		.uleb128 0xc
 1701 094b 5B000000 		.4byte	.LASF131
 1702 094f 08       		.byte	0x8
 1703 0950 3D       		.byte	0x3d
 1704 0951 DD000000 		.4byte	0xdd
 1705 0955 0840     		.2byte	0x4008
 1706 0957 0C       		.uleb128 0xc
 1707 0958 67000000 		.4byte	.LASF132
 1708 095c 08       		.byte	0x8
 1709 095d 3E       		.byte	0x3e
 1710 095e DD000000 		.4byte	0xdd
 1711 0962 0C40     		.2byte	0x400c
 1712 0964 0C       		.uleb128 0xc
 1713 0965 38000000 		.4byte	.LASF133
 1714 0969 08       		.byte	0x8
 1715 096a 3F       		.byte	0x3f
 1716 096b DD000000 		.4byte	0xdd
 1717 096f 1040     		.2byte	0x4010
 1718 0971 0C       		.uleb128 0xc
 1719 0972 3C0C0000 		.4byte	.LASF134
 1720 0976 08       		.byte	0x8
 1721 0977 40       		.byte	0x40
 1722 0978 D8000000 		.4byte	0xd8
 1723 097c 1440     		.2byte	0x4014
 1724 097e 0C       		.uleb128 0xc
 1725 097f 76190000 		.4byte	.LASF135
 1726 0983 08       		.byte	0x8
 1727 0984 41       		.byte	0x41
 1728 0985 D8000000 		.4byte	0xd8
 1729 0989 1840     		.2byte	0x4018
 1730 098b 0C       		.uleb128 0xc
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 128


 1731 098c CC110000 		.4byte	.LASF136
 1732 0990 08       		.byte	0x8
 1733 0991 42       		.byte	0x42
 1734 0992 DD000000 		.4byte	0xdd
 1735 0996 1C40     		.2byte	0x401c
 1736 0998 0C       		.uleb128 0xc
 1737 0999 36120000 		.4byte	.LASF137
 1738 099d 08       		.byte	0x8
 1739 099e 43       		.byte	0x43
 1740 099f D8000000 		.4byte	0xd8
 1741 09a3 2040     		.2byte	0x4020
 1742 09a5 00       		.byte	0
 1743 09a6 07       		.uleb128 0x7
 1744 09a7 10090000 		.4byte	0x910
 1745 09ab B6090000 		.4byte	0x9b6
 1746 09af 08       		.uleb128 0x8
 1747 09b0 9E000000 		.4byte	0x9e
 1748 09b4 7F       		.byte	0x7f
 1749 09b5 00       		.byte	0
 1750 09b6 04       		.uleb128 0x4
 1751 09b7 67060000 		.4byte	.LASF138
 1752 09bb 08       		.byte	0x8
 1753 09bc 44       		.byte	0x44
 1754 09bd 1B090000 		.4byte	0x91b
 1755 09c1 0F       		.uleb128 0xf
 1756 09c2 73000000 		.4byte	.LASF139
 1757 09c6 09       		.byte	0x9
 1758 09c7 2806     		.2byte	0x628
 1759 09c9 C0060000 		.4byte	0x6c0
 1760 09cd 0F       		.uleb128 0xf
 1761 09ce 1A000000 		.4byte	.LASF140
 1762 09d2 09       		.byte	0x9
 1763 09d3 2906     		.2byte	0x629
 1764 09d5 27080000 		.4byte	0x827
 1765 09d9 0F       		.uleb128 0xf
 1766 09da 68190000 		.4byte	.LASF141
 1767 09de 09       		.byte	0x9
 1768 09df 3106     		.2byte	0x631
 1769 09e1 10090000 		.4byte	0x910
 1770 09e5 0F       		.uleb128 0xf
 1771 09e6 45170000 		.4byte	.LASF142
 1772 09ea 09       		.byte	0x9
 1773 09eb 3206     		.2byte	0x632
 1774 09ed B6090000 		.4byte	0x9b6
 1775 09f1 09       		.uleb128 0x9
 1776 09f2 B8       		.byte	0xb8
 1777 09f3 0A       		.byte	0xa
 1778 09f4 34       		.byte	0x34
 1779 09f5 020E0000 		.4byte	0xe02
 1780 09f9 0A       		.uleb128 0xa
 1781 09fa 83020000 		.4byte	.LASF143
 1782 09fe 0A       		.byte	0xa
 1783 09ff 37       		.byte	0x37
 1784 0a00 CD000000 		.4byte	0xcd
 1785 0a04 00       		.byte	0
 1786 0a05 0A       		.uleb128 0xa
 1787 0a06 E00D0000 		.4byte	.LASF144
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 129


 1788 0a0a 0A       		.byte	0xa
 1789 0a0b 38       		.byte	0x38
 1790 0a0c CD000000 		.4byte	0xcd
 1791 0a10 04       		.byte	0x4
 1792 0a11 0A       		.uleb128 0xa
 1793 0a12 07010000 		.4byte	.LASF145
 1794 0a16 0A       		.byte	0xa
 1795 0a17 39       		.byte	0x39
 1796 0a18 CD000000 		.4byte	0xcd
 1797 0a1c 08       		.byte	0x8
 1798 0a1d 0A       		.uleb128 0xa
 1799 0a1e DE000000 		.4byte	.LASF146
 1800 0a22 0A       		.byte	0xa
 1801 0a23 3A       		.byte	0x3a
 1802 0a24 CD000000 		.4byte	0xcd
 1803 0a28 0C       		.byte	0xc
 1804 0a29 0A       		.uleb128 0xa
 1805 0a2a 2D120000 		.4byte	.LASF147
 1806 0a2e 0A       		.byte	0xa
 1807 0a2f 3B       		.byte	0x3b
 1808 0a30 CD000000 		.4byte	0xcd
 1809 0a34 10       		.byte	0x10
 1810 0a35 0A       		.uleb128 0xa
 1811 0a36 D1100000 		.4byte	.LASF148
 1812 0a3a 0A       		.byte	0xa
 1813 0a3b 3C       		.byte	0x3c
 1814 0a3c CD000000 		.4byte	0xcd
 1815 0a40 14       		.byte	0x14
 1816 0a41 0A       		.uleb128 0xa
 1817 0a42 450C0000 		.4byte	.LASF149
 1818 0a46 0A       		.byte	0xa
 1819 0a47 3D       		.byte	0x3d
 1820 0a48 CD000000 		.4byte	0xcd
 1821 0a4c 18       		.byte	0x18
 1822 0a4d 0A       		.uleb128 0xa
 1823 0a4e 451A0000 		.4byte	.LASF150
 1824 0a52 0A       		.byte	0xa
 1825 0a53 3E       		.byte	0x3e
 1826 0a54 CD000000 		.4byte	0xcd
 1827 0a58 1C       		.byte	0x1c
 1828 0a59 0A       		.uleb128 0xa
 1829 0a5a 590F0000 		.4byte	.LASF151
 1830 0a5e 0A       		.byte	0xa
 1831 0a5f 3F       		.byte	0x3f
 1832 0a60 CD000000 		.4byte	0xcd
 1833 0a64 20       		.byte	0x20
 1834 0a65 0A       		.uleb128 0xa
 1835 0a66 700F0000 		.4byte	.LASF152
 1836 0a6a 0A       		.byte	0xa
 1837 0a6b 40       		.byte	0x40
 1838 0a6c CD000000 		.4byte	0xcd
 1839 0a70 24       		.byte	0x24
 1840 0a71 0A       		.uleb128 0xa
 1841 0a72 B4130000 		.4byte	.LASF153
 1842 0a76 0A       		.byte	0xa
 1843 0a77 43       		.byte	0x43
 1844 0a78 AC000000 		.4byte	0xac
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 130


 1845 0a7c 28       		.byte	0x28
 1846 0a7d 0A       		.uleb128 0xa
 1847 0a7e EE060000 		.4byte	.LASF154
 1848 0a82 0A       		.byte	0xa
 1849 0a83 44       		.byte	0x44
 1850 0a84 AC000000 		.4byte	0xac
 1851 0a88 29       		.byte	0x29
 1852 0a89 0A       		.uleb128 0xa
 1853 0a8a C5120000 		.4byte	.LASF155
 1854 0a8e 0A       		.byte	0xa
 1855 0a8f 45       		.byte	0x45
 1856 0a90 AC000000 		.4byte	0xac
 1857 0a94 2A       		.byte	0x2a
 1858 0a95 0A       		.uleb128 0xa
 1859 0a96 11140000 		.4byte	.LASF156
 1860 0a9a 0A       		.byte	0xa
 1861 0a9b 46       		.byte	0x46
 1862 0a9c AC000000 		.4byte	0xac
 1863 0aa0 2B       		.byte	0x2b
 1864 0aa1 0A       		.uleb128 0xa
 1865 0aa2 D5130000 		.4byte	.LASF157
 1866 0aa6 0A       		.byte	0xa
 1867 0aa7 47       		.byte	0x47
 1868 0aa8 AC000000 		.4byte	0xac
 1869 0aac 2C       		.byte	0x2c
 1870 0aad 0A       		.uleb128 0xa
 1871 0aae 86160000 		.4byte	.LASF158
 1872 0ab2 0A       		.byte	0xa
 1873 0ab3 48       		.byte	0x48
 1874 0ab4 AC000000 		.4byte	0xac
 1875 0ab8 2D       		.byte	0x2d
 1876 0ab9 0A       		.uleb128 0xa
 1877 0aba BA120000 		.4byte	.LASF159
 1878 0abe 0A       		.byte	0xa
 1879 0abf 49       		.byte	0x49
 1880 0ac0 AC000000 		.4byte	0xac
 1881 0ac4 2E       		.byte	0x2e
 1882 0ac5 0A       		.uleb128 0xa
 1883 0ac6 2C1A0000 		.4byte	.LASF160
 1884 0aca 0A       		.byte	0xa
 1885 0acb 4A       		.byte	0x4a
 1886 0acc AC000000 		.4byte	0xac
 1887 0ad0 2F       		.byte	0x2f
 1888 0ad1 0A       		.uleb128 0xa
 1889 0ad2 D3040000 		.4byte	.LASF161
 1890 0ad6 0A       		.byte	0xa
 1891 0ad7 4B       		.byte	0x4b
 1892 0ad8 AC000000 		.4byte	0xac
 1893 0adc 30       		.byte	0x30
 1894 0add 0A       		.uleb128 0xa
 1895 0ade 42110000 		.4byte	.LASF162
 1896 0ae2 0A       		.byte	0xa
 1897 0ae3 4E       		.byte	0x4e
 1898 0ae4 AC000000 		.4byte	0xac
 1899 0ae8 31       		.byte	0x31
 1900 0ae9 0A       		.uleb128 0xa
 1901 0aea A2190000 		.4byte	.LASF163
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 131


 1902 0aee 0A       		.byte	0xa
 1903 0aef 4F       		.byte	0x4f
 1904 0af0 AC000000 		.4byte	0xac
 1905 0af4 32       		.byte	0x32
 1906 0af5 0A       		.uleb128 0xa
 1907 0af6 0E110000 		.4byte	.LASF164
 1908 0afa 0A       		.byte	0xa
 1909 0afb 50       		.byte	0x50
 1910 0afc AC000000 		.4byte	0xac
 1911 0b00 33       		.byte	0x33
 1912 0b01 0A       		.uleb128 0xa
 1913 0b02 6B160000 		.4byte	.LASF165
 1914 0b06 0A       		.byte	0xa
 1915 0b07 51       		.byte	0x51
 1916 0b08 AC000000 		.4byte	0xac
 1917 0b0c 34       		.byte	0x34
 1918 0b0d 0A       		.uleb128 0xa
 1919 0b0e AB070000 		.4byte	.LASF166
 1920 0b12 0A       		.byte	0xa
 1921 0b13 52       		.byte	0x52
 1922 0b14 B7000000 		.4byte	0xb7
 1923 0b18 36       		.byte	0x36
 1924 0b19 0A       		.uleb128 0xa
 1925 0b1a 09040000 		.4byte	.LASF167
 1926 0b1e 0A       		.byte	0xa
 1927 0b1f 53       		.byte	0x53
 1928 0b20 B7000000 		.4byte	0xb7
 1929 0b24 38       		.byte	0x38
 1930 0b25 0A       		.uleb128 0xa
 1931 0b26 D4030000 		.4byte	.LASF168
 1932 0b2a 0A       		.byte	0xa
 1933 0b2b 54       		.byte	0x54
 1934 0b2c B7000000 		.4byte	0xb7
 1935 0b30 3A       		.byte	0x3a
 1936 0b31 0A       		.uleb128 0xa
 1937 0b32 831A0000 		.4byte	.LASF169
 1938 0b36 0A       		.byte	0xa
 1939 0b37 55       		.byte	0x55
 1940 0b38 AC000000 		.4byte	0xac
 1941 0b3c 3C       		.byte	0x3c
 1942 0b3d 0A       		.uleb128 0xa
 1943 0b3e 920A0000 		.4byte	.LASF170
 1944 0b42 0A       		.byte	0xa
 1945 0b43 56       		.byte	0x56
 1946 0b44 AC000000 		.4byte	0xac
 1947 0b48 3D       		.byte	0x3d
 1948 0b49 0A       		.uleb128 0xa
 1949 0b4a 83120000 		.4byte	.LASF171
 1950 0b4e 0A       		.byte	0xa
 1951 0b4f 57       		.byte	0x57
 1952 0b50 AC000000 		.4byte	0xac
 1953 0b54 3E       		.byte	0x3e
 1954 0b55 0A       		.uleb128 0xa
 1955 0b56 B9000000 		.4byte	.LASF172
 1956 0b5a 0A       		.byte	0xa
 1957 0b5b 58       		.byte	0x58
 1958 0b5c AC000000 		.4byte	0xac
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 132


 1959 0b60 3F       		.byte	0x3f
 1960 0b61 0A       		.uleb128 0xa
 1961 0b62 F6010000 		.4byte	.LASF173
 1962 0b66 0A       		.byte	0xa
 1963 0b67 59       		.byte	0x59
 1964 0b68 AC000000 		.4byte	0xac
 1965 0b6c 40       		.byte	0x40
 1966 0b6d 0A       		.uleb128 0xa
 1967 0b6e 62110000 		.4byte	.LASF174
 1968 0b72 0A       		.byte	0xa
 1969 0b73 5A       		.byte	0x5a
 1970 0b74 AC000000 		.4byte	0xac
 1971 0b78 41       		.byte	0x41
 1972 0b79 0A       		.uleb128 0xa
 1973 0b7a 48190000 		.4byte	.LASF175
 1974 0b7e 0A       		.byte	0xa
 1975 0b7f 5B       		.byte	0x5b
 1976 0b80 AC000000 		.4byte	0xac
 1977 0b84 42       		.byte	0x42
 1978 0b85 0A       		.uleb128 0xa
 1979 0b86 F50D0000 		.4byte	.LASF176
 1980 0b8a 0A       		.byte	0xa
 1981 0b8b 5C       		.byte	0x5c
 1982 0b8c AC000000 		.4byte	0xac
 1983 0b90 43       		.byte	0x43
 1984 0b91 0A       		.uleb128 0xa
 1985 0b92 000E0000 		.4byte	.LASF177
 1986 0b96 0A       		.byte	0xa
 1987 0b97 5D       		.byte	0x5d
 1988 0b98 AC000000 		.4byte	0xac
 1989 0b9c 44       		.byte	0x44
 1990 0b9d 0A       		.uleb128 0xa
 1991 0b9e 1F140000 		.4byte	.LASF178
 1992 0ba2 0A       		.byte	0xa
 1993 0ba3 5E       		.byte	0x5e
 1994 0ba4 CD000000 		.4byte	0xcd
 1995 0ba8 48       		.byte	0x48
 1996 0ba9 0A       		.uleb128 0xa
 1997 0baa 5A040000 		.4byte	.LASF179
 1998 0bae 0A       		.byte	0xa
 1999 0baf 5F       		.byte	0x5f
 2000 0bb0 CD000000 		.4byte	0xcd
 2001 0bb4 4C       		.byte	0x4c
 2002 0bb5 0A       		.uleb128 0xa
 2003 0bb6 FA180000 		.4byte	.LASF180
 2004 0bba 0A       		.byte	0xa
 2005 0bbb 60       		.byte	0x60
 2006 0bbc AC000000 		.4byte	0xac
 2007 0bc0 50       		.byte	0x50
 2008 0bc1 0A       		.uleb128 0xa
 2009 0bc2 660B0000 		.4byte	.LASF181
 2010 0bc6 0A       		.byte	0xa
 2011 0bc7 61       		.byte	0x61
 2012 0bc8 AC000000 		.4byte	0xac
 2013 0bcc 51       		.byte	0x51
 2014 0bcd 0A       		.uleb128 0xa
 2015 0bce A20F0000 		.4byte	.LASF182
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 133


 2016 0bd2 0A       		.byte	0xa
 2017 0bd3 62       		.byte	0x62
 2018 0bd4 AC000000 		.4byte	0xac
 2019 0bd8 52       		.byte	0x52
 2020 0bd9 0A       		.uleb128 0xa
 2021 0bda FC060000 		.4byte	.LASF183
 2022 0bde 0A       		.byte	0xa
 2023 0bdf 63       		.byte	0x63
 2024 0be0 AC000000 		.4byte	0xac
 2025 0be4 53       		.byte	0x53
 2026 0be5 0A       		.uleb128 0xa
 2027 0be6 0B150000 		.4byte	.LASF184
 2028 0bea 0A       		.byte	0xa
 2029 0beb 64       		.byte	0x64
 2030 0bec AC000000 		.4byte	0xac
 2031 0bf0 54       		.byte	0x54
 2032 0bf1 0A       		.uleb128 0xa
 2033 0bf2 AC0C0000 		.4byte	.LASF185
 2034 0bf6 0A       		.byte	0xa
 2035 0bf7 65       		.byte	0x65
 2036 0bf8 AC000000 		.4byte	0xac
 2037 0bfc 55       		.byte	0x55
 2038 0bfd 0A       		.uleb128 0xa
 2039 0bfe 54190000 		.4byte	.LASF186
 2040 0c02 0A       		.byte	0xa
 2041 0c03 66       		.byte	0x66
 2042 0c04 AC000000 		.4byte	0xac
 2043 0c08 56       		.byte	0x56
 2044 0c09 0A       		.uleb128 0xa
 2045 0c0a CF120000 		.4byte	.LASF187
 2046 0c0e 0A       		.byte	0xa
 2047 0c0f 67       		.byte	0x67
 2048 0c10 AC000000 		.4byte	0xac
 2049 0c14 57       		.byte	0x57
 2050 0c15 0A       		.uleb128 0xa
 2051 0c16 430A0000 		.4byte	.LASF188
 2052 0c1a 0A       		.byte	0xa
 2053 0c1b 68       		.byte	0x68
 2054 0c1c AC000000 		.4byte	0xac
 2055 0c20 58       		.byte	0x58
 2056 0c21 0A       		.uleb128 0xa
 2057 0c22 991A0000 		.4byte	.LASF189
 2058 0c26 0A       		.byte	0xa
 2059 0c27 69       		.byte	0x69
 2060 0c28 AC000000 		.4byte	0xac
 2061 0c2c 59       		.byte	0x59
 2062 0c2d 0A       		.uleb128 0xa
 2063 0c2e 20180000 		.4byte	.LASF190
 2064 0c32 0A       		.byte	0xa
 2065 0c33 6E       		.byte	0x6e
 2066 0c34 C2000000 		.4byte	0xc2
 2067 0c38 5A       		.byte	0x5a
 2068 0c39 0A       		.uleb128 0xa
 2069 0c3a 3A010000 		.4byte	.LASF191
 2070 0c3e 0A       		.byte	0xa
 2071 0c3f 6F       		.byte	0x6f
 2072 0c40 C2000000 		.4byte	0xc2
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 134


 2073 0c44 5C       		.byte	0x5c
 2074 0c45 0A       		.uleb128 0xa
 2075 0c46 610F0000 		.4byte	.LASF192
 2076 0c4a 0A       		.byte	0xa
 2077 0c4b 70       		.byte	0x70
 2078 0c4c AC000000 		.4byte	0xac
 2079 0c50 5E       		.byte	0x5e
 2080 0c51 0A       		.uleb128 0xa
 2081 0c52 B0190000 		.4byte	.LASF193
 2082 0c56 0A       		.byte	0xa
 2083 0c57 71       		.byte	0x71
 2084 0c58 AC000000 		.4byte	0xac
 2085 0c5c 5F       		.byte	0x5f
 2086 0c5d 0A       		.uleb128 0xa
 2087 0c5e FC0C0000 		.4byte	.LASF194
 2088 0c62 0A       		.byte	0xa
 2089 0c63 72       		.byte	0x72
 2090 0c64 AC000000 		.4byte	0xac
 2091 0c68 60       		.byte	0x60
 2092 0c69 0A       		.uleb128 0xa
 2093 0c6a 490E0000 		.4byte	.LASF195
 2094 0c6e 0A       		.byte	0xa
 2095 0c6f 73       		.byte	0x73
 2096 0c70 CD000000 		.4byte	0xcd
 2097 0c74 64       		.byte	0x64
 2098 0c75 0A       		.uleb128 0xa
 2099 0c76 780B0000 		.4byte	.LASF196
 2100 0c7a 0A       		.byte	0xa
 2101 0c7b 76       		.byte	0x76
 2102 0c7c C2000000 		.4byte	0xc2
 2103 0c80 68       		.byte	0x68
 2104 0c81 0A       		.uleb128 0xa
 2105 0c82 43120000 		.4byte	.LASF197
 2106 0c86 0A       		.byte	0xa
 2107 0c87 77       		.byte	0x77
 2108 0c88 C2000000 		.4byte	0xc2
 2109 0c8c 6A       		.byte	0x6a
 2110 0c8d 0A       		.uleb128 0xa
 2111 0c8e FF100000 		.4byte	.LASF198
 2112 0c92 0A       		.byte	0xa
 2113 0c93 78       		.byte	0x78
 2114 0c94 C2000000 		.4byte	0xc2
 2115 0c98 6C       		.byte	0x6c
 2116 0c99 0A       		.uleb128 0xa
 2117 0c9a BE040000 		.4byte	.LASF199
 2118 0c9e 0A       		.byte	0xa
 2119 0c9f 79       		.byte	0x79
 2120 0ca0 C2000000 		.4byte	0xc2
 2121 0ca4 6E       		.byte	0x6e
 2122 0ca5 0A       		.uleb128 0xa
 2123 0ca6 DE0E0000 		.4byte	.LASF200
 2124 0caa 0A       		.byte	0xa
 2125 0cab 7B       		.byte	0x7b
 2126 0cac AC000000 		.4byte	0xac
 2127 0cb0 70       		.byte	0x70
 2128 0cb1 0A       		.uleb128 0xa
 2129 0cb2 20050000 		.4byte	.LASF201
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 135


 2130 0cb6 0A       		.byte	0xa
 2131 0cb7 7C       		.byte	0x7c
 2132 0cb8 AC000000 		.4byte	0xac
 2133 0cbc 71       		.byte	0x71
 2134 0cbd 0A       		.uleb128 0xa
 2135 0cbe 27040000 		.4byte	.LASF202
 2136 0cc2 0A       		.byte	0xa
 2137 0cc3 7D       		.byte	0x7d
 2138 0cc4 AC000000 		.4byte	0xac
 2139 0cc8 72       		.byte	0x72
 2140 0cc9 0A       		.uleb128 0xa
 2141 0cca 03020000 		.4byte	.LASF203
 2142 0cce 0A       		.byte	0xa
 2143 0ccf 7E       		.byte	0x7e
 2144 0cd0 AC000000 		.4byte	0xac
 2145 0cd4 73       		.byte	0x73
 2146 0cd5 0A       		.uleb128 0xa
 2147 0cd6 2F130000 		.4byte	.LASF204
 2148 0cda 0A       		.byte	0xa
 2149 0cdb 80       		.byte	0x80
 2150 0cdc C2000000 		.4byte	0xc2
 2151 0ce0 74       		.byte	0x74
 2152 0ce1 0A       		.uleb128 0xa
 2153 0ce2 DC110000 		.4byte	.LASF205
 2154 0ce6 0A       		.byte	0xa
 2155 0ce7 81       		.byte	0x81
 2156 0ce8 C2000000 		.4byte	0xc2
 2157 0cec 76       		.byte	0x76
 2158 0ced 0A       		.uleb128 0xa
 2159 0cee 010F0000 		.4byte	.LASF206
 2160 0cf2 0A       		.byte	0xa
 2161 0cf3 82       		.byte	0x82
 2162 0cf4 C2000000 		.4byte	0xc2
 2163 0cf8 78       		.byte	0x78
 2164 0cf9 0A       		.uleb128 0xa
 2165 0cfa 82070000 		.4byte	.LASF207
 2166 0cfe 0A       		.byte	0xa
 2167 0cff 83       		.byte	0x83
 2168 0d00 C2000000 		.4byte	0xc2
 2169 0d04 7A       		.byte	0x7a
 2170 0d05 0A       		.uleb128 0xa
 2171 0d06 AB150000 		.4byte	.LASF208
 2172 0d0a 0A       		.byte	0xa
 2173 0d0b 86       		.byte	0x86
 2174 0d0c AC000000 		.4byte	0xac
 2175 0d10 7C       		.byte	0x7c
 2176 0d11 0A       		.uleb128 0xa
 2177 0d12 1F190000 		.4byte	.LASF209
 2178 0d16 0A       		.byte	0xa
 2179 0d17 87       		.byte	0x87
 2180 0d18 AC000000 		.4byte	0xac
 2181 0d1c 7D       		.byte	0x7d
 2182 0d1d 0A       		.uleb128 0xa
 2183 0d1e 28070000 		.4byte	.LASF210
 2184 0d22 0A       		.byte	0xa
 2185 0d23 88       		.byte	0x88
 2186 0d24 AC000000 		.4byte	0xac
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 136


 2187 0d28 7E       		.byte	0x7e
 2188 0d29 0A       		.uleb128 0xa
 2189 0d2a 74060000 		.4byte	.LASF211
 2190 0d2e 0A       		.byte	0xa
 2191 0d2f 89       		.byte	0x89
 2192 0d30 AC000000 		.4byte	0xac
 2193 0d34 7F       		.byte	0x7f
 2194 0d35 0A       		.uleb128 0xa
 2195 0d36 C1130000 		.4byte	.LASF212
 2196 0d3a 0A       		.byte	0xa
 2197 0d3b 8A       		.byte	0x8a
 2198 0d3c AC000000 		.4byte	0xac
 2199 0d40 80       		.byte	0x80
 2200 0d41 0A       		.uleb128 0xa
 2201 0d42 A2000000 		.4byte	.LASF213
 2202 0d46 0A       		.byte	0xa
 2203 0d47 8D       		.byte	0x8d
 2204 0d48 CD000000 		.4byte	0xcd
 2205 0d4c 84       		.byte	0x84
 2206 0d4d 0A       		.uleb128 0xa
 2207 0d4e DE150000 		.4byte	.LASF214
 2208 0d52 0A       		.byte	0xa
 2209 0d53 8E       		.byte	0x8e
 2210 0d54 CD000000 		.4byte	0xcd
 2211 0d58 88       		.byte	0x88
 2212 0d59 0A       		.uleb128 0xa
 2213 0d5a 4D110000 		.4byte	.LASF215
 2214 0d5e 0A       		.byte	0xa
 2215 0d5f 8F       		.byte	0x8f
 2216 0d60 CD000000 		.4byte	0xcd
 2217 0d64 8C       		.byte	0x8c
 2218 0d65 0A       		.uleb128 0xa
 2219 0d66 0F170000 		.4byte	.LASF216
 2220 0d6a 0A       		.byte	0xa
 2221 0d6b 90       		.byte	0x90
 2222 0d6c CD000000 		.4byte	0xcd
 2223 0d70 90       		.byte	0x90
 2224 0d71 0A       		.uleb128 0xa
 2225 0d72 5E150000 		.4byte	.LASF217
 2226 0d76 0A       		.byte	0xa
 2227 0d77 91       		.byte	0x91
 2228 0d78 CD000000 		.4byte	0xcd
 2229 0d7c 94       		.byte	0x94
 2230 0d7d 0A       		.uleb128 0xa
 2231 0d7e 51050000 		.4byte	.LASF218
 2232 0d82 0A       		.byte	0xa
 2233 0d83 92       		.byte	0x92
 2234 0d84 CD000000 		.4byte	0xcd
 2235 0d88 98       		.byte	0x98
 2236 0d89 0A       		.uleb128 0xa
 2237 0d8a 1C160000 		.4byte	.LASF219
 2238 0d8e 0A       		.byte	0xa
 2239 0d8f 93       		.byte	0x93
 2240 0d90 CD000000 		.4byte	0xcd
 2241 0d94 9C       		.byte	0x9c
 2242 0d95 0A       		.uleb128 0xa
 2243 0d96 960C0000 		.4byte	.LASF220
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 137


 2244 0d9a 0A       		.byte	0xa
 2245 0d9b 94       		.byte	0x94
 2246 0d9c CD000000 		.4byte	0xcd
 2247 0da0 A0       		.byte	0xa0
 2248 0da1 0A       		.uleb128 0xa
 2249 0da2 25010000 		.4byte	.LASF221
 2250 0da6 0A       		.byte	0xa
 2251 0da7 95       		.byte	0x95
 2252 0da8 C2000000 		.4byte	0xc2
 2253 0dac A4       		.byte	0xa4
 2254 0dad 0A       		.uleb128 0xa
 2255 0dae 00130000 		.4byte	.LASF222
 2256 0db2 0A       		.byte	0xa
 2257 0db3 96       		.byte	0x96
 2258 0db4 C2000000 		.4byte	0xc2
 2259 0db8 A6       		.byte	0xa6
 2260 0db9 0A       		.uleb128 0xa
 2261 0dba D3160000 		.4byte	.LASF223
 2262 0dbe 0A       		.byte	0xa
 2263 0dbf 97       		.byte	0x97
 2264 0dc0 C2000000 		.4byte	0xc2
 2265 0dc4 A8       		.byte	0xa8
 2266 0dc5 0A       		.uleb128 0xa
 2267 0dc6 230F0000 		.4byte	.LASF224
 2268 0dca 0A       		.byte	0xa
 2269 0dcb 98       		.byte	0x98
 2270 0dcc C2000000 		.4byte	0xc2
 2271 0dd0 AA       		.byte	0xaa
 2272 0dd1 0A       		.uleb128 0xa
 2273 0dd2 68040000 		.4byte	.LASF225
 2274 0dd6 0A       		.byte	0xa
 2275 0dd7 99       		.byte	0x99
 2276 0dd8 C2000000 		.4byte	0xc2
 2277 0ddc AC       		.byte	0xac
 2278 0ddd 0A       		.uleb128 0xa
 2279 0dde 80110000 		.4byte	.LASF226
 2280 0de2 0A       		.byte	0xa
 2281 0de3 9A       		.byte	0x9a
 2282 0de4 C2000000 		.4byte	0xc2
 2283 0de8 AE       		.byte	0xae
 2284 0de9 0A       		.uleb128 0xa
 2285 0dea 9C040000 		.4byte	.LASF227
 2286 0dee 0A       		.byte	0xa
 2287 0def 9D       		.byte	0x9d
 2288 0df0 C2000000 		.4byte	0xc2
 2289 0df4 B0       		.byte	0xb0
 2290 0df5 0A       		.uleb128 0xa
 2291 0df6 4F170000 		.4byte	.LASF228
 2292 0dfa 0A       		.byte	0xa
 2293 0dfb 9E       		.byte	0x9e
 2294 0dfc CD000000 		.4byte	0xcd
 2295 0e00 B4       		.byte	0xb4
 2296 0e01 00       		.byte	0
 2297 0e02 04       		.uleb128 0x4
 2298 0e03 C6190000 		.4byte	.LASF229
 2299 0e07 0A       		.byte	0xa
 2300 0e08 9F       		.byte	0x9f
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 138


 2301 0e09 F1090000 		.4byte	0x9f1
 2302 0e0d 0F       		.uleb128 0xf
 2303 0e0e 93140000 		.4byte	.LASF230
 2304 0e12 0B       		.byte	0xb
 2305 0e13 F601     		.2byte	0x1f6
 2306 0e15 A5000000 		.4byte	0xa5
 2307 0e19 03       		.uleb128 0x3
 2308 0e1a 04       		.byte	0x4
 2309 0e1b 04       		.byte	0x4
 2310 0e1c CD060000 		.4byte	.LASF231
 2311 0e20 03       		.uleb128 0x3
 2312 0e21 08       		.byte	0x8
 2313 0e22 04       		.byte	0x4
 2314 0e23 3E1A0000 		.4byte	.LASF232
 2315 0e27 0F       		.uleb128 0xf
 2316 0e28 381A0000 		.4byte	.LASF233
 2317 0e2c 0B       		.byte	0xb
 2318 0e2d EA03     		.2byte	0x3ea
 2319 0e2f AC000000 		.4byte	0xac
 2320 0e33 09       		.uleb128 0x9
 2321 0e34 24       		.byte	0x24
 2322 0e35 0C       		.byte	0xc
 2323 0e36 EF       		.byte	0xef
 2324 0e37 A80E0000 		.4byte	0xea8
 2325 0e3b 0E       		.uleb128 0xe
 2326 0e3c 6F757400 		.ascii	"out\000"
 2327 0e40 0C       		.byte	0xc
 2328 0e41 F1       		.byte	0xf1
 2329 0e42 CD000000 		.4byte	0xcd
 2330 0e46 00       		.byte	0
 2331 0e47 0A       		.uleb128 0xa
 2332 0e48 351B0000 		.4byte	.LASF234
 2333 0e4c 0C       		.byte	0xc
 2334 0e4d F2       		.byte	0xf2
 2335 0e4e CD000000 		.4byte	0xcd
 2336 0e52 04       		.byte	0x4
 2337 0e53 0A       		.uleb128 0xa
 2338 0e54 A10B0000 		.4byte	.LASF235
 2339 0e58 0C       		.byte	0xc
 2340 0e59 F3       		.byte	0xf3
 2341 0e5a CD000000 		.4byte	0xcd
 2342 0e5e 08       		.byte	0x8
 2343 0e5f 0E       		.uleb128 0xe
 2344 0e60 63666700 		.ascii	"cfg\000"
 2345 0e64 0C       		.byte	0xc
 2346 0e65 F4       		.byte	0xf4
 2347 0e66 CD000000 		.4byte	0xcd
 2348 0e6a 0C       		.byte	0xc
 2349 0e6b 0A       		.uleb128 0xa
 2350 0e6c 01010000 		.4byte	.LASF236
 2351 0e70 0C       		.byte	0xc
 2352 0e71 F5       		.byte	0xf5
 2353 0e72 CD000000 		.4byte	0xcd
 2354 0e76 10       		.byte	0x10
 2355 0e77 0A       		.uleb128 0xa
 2356 0e78 1D0E0000 		.4byte	.LASF237
 2357 0e7c 0C       		.byte	0xc
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 139


 2358 0e7d F6       		.byte	0xf6
 2359 0e7e CD000000 		.4byte	0xcd
 2360 0e82 14       		.byte	0x14
 2361 0e83 0A       		.uleb128 0xa
 2362 0e84 54020000 		.4byte	.LASF238
 2363 0e88 0C       		.byte	0xc
 2364 0e89 F7       		.byte	0xf7
 2365 0e8a CD000000 		.4byte	0xcd
 2366 0e8e 18       		.byte	0x18
 2367 0e8f 0A       		.uleb128 0xa
 2368 0e90 A9130000 		.4byte	.LASF239
 2369 0e94 0C       		.byte	0xc
 2370 0e95 F8       		.byte	0xf8
 2371 0e96 CD000000 		.4byte	0xcd
 2372 0e9a 1C       		.byte	0x1c
 2373 0e9b 0A       		.uleb128 0xa
 2374 0e9c A0070000 		.4byte	.LASF240
 2375 0ea0 0C       		.byte	0xc
 2376 0ea1 F9       		.byte	0xf9
 2377 0ea2 CD000000 		.4byte	0xcd
 2378 0ea6 20       		.byte	0x20
 2379 0ea7 00       		.byte	0
 2380 0ea8 04       		.uleb128 0x4
 2381 0ea9 7C170000 		.4byte	.LASF241
 2382 0ead 0C       		.byte	0xc
 2383 0eae FA       		.byte	0xfa
 2384 0eaf 330E0000 		.4byte	0xe33
 2385 0eb3 10       		.uleb128 0x10
 2386 0eb4 01       		.byte	0x1
 2387 0eb5 53000000 		.4byte	0x53
 2388 0eb9 03       		.byte	0x3
 2389 0eba 4E05     		.2byte	0x54e
 2390 0ebc D90E0000 		.4byte	0xed9
 2391 0ec0 11       		.uleb128 0x11
 2392 0ec1 C5000000 		.4byte	.LASF242
 2393 0ec5 00       		.byte	0
 2394 0ec6 11       		.uleb128 0x11
 2395 0ec7 A3010000 		.4byte	.LASF243
 2396 0ecb 01       		.byte	0x1
 2397 0ecc 11       		.uleb128 0x11
 2398 0ecd 5D1A0000 		.4byte	.LASF244
 2399 0ed1 00       		.byte	0
 2400 0ed2 11       		.uleb128 0x11
 2401 0ed3 00000000 		.4byte	.LASF245
 2402 0ed7 01       		.byte	0x1
 2403 0ed8 00       		.byte	0
 2404 0ed9 10       		.uleb128 0x10
 2405 0eda 04       		.byte	0x4
 2406 0edb 2C000000 		.4byte	0x2c
 2407 0edf 02       		.byte	0x2
 2408 0ee0 5C02     		.2byte	0x25c
 2409 0ee2 080F0000 		.4byte	0xf08
 2410 0ee6 11       		.uleb128 0x11
 2411 0ee7 76040000 		.4byte	.LASF246
 2412 0eeb 00       		.byte	0
 2413 0eec 12       		.uleb128 0x12
 2414 0eed EC120000 		.4byte	.LASF247
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 140


 2415 0ef1 01004A00 		.4byte	0x4a0001
 2416 0ef5 12       		.uleb128 0x12
 2417 0ef6 5F010000 		.4byte	.LASF248
 2418 0efa 02004A00 		.4byte	0x4a0002
 2419 0efe 12       		.uleb128 0x12
 2420 0eff 55120000 		.4byte	.LASF249
 2421 0f03 03004A00 		.4byte	0x4a0003
 2422 0f07 00       		.byte	0
 2423 0f08 0F       		.uleb128 0xf
 2424 0f09 F70A0000 		.4byte	.LASF250
 2425 0f0d 02       		.byte	0x2
 2426 0f0e 6102     		.2byte	0x261
 2427 0f10 D90E0000 		.4byte	0xed9
 2428 0f14 10       		.uleb128 0x10
 2429 0f15 02       		.byte	0x2
 2430 0f16 77000000 		.4byte	0x77
 2431 0f1a 02       		.byte	0x2
 2432 0f1b BE02     		.2byte	0x2be
 2433 0f1d 630F0000 		.4byte	0xf63
 2434 0f21 11       		.uleb128 0x11
 2435 0f22 6D140000 		.4byte	.LASF251
 2436 0f26 00       		.byte	0
 2437 0f27 11       		.uleb128 0x11
 2438 0f28 9E170000 		.4byte	.LASF252
 2439 0f2c 01       		.byte	0x1
 2440 0f2d 11       		.uleb128 0x11
 2441 0f2e C50E0000 		.4byte	.LASF253
 2442 0f32 02       		.byte	0x2
 2443 0f33 11       		.uleb128 0x11
 2444 0f34 1B150000 		.4byte	.LASF254
 2445 0f38 03       		.byte	0x3
 2446 0f39 11       		.uleb128 0x11
 2447 0f3a 8F150000 		.4byte	.LASF255
 2448 0f3e 04       		.byte	0x4
 2449 0f3f 13       		.uleb128 0x13
 2450 0f40 4E060000 		.4byte	.LASF256
 2451 0f44 0001     		.2byte	0x100
 2452 0f46 13       		.uleb128 0x13
 2453 0f47 91120000 		.4byte	.LASF257
 2454 0f4b 1001     		.2byte	0x110
 2455 0f4d 13       		.uleb128 0x13
 2456 0f4e 190C0000 		.4byte	.LASF258
 2457 0f52 1101     		.2byte	0x111
 2458 0f54 13       		.uleb128 0x13
 2459 0f55 5F1B0000 		.4byte	.LASF259
 2460 0f59 1201     		.2byte	0x112
 2461 0f5b 13       		.uleb128 0x13
 2462 0f5c B90A0000 		.4byte	.LASF260
 2463 0f60 1301     		.2byte	0x113
 2464 0f62 00       		.byte	0
 2465 0f63 10       		.uleb128 0x10
 2466 0f64 01       		.byte	0x1
 2467 0f65 53000000 		.4byte	0x53
 2468 0f69 02       		.byte	0x2
 2469 0f6a E802     		.2byte	0x2e8
 2470 0f6c 890F0000 		.4byte	0xf89
 2471 0f70 11       		.uleb128 0x11
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 141


 2472 0f71 B6160000 		.4byte	.LASF261
 2473 0f75 00       		.byte	0
 2474 0f76 11       		.uleb128 0x11
 2475 0f77 C0150000 		.4byte	.LASF262
 2476 0f7b 01       		.byte	0x1
 2477 0f7c 11       		.uleb128 0x11
 2478 0f7d 4D160000 		.4byte	.LASF263
 2479 0f81 02       		.byte	0x2
 2480 0f82 11       		.uleb128 0x11
 2481 0f83 570A0000 		.4byte	.LASF264
 2482 0f87 03       		.byte	0x3
 2483 0f88 00       		.byte	0
 2484 0f89 0F       		.uleb128 0xf
 2485 0f8a 5D0C0000 		.4byte	.LASF265
 2486 0f8e 02       		.byte	0x2
 2487 0f8f ED02     		.2byte	0x2ed
 2488 0f91 630F0000 		.4byte	0xf63
 2489 0f95 10       		.uleb128 0x10
 2490 0f96 01       		.byte	0x1
 2491 0f97 53000000 		.4byte	0x53
 2492 0f9b 02       		.byte	0x2
 2493 0f9c F302     		.2byte	0x2f3
 2494 0f9e C10F0000 		.4byte	0xfc1
 2495 0fa2 11       		.uleb128 0x11
 2496 0fa3 540D0000 		.4byte	.LASF266
 2497 0fa7 00       		.byte	0
 2498 0fa8 11       		.uleb128 0x11
 2499 0fa9 6D0D0000 		.4byte	.LASF267
 2500 0fad 01       		.byte	0x1
 2501 0fae 11       		.uleb128 0x11
 2502 0faf 860D0000 		.4byte	.LASF268
 2503 0fb3 02       		.byte	0x2
 2504 0fb4 11       		.uleb128 0x11
 2505 0fb5 9F0D0000 		.4byte	.LASF269
 2506 0fb9 03       		.byte	0x3
 2507 0fba 11       		.uleb128 0x11
 2508 0fbb B80D0000 		.4byte	.LASF270
 2509 0fbf 04       		.byte	0x4
 2510 0fc0 00       		.byte	0
 2511 0fc1 0F       		.uleb128 0xf
 2512 0fc2 7F0C0000 		.4byte	.LASF271
 2513 0fc6 02       		.byte	0x2
 2514 0fc7 F902     		.2byte	0x2f9
 2515 0fc9 950F0000 		.4byte	0xf95
 2516 0fcd 14       		.uleb128 0x14
 2517 0fce 14       		.byte	0x14
 2518 0fcf 02       		.byte	0x2
 2519 0fd0 0203     		.2byte	0x302
 2520 0fd2 59100000 		.4byte	0x1059
 2521 0fd6 15       		.uleb128 0x15
 2522 0fd7 CB040000 		.4byte	.LASF272
 2523 0fdb 02       		.byte	0x2
 2524 0fdc 0403     		.2byte	0x304
 2525 0fde CD000000 		.4byte	0xcd
 2526 0fe2 00       		.byte	0
 2527 0fe3 15       		.uleb128 0x15
 2528 0fe4 AA020000 		.4byte	.LASF273
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 142


 2529 0fe8 02       		.byte	0x2
 2530 0fe9 0503     		.2byte	0x305
 2531 0feb C2000000 		.4byte	0xc2
 2532 0fef 04       		.byte	0x4
 2533 0ff0 15       		.uleb128 0x15
 2534 0ff1 A0140000 		.4byte	.LASF274
 2535 0ff5 02       		.byte	0x2
 2536 0ff6 0603     		.2byte	0x306
 2537 0ff8 C10F0000 		.4byte	0xfc1
 2538 0ffc 06       		.byte	0x6
 2539 0ffd 15       		.uleb128 0x15
 2540 0ffe 240E0000 		.4byte	.LASF275
 2541 1002 02       		.byte	0x2
 2542 1003 0703     		.2byte	0x307
 2543 1005 59100000 		.4byte	0x1059
 2544 1009 07       		.byte	0x7
 2545 100a 15       		.uleb128 0x15
 2546 100b 9C020000 		.4byte	.LASF276
 2547 100f 02       		.byte	0x2
 2548 1010 0803     		.2byte	0x308
 2549 1012 C2000000 		.4byte	0xc2
 2550 1016 08       		.byte	0x8
 2551 1017 15       		.uleb128 0x15
 2552 1018 B8070000 		.4byte	.LASF277
 2553 101c 02       		.byte	0x2
 2554 101d 0903     		.2byte	0x309
 2555 101f AC000000 		.4byte	0xac
 2556 1023 0A       		.byte	0xa
 2557 1024 15       		.uleb128 0x15
 2558 1025 09170000 		.4byte	.LASF278
 2559 1029 02       		.byte	0x2
 2560 102a 0A03     		.2byte	0x30a
 2561 102c AC000000 		.4byte	0xac
 2562 1030 0B       		.byte	0xb
 2563 1031 15       		.uleb128 0x15
 2564 1032 4C070000 		.4byte	.LASF279
 2565 1036 02       		.byte	0x2
 2566 1037 0B03     		.2byte	0x30b
 2567 1039 C2000000 		.4byte	0xc2
 2568 103d 0C       		.byte	0xc
 2569 103e 15       		.uleb128 0x15
 2570 103f E9030000 		.4byte	.LASF280
 2571 1043 02       		.byte	0x2
 2572 1044 0C03     		.2byte	0x30c
 2573 1046 890F0000 		.4byte	0xf89
 2574 104a 0E       		.byte	0xe
 2575 104b 15       		.uleb128 0x15
 2576 104c BB010000 		.4byte	.LASF281
 2577 1050 02       		.byte	0x2
 2578 1051 0D03     		.2byte	0x30d
 2579 1053 C2000000 		.4byte	0xc2
 2580 1057 10       		.byte	0x10
 2581 1058 00       		.byte	0
 2582 1059 03       		.uleb128 0x3
 2583 105a 01       		.byte	0x1
 2584 105b 02       		.byte	0x2
 2585 105c A90B0000 		.4byte	.LASF282
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 143


 2586 1060 0F       		.uleb128 0xf
 2587 1061 32160000 		.4byte	.LASF283
 2588 1065 02       		.byte	0x2
 2589 1066 0E03     		.2byte	0x30e
 2590 1068 CD0F0000 		.4byte	0xfcd
 2591 106c 10       		.uleb128 0x10
 2592 106d 01       		.byte	0x1
 2593 106e 53000000 		.4byte	0x53
 2594 1072 02       		.byte	0x2
 2595 1073 AC05     		.2byte	0x5ac
 2596 1075 DA100000 		.4byte	0x10da
 2597 1079 11       		.uleb128 0x11
 2598 107a BE070000 		.4byte	.LASF284
 2599 107e 00       		.byte	0
 2600 107f 11       		.uleb128 0x11
 2601 1080 DA070000 		.4byte	.LASF285
 2602 1084 01       		.byte	0x1
 2603 1085 11       		.uleb128 0x11
 2604 1086 F6070000 		.4byte	.LASF286
 2605 108a 02       		.byte	0x2
 2606 108b 11       		.uleb128 0x11
 2607 108c 12080000 		.4byte	.LASF287
 2608 1090 03       		.byte	0x3
 2609 1091 11       		.uleb128 0x11
 2610 1092 2E080000 		.4byte	.LASF288
 2611 1096 04       		.byte	0x4
 2612 1097 11       		.uleb128 0x11
 2613 1098 4A080000 		.4byte	.LASF289
 2614 109c 05       		.byte	0x5
 2615 109d 11       		.uleb128 0x11
 2616 109e 66080000 		.4byte	.LASF290
 2617 10a2 06       		.byte	0x6
 2618 10a3 11       		.uleb128 0x11
 2619 10a4 82080000 		.4byte	.LASF291
 2620 10a8 07       		.byte	0x7
 2621 10a9 11       		.uleb128 0x11
 2622 10aa 9E080000 		.4byte	.LASF292
 2623 10ae 08       		.byte	0x8
 2624 10af 11       		.uleb128 0x11
 2625 10b0 BA080000 		.4byte	.LASF293
 2626 10b4 09       		.byte	0x9
 2627 10b5 11       		.uleb128 0x11
 2628 10b6 31060000 		.4byte	.LASF294
 2629 10ba 0A       		.byte	0xa
 2630 10bb 11       		.uleb128 0x11
 2631 10bc 7A100000 		.4byte	.LASF295
 2632 10c0 0B       		.byte	0xb
 2633 10c1 11       		.uleb128 0x11
 2634 10c2 97100000 		.4byte	.LASF296
 2635 10c6 0C       		.byte	0xc
 2636 10c7 11       		.uleb128 0x11
 2637 10c8 B4100000 		.4byte	.LASF297
 2638 10cc 0D       		.byte	0xd
 2639 10cd 11       		.uleb128 0x11
 2640 10ce 88060000 		.4byte	.LASF298
 2641 10d2 0E       		.byte	0xe
 2642 10d3 11       		.uleb128 0x11
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 144


 2643 10d4 DB100000 		.4byte	.LASF299
 2644 10d8 0F       		.byte	0xf
 2645 10d9 00       		.byte	0
 2646 10da 0F       		.uleb128 0xf
 2647 10db 880B0000 		.4byte	.LASF300
 2648 10df 02       		.byte	0x2
 2649 10e0 BD05     		.2byte	0x5bd
 2650 10e2 6C100000 		.4byte	0x106c
 2651 10e6 10       		.uleb128 0x10
 2652 10e7 01       		.byte	0x1
 2653 10e8 53000000 		.4byte	0x53
 2654 10ec 02       		.byte	0x2
 2655 10ed C505     		.2byte	0x5c5
 2656 10ef 0C110000 		.4byte	0x110c
 2657 10f3 11       		.uleb128 0x11
 2658 10f4 BA140000 		.4byte	.LASF301
 2659 10f8 00       		.byte	0
 2660 10f9 11       		.uleb128 0x11
 2661 10fa 760A0000 		.4byte	.LASF302
 2662 10fe 01       		.byte	0x1
 2663 10ff 11       		.uleb128 0x11
 2664 1100 9D0A0000 		.4byte	.LASF303
 2665 1104 02       		.byte	0x2
 2666 1105 11       		.uleb128 0x11
 2667 1106 D30A0000 		.4byte	.LASF304
 2668 110a 03       		.byte	0x3
 2669 110b 00       		.byte	0
 2670 110c 0F       		.uleb128 0xf
 2671 110d ED040000 		.4byte	.LASF305
 2672 1111 02       		.byte	0x2
 2673 1112 CA05     		.2byte	0x5ca
 2674 1114 E6100000 		.4byte	0x10e6
 2675 1118 10       		.uleb128 0x10
 2676 1119 01       		.byte	0x1
 2677 111a 53000000 		.4byte	0x53
 2678 111e 02       		.byte	0x2
 2679 111f 2B09     		.2byte	0x92b
 2680 1121 3E110000 		.4byte	0x113e
 2681 1125 11       		.uleb128 0x11
 2682 1126 481B0000 		.4byte	.LASF306
 2683 112a 00       		.byte	0
 2684 112b 11       		.uleb128 0x11
 2685 112c 8C010000 		.4byte	.LASF307
 2686 1130 01       		.byte	0x1
 2687 1131 11       		.uleb128 0x11
 2688 1132 63170000 		.4byte	.LASF308
 2689 1136 02       		.byte	0x2
 2690 1137 11       		.uleb128 0x11
 2691 1138 30190000 		.4byte	.LASF309
 2692 113c 03       		.byte	0x3
 2693 113d 00       		.byte	0
 2694 113e 0F       		.uleb128 0xf
 2695 113f F0160000 		.4byte	.LASF310
 2696 1143 02       		.byte	0x2
 2697 1144 3009     		.2byte	0x930
 2698 1146 18110000 		.4byte	0x1118
 2699 114a 10       		.uleb128 0x10
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 145


 2700 114b 02       		.byte	0x2
 2701 114c 77000000 		.4byte	0x77
 2702 1150 02       		.byte	0x2
 2703 1151 6E09     		.2byte	0x96e
 2704 1153 79110000 		.4byte	0x1179
 2705 1157 11       		.uleb128 0x11
 2706 1158 F1140000 		.4byte	.LASF311
 2707 115c 00       		.byte	0
 2708 115d 11       		.uleb128 0x11
 2709 115e B90B0000 		.4byte	.LASF312
 2710 1162 01       		.byte	0x1
 2711 1163 13       		.uleb128 0x13
 2712 1164 27090000 		.4byte	.LASF313
 2713 1168 0101     		.2byte	0x101
 2714 116a 13       		.uleb128 0x13
 2715 116b D5090000 		.4byte	.LASF314
 2716 116f 0102     		.2byte	0x201
 2717 1171 13       		.uleb128 0x13
 2718 1172 150A0000 		.4byte	.LASF315
 2719 1176 0103     		.2byte	0x301
 2720 1178 00       		.byte	0
 2721 1179 0F       		.uleb128 0xf
 2722 117a 0B090000 		.4byte	.LASF316
 2723 117e 02       		.byte	0x2
 2724 117f 7409     		.2byte	0x974
 2725 1181 4A110000 		.4byte	0x114a
 2726 1185 10       		.uleb128 0x10
 2727 1186 01       		.byte	0x1
 2728 1187 53000000 		.4byte	0x53
 2729 118b 02       		.byte	0x2
 2730 118c 020A     		.2byte	0xa02
 2731 118e F3110000 		.4byte	0x11f3
 2732 1192 11       		.uleb128 0x11
 2733 1193 D1020000 		.4byte	.LASF317
 2734 1197 00       		.byte	0
 2735 1198 11       		.uleb128 0x11
 2736 1199 EC020000 		.4byte	.LASF318
 2737 119d 01       		.byte	0x1
 2738 119e 11       		.uleb128 0x11
 2739 119f 07030000 		.4byte	.LASF319
 2740 11a3 02       		.byte	0x2
 2741 11a4 11       		.uleb128 0x11
 2742 11a5 22030000 		.4byte	.LASF320
 2743 11a9 03       		.byte	0x3
 2744 11aa 11       		.uleb128 0x11
 2745 11ab 3D030000 		.4byte	.LASF321
 2746 11af 04       		.byte	0x4
 2747 11b0 11       		.uleb128 0x11
 2748 11b1 58030000 		.4byte	.LASF322
 2749 11b5 05       		.byte	0x5
 2750 11b6 11       		.uleb128 0x11
 2751 11b7 73030000 		.4byte	.LASF323
 2752 11bb 06       		.byte	0x6
 2753 11bc 11       		.uleb128 0x11
 2754 11bd 8E030000 		.4byte	.LASF324
 2755 11c1 07       		.byte	0x7
 2756 11c2 11       		.uleb128 0x11
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 146


 2757 11c3 1A1B0000 		.4byte	.LASF325
 2758 11c7 08       		.byte	0x8
 2759 11c8 11       		.uleb128 0x11
 2760 11c9 B9030000 		.4byte	.LASF326
 2761 11cd 09       		.byte	0x9
 2762 11ce 11       		.uleb128 0x11
 2763 11cf 04180000 		.4byte	.LASF327
 2764 11d3 0A       		.byte	0xa
 2765 11d4 11       		.uleb128 0x11
 2766 11d5 5E100000 		.4byte	.LASF328
 2767 11d9 0B       		.byte	0xb
 2768 11da 11       		.uleb128 0x11
 2769 11db 2B180000 		.4byte	.LASF329
 2770 11df 0C       		.byte	0xc
 2771 11e0 11       		.uleb128 0x11
 2772 11e1 47180000 		.4byte	.LASF330
 2773 11e5 0D       		.byte	0xd
 2774 11e6 11       		.uleb128 0x11
 2775 11e7 63180000 		.4byte	.LASF331
 2776 11eb 0E       		.byte	0xe
 2777 11ec 11       		.uleb128 0x11
 2778 11ed 7F180000 		.4byte	.LASF332
 2779 11f1 0F       		.byte	0xf
 2780 11f2 00       		.byte	0
 2781 11f3 0F       		.uleb128 0xf
 2782 11f4 71010000 		.4byte	.LASF333
 2783 11f8 02       		.byte	0x2
 2784 11f9 130A     		.2byte	0xa13
 2785 11fb 85110000 		.4byte	0x1185
 2786 11ff 10       		.uleb128 0x10
 2787 1200 01       		.byte	0x1
 2788 1201 53000000 		.4byte	0x53
 2789 1205 02       		.byte	0x2
 2790 1206 1B0A     		.2byte	0xa1b
 2791 1208 2B120000 		.4byte	0x122b
 2792 120c 11       		.uleb128 0x11
 2793 120d 9E110000 		.4byte	.LASF334
 2794 1211 00       		.byte	0
 2795 1212 11       		.uleb128 0x11
 2796 1213 C61A0000 		.4byte	.LASF335
 2797 1217 01       		.byte	0x1
 2798 1218 11       		.uleb128 0x11
 2799 1219 DB1A0000 		.4byte	.LASF336
 2800 121d 02       		.byte	0x2
 2801 121e 11       		.uleb128 0x11
 2802 121f F01A0000 		.4byte	.LASF337
 2803 1223 03       		.byte	0x3
 2804 1224 11       		.uleb128 0x11
 2805 1225 6D120000 		.4byte	.LASF338
 2806 1229 04       		.byte	0x4
 2807 122a 00       		.byte	0
 2808 122b 0F       		.uleb128 0xf
 2809 122c FD050000 		.4byte	.LASF339
 2810 1230 02       		.byte	0x2
 2811 1231 210A     		.2byte	0xa21
 2812 1233 FF110000 		.4byte	0x11ff
 2813 1237 10       		.uleb128 0x10
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 147


 2814 1238 01       		.byte	0x1
 2815 1239 53000000 		.4byte	0x53
 2816 123d 02       		.byte	0x2
 2817 123e B20A     		.2byte	0xab2
 2818 1240 51120000 		.4byte	0x1251
 2819 1244 11       		.uleb128 0x11
 2820 1245 8D000000 		.4byte	.LASF340
 2821 1249 00       		.byte	0
 2822 124a 11       		.uleb128 0x11
 2823 124b 56140000 		.4byte	.LASF341
 2824 124f 01       		.byte	0x1
 2825 1250 00       		.byte	0
 2826 1251 0F       		.uleb128 0xf
 2827 1252 310F0000 		.4byte	.LASF342
 2828 1256 02       		.byte	0x2
 2829 1257 B50A     		.2byte	0xab5
 2830 1259 37120000 		.4byte	0x1237
 2831 125d 16       		.uleb128 0x16
 2832 125e 01       		.byte	0x1
 2833 125f 53000000 		.4byte	0x53
 2834 1263 0D       		.byte	0xd
 2835 1264 7B       		.byte	0x7b
 2836 1265 88120000 		.4byte	0x1288
 2837 1269 11       		.uleb128 0x11
 2838 126a A7050000 		.4byte	.LASF343
 2839 126e 00       		.byte	0
 2840 126f 11       		.uleb128 0x11
 2841 1270 B1020000 		.4byte	.LASF344
 2842 1274 01       		.byte	0x1
 2843 1275 11       		.uleb128 0x11
 2844 1276 D4050000 		.4byte	.LASF345
 2845 127a 02       		.byte	0x2
 2846 127b 11       		.uleb128 0x11
 2847 127c F6190000 		.4byte	.LASF346
 2848 1280 03       		.byte	0x3
 2849 1281 11       		.uleb128 0x11
 2850 1282 D6190000 		.4byte	.LASF347
 2851 1286 04       		.byte	0x4
 2852 1287 00       		.byte	0
 2853 1288 17       		.uleb128 0x17
 2854 1289 E60C0000 		.4byte	.LASF348
 2855 128d 02       		.byte	0x2
 2856 128e 0606     		.2byte	0x606
 2857 1290 080F0000 		.4byte	0xf08
 2858 1294 03       		.byte	0x3
 2859 1295 B2120000 		.4byte	0x12b2
 2860 1299 18       		.uleb128 0x18
 2861 129a 87000000 		.4byte	.LASF350
 2862 129e 02       		.byte	0x2
 2863 129f 0606     		.2byte	0x606
 2864 12a1 CD000000 		.4byte	0xcd
 2865 12a5 19       		.uleb128 0x19
 2866 12a6 AF160000 		.4byte	.LASF352
 2867 12aa 02       		.byte	0x2
 2868 12ab 0806     		.2byte	0x608
 2869 12ad 080F0000 		.4byte	0xf08
 2870 12b1 00       		.byte	0
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 148


 2871 12b2 17       		.uleb128 0x17
 2872 12b3 850E0000 		.4byte	.LASF349
 2873 12b7 02       		.byte	0x2
 2874 12b8 8606     		.2byte	0x686
 2875 12ba 080F0000 		.4byte	0xf08
 2876 12be 03       		.byte	0x3
 2877 12bf E8120000 		.4byte	0x12e8
 2878 12c3 18       		.uleb128 0x18
 2879 12c4 87000000 		.4byte	.LASF350
 2880 12c8 02       		.byte	0x2
 2881 12c9 8606     		.2byte	0x686
 2882 12cb CD000000 		.4byte	0xcd
 2883 12cf 18       		.uleb128 0x18
 2884 12d0 91130000 		.4byte	.LASF351
 2885 12d4 02       		.byte	0x2
 2886 12d5 8606     		.2byte	0x686
 2887 12d7 0C110000 		.4byte	0x110c
 2888 12db 19       		.uleb128 0x19
 2889 12dc AF160000 		.4byte	.LASF352
 2890 12e0 02       		.byte	0x2
 2891 12e1 8806     		.2byte	0x688
 2892 12e3 080F0000 		.4byte	0xf08
 2893 12e7 00       		.byte	0
 2894 12e8 17       		.uleb128 0x17
 2895 12e9 1A110000 		.4byte	.LASF353
 2896 12ed 02       		.byte	0x2
 2897 12ee 4906     		.2byte	0x649
 2898 12f0 080F0000 		.4byte	0xf08
 2899 12f4 03       		.byte	0x3
 2900 12f5 1E130000 		.4byte	0x131e
 2901 12f9 18       		.uleb128 0x18
 2902 12fa 87000000 		.4byte	.LASF350
 2903 12fe 02       		.byte	0x2
 2904 12ff 4906     		.2byte	0x649
 2905 1301 CD000000 		.4byte	0xcd
 2906 1305 18       		.uleb128 0x18
 2907 1306 7D150000 		.4byte	.LASF354
 2908 130a 02       		.byte	0x2
 2909 130b 4906     		.2byte	0x649
 2910 130d DA100000 		.4byte	0x10da
 2911 1311 19       		.uleb128 0x19
 2912 1312 AF160000 		.4byte	.LASF352
 2913 1316 02       		.byte	0x2
 2914 1317 4B06     		.2byte	0x64b
 2915 1319 080F0000 		.4byte	0xf08
 2916 131d 00       		.byte	0
 2917 131e 1A       		.uleb128 0x1a
 2918 131f 35050000 		.4byte	.LASF355
 2919 1323 02       		.byte	0x2
 2920 1324 0609     		.2byte	0x906
 2921 1326 03       		.byte	0x3
 2922 1327 38130000 		.4byte	0x1338
 2923 132b 18       		.uleb128 0x18
 2924 132c 91130000 		.4byte	.LASF351
 2925 1330 02       		.byte	0x2
 2926 1331 0609     		.2byte	0x906
 2927 1333 AC000000 		.4byte	0xac
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 149


 2928 1337 00       		.byte	0
 2929 1338 1A       		.uleb128 0x1a
 2930 1339 EF080000 		.4byte	.LASF356
 2931 133d 02       		.byte	0x2
 2932 133e FF06     		.2byte	0x6ff
 2933 1340 03       		.byte	0x3
 2934 1341 52130000 		.4byte	0x1352
 2935 1345 18       		.uleb128 0x18
 2936 1346 91130000 		.4byte	.LASF351
 2937 134a 02       		.byte	0x2
 2938 134b FF06     		.2byte	0x6ff
 2939 134d AC000000 		.4byte	0xac
 2940 1351 00       		.byte	0
 2941 1352 1A       		.uleb128 0x1a
 2942 1353 AE180000 		.4byte	.LASF357
 2943 1357 02       		.byte	0x2
 2944 1358 CA06     		.2byte	0x6ca
 2945 135a 03       		.byte	0x3
 2946 135b 6C130000 		.4byte	0x136c
 2947 135f 18       		.uleb128 0x18
 2948 1360 91130000 		.4byte	.LASF351
 2949 1364 02       		.byte	0x2
 2950 1365 CA06     		.2byte	0x6ca
 2951 1367 AC000000 		.4byte	0xac
 2952 136b 00       		.byte	0
 2953 136c 1A       		.uleb128 0x1a
 2954 136d CA180000 		.4byte	.LASF358
 2955 1371 02       		.byte	0x2
 2956 1372 4809     		.2byte	0x948
 2957 1374 03       		.byte	0x3
 2958 1375 86130000 		.4byte	0x1386
 2959 1379 18       		.uleb128 0x18
 2960 137a 7D150000 		.4byte	.LASF354
 2961 137e 02       		.byte	0x2
 2962 137f 4809     		.2byte	0x948
 2963 1381 3E110000 		.4byte	0x113e
 2964 1385 00       		.byte	0
 2965 1386 1A       		.uleb128 0x1a
 2966 1387 AD1A0000 		.4byte	.LASF359
 2967 138b 02       		.byte	0x2
 2968 138c 2704     		.2byte	0x427
 2969 138e 03       		.byte	0x3
 2970 138f 9F130000 		.4byte	0x139f
 2971 1393 1B       		.uleb128 0x1b
 2972 1394 6F6E00   		.ascii	"on\000"
 2973 1397 02       		.byte	0x2
 2974 1398 2704     		.2byte	0x427
 2975 139a 59100000 		.4byte	0x1059
 2976 139e 00       		.byte	0
 2977 139f 1C       		.uleb128 0x1c
 2978 13a0 31140000 		.4byte	.LASF361
 2979 13a4 02       		.byte	0x2
 2980 13a5 F403     		.2byte	0x3f4
 2981 13a7 03       		.byte	0x3
 2982 13a8 1A       		.uleb128 0x1a
 2983 13a9 7B0F0000 		.4byte	.LASF360
 2984 13ad 02       		.byte	0x2
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 150


 2985 13ae D00A     		.2byte	0xad0
 2986 13b0 03       		.byte	0x3
 2987 13b1 C2130000 		.4byte	0x13c2
 2988 13b5 18       		.uleb128 0x18
 2989 13b6 7D150000 		.4byte	.LASF354
 2990 13ba 02       		.byte	0x2
 2991 13bb D00A     		.2byte	0xad0
 2992 13bd 51120000 		.4byte	0x1251
 2993 13c1 00       		.byte	0
 2994 13c2 1C       		.uleb128 0x1c
 2995 13c3 DE010000 		.4byte	.LASF362
 2996 13c7 02       		.byte	0x2
 2997 13c8 8F0A     		.2byte	0xa8f
 2998 13ca 03       		.byte	0x3
 2999 13cb 1A       		.uleb128 0x1a
 3000 13cc 04050000 		.4byte	.LASF363
 3001 13d0 02       		.byte	0x2
 3002 13d1 6D0A     		.2byte	0xa6d
 3003 13d3 03       		.byte	0x3
 3004 13d4 E5130000 		.4byte	0x13e5
 3005 13d8 18       		.uleb128 0x18
 3006 13d9 91130000 		.4byte	.LASF351
 3007 13dd 02       		.byte	0x2
 3008 13de 6D0A     		.2byte	0xa6d
 3009 13e0 2B120000 		.4byte	0x122b
 3010 13e4 00       		.byte	0
 3011 13e5 1A       		.uleb128 0x1a
 3012 13e6 D3060000 		.4byte	.LASF364
 3013 13ea 02       		.byte	0x2
 3014 13eb 470A     		.2byte	0xa47
 3015 13ed 03       		.byte	0x3
 3016 13ee FF130000 		.4byte	0x13ff
 3017 13f2 18       		.uleb128 0x18
 3018 13f3 7D150000 		.4byte	.LASF354
 3019 13f7 02       		.byte	0x2
 3020 13f8 470A     		.2byte	0xa47
 3021 13fa F3110000 		.4byte	0x11f3
 3022 13fe 00       		.byte	0
 3023 13ff 1C       		.uleb128 0x1c
 3024 1400 5B020000 		.4byte	.LASF365
 3025 1404 02       		.byte	0x2
 3026 1405 DF09     		.2byte	0x9df
 3027 1407 03       		.byte	0x3
 3028 1408 1A       		.uleb128 0x1a
 3029 1409 14060000 		.4byte	.LASF366
 3030 140d 02       		.byte	0x2
 3031 140e BE09     		.2byte	0x9be
 3032 1410 03       		.byte	0x3
 3033 1411 22140000 		.4byte	0x1422
 3034 1415 18       		.uleb128 0x18
 3035 1416 91130000 		.4byte	.LASF351
 3036 141a 02       		.byte	0x2
 3037 141b BE09     		.2byte	0x9be
 3038 141d AC000000 		.4byte	0xac
 3039 1421 00       		.byte	0
 3040 1422 1A       		.uleb128 0x1a
 3041 1423 43010000 		.4byte	.LASF367
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 151


 3042 1427 02       		.byte	0x2
 3043 1428 9509     		.2byte	0x995
 3044 142a 03       		.byte	0x3
 3045 142b 3C140000 		.4byte	0x143c
 3046 142f 18       		.uleb128 0x18
 3047 1430 7D150000 		.4byte	.LASF354
 3048 1434 02       		.byte	0x2
 3049 1435 9509     		.2byte	0x995
 3050 1437 79110000 		.4byte	0x1179
 3051 143b 00       		.byte	0
 3052 143c 17       		.uleb128 0x17
 3053 143d 051B0000 		.4byte	.LASF368
 3054 1441 02       		.byte	0x2
 3055 1442 0B04     		.2byte	0x40b
 3056 1444 080F0000 		.4byte	0xf08
 3057 1448 03       		.byte	0x3
 3058 1449 5A140000 		.4byte	0x145a
 3059 144d 19       		.uleb128 0x19
 3060 144e AF160000 		.4byte	.LASF352
 3061 1452 02       		.byte	0x2
 3062 1453 0D04     		.2byte	0x40d
 3063 1455 080F0000 		.4byte	0xf08
 3064 1459 00       		.byte	0
 3065 145a 1C       		.uleb128 0x1c
 3066 145b 01160000 		.4byte	.LASF369
 3067 145f 03       		.byte	0x3
 3068 1460 2E09     		.2byte	0x92e
 3069 1462 03       		.byte	0x3
 3070 1463 1C       		.uleb128 0x1c
 3071 1464 3D040000 		.4byte	.LASF370
 3072 1468 03       		.byte	0x3
 3073 1469 6109     		.2byte	0x961
 3074 146b 03       		.byte	0x3
 3075 146c 1D       		.uleb128 0x1d
 3076 146d 1A020000 		.4byte	.LASF387
 3077 1471 01       		.byte	0x1
 3078 1472 82       		.byte	0x82
 3079 1473 00000000 		.4byte	.LFB187
 3080 1477 02000000 		.4byte	.LFE187-.LFB187
 3081 147b 01       		.uleb128 0x1
 3082 147c 9C       		.byte	0x9c
 3083 147d 8F140000 		.4byte	0x148f
 3084 1481 1E       		.uleb128 0x1e
 3085 1482 7C160000 		.4byte	.LASF388
 3086 1486 01       		.byte	0x1
 3087 1487 82       		.byte	0x82
 3088 1488 270E0000 		.4byte	0xe27
 3089 148c 01       		.uleb128 0x1
 3090 148d 50       		.byte	0x50
 3091 148e 00       		.byte	0
 3092 148f 1F       		.uleb128 0x1f
 3093 1490 DF160000 		.4byte	.LASF389
 3094 1494 01       		.byte	0x1
 3095 1495 94       		.byte	0x94
 3096 1496 00000000 		.4byte	.LFB188
 3097 149a A4010000 		.4byte	.LFE188-.LFB188
 3098 149e 01       		.uleb128 0x1
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 152


 3099 149f 9C       		.byte	0x9c
 3100 14a0 AE170000 		.4byte	0x17ae
 3101 14a4 20       		.uleb128 0x20
 3102 14a5 7E0E0000 		.4byte	.LASF371
 3103 14a9 01       		.byte	0x1
 3104 14aa 96       		.byte	0x96
 3105 14ab CD000000 		.4byte	0xcd
 3106 14af 00000000 		.4byte	.LLST0
 3107 14b3 21       		.uleb128 0x21
 3108 14b4 6C130000 		.4byte	0x136c
 3109 14b8 04000000 		.4byte	.LBB45
 3110 14bc 0E000000 		.4byte	.LBE45-.LBB45
 3111 14c0 01       		.byte	0x1
 3112 14c1 99       		.byte	0x99
 3113 14c2 D0140000 		.4byte	0x14d0
 3114 14c6 22       		.uleb128 0x22
 3115 14c7 79130000 		.4byte	0x1379
 3116 14cb 34000000 		.4byte	.LLST1
 3117 14cf 00       		.byte	0
 3118 14d0 21       		.uleb128 0x21
 3119 14d1 52130000 		.4byte	0x1352
 3120 14d5 12000000 		.4byte	.LBB47
 3121 14d9 14000000 		.4byte	.LBE47-.LBB47
 3122 14dd 01       		.byte	0x1
 3123 14de 9C       		.byte	0x9c
 3124 14df ED140000 		.4byte	0x14ed
 3125 14e3 22       		.uleb128 0x22
 3126 14e4 5F130000 		.4byte	0x135f
 3127 14e8 48000000 		.4byte	.LLST2
 3128 14ec 00       		.byte	0
 3129 14ed 21       		.uleb128 0x21
 3130 14ee 38130000 		.4byte	0x1338
 3131 14f2 26000000 		.4byte	.LBB49
 3132 14f6 18000000 		.4byte	.LBE49-.LBB49
 3133 14fa 01       		.byte	0x1
 3134 14fb 9D       		.byte	0x9d
 3135 14fc 0A150000 		.4byte	0x150a
 3136 1500 22       		.uleb128 0x22
 3137 1501 45130000 		.4byte	0x1345
 3138 1505 5C000000 		.4byte	.LLST3
 3139 1509 00       		.byte	0
 3140 150a 21       		.uleb128 0x21
 3141 150b 1E130000 		.4byte	0x131e
 3142 150f 3E000000 		.4byte	.LBB51
 3143 1513 0E000000 		.4byte	.LBE51-.LBB51
 3144 1517 01       		.byte	0x1
 3145 1518 9E       		.byte	0x9e
 3146 1519 27150000 		.4byte	0x1527
 3147 151d 22       		.uleb128 0x22
 3148 151e 2B130000 		.4byte	0x132b
 3149 1522 70000000 		.4byte	.LLST4
 3150 1526 00       		.byte	0
 3151 1527 21       		.uleb128 0x21
 3152 1528 E8120000 		.4byte	0x12e8
 3153 152c 4C000000 		.4byte	.LBB53
 3154 1530 18000000 		.4byte	.LBE53-.LBB53
 3155 1534 01       		.byte	0x1
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 153


 3156 1535 A1       		.byte	0xa1
 3157 1536 60150000 		.4byte	0x1560
 3158 153a 22       		.uleb128 0x22
 3159 153b 05130000 		.4byte	0x1305
 3160 153f 84000000 		.4byte	.LLST5
 3161 1543 22       		.uleb128 0x22
 3162 1544 F9120000 		.4byte	0x12f9
 3163 1548 84000000 		.4byte	.LLST5
 3164 154c 23       		.uleb128 0x23
 3165 154d 4C000000 		.4byte	.LBB54
 3166 1551 18000000 		.4byte	.LBE54-.LBB54
 3167 1555 24       		.uleb128 0x24
 3168 1556 11130000 		.4byte	0x1311
 3169 155a 98000000 		.4byte	.LLST7
 3170 155e 00       		.byte	0
 3171 155f 00       		.byte	0
 3172 1560 21       		.uleb128 0x21
 3173 1561 B2120000 		.4byte	0x12b2
 3174 1565 64000000 		.4byte	.LBB55
 3175 1569 16000000 		.4byte	.LBE55-.LBB55
 3176 156d 01       		.byte	0x1
 3177 156e A2       		.byte	0xa2
 3178 156f 99150000 		.4byte	0x1599
 3179 1573 22       		.uleb128 0x22
 3180 1574 CF120000 		.4byte	0x12cf
 3181 1578 B0000000 		.4byte	.LLST8
 3182 157c 22       		.uleb128 0x22
 3183 157d C3120000 		.4byte	0x12c3
 3184 1581 B0000000 		.4byte	.LLST8
 3185 1585 23       		.uleb128 0x23
 3186 1586 64000000 		.4byte	.LBB56
 3187 158a 16000000 		.4byte	.LBE56-.LBB56
 3188 158e 24       		.uleb128 0x24
 3189 158f DB120000 		.4byte	0x12db
 3190 1593 C4000000 		.4byte	.LLST10
 3191 1597 00       		.byte	0
 3192 1598 00       		.byte	0
 3193 1599 21       		.uleb128 0x21
 3194 159a 88120000 		.4byte	0x1288
 3195 159e 7A000000 		.4byte	.LBB57
 3196 15a2 18000000 		.4byte	.LBE57-.LBB57
 3197 15a6 01       		.byte	0x1
 3198 15a7 A3       		.byte	0xa3
 3199 15a8 C9150000 		.4byte	0x15c9
 3200 15ac 22       		.uleb128 0x22
 3201 15ad 99120000 		.4byte	0x1299
 3202 15b1 DC000000 		.4byte	.LLST11
 3203 15b5 23       		.uleb128 0x23
 3204 15b6 7A000000 		.4byte	.LBB58
 3205 15ba 18000000 		.4byte	.LBE58-.LBB58
 3206 15be 24       		.uleb128 0x24
 3207 15bf A5120000 		.4byte	0x12a5
 3208 15c3 F0000000 		.4byte	.LLST12
 3209 15c7 00       		.byte	0
 3210 15c8 00       		.byte	0
 3211 15c9 25       		.uleb128 0x25
 3212 15ca BA000000 		.4byte	.LBB59
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 154


 3213 15ce 1E000000 		.4byte	.LBE59-.LBB59
 3214 15d2 08160000 		.4byte	0x1608
 3215 15d6 26       		.uleb128 0x26
 3216 15d7 1D040000 		.4byte	.LASF372
 3217 15db 01       		.byte	0x1
 3218 15dc AC       		.byte	0xac
 3219 15dd AE170000 		.4byte	0x17ae
 3220 15e1 02       		.uleb128 0x2
 3221 15e2 91       		.byte	0x91
 3222 15e3 5C       		.sleb128 -36
 3223 15e4 27       		.uleb128 0x27
 3224 15e5 CE000000 		.4byte	.LVL14
 3225 15e9 0F190000 		.4byte	0x190f
 3226 15ed F8150000 		.4byte	0x15f8
 3227 15f1 28       		.uleb128 0x28
 3228 15f2 01       		.uleb128 0x1
 3229 15f3 50       		.byte	0x50
 3230 15f4 02       		.uleb128 0x2
 3231 15f5 91       		.byte	0x91
 3232 15f6 5C       		.sleb128 -36
 3233 15f7 00       		.byte	0
 3234 15f8 29       		.uleb128 0x29
 3235 15f9 D8000000 		.4byte	.LVL16
 3236 15fd 6C140000 		.4byte	0x146c
 3237 1601 28       		.uleb128 0x28
 3238 1602 01       		.uleb128 0x1
 3239 1603 50       		.byte	0x50
 3240 1604 01       		.uleb128 0x1
 3241 1605 34       		.byte	0x34
 3242 1606 00       		.byte	0
 3243 1607 00       		.byte	0
 3244 1608 21       		.uleb128 0x21
 3245 1609 22140000 		.4byte	0x1422
 3246 160d F6000000 		.4byte	.LBB60
 3247 1611 0C000000 		.4byte	.LBE60-.LBB60
 3248 1615 01       		.byte	0x1
 3249 1616 C7       		.byte	0xc7
 3250 1617 25160000 		.4byte	0x1625
 3251 161b 22       		.uleb128 0x22
 3252 161c 2F140000 		.4byte	0x142f
 3253 1620 08010000 		.4byte	.LLST13
 3254 1624 00       		.byte	0
 3255 1625 21       		.uleb128 0x21
 3256 1626 08140000 		.4byte	0x1408
 3257 162a 02010000 		.4byte	.LBB62
 3258 162e 08000000 		.4byte	.LBE62-.LBB62
 3259 1632 01       		.byte	0x1
 3260 1633 C8       		.byte	0xc8
 3261 1634 42160000 		.4byte	0x1642
 3262 1638 22       		.uleb128 0x22
 3263 1639 15140000 		.4byte	0x1415
 3264 163d 1C010000 		.4byte	.LLST14
 3265 1641 00       		.byte	0
 3266 1642 2A       		.uleb128 0x2a
 3267 1643 FF130000 		.4byte	0x13ff
 3268 1647 0A010000 		.4byte	.LBB64
 3269 164b 0A000000 		.4byte	.LBE64-.LBB64
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 155


 3270 164f 01       		.byte	0x1
 3271 1650 C9       		.byte	0xc9
 3272 1651 21       		.uleb128 0x21
 3273 1652 E5130000 		.4byte	0x13e5
 3274 1656 14010000 		.4byte	.LBB66
 3275 165a 0A000000 		.4byte	.LBE66-.LBB66
 3276 165e 01       		.byte	0x1
 3277 165f CA       		.byte	0xca
 3278 1660 6E160000 		.4byte	0x166e
 3279 1664 22       		.uleb128 0x22
 3280 1665 F2130000 		.4byte	0x13f2
 3281 1669 30010000 		.4byte	.LLST15
 3282 166d 00       		.byte	0
 3283 166e 21       		.uleb128 0x21
 3284 166f CB130000 		.4byte	0x13cb
 3285 1673 1E010000 		.4byte	.LBB68
 3286 1677 0E000000 		.4byte	.LBE68-.LBB68
 3287 167b 01       		.byte	0x1
 3288 167c CB       		.byte	0xcb
 3289 167d 8B160000 		.4byte	0x168b
 3290 1681 22       		.uleb128 0x22
 3291 1682 D8130000 		.4byte	0x13d8
 3292 1686 44010000 		.4byte	.LLST16
 3293 168a 00       		.byte	0
 3294 168b 2A       		.uleb128 0x2a
 3295 168c C2130000 		.4byte	0x13c2
 3296 1690 2C010000 		.4byte	.LBB70
 3297 1694 0A000000 		.4byte	.LBE70-.LBB70
 3298 1698 01       		.byte	0x1
 3299 1699 CC       		.byte	0xcc
 3300 169a 21       		.uleb128 0x21
 3301 169b A8130000 		.4byte	0x13a8
 3302 169f 36010000 		.4byte	.LBB72
 3303 16a3 10000000 		.4byte	.LBE72-.LBB72
 3304 16a7 01       		.byte	0x1
 3305 16a8 CD       		.byte	0xcd
 3306 16a9 B7160000 		.4byte	0x16b7
 3307 16ad 22       		.uleb128 0x22
 3308 16ae B5130000 		.4byte	0x13b5
 3309 16b2 58010000 		.4byte	.LLST17
 3310 16b6 00       		.byte	0
 3311 16b7 2A       		.uleb128 0x2a
 3312 16b8 9F130000 		.4byte	0x139f
 3313 16bc 4C010000 		.4byte	.LBB74
 3314 16c0 08000000 		.4byte	.LBE74-.LBB74
 3315 16c4 01       		.byte	0x1
 3316 16c5 CF       		.byte	0xcf
 3317 16c6 21       		.uleb128 0x21
 3318 16c7 86130000 		.4byte	0x1386
 3319 16cb 54010000 		.4byte	.LBB76
 3320 16cf 0A000000 		.4byte	.LBE76-.LBB76
 3321 16d3 01       		.byte	0x1
 3322 16d4 D0       		.byte	0xd0
 3323 16d5 E3160000 		.4byte	0x16e3
 3324 16d9 22       		.uleb128 0x22
 3325 16da 93130000 		.4byte	0x1393
 3326 16de 6C010000 		.4byte	.LLST18
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 156


 3327 16e2 00       		.byte	0
 3328 16e3 27       		.uleb128 0x27
 3329 16e4 9A000000 		.4byte	.LVL9
 3330 16e8 1B190000 		.4byte	0x191b
 3331 16ec FB160000 		.4byte	0x16fb
 3332 16f0 28       		.uleb128 0x28
 3333 16f1 01       		.uleb128 0x1
 3334 16f2 50       		.byte	0x50
 3335 16f3 01       		.uleb128 0x1
 3336 16f4 31       		.byte	0x31
 3337 16f5 28       		.uleb128 0x28
 3338 16f6 01       		.uleb128 0x1
 3339 16f7 51       		.byte	0x51
 3340 16f8 01       		.uleb128 0x1
 3341 16f9 30       		.byte	0x30
 3342 16fa 00       		.byte	0
 3343 16fb 27       		.uleb128 0x27
 3344 16fc A2000000 		.4byte	.LVL10
 3345 1700 1B190000 		.4byte	0x191b
 3346 1704 13170000 		.4byte	0x1713
 3347 1708 28       		.uleb128 0x28
 3348 1709 01       		.uleb128 0x1
 3349 170a 50       		.byte	0x50
 3350 170b 01       		.uleb128 0x1
 3351 170c 32       		.byte	0x32
 3352 170d 28       		.uleb128 0x28
 3353 170e 01       		.uleb128 0x1
 3354 170f 51       		.byte	0x51
 3355 1710 01       		.uleb128 0x1
 3356 1711 30       		.byte	0x30
 3357 1712 00       		.byte	0
 3358 1713 27       		.uleb128 0x27
 3359 1714 AA000000 		.4byte	.LVL11
 3360 1718 1B190000 		.4byte	0x191b
 3361 171c 2B170000 		.4byte	0x172b
 3362 1720 28       		.uleb128 0x28
 3363 1721 01       		.uleb128 0x1
 3364 1722 50       		.byte	0x50
 3365 1723 01       		.uleb128 0x1
 3366 1724 33       		.byte	0x33
 3367 1725 28       		.uleb128 0x28
 3368 1726 01       		.uleb128 0x1
 3369 1727 51       		.byte	0x51
 3370 1728 01       		.uleb128 0x1
 3371 1729 30       		.byte	0x30
 3372 172a 00       		.byte	0
 3373 172b 27       		.uleb128 0x27
 3374 172c B2000000 		.4byte	.LVL12
 3375 1730 1B190000 		.4byte	0x191b
 3376 1734 43170000 		.4byte	0x1743
 3377 1738 28       		.uleb128 0x28
 3378 1739 01       		.uleb128 0x1
 3379 173a 50       		.byte	0x50
 3380 173b 01       		.uleb128 0x1
 3381 173c 34       		.byte	0x34
 3382 173d 28       		.uleb128 0x28
 3383 173e 01       		.uleb128 0x1
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 157


 3384 173f 51       		.byte	0x51
 3385 1740 01       		.uleb128 0x1
 3386 1741 30       		.byte	0x30
 3387 1742 00       		.byte	0
 3388 1743 27       		.uleb128 0x27
 3389 1744 BA000000 		.4byte	.LVL13
 3390 1748 1B190000 		.4byte	0x191b
 3391 174c 5B170000 		.4byte	0x175b
 3392 1750 28       		.uleb128 0x28
 3393 1751 01       		.uleb128 0x1
 3394 1752 50       		.byte	0x50
 3395 1753 01       		.uleb128 0x1
 3396 1754 30       		.byte	0x30
 3397 1755 28       		.uleb128 0x28
 3398 1756 01       		.uleb128 0x1
 3399 1757 51       		.byte	0x51
 3400 1758 01       		.uleb128 0x1
 3401 1759 30       		.byte	0x30
 3402 175a 00       		.byte	0
 3403 175b 27       		.uleb128 0x27
 3404 175c EC000000 		.4byte	.LVL18
 3405 1760 27190000 		.4byte	0x1927
 3406 1764 72170000 		.4byte	0x1772
 3407 1768 28       		.uleb128 0x28
 3408 1769 01       		.uleb128 0x1
 3409 176a 50       		.byte	0x50
 3410 176b 05       		.uleb128 0x5
 3411 176c 0C       		.byte	0xc
 3412 176d 400D0300 		.4byte	0x30d40
 3413 1771 00       		.byte	0
 3414 1772 27       		.uleb128 0x27
 3415 1773 F6000000 		.4byte	.LVL20
 3416 1777 6C140000 		.4byte	0x146c
 3417 177b 85170000 		.4byte	0x1785
 3418 177f 28       		.uleb128 0x28
 3419 1780 01       		.uleb128 0x1
 3420 1781 50       		.byte	0x50
 3421 1782 01       		.uleb128 0x1
 3422 1783 34       		.byte	0x34
 3423 1784 00       		.byte	0
 3424 1785 27       		.uleb128 0x27
 3425 1786 4C010000 		.4byte	.LVL29
 3426 178a 33190000 		.4byte	0x1933
 3427 178e 98170000 		.4byte	0x1798
 3428 1792 28       		.uleb128 0x28
 3429 1793 01       		.uleb128 0x1
 3430 1794 50       		.byte	0x50
 3431 1795 01       		.uleb128 0x1
 3432 1796 30       		.byte	0x30
 3433 1797 00       		.byte	0
 3434 1798 29       		.uleb128 0x29
 3435 1799 66010000 		.4byte	.LVL32
 3436 179d 3E190000 		.4byte	0x193e
 3437 17a1 28       		.uleb128 0x28
 3438 17a2 01       		.uleb128 0x1
 3439 17a3 50       		.byte	0x50
 3440 17a4 01       		.uleb128 0x1
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 158


 3441 17a5 30       		.byte	0x30
 3442 17a6 28       		.uleb128 0x28
 3443 17a7 01       		.uleb128 0x1
 3444 17a8 51       		.byte	0x51
 3445 17a9 02       		.uleb128 0x2
 3446 17aa 08       		.byte	0x8
 3447 17ab 64       		.byte	0x64
 3448 17ac 00       		.byte	0
 3449 17ad 00       		.byte	0
 3450 17ae 06       		.uleb128 0x6
 3451 17af 60100000 		.4byte	0x1060
 3452 17b3 2B       		.uleb128 0x2b
 3453 17b4 460D0000 		.4byte	.LASF390
 3454 17b8 01       		.byte	0x1
 3455 17b9 0201     		.2byte	0x102
 3456 17bb 00000000 		.4byte	.LFB190
 3457 17bf CC000000 		.4byte	.LFE190-.LFB190
 3458 17c3 01       		.uleb128 0x1
 3459 17c4 9C       		.byte	0x9c
 3460 17c5 F4180000 		.4byte	0x18f4
 3461 17c9 2C       		.uleb128 0x2c
 3462 17ca 3C140000 		.4byte	0x143c
 3463 17ce 18000000 		.4byte	.LBB78
 3464 17d2 18000000 		.4byte	.LBE78-.LBB78
 3465 17d6 01       		.byte	0x1
 3466 17d7 0A01     		.2byte	0x10a
 3467 17d9 F1170000 		.4byte	0x17f1
 3468 17dd 23       		.uleb128 0x23
 3469 17de 18000000 		.4byte	.LBB79
 3470 17e2 18000000 		.4byte	.LBE79-.LBB79
 3471 17e6 24       		.uleb128 0x24
 3472 17e7 4D140000 		.4byte	0x144d
 3473 17eb 80010000 		.4byte	.LLST19
 3474 17ef 00       		.byte	0
 3475 17f0 00       		.byte	0
 3476 17f1 2D       		.uleb128 0x2d
 3477 17f2 9F130000 		.4byte	0x139f
 3478 17f6 30000000 		.4byte	.LBB80
 3479 17fa 0E000000 		.4byte	.LBE80-.LBB80
 3480 17fe 01       		.byte	0x1
 3481 17ff 0B01     		.2byte	0x10b
 3482 1801 2D       		.uleb128 0x2d
 3483 1802 63140000 		.4byte	0x1463
 3484 1806 44000000 		.4byte	.LBB82
 3485 180a 10000000 		.4byte	.LBE82-.LBB82
 3486 180e 01       		.byte	0x1
 3487 180f 1201     		.2byte	0x112
 3488 1811 2D       		.uleb128 0x2d
 3489 1812 5A140000 		.4byte	0x145a
 3490 1816 54000000 		.4byte	.LBB84
 3491 181a 1C000000 		.4byte	.LBE84-.LBB84
 3492 181e 01       		.byte	0x1
 3493 181f 1301     		.2byte	0x113
 3494 1821 25       		.uleb128 0x25
 3495 1822 74000000 		.4byte	.LBB86
 3496 1826 1C000000 		.4byte	.LBE86-.LBB86
 3497 182a 57180000 		.4byte	0x1857
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 159


 3498 182e 2E       		.uleb128 0x2e
 3499 182f AF0B0000 		.4byte	.LASF373
 3500 1833 01       		.byte	0x1
 3501 1834 1A01     		.2byte	0x11a
 3502 1836 F4180000 		.4byte	0x18f4
 3503 183a 02       		.uleb128 0x2
 3504 183b 91       		.byte	0x91
 3505 183c 4C       		.sleb128 -52
 3506 183d 29       		.uleb128 0x29
 3507 183e 90000000 		.4byte	.LVL39
 3508 1842 4A190000 		.4byte	0x194a
 3509 1846 28       		.uleb128 0x28
 3510 1847 01       		.uleb128 0x1
 3511 1848 50       		.byte	0x50
 3512 1849 05       		.uleb128 0x5
 3513 184a 0C       		.byte	0xc
 3514 184b 00033240 		.4byte	0x40320300
 3515 184f 28       		.uleb128 0x28
 3516 1850 01       		.uleb128 0x1
 3517 1851 51       		.byte	0x51
 3518 1852 02       		.uleb128 0x2
 3519 1853 74       		.byte	0x74
 3520 1854 00       		.sleb128 0
 3521 1855 00       		.byte	0
 3522 1856 00       		.byte	0
 3523 1857 25       		.uleb128 0x25
 3524 1858 90000000 		.4byte	.LBB87
 3525 185c 18000000 		.4byte	.LBE87-.LBB87
 3526 1860 AC180000 		.4byte	0x18ac
 3527 1864 2E       		.uleb128 0x2e
 3528 1865 84150000 		.4byte	.LASF374
 3529 1869 01       		.byte	0x1
 3530 186a 2B01     		.2byte	0x12b
 3531 186c F4180000 		.4byte	0x18f4
 3532 1870 02       		.uleb128 0x2
 3533 1871 91       		.byte	0x91
 3534 1872 4C       		.sleb128 -52
 3535 1873 27       		.uleb128 0x27
 3536 1874 9A000000 		.4byte	.LVL40
 3537 1878 56190000 		.4byte	0x1956
 3538 187c 92180000 		.4byte	0x1892
 3539 1880 28       		.uleb128 0x28
 3540 1881 01       		.uleb128 0x1
 3541 1882 50       		.byte	0x50
 3542 1883 02       		.uleb128 0x2
 3543 1884 74       		.byte	0x74
 3544 1885 00       		.sleb128 0
 3545 1886 28       		.uleb128 0x28
 3546 1887 01       		.uleb128 0x1
 3547 1888 51       		.byte	0x51
 3548 1889 01       		.uleb128 0x1
 3549 188a 30       		.byte	0x30
 3550 188b 28       		.uleb128 0x28
 3551 188c 01       		.uleb128 0x1
 3552 188d 52       		.byte	0x52
 3553 188e 02       		.uleb128 0x2
 3554 188f 08       		.byte	0x8
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 160


 3555 1890 24       		.byte	0x24
 3556 1891 00       		.byte	0
 3557 1892 29       		.uleb128 0x29
 3558 1893 A8000000 		.4byte	.LVL41
 3559 1897 4A190000 		.4byte	0x194a
 3560 189b 28       		.uleb128 0x28
 3561 189c 01       		.uleb128 0x1
 3562 189d 50       		.byte	0x50
 3563 189e 05       		.uleb128 0x5
 3564 189f 0C       		.byte	0xc
 3565 18a0 80053240 		.4byte	0x40320580
 3566 18a4 28       		.uleb128 0x28
 3567 18a5 01       		.uleb128 0x1
 3568 18a6 51       		.byte	0x51
 3569 18a7 02       		.uleb128 0x2
 3570 18a8 74       		.byte	0x74
 3571 18a9 00       		.sleb128 0
 3572 18aa 00       		.byte	0
 3573 18ab 00       		.byte	0
 3574 18ac 27       		.uleb128 0x27
 3575 18ad 0C000000 		.4byte	.LVL33
 3576 18b1 3E190000 		.4byte	0x193e
 3577 18b5 C5180000 		.4byte	0x18c5
 3578 18b9 28       		.uleb128 0x28
 3579 18ba 01       		.uleb128 0x1
 3580 18bb 50       		.byte	0x50
 3581 18bc 01       		.uleb128 0x1
 3582 18bd 30       		.byte	0x30
 3583 18be 28       		.uleb128 0x28
 3584 18bf 01       		.uleb128 0x1
 3585 18c0 51       		.byte	0x51
 3586 18c1 02       		.uleb128 0x2
 3587 18c2 08       		.byte	0x8
 3588 18c3 96       		.byte	0x96
 3589 18c4 00       		.byte	0
 3590 18c5 2F       		.uleb128 0x2f
 3591 18c6 10000000 		.4byte	.LVL34
 3592 18ca 5F190000 		.4byte	0x195f
 3593 18ce 2F       		.uleb128 0x2f
 3594 18cf 18000000 		.4byte	.LVL35
 3595 18d3 6B190000 		.4byte	0x196b
 3596 18d7 27       		.uleb128 0x27
 3597 18d8 44000000 		.4byte	.LVL37
 3598 18dc 77190000 		.4byte	0x1977
 3599 18e0 EA180000 		.4byte	0x18ea
 3600 18e4 28       		.uleb128 0x28
 3601 18e5 01       		.uleb128 0x1
 3602 18e6 50       		.byte	0x50
 3603 18e7 01       		.uleb128 0x1
 3604 18e8 31       		.byte	0x31
 3605 18e9 00       		.byte	0
 3606 18ea 2F       		.uleb128 0x2f
 3607 18eb 74000000 		.4byte	.LVL38
 3608 18ef 8F140000 		.4byte	0x148f
 3609 18f3 00       		.byte	0
 3610 18f4 06       		.uleb128 0x6
 3611 18f5 A80E0000 		.4byte	0xea8
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 161


 3612 18f9 30       		.uleb128 0x30
 3613 18fa 7D000000 		.4byte	.LASF391
 3614 18fe 0A       		.byte	0xa
 3615 18ff A7       		.byte	0xa7
 3616 1900 04190000 		.4byte	0x1904
 3617 1904 31       		.uleb128 0x31
 3618 1905 04       		.byte	0x4
 3619 1906 0A190000 		.4byte	0x190a
 3620 190a 06       		.uleb128 0x6
 3621 190b 020E0000 		.4byte	0xe02
 3622 190f 32       		.uleb128 0x32
 3623 1910 290D0000 		.4byte	.LASF375
 3624 1914 290D0000 		.4byte	.LASF375
 3625 1918 02       		.byte	0x2
 3626 1919 1603     		.2byte	0x316
 3627 191b 32       		.uleb128 0x32
 3628 191c E6000000 		.4byte	.LASF376
 3629 1920 E6000000 		.4byte	.LASF376
 3630 1924 02       		.byte	0x2
 3631 1925 D802     		.2byte	0x2d8
 3632 1927 32       		.uleb128 0x32
 3633 1928 88040000 		.4byte	.LASF377
 3634 192c 88040000 		.4byte	.LASF377
 3635 1930 02       		.byte	0x2
 3636 1931 1803     		.2byte	0x318
 3637 1933 33       		.uleb128 0x33
 3638 1934 15130000 		.4byte	.LASF378
 3639 1938 15130000 		.4byte	.LASF378
 3640 193c 0D       		.byte	0xd
 3641 193d 90       		.byte	0x90
 3642 193e 32       		.uleb128 0x32
 3643 193f 3E150000 		.4byte	.LASF379
 3644 1943 3E150000 		.4byte	.LASF379
 3645 1947 0B       		.byte	0xb
 3646 1948 A003     		.2byte	0x3a0
 3647 194a 32       		.uleb128 0x32
 3648 194b 6E050000 		.4byte	.LASF380
 3649 194f 6E050000 		.4byte	.LASF380
 3650 1953 0C       		.byte	0xc
 3651 1954 1702     		.2byte	0x217
 3652 1956 34       		.uleb128 0x34
 3653 1957 F8100000 		.4byte	.LASF392
 3654 195b F8100000 		.4byte	.LASF392
 3655 195f 32       		.uleb128 0x32
 3656 1960 000C0000 		.4byte	.LASF381
 3657 1964 000C0000 		.4byte	.LASF381
 3658 1968 0B       		.byte	0xb
 3659 1969 9603     		.2byte	0x396
 3660 196b 32       		.uleb128 0x32
 3661 196c 0D0D0000 		.4byte	.LASF382
 3662 1970 0D0D0000 		.4byte	.LASF382
 3663 1974 0B       		.byte	0xb
 3664 1975 9503     		.2byte	0x395
 3665 1977 32       		.uleb128 0x32
 3666 1978 D90B0000 		.4byte	.LASF383
 3667 197c D90B0000 		.4byte	.LASF383
 3668 1980 03       		.byte	0x3
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 162


 3669 1981 6606     		.2byte	0x666
 3670 1983 00       		.byte	0
 3671              		.section	.debug_abbrev,"",%progbits
 3672              	.Ldebug_abbrev0:
 3673 0000 01       		.uleb128 0x1
 3674 0001 11       		.uleb128 0x11
 3675 0002 01       		.byte	0x1
 3676 0003 25       		.uleb128 0x25
 3677 0004 0E       		.uleb128 0xe
 3678 0005 13       		.uleb128 0x13
 3679 0006 0B       		.uleb128 0xb
 3680 0007 03       		.uleb128 0x3
 3681 0008 0E       		.uleb128 0xe
 3682 0009 1B       		.uleb128 0x1b
 3683 000a 0E       		.uleb128 0xe
 3684 000b 55       		.uleb128 0x55
 3685 000c 17       		.uleb128 0x17
 3686 000d 11       		.uleb128 0x11
 3687 000e 01       		.uleb128 0x1
 3688 000f 10       		.uleb128 0x10
 3689 0010 17       		.uleb128 0x17
 3690 0011 00       		.byte	0
 3691 0012 00       		.byte	0
 3692 0013 02       		.uleb128 0x2
 3693 0014 24       		.uleb128 0x24
 3694 0015 00       		.byte	0
 3695 0016 0B       		.uleb128 0xb
 3696 0017 0B       		.uleb128 0xb
 3697 0018 3E       		.uleb128 0x3e
 3698 0019 0B       		.uleb128 0xb
 3699 001a 03       		.uleb128 0x3
 3700 001b 08       		.uleb128 0x8
 3701 001c 00       		.byte	0
 3702 001d 00       		.byte	0
 3703 001e 03       		.uleb128 0x3
 3704 001f 24       		.uleb128 0x24
 3705 0020 00       		.byte	0
 3706 0021 0B       		.uleb128 0xb
 3707 0022 0B       		.uleb128 0xb
 3708 0023 3E       		.uleb128 0x3e
 3709 0024 0B       		.uleb128 0xb
 3710 0025 03       		.uleb128 0x3
 3711 0026 0E       		.uleb128 0xe
 3712 0027 00       		.byte	0
 3713 0028 00       		.byte	0
 3714 0029 04       		.uleb128 0x4
 3715 002a 16       		.uleb128 0x16
 3716 002b 00       		.byte	0
 3717 002c 03       		.uleb128 0x3
 3718 002d 0E       		.uleb128 0xe
 3719 002e 3A       		.uleb128 0x3a
 3720 002f 0B       		.uleb128 0xb
 3721 0030 3B       		.uleb128 0x3b
 3722 0031 0B       		.uleb128 0xb
 3723 0032 49       		.uleb128 0x49
 3724 0033 13       		.uleb128 0x13
 3725 0034 00       		.byte	0
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 163


 3726 0035 00       		.byte	0
 3727 0036 05       		.uleb128 0x5
 3728 0037 35       		.uleb128 0x35
 3729 0038 00       		.byte	0
 3730 0039 49       		.uleb128 0x49
 3731 003a 13       		.uleb128 0x13
 3732 003b 00       		.byte	0
 3733 003c 00       		.byte	0
 3734 003d 06       		.uleb128 0x6
 3735 003e 26       		.uleb128 0x26
 3736 003f 00       		.byte	0
 3737 0040 49       		.uleb128 0x49
 3738 0041 13       		.uleb128 0x13
 3739 0042 00       		.byte	0
 3740 0043 00       		.byte	0
 3741 0044 07       		.uleb128 0x7
 3742 0045 01       		.uleb128 0x1
 3743 0046 01       		.byte	0x1
 3744 0047 49       		.uleb128 0x49
 3745 0048 13       		.uleb128 0x13
 3746 0049 01       		.uleb128 0x1
 3747 004a 13       		.uleb128 0x13
 3748 004b 00       		.byte	0
 3749 004c 00       		.byte	0
 3750 004d 08       		.uleb128 0x8
 3751 004e 21       		.uleb128 0x21
 3752 004f 00       		.byte	0
 3753 0050 49       		.uleb128 0x49
 3754 0051 13       		.uleb128 0x13
 3755 0052 2F       		.uleb128 0x2f
 3756 0053 0B       		.uleb128 0xb
 3757 0054 00       		.byte	0
 3758 0055 00       		.byte	0
 3759 0056 09       		.uleb128 0x9
 3760 0057 13       		.uleb128 0x13
 3761 0058 01       		.byte	0x1
 3762 0059 0B       		.uleb128 0xb
 3763 005a 0B       		.uleb128 0xb
 3764 005b 3A       		.uleb128 0x3a
 3765 005c 0B       		.uleb128 0xb
 3766 005d 3B       		.uleb128 0x3b
 3767 005e 0B       		.uleb128 0xb
 3768 005f 01       		.uleb128 0x1
 3769 0060 13       		.uleb128 0x13
 3770 0061 00       		.byte	0
 3771 0062 00       		.byte	0
 3772 0063 0A       		.uleb128 0xa
 3773 0064 0D       		.uleb128 0xd
 3774 0065 00       		.byte	0
 3775 0066 03       		.uleb128 0x3
 3776 0067 0E       		.uleb128 0xe
 3777 0068 3A       		.uleb128 0x3a
 3778 0069 0B       		.uleb128 0xb
 3779 006a 3B       		.uleb128 0x3b
 3780 006b 0B       		.uleb128 0xb
 3781 006c 49       		.uleb128 0x49
 3782 006d 13       		.uleb128 0x13
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 164


 3783 006e 38       		.uleb128 0x38
 3784 006f 0B       		.uleb128 0xb
 3785 0070 00       		.byte	0
 3786 0071 00       		.byte	0
 3787 0072 0B       		.uleb128 0xb
 3788 0073 13       		.uleb128 0x13
 3789 0074 01       		.byte	0x1
 3790 0075 0B       		.uleb128 0xb
 3791 0076 05       		.uleb128 0x5
 3792 0077 3A       		.uleb128 0x3a
 3793 0078 0B       		.uleb128 0xb
 3794 0079 3B       		.uleb128 0x3b
 3795 007a 0B       		.uleb128 0xb
 3796 007b 01       		.uleb128 0x1
 3797 007c 13       		.uleb128 0x13
 3798 007d 00       		.byte	0
 3799 007e 00       		.byte	0
 3800 007f 0C       		.uleb128 0xc
 3801 0080 0D       		.uleb128 0xd
 3802 0081 00       		.byte	0
 3803 0082 03       		.uleb128 0x3
 3804 0083 0E       		.uleb128 0xe
 3805 0084 3A       		.uleb128 0x3a
 3806 0085 0B       		.uleb128 0xb
 3807 0086 3B       		.uleb128 0x3b
 3808 0087 0B       		.uleb128 0xb
 3809 0088 49       		.uleb128 0x49
 3810 0089 13       		.uleb128 0x13
 3811 008a 38       		.uleb128 0x38
 3812 008b 05       		.uleb128 0x5
 3813 008c 00       		.byte	0
 3814 008d 00       		.byte	0
 3815 008e 0D       		.uleb128 0xd
 3816 008f 21       		.uleb128 0x21
 3817 0090 00       		.byte	0
 3818 0091 49       		.uleb128 0x49
 3819 0092 13       		.uleb128 0x13
 3820 0093 2F       		.uleb128 0x2f
 3821 0094 05       		.uleb128 0x5
 3822 0095 00       		.byte	0
 3823 0096 00       		.byte	0
 3824 0097 0E       		.uleb128 0xe
 3825 0098 0D       		.uleb128 0xd
 3826 0099 00       		.byte	0
 3827 009a 03       		.uleb128 0x3
 3828 009b 08       		.uleb128 0x8
 3829 009c 3A       		.uleb128 0x3a
 3830 009d 0B       		.uleb128 0xb
 3831 009e 3B       		.uleb128 0x3b
 3832 009f 0B       		.uleb128 0xb
 3833 00a0 49       		.uleb128 0x49
 3834 00a1 13       		.uleb128 0x13
 3835 00a2 38       		.uleb128 0x38
 3836 00a3 0B       		.uleb128 0xb
 3837 00a4 00       		.byte	0
 3838 00a5 00       		.byte	0
 3839 00a6 0F       		.uleb128 0xf
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 165


 3840 00a7 16       		.uleb128 0x16
 3841 00a8 00       		.byte	0
 3842 00a9 03       		.uleb128 0x3
 3843 00aa 0E       		.uleb128 0xe
 3844 00ab 3A       		.uleb128 0x3a
 3845 00ac 0B       		.uleb128 0xb
 3846 00ad 3B       		.uleb128 0x3b
 3847 00ae 05       		.uleb128 0x5
 3848 00af 49       		.uleb128 0x49
 3849 00b0 13       		.uleb128 0x13
 3850 00b1 00       		.byte	0
 3851 00b2 00       		.byte	0
 3852 00b3 10       		.uleb128 0x10
 3853 00b4 04       		.uleb128 0x4
 3854 00b5 01       		.byte	0x1
 3855 00b6 0B       		.uleb128 0xb
 3856 00b7 0B       		.uleb128 0xb
 3857 00b8 49       		.uleb128 0x49
 3858 00b9 13       		.uleb128 0x13
 3859 00ba 3A       		.uleb128 0x3a
 3860 00bb 0B       		.uleb128 0xb
 3861 00bc 3B       		.uleb128 0x3b
 3862 00bd 05       		.uleb128 0x5
 3863 00be 01       		.uleb128 0x1
 3864 00bf 13       		.uleb128 0x13
 3865 00c0 00       		.byte	0
 3866 00c1 00       		.byte	0
 3867 00c2 11       		.uleb128 0x11
 3868 00c3 28       		.uleb128 0x28
 3869 00c4 00       		.byte	0
 3870 00c5 03       		.uleb128 0x3
 3871 00c6 0E       		.uleb128 0xe
 3872 00c7 1C       		.uleb128 0x1c
 3873 00c8 0B       		.uleb128 0xb
 3874 00c9 00       		.byte	0
 3875 00ca 00       		.byte	0
 3876 00cb 12       		.uleb128 0x12
 3877 00cc 28       		.uleb128 0x28
 3878 00cd 00       		.byte	0
 3879 00ce 03       		.uleb128 0x3
 3880 00cf 0E       		.uleb128 0xe
 3881 00d0 1C       		.uleb128 0x1c
 3882 00d1 06       		.uleb128 0x6
 3883 00d2 00       		.byte	0
 3884 00d3 00       		.byte	0
 3885 00d4 13       		.uleb128 0x13
 3886 00d5 28       		.uleb128 0x28
 3887 00d6 00       		.byte	0
 3888 00d7 03       		.uleb128 0x3
 3889 00d8 0E       		.uleb128 0xe
 3890 00d9 1C       		.uleb128 0x1c
 3891 00da 05       		.uleb128 0x5
 3892 00db 00       		.byte	0
 3893 00dc 00       		.byte	0
 3894 00dd 14       		.uleb128 0x14
 3895 00de 13       		.uleb128 0x13
 3896 00df 01       		.byte	0x1
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 166


 3897 00e0 0B       		.uleb128 0xb
 3898 00e1 0B       		.uleb128 0xb
 3899 00e2 3A       		.uleb128 0x3a
 3900 00e3 0B       		.uleb128 0xb
 3901 00e4 3B       		.uleb128 0x3b
 3902 00e5 05       		.uleb128 0x5
 3903 00e6 01       		.uleb128 0x1
 3904 00e7 13       		.uleb128 0x13
 3905 00e8 00       		.byte	0
 3906 00e9 00       		.byte	0
 3907 00ea 15       		.uleb128 0x15
 3908 00eb 0D       		.uleb128 0xd
 3909 00ec 00       		.byte	0
 3910 00ed 03       		.uleb128 0x3
 3911 00ee 0E       		.uleb128 0xe
 3912 00ef 3A       		.uleb128 0x3a
 3913 00f0 0B       		.uleb128 0xb
 3914 00f1 3B       		.uleb128 0x3b
 3915 00f2 05       		.uleb128 0x5
 3916 00f3 49       		.uleb128 0x49
 3917 00f4 13       		.uleb128 0x13
 3918 00f5 38       		.uleb128 0x38
 3919 00f6 0B       		.uleb128 0xb
 3920 00f7 00       		.byte	0
 3921 00f8 00       		.byte	0
 3922 00f9 16       		.uleb128 0x16
 3923 00fa 04       		.uleb128 0x4
 3924 00fb 01       		.byte	0x1
 3925 00fc 0B       		.uleb128 0xb
 3926 00fd 0B       		.uleb128 0xb
 3927 00fe 49       		.uleb128 0x49
 3928 00ff 13       		.uleb128 0x13
 3929 0100 3A       		.uleb128 0x3a
 3930 0101 0B       		.uleb128 0xb
 3931 0102 3B       		.uleb128 0x3b
 3932 0103 0B       		.uleb128 0xb
 3933 0104 01       		.uleb128 0x1
 3934 0105 13       		.uleb128 0x13
 3935 0106 00       		.byte	0
 3936 0107 00       		.byte	0
 3937 0108 17       		.uleb128 0x17
 3938 0109 2E       		.uleb128 0x2e
 3939 010a 01       		.byte	0x1
 3940 010b 03       		.uleb128 0x3
 3941 010c 0E       		.uleb128 0xe
 3942 010d 3A       		.uleb128 0x3a
 3943 010e 0B       		.uleb128 0xb
 3944 010f 3B       		.uleb128 0x3b
 3945 0110 05       		.uleb128 0x5
 3946 0111 27       		.uleb128 0x27
 3947 0112 19       		.uleb128 0x19
 3948 0113 49       		.uleb128 0x49
 3949 0114 13       		.uleb128 0x13
 3950 0115 20       		.uleb128 0x20
 3951 0116 0B       		.uleb128 0xb
 3952 0117 01       		.uleb128 0x1
 3953 0118 13       		.uleb128 0x13
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 167


 3954 0119 00       		.byte	0
 3955 011a 00       		.byte	0
 3956 011b 18       		.uleb128 0x18
 3957 011c 05       		.uleb128 0x5
 3958 011d 00       		.byte	0
 3959 011e 03       		.uleb128 0x3
 3960 011f 0E       		.uleb128 0xe
 3961 0120 3A       		.uleb128 0x3a
 3962 0121 0B       		.uleb128 0xb
 3963 0122 3B       		.uleb128 0x3b
 3964 0123 05       		.uleb128 0x5
 3965 0124 49       		.uleb128 0x49
 3966 0125 13       		.uleb128 0x13
 3967 0126 00       		.byte	0
 3968 0127 00       		.byte	0
 3969 0128 19       		.uleb128 0x19
 3970 0129 34       		.uleb128 0x34
 3971 012a 00       		.byte	0
 3972 012b 03       		.uleb128 0x3
 3973 012c 0E       		.uleb128 0xe
 3974 012d 3A       		.uleb128 0x3a
 3975 012e 0B       		.uleb128 0xb
 3976 012f 3B       		.uleb128 0x3b
 3977 0130 05       		.uleb128 0x5
 3978 0131 49       		.uleb128 0x49
 3979 0132 13       		.uleb128 0x13
 3980 0133 00       		.byte	0
 3981 0134 00       		.byte	0
 3982 0135 1A       		.uleb128 0x1a
 3983 0136 2E       		.uleb128 0x2e
 3984 0137 01       		.byte	0x1
 3985 0138 03       		.uleb128 0x3
 3986 0139 0E       		.uleb128 0xe
 3987 013a 3A       		.uleb128 0x3a
 3988 013b 0B       		.uleb128 0xb
 3989 013c 3B       		.uleb128 0x3b
 3990 013d 05       		.uleb128 0x5
 3991 013e 27       		.uleb128 0x27
 3992 013f 19       		.uleb128 0x19
 3993 0140 20       		.uleb128 0x20
 3994 0141 0B       		.uleb128 0xb
 3995 0142 01       		.uleb128 0x1
 3996 0143 13       		.uleb128 0x13
 3997 0144 00       		.byte	0
 3998 0145 00       		.byte	0
 3999 0146 1B       		.uleb128 0x1b
 4000 0147 05       		.uleb128 0x5
 4001 0148 00       		.byte	0
 4002 0149 03       		.uleb128 0x3
 4003 014a 08       		.uleb128 0x8
 4004 014b 3A       		.uleb128 0x3a
 4005 014c 0B       		.uleb128 0xb
 4006 014d 3B       		.uleb128 0x3b
 4007 014e 05       		.uleb128 0x5
 4008 014f 49       		.uleb128 0x49
 4009 0150 13       		.uleb128 0x13
 4010 0151 00       		.byte	0
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 168


 4011 0152 00       		.byte	0
 4012 0153 1C       		.uleb128 0x1c
 4013 0154 2E       		.uleb128 0x2e
 4014 0155 00       		.byte	0
 4015 0156 03       		.uleb128 0x3
 4016 0157 0E       		.uleb128 0xe
 4017 0158 3A       		.uleb128 0x3a
 4018 0159 0B       		.uleb128 0xb
 4019 015a 3B       		.uleb128 0x3b
 4020 015b 05       		.uleb128 0x5
 4021 015c 27       		.uleb128 0x27
 4022 015d 19       		.uleb128 0x19
 4023 015e 20       		.uleb128 0x20
 4024 015f 0B       		.uleb128 0xb
 4025 0160 00       		.byte	0
 4026 0161 00       		.byte	0
 4027 0162 1D       		.uleb128 0x1d
 4028 0163 2E       		.uleb128 0x2e
 4029 0164 01       		.byte	0x1
 4030 0165 03       		.uleb128 0x3
 4031 0166 0E       		.uleb128 0xe
 4032 0167 3A       		.uleb128 0x3a
 4033 0168 0B       		.uleb128 0xb
 4034 0169 3B       		.uleb128 0x3b
 4035 016a 0B       		.uleb128 0xb
 4036 016b 27       		.uleb128 0x27
 4037 016c 19       		.uleb128 0x19
 4038 016d 8701     		.uleb128 0x87
 4039 016f 19       		.uleb128 0x19
 4040 0170 11       		.uleb128 0x11
 4041 0171 01       		.uleb128 0x1
 4042 0172 12       		.uleb128 0x12
 4043 0173 06       		.uleb128 0x6
 4044 0174 40       		.uleb128 0x40
 4045 0175 18       		.uleb128 0x18
 4046 0176 9742     		.uleb128 0x2117
 4047 0178 19       		.uleb128 0x19
 4048 0179 01       		.uleb128 0x1
 4049 017a 13       		.uleb128 0x13
 4050 017b 00       		.byte	0
 4051 017c 00       		.byte	0
 4052 017d 1E       		.uleb128 0x1e
 4053 017e 05       		.uleb128 0x5
 4054 017f 00       		.byte	0
 4055 0180 03       		.uleb128 0x3
 4056 0181 0E       		.uleb128 0xe
 4057 0182 3A       		.uleb128 0x3a
 4058 0183 0B       		.uleb128 0xb
 4059 0184 3B       		.uleb128 0x3b
 4060 0185 0B       		.uleb128 0xb
 4061 0186 49       		.uleb128 0x49
 4062 0187 13       		.uleb128 0x13
 4063 0188 02       		.uleb128 0x2
 4064 0189 18       		.uleb128 0x18
 4065 018a 00       		.byte	0
 4066 018b 00       		.byte	0
 4067 018c 1F       		.uleb128 0x1f
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 169


 4068 018d 2E       		.uleb128 0x2e
 4069 018e 01       		.byte	0x1
 4070 018f 03       		.uleb128 0x3
 4071 0190 0E       		.uleb128 0xe
 4072 0191 3A       		.uleb128 0x3a
 4073 0192 0B       		.uleb128 0xb
 4074 0193 3B       		.uleb128 0x3b
 4075 0194 0B       		.uleb128 0xb
 4076 0195 27       		.uleb128 0x27
 4077 0196 19       		.uleb128 0x19
 4078 0197 11       		.uleb128 0x11
 4079 0198 01       		.uleb128 0x1
 4080 0199 12       		.uleb128 0x12
 4081 019a 06       		.uleb128 0x6
 4082 019b 40       		.uleb128 0x40
 4083 019c 18       		.uleb128 0x18
 4084 019d 9742     		.uleb128 0x2117
 4085 019f 19       		.uleb128 0x19
 4086 01a0 01       		.uleb128 0x1
 4087 01a1 13       		.uleb128 0x13
 4088 01a2 00       		.byte	0
 4089 01a3 00       		.byte	0
 4090 01a4 20       		.uleb128 0x20
 4091 01a5 34       		.uleb128 0x34
 4092 01a6 00       		.byte	0
 4093 01a7 03       		.uleb128 0x3
 4094 01a8 0E       		.uleb128 0xe
 4095 01a9 3A       		.uleb128 0x3a
 4096 01aa 0B       		.uleb128 0xb
 4097 01ab 3B       		.uleb128 0x3b
 4098 01ac 0B       		.uleb128 0xb
 4099 01ad 49       		.uleb128 0x49
 4100 01ae 13       		.uleb128 0x13
 4101 01af 02       		.uleb128 0x2
 4102 01b0 17       		.uleb128 0x17
 4103 01b1 00       		.byte	0
 4104 01b2 00       		.byte	0
 4105 01b3 21       		.uleb128 0x21
 4106 01b4 1D       		.uleb128 0x1d
 4107 01b5 01       		.byte	0x1
 4108 01b6 31       		.uleb128 0x31
 4109 01b7 13       		.uleb128 0x13
 4110 01b8 11       		.uleb128 0x11
 4111 01b9 01       		.uleb128 0x1
 4112 01ba 12       		.uleb128 0x12
 4113 01bb 06       		.uleb128 0x6
 4114 01bc 58       		.uleb128 0x58
 4115 01bd 0B       		.uleb128 0xb
 4116 01be 59       		.uleb128 0x59
 4117 01bf 0B       		.uleb128 0xb
 4118 01c0 01       		.uleb128 0x1
 4119 01c1 13       		.uleb128 0x13
 4120 01c2 00       		.byte	0
 4121 01c3 00       		.byte	0
 4122 01c4 22       		.uleb128 0x22
 4123 01c5 05       		.uleb128 0x5
 4124 01c6 00       		.byte	0
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 170


 4125 01c7 31       		.uleb128 0x31
 4126 01c8 13       		.uleb128 0x13
 4127 01c9 02       		.uleb128 0x2
 4128 01ca 17       		.uleb128 0x17
 4129 01cb 00       		.byte	0
 4130 01cc 00       		.byte	0
 4131 01cd 23       		.uleb128 0x23
 4132 01ce 0B       		.uleb128 0xb
 4133 01cf 01       		.byte	0x1
 4134 01d0 11       		.uleb128 0x11
 4135 01d1 01       		.uleb128 0x1
 4136 01d2 12       		.uleb128 0x12
 4137 01d3 06       		.uleb128 0x6
 4138 01d4 00       		.byte	0
 4139 01d5 00       		.byte	0
 4140 01d6 24       		.uleb128 0x24
 4141 01d7 34       		.uleb128 0x34
 4142 01d8 00       		.byte	0
 4143 01d9 31       		.uleb128 0x31
 4144 01da 13       		.uleb128 0x13
 4145 01db 02       		.uleb128 0x2
 4146 01dc 17       		.uleb128 0x17
 4147 01dd 00       		.byte	0
 4148 01de 00       		.byte	0
 4149 01df 25       		.uleb128 0x25
 4150 01e0 0B       		.uleb128 0xb
 4151 01e1 01       		.byte	0x1
 4152 01e2 11       		.uleb128 0x11
 4153 01e3 01       		.uleb128 0x1
 4154 01e4 12       		.uleb128 0x12
 4155 01e5 06       		.uleb128 0x6
 4156 01e6 01       		.uleb128 0x1
 4157 01e7 13       		.uleb128 0x13
 4158 01e8 00       		.byte	0
 4159 01e9 00       		.byte	0
 4160 01ea 26       		.uleb128 0x26
 4161 01eb 34       		.uleb128 0x34
 4162 01ec 00       		.byte	0
 4163 01ed 03       		.uleb128 0x3
 4164 01ee 0E       		.uleb128 0xe
 4165 01ef 3A       		.uleb128 0x3a
 4166 01f0 0B       		.uleb128 0xb
 4167 01f1 3B       		.uleb128 0x3b
 4168 01f2 0B       		.uleb128 0xb
 4169 01f3 49       		.uleb128 0x49
 4170 01f4 13       		.uleb128 0x13
 4171 01f5 02       		.uleb128 0x2
 4172 01f6 18       		.uleb128 0x18
 4173 01f7 00       		.byte	0
 4174 01f8 00       		.byte	0
 4175 01f9 27       		.uleb128 0x27
 4176 01fa 898201   		.uleb128 0x4109
 4177 01fd 01       		.byte	0x1
 4178 01fe 11       		.uleb128 0x11
 4179 01ff 01       		.uleb128 0x1
 4180 0200 31       		.uleb128 0x31
 4181 0201 13       		.uleb128 0x13
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 171


 4182 0202 01       		.uleb128 0x1
 4183 0203 13       		.uleb128 0x13
 4184 0204 00       		.byte	0
 4185 0205 00       		.byte	0
 4186 0206 28       		.uleb128 0x28
 4187 0207 8A8201   		.uleb128 0x410a
 4188 020a 00       		.byte	0
 4189 020b 02       		.uleb128 0x2
 4190 020c 18       		.uleb128 0x18
 4191 020d 9142     		.uleb128 0x2111
 4192 020f 18       		.uleb128 0x18
 4193 0210 00       		.byte	0
 4194 0211 00       		.byte	0
 4195 0212 29       		.uleb128 0x29
 4196 0213 898201   		.uleb128 0x4109
 4197 0216 01       		.byte	0x1
 4198 0217 11       		.uleb128 0x11
 4199 0218 01       		.uleb128 0x1
 4200 0219 31       		.uleb128 0x31
 4201 021a 13       		.uleb128 0x13
 4202 021b 00       		.byte	0
 4203 021c 00       		.byte	0
 4204 021d 2A       		.uleb128 0x2a
 4205 021e 1D       		.uleb128 0x1d
 4206 021f 00       		.byte	0
 4207 0220 31       		.uleb128 0x31
 4208 0221 13       		.uleb128 0x13
 4209 0222 11       		.uleb128 0x11
 4210 0223 01       		.uleb128 0x1
 4211 0224 12       		.uleb128 0x12
 4212 0225 06       		.uleb128 0x6
 4213 0226 58       		.uleb128 0x58
 4214 0227 0B       		.uleb128 0xb
 4215 0228 59       		.uleb128 0x59
 4216 0229 0B       		.uleb128 0xb
 4217 022a 00       		.byte	0
 4218 022b 00       		.byte	0
 4219 022c 2B       		.uleb128 0x2b
 4220 022d 2E       		.uleb128 0x2e
 4221 022e 01       		.byte	0x1
 4222 022f 3F       		.uleb128 0x3f
 4223 0230 19       		.uleb128 0x19
 4224 0231 03       		.uleb128 0x3
 4225 0232 0E       		.uleb128 0xe
 4226 0233 3A       		.uleb128 0x3a
 4227 0234 0B       		.uleb128 0xb
 4228 0235 3B       		.uleb128 0x3b
 4229 0236 05       		.uleb128 0x5
 4230 0237 27       		.uleb128 0x27
 4231 0238 19       		.uleb128 0x19
 4232 0239 11       		.uleb128 0x11
 4233 023a 01       		.uleb128 0x1
 4234 023b 12       		.uleb128 0x12
 4235 023c 06       		.uleb128 0x6
 4236 023d 40       		.uleb128 0x40
 4237 023e 18       		.uleb128 0x18
 4238 023f 9742     		.uleb128 0x2117
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 172


 4239 0241 19       		.uleb128 0x19
 4240 0242 01       		.uleb128 0x1
 4241 0243 13       		.uleb128 0x13
 4242 0244 00       		.byte	0
 4243 0245 00       		.byte	0
 4244 0246 2C       		.uleb128 0x2c
 4245 0247 1D       		.uleb128 0x1d
 4246 0248 01       		.byte	0x1
 4247 0249 31       		.uleb128 0x31
 4248 024a 13       		.uleb128 0x13
 4249 024b 11       		.uleb128 0x11
 4250 024c 01       		.uleb128 0x1
 4251 024d 12       		.uleb128 0x12
 4252 024e 06       		.uleb128 0x6
 4253 024f 58       		.uleb128 0x58
 4254 0250 0B       		.uleb128 0xb
 4255 0251 59       		.uleb128 0x59
 4256 0252 05       		.uleb128 0x5
 4257 0253 01       		.uleb128 0x1
 4258 0254 13       		.uleb128 0x13
 4259 0255 00       		.byte	0
 4260 0256 00       		.byte	0
 4261 0257 2D       		.uleb128 0x2d
 4262 0258 1D       		.uleb128 0x1d
 4263 0259 00       		.byte	0
 4264 025a 31       		.uleb128 0x31
 4265 025b 13       		.uleb128 0x13
 4266 025c 11       		.uleb128 0x11
 4267 025d 01       		.uleb128 0x1
 4268 025e 12       		.uleb128 0x12
 4269 025f 06       		.uleb128 0x6
 4270 0260 58       		.uleb128 0x58
 4271 0261 0B       		.uleb128 0xb
 4272 0262 59       		.uleb128 0x59
 4273 0263 05       		.uleb128 0x5
 4274 0264 00       		.byte	0
 4275 0265 00       		.byte	0
 4276 0266 2E       		.uleb128 0x2e
 4277 0267 34       		.uleb128 0x34
 4278 0268 00       		.byte	0
 4279 0269 03       		.uleb128 0x3
 4280 026a 0E       		.uleb128 0xe
 4281 026b 3A       		.uleb128 0x3a
 4282 026c 0B       		.uleb128 0xb
 4283 026d 3B       		.uleb128 0x3b
 4284 026e 05       		.uleb128 0x5
 4285 026f 49       		.uleb128 0x49
 4286 0270 13       		.uleb128 0x13
 4287 0271 02       		.uleb128 0x2
 4288 0272 18       		.uleb128 0x18
 4289 0273 00       		.byte	0
 4290 0274 00       		.byte	0
 4291 0275 2F       		.uleb128 0x2f
 4292 0276 898201   		.uleb128 0x4109
 4293 0279 00       		.byte	0
 4294 027a 11       		.uleb128 0x11
 4295 027b 01       		.uleb128 0x1
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 173


 4296 027c 31       		.uleb128 0x31
 4297 027d 13       		.uleb128 0x13
 4298 027e 00       		.byte	0
 4299 027f 00       		.byte	0
 4300 0280 30       		.uleb128 0x30
 4301 0281 34       		.uleb128 0x34
 4302 0282 00       		.byte	0
 4303 0283 03       		.uleb128 0x3
 4304 0284 0E       		.uleb128 0xe
 4305 0285 3A       		.uleb128 0x3a
 4306 0286 0B       		.uleb128 0xb
 4307 0287 3B       		.uleb128 0x3b
 4308 0288 0B       		.uleb128 0xb
 4309 0289 49       		.uleb128 0x49
 4310 028a 13       		.uleb128 0x13
 4311 028b 3F       		.uleb128 0x3f
 4312 028c 19       		.uleb128 0x19
 4313 028d 3C       		.uleb128 0x3c
 4314 028e 19       		.uleb128 0x19
 4315 028f 00       		.byte	0
 4316 0290 00       		.byte	0
 4317 0291 31       		.uleb128 0x31
 4318 0292 0F       		.uleb128 0xf
 4319 0293 00       		.byte	0
 4320 0294 0B       		.uleb128 0xb
 4321 0295 0B       		.uleb128 0xb
 4322 0296 49       		.uleb128 0x49
 4323 0297 13       		.uleb128 0x13
 4324 0298 00       		.byte	0
 4325 0299 00       		.byte	0
 4326 029a 32       		.uleb128 0x32
 4327 029b 2E       		.uleb128 0x2e
 4328 029c 00       		.byte	0
 4329 029d 3F       		.uleb128 0x3f
 4330 029e 19       		.uleb128 0x19
 4331 029f 3C       		.uleb128 0x3c
 4332 02a0 19       		.uleb128 0x19
 4333 02a1 6E       		.uleb128 0x6e
 4334 02a2 0E       		.uleb128 0xe
 4335 02a3 03       		.uleb128 0x3
 4336 02a4 0E       		.uleb128 0xe
 4337 02a5 3A       		.uleb128 0x3a
 4338 02a6 0B       		.uleb128 0xb
 4339 02a7 3B       		.uleb128 0x3b
 4340 02a8 05       		.uleb128 0x5
 4341 02a9 00       		.byte	0
 4342 02aa 00       		.byte	0
 4343 02ab 33       		.uleb128 0x33
 4344 02ac 2E       		.uleb128 0x2e
 4345 02ad 00       		.byte	0
 4346 02ae 3F       		.uleb128 0x3f
 4347 02af 19       		.uleb128 0x19
 4348 02b0 3C       		.uleb128 0x3c
 4349 02b1 19       		.uleb128 0x19
 4350 02b2 6E       		.uleb128 0x6e
 4351 02b3 0E       		.uleb128 0xe
 4352 02b4 03       		.uleb128 0x3
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 174


 4353 02b5 0E       		.uleb128 0xe
 4354 02b6 3A       		.uleb128 0x3a
 4355 02b7 0B       		.uleb128 0xb
 4356 02b8 3B       		.uleb128 0x3b
 4357 02b9 0B       		.uleb128 0xb
 4358 02ba 00       		.byte	0
 4359 02bb 00       		.byte	0
 4360 02bc 34       		.uleb128 0x34
 4361 02bd 2E       		.uleb128 0x2e
 4362 02be 00       		.byte	0
 4363 02bf 3F       		.uleb128 0x3f
 4364 02c0 19       		.uleb128 0x19
 4365 02c1 3C       		.uleb128 0x3c
 4366 02c2 19       		.uleb128 0x19
 4367 02c3 6E       		.uleb128 0x6e
 4368 02c4 0E       		.uleb128 0xe
 4369 02c5 03       		.uleb128 0x3
 4370 02c6 0E       		.uleb128 0xe
 4371 02c7 00       		.byte	0
 4372 02c8 00       		.byte	0
 4373 02c9 00       		.byte	0
 4374              		.section	.debug_loc,"",%progbits
 4375              	.Ldebug_loc0:
 4376              	.LLST0:
 4377 0000 CE000000 		.4byte	.LVL14
 4378 0004 D4000000 		.4byte	.LVL15
 4379 0008 0100     		.2byte	0x1
 4380 000a 50       		.byte	0x50
 4381 000b D8000000 		.4byte	.LVL16
 4382 000f E0000000 		.4byte	.LVL17
 4383 0013 0100     		.2byte	0x1
 4384 0015 50       		.byte	0x50
 4385 0016 EC000000 		.4byte	.LVL18
 4386 001a F2000000 		.4byte	.LVL19
 4387 001e 0100     		.2byte	0x1
 4388 0020 50       		.byte	0x50
 4389 0021 F6000000 		.4byte	.LVL20
 4390 0025 48010000 		.4byte	.LVL28
 4391 0029 0100     		.2byte	0x1
 4392 002b 50       		.byte	0x50
 4393 002c 00000000 		.4byte	0
 4394 0030 00000000 		.4byte	0
 4395              	.LLST1:
 4396 0034 04000000 		.4byte	.LVL1
 4397 0038 12000000 		.4byte	.LVL2
 4398 003c 0200     		.2byte	0x2
 4399 003e 30       		.byte	0x30
 4400 003f 9F       		.byte	0x9f
 4401 0040 00000000 		.4byte	0
 4402 0044 00000000 		.4byte	0
 4403              	.LLST2:
 4404 0048 12000000 		.4byte	.LVL2
 4405 004c 26000000 		.4byte	.LVL3
 4406 0050 0200     		.2byte	0x2
 4407 0052 30       		.byte	0x30
 4408 0053 9F       		.byte	0x9f
 4409 0054 00000000 		.4byte	0
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 175


 4410 0058 00000000 		.4byte	0
 4411              	.LLST3:
 4412 005c 26000000 		.4byte	.LVL3
 4413 0060 3E000000 		.4byte	.LVL4
 4414 0064 0200     		.2byte	0x2
 4415 0066 31       		.byte	0x31
 4416 0067 9F       		.byte	0x9f
 4417 0068 00000000 		.4byte	0
 4418 006c 00000000 		.4byte	0
 4419              	.LLST4:
 4420 0070 3E000000 		.4byte	.LVL4
 4421 0074 4C000000 		.4byte	.LVL5
 4422 0078 0200     		.2byte	0x2
 4423 007a 30       		.byte	0x30
 4424 007b 9F       		.byte	0x9f
 4425 007c 00000000 		.4byte	0
 4426 0080 00000000 		.4byte	0
 4427              	.LLST5:
 4428 0084 4C000000 		.4byte	.LVL5
 4429 0088 64000000 		.4byte	.LVL6
 4430 008c 0200     		.2byte	0x2
 4431 008e 30       		.byte	0x30
 4432 008f 9F       		.byte	0x9f
 4433 0090 00000000 		.4byte	0
 4434 0094 00000000 		.4byte	0
 4435              	.LLST7:
 4436 0098 4C000000 		.4byte	.LVL5
 4437 009c 64000000 		.4byte	.LVL6
 4438 00a0 0600     		.2byte	0x6
 4439 00a2 0C       		.byte	0xc
 4440 00a3 01004A00 		.4byte	0x4a0001
 4441 00a7 9F       		.byte	0x9f
 4442 00a8 00000000 		.4byte	0
 4443 00ac 00000000 		.4byte	0
 4444              	.LLST8:
 4445 00b0 64000000 		.4byte	.LVL6
 4446 00b4 7A000000 		.4byte	.LVL7
 4447 00b8 0200     		.2byte	0x2
 4448 00ba 30       		.byte	0x30
 4449 00bb 9F       		.byte	0x9f
 4450 00bc 00000000 		.4byte	0
 4451 00c0 00000000 		.4byte	0
 4452              	.LLST10:
 4453 00c4 64000000 		.4byte	.LVL6
 4454 00c8 7A000000 		.4byte	.LVL7
 4455 00cc 0600     		.2byte	0x6
 4456 00ce 0C       		.byte	0xc
 4457 00cf 01004A00 		.4byte	0x4a0001
 4458 00d3 9F       		.byte	0x9f
 4459 00d4 00000000 		.4byte	0
 4460 00d8 00000000 		.4byte	0
 4461              	.LLST11:
 4462 00dc 7A000000 		.4byte	.LVL7
 4463 00e0 92000000 		.4byte	.LVL8
 4464 00e4 0200     		.2byte	0x2
 4465 00e6 30       		.byte	0x30
 4466 00e7 9F       		.byte	0x9f
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 176


 4467 00e8 00000000 		.4byte	0
 4468 00ec 00000000 		.4byte	0
 4469              	.LLST12:
 4470 00f0 7A000000 		.4byte	.LVL7
 4471 00f4 92000000 		.4byte	.LVL8
 4472 00f8 0600     		.2byte	0x6
 4473 00fa 0C       		.byte	0xc
 4474 00fb 01004A00 		.4byte	0x4a0001
 4475 00ff 9F       		.byte	0x9f
 4476 0100 00000000 		.4byte	0
 4477 0104 00000000 		.4byte	0
 4478              	.LLST13:
 4479 0108 F6000000 		.4byte	.LVL20
 4480 010c 02010000 		.4byte	.LVL21
 4481 0110 0200     		.2byte	0x2
 4482 0112 30       		.byte	0x30
 4483 0113 9F       		.byte	0x9f
 4484 0114 00000000 		.4byte	0
 4485 0118 00000000 		.4byte	0
 4486              	.LLST14:
 4487 011c 02010000 		.4byte	.LVL21
 4488 0120 0A010000 		.4byte	.LVL22
 4489 0124 0200     		.2byte	0x2
 4490 0126 30       		.byte	0x30
 4491 0127 9F       		.byte	0x9f
 4492 0128 00000000 		.4byte	0
 4493 012c 00000000 		.4byte	0
 4494              	.LLST15:
 4495 0130 14010000 		.4byte	.LVL23
 4496 0134 1E010000 		.4byte	.LVL24
 4497 0138 0200     		.2byte	0x2
 4498 013a 30       		.byte	0x30
 4499 013b 9F       		.byte	0x9f
 4500 013c 00000000 		.4byte	0
 4501 0140 00000000 		.4byte	0
 4502              	.LLST16:
 4503 0144 1E010000 		.4byte	.LVL24
 4504 0148 2C010000 		.4byte	.LVL25
 4505 014c 0200     		.2byte	0x2
 4506 014e 32       		.byte	0x32
 4507 014f 9F       		.byte	0x9f
 4508 0150 00000000 		.4byte	0
 4509 0154 00000000 		.4byte	0
 4510              	.LLST17:
 4511 0158 36010000 		.4byte	.LVL26
 4512 015c 46010000 		.4byte	.LVL27
 4513 0160 0200     		.2byte	0x2
 4514 0162 31       		.byte	0x31
 4515 0163 9F       		.byte	0x9f
 4516 0164 00000000 		.4byte	0
 4517 0168 00000000 		.4byte	0
 4518              	.LLST18:
 4519 016c 54010000 		.4byte	.LVL30
 4520 0170 5E010000 		.4byte	.LVL31
 4521 0174 0200     		.2byte	0x2
 4522 0176 31       		.byte	0x31
 4523 0177 9F       		.byte	0x9f
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 177


 4524 0178 00000000 		.4byte	0
 4525 017c 00000000 		.4byte	0
 4526              	.LLST19:
 4527 0180 18000000 		.4byte	.LVL35
 4528 0184 30000000 		.4byte	.LVL36
 4529 0188 0600     		.2byte	0x6
 4530 018a 0C       		.byte	0xc
 4531 018b 03004A00 		.4byte	0x4a0003
 4532 018f 9F       		.byte	0x9f
 4533 0190 00000000 		.4byte	0
 4534 0194 00000000 		.4byte	0
 4535              		.section	.debug_aranges,"",%progbits
 4536 0000 2C000000 		.4byte	0x2c
 4537 0004 0200     		.2byte	0x2
 4538 0006 00000000 		.4byte	.Ldebug_info0
 4539 000a 04       		.byte	0x4
 4540 000b 00       		.byte	0
 4541 000c 0000     		.2byte	0
 4542 000e 0000     		.2byte	0
 4543 0010 00000000 		.4byte	.LFB187
 4544 0014 02000000 		.4byte	.LFE187-.LFB187
 4545 0018 00000000 		.4byte	.LFB188
 4546 001c A4010000 		.4byte	.LFE188-.LFB188
 4547 0020 00000000 		.4byte	.LFB190
 4548 0024 CC000000 		.4byte	.LFE190-.LFB190
 4549 0028 00000000 		.4byte	0
 4550 002c 00000000 		.4byte	0
 4551              		.section	.debug_ranges,"",%progbits
 4552              	.Ldebug_ranges0:
 4553 0000 00000000 		.4byte	.LFB187
 4554 0004 02000000 		.4byte	.LFE187
 4555 0008 00000000 		.4byte	.LFB188
 4556 000c A4010000 		.4byte	.LFE188
 4557 0010 00000000 		.4byte	.LFB190
 4558 0014 CC000000 		.4byte	.LFE190
 4559 0018 00000000 		.4byte	0
 4560 001c 00000000 		.4byte	0
 4561              		.section	.debug_line,"",%progbits
 4562              	.Ldebug_line0:
 4563 0000 3D040000 		.section	.debug_str,"MS",%progbits,1
 4563      02007603 
 4563      00000201 
 4563      FB0E0D00 
 4563      01010101 
 4564              	.LASF245:
 4565 0000 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_1_1V\000"
 4565      5953504D 
 4565      5F4C444F 
 4565      5F564F4C 
 4565      54414745 
 4566              	.LASF140:
 4567 001a 4241434B 		.ascii	"BACKUP_Type\000"
 4567      55505F54 
 4567      79706500 
 4568              	.LASF10:
 4569 0026 6C6F6E67 		.ascii	"long int\000"
 4569      20696E74 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 178


 4569      00
 4570              	.LASF20:
 4571 002f 52455345 		.ascii	"RESERVED\000"
 4571      52564544 
 4571      00
 4572              	.LASF133:
 4573 0038 5644445F 		.ascii	"VDD_ACTIVE\000"
 4573      41435449 
 4573      564500
 4574              	.LASF129:
 4575 0043 494E5452 		.ascii	"INTR_CAUSE0\000"
 4575      5F434155 
 4575      53453000 
 4576              	.LASF130:
 4577 004f 494E5452 		.ascii	"INTR_CAUSE1\000"
 4577      5F434155 
 4577      53453100 
 4578              	.LASF131:
 4579 005b 494E5452 		.ascii	"INTR_CAUSE2\000"
 4579      5F434155 
 4579      53453200 
 4580              	.LASF132:
 4581 0067 494E5452 		.ascii	"INTR_CAUSE3\000"
 4581      5F434155 
 4581      53453300 
 4582              	.LASF139:
 4583 0073 53525353 		.ascii	"SRSS_Type\000"
 4583      5F547970 
 4583      6500
 4584              	.LASF391:
 4585 007d 63795F64 		.ascii	"cy_device\000"
 4585      65766963 
 4585      6500
 4586              	.LASF350:
 4587 0087 636C6B48 		.ascii	"clkHf\000"
 4587      6600
 4588              	.LASF340:
 4589 008d 43595F53 		.ascii	"CY_SYSCLK_BAK_IN_WCO\000"
 4589      5953434C 
 4589      4B5F4241 
 4589      4B5F494E 
 4589      5F57434F 
 4590              	.LASF213:
 4591 00a2 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4591      73436D30 
 4591      436C6F63 
 4591      6B43746C 
 4591      4F666673 
 4592              	.LASF172:
 4593 00b9 70657269 		.ascii	"periClockNr\000"
 4593      436C6F63 
 4593      6B4E7200 
 4594              	.LASF242:
 4595 00c5 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_ULP\000"
 4595      5953504D 
 4595      5F4C444F 
 4595      5F564F4C 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 179


 4595      54414745 
 4596              	.LASF146:
 4597 00de 75646242 		.ascii	"udbBase\000"
 4597      61736500 
 4598              	.LASF376:
 4599 00e6 43795F53 		.ascii	"Cy_SysClk_ClkPathSetSource\000"
 4599      7973436C 
 4599      6B5F436C 
 4599      6B506174 
 4599      68536574 
 4600              	.LASF236:
 4601 0101 63666749 		.ascii	"cfgIn\000"
 4601      6E00
 4602              	.LASF145:
 4603 0107 70657269 		.ascii	"periBase\000"
 4603      42617365 
 4603      00
 4604              	.LASF32:
 4605 0110 4D435744 		.ascii	"MCWDT_STRUCT_V1_Type\000"
 4605      545F5354 
 4605      52554354 
 4605      5F56315F 
 4605      54797065 
 4606              	.LASF221:
 4607 0125 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4607      73436D30 
 4607      4E6D6943 
 4607      746C4F66 
 4607      66736574 
 4608              	.LASF191:
 4609 013a 64774368 		.ascii	"dwChSize\000"
 4609      53697A65 
 4609      00
 4610              	.LASF367:
 4611 0143 43795F53 		.ascii	"Cy_SysClk_ClkTimerSetSource\000"
 4611      7973436C 
 4611      6B5F436C 
 4611      6B54696D 
 4611      65725365 
 4612              	.LASF248:
 4613 015f 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 4613      5953434C 
 4613      4B5F5449 
 4613      4D454F55 
 4613      5400
 4614              	.LASF333:
 4615 0171 63795F65 		.ascii	"cy_en_clkpump_in_sources_t\000"
 4615      6E5F636C 
 4615      6B70756D 
 4615      705F696E 
 4615      5F736F75 
 4616              	.LASF307:
 4617 018c 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_WCO\000"
 4617      5953434C 
 4617      4B5F434C 
 4617      4B4C465F 
 4617      494E5F57 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 180


 4618              	.LASF243:
 4619 01a3 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_LP\000"
 4619      5953504D 
 4619      5F4C444F 
 4619      5F564F4C 
 4619      54414745 
 4620              	.LASF281:
 4621 01bb 63636F5F 		.ascii	"cco_Freq\000"
 4621      46726571 
 4621      00
 4622              	.LASF38:
 4623 01c4 5057525F 		.ascii	"PWR_LVD_STATUS\000"
 4623      4C56445F 
 4623      53544154 
 4623      555300
 4624              	.LASF82:
 4625 01d3 5245535F 		.ascii	"RES_CAUSE2\000"
 4625      43415553 
 4625      453200
 4626              	.LASF362:
 4627 01de 43795F53 		.ascii	"Cy_SysClk_ClkPumpEnable\000"
 4627      7973436C 
 4627      6B5F436C 
 4627      6B50756D 
 4627      70456E61 
 4628              	.LASF173:
 4629 01f6 736D6966 		.ascii	"smifDeviceNr\000"
 4629      44657669 
 4629      63654E72 
 4629      00
 4630              	.LASF203:
 4631 0203 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4631      44697643 
 4631      6D645061 
 4631      54797065 
 4631      53656C50 
 4632              	.LASF387:
 4633 021a 4379436C 		.ascii	"CyClockStartupError\000"
 4633      6F636B53 
 4633      74617274 
 4633      75704572 
 4633      726F7200 
 4634              	.LASF77:
 4635 022e 53525353 		.ascii	"SRSS_INTR_MASK\000"
 4635      5F494E54 
 4635      525F4D41 
 4635      534B00
 4636              	.LASF126:
 4637 023d 4346475F 		.ascii	"CFG_SIO\000"
 4637      53494F00 
 4638              	.LASF69:
 4639 0245 434C4B5F 		.ascii	"CLK_FLL_STATUS\000"
 4639      464C4C5F 
 4639      53544154 
 4639      555300
 4640              	.LASF238:
 4641 0254 63666753 		.ascii	"cfgSIO\000"
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 181


 4641      494F00
 4642              	.LASF365:
 4643 025b 43795F53 		.ascii	"Cy_SysClk_ClkTimerEnable\000"
 4643      7973436C 
 4643      6B5F436C 
 4643      6B54696D 
 4643      6572456E 
 4644              	.LASF53:
 4645 0274 434C4B5F 		.ascii	"CLK_ILO_CONFIG\000"
 4645      494C4F5F 
 4645      434F4E46 
 4645      494700
 4646              	.LASF143:
 4647 0283 63707573 		.ascii	"cpussBase\000"
 4647      73426173 
 4647      6500
 4648              	.LASF54:
 4649 028d 434C4B5F 		.ascii	"CLK_IMO_CONFIG\000"
 4649      494D4F5F 
 4649      434F4E46 
 4649      494700
 4650              	.LASF276:
 4651 029c 6C6F636B 		.ascii	"lockTolerance\000"
 4651      546F6C65 
 4651      72616E63 
 4651      6500
 4652              	.LASF273:
 4653 02aa 72656644 		.ascii	"refDiv\000"
 4653      697600
 4654              	.LASF344:
 4655 02b1 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_IMO\000"
 4655      59535449 
 4655      434B5F43 
 4655      4C4F434B 
 4655      5F534F55 
 4656              	.LASF317:
 4657 02d1 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH0\000"
 4657      5953434C 
 4657      4B5F5055 
 4657      4D505F49 
 4657      4E5F434C 
 4658              	.LASF318:
 4659 02ec 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH1\000"
 4659      5953434C 
 4659      4B5F5055 
 4659      4D505F49 
 4659      4E5F434C 
 4660              	.LASF319:
 4661 0307 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH2\000"
 4661      5953434C 
 4661      4B5F5055 
 4661      4D505F49 
 4661      4E5F434C 
 4662              	.LASF320:
 4663 0322 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH3\000"
 4663      5953434C 
 4663      4B5F5055 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 182


 4663      4D505F49 
 4663      4E5F434C 
 4664              	.LASF321:
 4665 033d 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH4\000"
 4665      5953434C 
 4665      4B5F5055 
 4665      4D505F49 
 4665      4E5F434C 
 4666              	.LASF322:
 4667 0358 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH5\000"
 4667      5953434C 
 4667      4B5F5055 
 4667      4D505F49 
 4667      4E5F434C 
 4668              	.LASF323:
 4669 0373 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH6\000"
 4669      5953434C 
 4669      4B5F5055 
 4669      4D505F49 
 4669      4E5F434C 
 4670              	.LASF324:
 4671 038e 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH7\000"
 4671      5953434C 
 4671      4B5F5055 
 4671      4D505F49 
 4671      4E5F434C 
 4672              	.LASF56:
 4673 03a9 434C4B5F 		.ascii	"CLK_OUTPUT_SLOW\000"
 4673      4F555450 
 4673      55545F53 
 4673      4C4F5700 
 4674              	.LASF326:
 4675 03b9 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH9\000"
 4675      5953434C 
 4675      4B5F5055 
 4675      4D505F49 
 4675      4E5F434C 
 4676              	.LASF168:
 4677 03d4 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4677      734E6F74 
 4677      436F6E6E 
 4677      65637465 
 4677      64497271 
 4678              	.LASF280:
 4679 03e9 6F757470 		.ascii	"outputMode\000"
 4679      75744D6F 
 4679      646500
 4680              	.LASF7:
 4681 03f4 73686F72 		.ascii	"short int\000"
 4681      7420696E 
 4681      7400
 4682              	.LASF50:
 4683 03fe 434C4B5F 		.ascii	"CLK_SELECT\000"
 4683      53454C45 
 4683      435400
 4684              	.LASF167:
 4685 0409 63707573 		.ascii	"cpussFmIrq\000"
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 183


 4685      73466D49 
 4685      727100
 4686              	.LASF103:
 4687 0414 5254435F 		.ascii	"RTC_TIME\000"
 4687      54494D45 
 4687      00
 4688              	.LASF372:
 4689 041d 666C6C43 		.ascii	"fllConfig\000"
 4689      6F6E6669 
 4689      6700
 4690              	.LASF202:
 4691 0427 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4691      44697643 
 4691      6D645061 
 4691      44697653 
 4691      656C506F 
 4692              	.LASF370:
 4693 043d 43795F53 		.ascii	"Cy_SysPm_PmicUnlock\000"
 4693      7973506D 
 4693      5F506D69 
 4693      63556E6C 
 4693      6F636B00 
 4694              	.LASF110:
 4695 0451 494E5452 		.ascii	"INTR_SET\000"
 4695      5F534554 
 4695      00
 4696              	.LASF179:
 4697 045a 63727970 		.ascii	"cryptoMemSize\000"
 4697      746F4D65 
 4697      6D53697A 
 4697      6500
 4698              	.LASF225:
 4699 0468 63707573 		.ascii	"cpussRam1Ctl0\000"
 4699      7352616D 
 4699      3143746C 
 4699      3000
 4700              	.LASF246:
 4701 0476 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 4701      5953434C 
 4701      4B5F5355 
 4701      43434553 
 4701      5300
 4702              	.LASF377:
 4703 0488 43795F53 		.ascii	"Cy_SysClk_FllEnable\000"
 4703      7973436C 
 4703      6B5F466C 
 4703      6C456E61 
 4703      626C6500 
 4704              	.LASF227:
 4705 049c 69706353 		.ascii	"ipcStructSize\000"
 4705      74727563 
 4705      7453697A 
 4705      6500
 4706              	.LASF85:
 4707 04aa 5057525F 		.ascii	"PWR_TRIM_BODOVP_CTL\000"
 4707      5452494D 
 4707      5F424F44 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 184


 4707      4F56505F 
 4707      43544C00 
 4708              	.LASF199:
 4709 04be 70657269 		.ascii	"periTrGrSize\000"
 4709      54724772 
 4709      53697A65 
 4709      00
 4710              	.LASF272:
 4711 04cb 666C6C4D 		.ascii	"fllMult\000"
 4711      756C7400 
 4712              	.LASF161:
 4713 04d3 70726F74 		.ascii	"protVersion\000"
 4713      56657273 
 4713      696F6E00 
 4714              	.LASF79:
 4715 04df 53525353 		.ascii	"SRSS_INTR_CFG\000"
 4715      5F494E54 
 4715      525F4346 
 4715      4700
 4716              	.LASF305:
 4717 04ed 63795F65 		.ascii	"cy_en_clkhf_dividers_t\000"
 4717      6E5F636C 
 4717      6B68665F 
 4717      64697669 
 4717      64657273 
 4718              	.LASF363:
 4719 0504 43795F53 		.ascii	"Cy_SysClk_ClkPumpSetDivider\000"
 4719      7973436C 
 4719      6B5F436C 
 4719      6B50756D 
 4719      70536574 
 4720              	.LASF201:
 4721 0520 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4721      44697643 
 4721      6D645479 
 4721      70655365 
 4721      6C506F73 
 4722              	.LASF355:
 4723 0535 43795F53 		.ascii	"Cy_SysClk_ClkSlowSetDivider\000"
 4723      7973436C 
 4723      6B5F436C 
 4723      6B536C6F 
 4723      77536574 
 4724              	.LASF218:
 4725 0551 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4725      73547269 
 4725      6D52616D 
 4725      43746C4F 
 4725      66667365 
 4726              	.LASF124:
 4727 0567 4346475F 		.ascii	"CFG_IN\000"
 4727      494E00
 4728              	.LASF380:
 4729 056e 43795F47 		.ascii	"Cy_GPIO_Port_Init\000"
 4729      50494F5F 
 4729      506F7274 
 4729      5F496E69 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 185


 4729      7400
 4730              	.LASF33:
 4731 0580 5057525F 		.ascii	"PWR_CTL\000"
 4731      43544C00 
 4732              	.LASF89:
 4733 0588 5057525F 		.ascii	"PWR_TRIM_WAKE_CTL\000"
 4733      5452494D 
 4733      5F57414B 
 4733      455F4354 
 4733      4C00
 4734              	.LASF39:
 4735 059a 5057525F 		.ascii	"PWR_HIB_DATA\000"
 4735      4849425F 
 4735      44415441 
 4735      00
 4736              	.LASF343:
 4737 05a7 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_LF\000"
 4737      59535449 
 4737      434B5F43 
 4737      4C4F434B 
 4737      5F534F55 
 4738              	.LASF22:
 4739 05c6 4D435744 		.ascii	"MCWDT_CNTHIGH\000"
 4739      545F434E 
 4739      54484947 
 4739      4800
 4740              	.LASF345:
 4741 05d4 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_ECO\000"
 4741      59535449 
 4741      434B5F43 
 4741      4C4F434B 
 4741      5F534F55 
 4742              	.LASF19:
 4743 05f4 75696E74 		.ascii	"uint32_t\000"
 4743      33325F74 
 4743      00
 4744              	.LASF339:
 4745 05fd 63795F65 		.ascii	"cy_en_clkpump_divide_t\000"
 4745      6E5F636C 
 4745      6B70756D 
 4745      705F6469 
 4745      76696465 
 4746              	.LASF366:
 4747 0614 43795F53 		.ascii	"Cy_SysClk_ClkTimerSetDivider\000"
 4747      7973436C 
 4747      6B5F436C 
 4747      6B54696D 
 4747      65725365 
 4748              	.LASF294:
 4749 0631 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH10\000"
 4749      5953434C 
 4749      4B5F434C 
 4749      4B48465F 
 4749      494E5F43 
 4750              	.LASF256:
 4751 064e 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_DSI\000"
 4751      5953434C 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 186


 4751      4B5F434C 
 4751      4B504154 
 4751      485F494E 
 4752              	.LASF138:
 4753 0667 4750494F 		.ascii	"GPIO_V1_Type\000"
 4753      5F56315F 
 4753      54797065 
 4753      00
 4754              	.LASF211:
 4755 0674 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4755      50727443 
 4755      66674F75 
 4755      744F6666 
 4755      73657400 
 4756              	.LASF298:
 4757 0688 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH14\000"
 4757      5953434C 
 4757      4B5F434C 
 4757      4B48465F 
 4757      494E5F43 
 4758              	.LASF109:
 4759 06a5 494E5452 		.ascii	"INTR\000"
 4759      00
 4760              	.LASF93:
 4761 06aa 434C4B5F 		.ascii	"CLK_TRIM_ILO_CTL\000"
 4761      5452494D 
 4761      5F494C4F 
 4761      5F43544C 
 4761      00
 4762              	.LASF29:
 4763 06bb 4D435744 		.ascii	"MCWDT_INTR_MASKED\000"
 4763      545F494E 
 4763      54525F4D 
 4763      41534B45 
 4763      4400
 4764              	.LASF231:
 4765 06cd 666C6F61 		.ascii	"float\000"
 4765      7400
 4766              	.LASF364:
 4767 06d3 43795F53 		.ascii	"Cy_SysClk_ClkPumpSetSource\000"
 4767      7973436C 
 4767      6B5F436C 
 4767      6B50756D 
 4767      70536574 
 4768              	.LASF154:
 4769 06ee 63727970 		.ascii	"cryptoVersion\000"
 4769      746F5665 
 4769      7273696F 
 4769      6E00
 4770              	.LASF183:
 4771 06fc 666C6173 		.ascii	"flashProgramDelay\000"
 4771      6850726F 
 4771      6772616D 
 4771      44656C61 
 4771      7900
 4772              	.LASF120:
 4773 070e 4F55545F 		.ascii	"OUT_CLR\000"
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 187


 4773      434C5200 
 4774              	.LASF31:
 4775 0716 52455345 		.ascii	"RESERVED1\000"
 4775      52564544 
 4775      3100
 4776              	.LASF17:
 4777 0720 696E7431 		.ascii	"int16_t\000"
 4777      365F7400 
 4778              	.LASF210:
 4779 0728 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4779      50727443 
 4779      6667496E 
 4779      4F666673 
 4779      657400
 4780              	.LASF95:
 4781 073b 434C4B5F 		.ascii	"CLK_TRIM_ECO_CTL\000"
 4781      5452494D 
 4781      5F45434F 
 4781      5F43544C 
 4781      00
 4782              	.LASF279:
 4783 074c 73657474 		.ascii	"settlingCount\000"
 4783      6C696E67 
 4783      436F756E 
 4783      7400
 4784              	.LASF91:
 4785 075a 5057525F 		.ascii	"PWR_TRIM_LVD_CTL\000"
 4785      5452494D 
 4785      5F4C5644 
 4785      5F43544C 
 4785      00
 4786              	.LASF13:
 4787 076b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4787      206C6F6E 
 4787      6720756E 
 4787      7369676E 
 4787      65642069 
 4788              	.LASF207:
 4789 0782 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4789      44697632 
 4789      345F3543 
 4789      746C4F66 
 4789      66736574 
 4790              	.LASF115:
 4791 0797 504D4943 		.ascii	"PMIC_CTL\000"
 4791      5F43544C 
 4791      00
 4792              	.LASF240:
 4793 07a0 73656C31 		.ascii	"sel1Active\000"
 4793      41637469 
 4793      766500
 4794              	.LASF166:
 4795 07ab 63707573 		.ascii	"cpussIpc0Irq\000"
 4795      73497063 
 4795      30497271 
 4795      00
 4796              	.LASF277:
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 188


 4797 07b8 69676169 		.ascii	"igain\000"
 4797      6E00
 4798              	.LASF284:
 4799 07be 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH0\000"
 4799      5953434C 
 4799      4B5F434C 
 4799      4B48465F 
 4799      494E5F43 
 4800              	.LASF285:
 4801 07da 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH1\000"
 4801      5953434C 
 4801      4B5F434C 
 4801      4B48465F 
 4801      494E5F43 
 4802              	.LASF286:
 4803 07f6 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH2\000"
 4803      5953434C 
 4803      4B5F434C 
 4803      4B48465F 
 4803      494E5F43 
 4804              	.LASF287:
 4805 0812 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH3\000"
 4805      5953434C 
 4805      4B5F434C 
 4805      4B48465F 
 4805      494E5F43 
 4806              	.LASF288:
 4807 082e 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH4\000"
 4807      5953434C 
 4807      4B5F434C 
 4807      4B48465F 
 4807      494E5F43 
 4808              	.LASF289:
 4809 084a 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH5\000"
 4809      5953434C 
 4809      4B5F434C 
 4809      4B48465F 
 4809      494E5F43 
 4810              	.LASF290:
 4811 0866 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH6\000"
 4811      5953434C 
 4811      4B5F434C 
 4811      4B48465F 
 4811      494E5F43 
 4812              	.LASF291:
 4813 0882 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH7\000"
 4813      5953434C 
 4813      4B5F434C 
 4813      4B48465F 
 4813      494E5F43 
 4814              	.LASF292:
 4815 089e 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH8\000"
 4815      5953434C 
 4815      4B5F434C 
 4815      4B48465F 
 4815      494E5F43 
 4816              	.LASF293:
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 189


 4817 08ba 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH9\000"
 4817      5953434C 
 4817      4B5F434C 
 4817      4B48465F 
 4817      494E5F43 
 4818              	.LASF8:
 4819 08d6 5F5F7569 		.ascii	"__uint16_t\000"
 4819      6E743136 
 4819      5F7400
 4820              	.LASF37:
 4821 08e1 5057525F 		.ascii	"PWR_BUCK_CTL2\000"
 4821      4255434B 
 4821      5F43544C 
 4821      3200
 4822              	.LASF356:
 4823 08ef 43795F53 		.ascii	"Cy_SysClk_ClkPeriSetDivider\000"
 4823      7973436C 
 4823      6B5F436C 
 4823      6B506572 
 4823      69536574 
 4824              	.LASF316:
 4825 090b 63795F65 		.ascii	"cy_en_clktimer_in_sources_t\000"
 4825      6E5F636C 
 4825      6B74696D 
 4825      65725F69 
 4825      6E5F736F 
 4826              	.LASF313:
 4827 0927 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV2\000"
 4827      5953434C 
 4827      4B5F434C 
 4827      4B54494D 
 4827      45525F49 
 4828              	.LASF386:
 4829 0946 433A5C55 		.ascii	"C:\\Users\\harsh\\OneDrive\\Desktop\\GitHub Project"
 4829      73657273 
 4829      5C686172 
 4829      73685C4F 
 4829      6E654472 
 4830 0974 735C5765 		.ascii	"s\\Wearable-Cardiac-Monitor-JY16-Capstone\\Firmware"
 4830      61726162 
 4830      6C652D43 
 4830      61726469 
 4830      61632D4D 
 4831 09a5 5C426C69 		.ascii	"\\Blinky_Test_Miniprog\\blinky_scratch_test.cydsn\000"
 4831      6E6B795F 
 4831      54657374 
 4831      5F4D696E 
 4831      6970726F 
 4832              	.LASF314:
 4833 09d5 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV4\000"
 4833      5953434C 
 4833      4B5F434C 
 4833      4B54494D 
 4833      45525F49 
 4834              	.LASF65:
 4835 09f4 434C4B5F 		.ascii	"CLK_FLL_CONFIG\000"
 4835      464C4C5F 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 190


 4835      434F4E46 
 4835      494700
 4836              	.LASF125:
 4837 0a03 4346475F 		.ascii	"CFG_OUT\000"
 4837      4F555400 
 4838              	.LASF105:
 4839 0a0b 414C4D31 		.ascii	"ALM1_TIME\000"
 4839      5F54494D 
 4839      4500
 4840              	.LASF315:
 4841 0a15 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV8\000"
 4841      5953434C 
 4841      4B5F434C 
 4841      4B54494D 
 4841      45525F49 
 4842              	.LASF61:
 4843 0a34 434C4B5F 		.ascii	"CLK_ECO_STATUS\000"
 4843      45434F5F 
 4843      53544154 
 4843      555300
 4844              	.LASF188:
 4845 0a43 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4845      6843746C 
 4845      4D61696E 
 4845      57733346 
 4845      72657100 
 4846              	.LASF264:
 4847 0a57 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT\000"
 4847      5953434C 
 4847      4B5F464C 
 4847      4C504C4C 
 4847      5F4F5554 
 4848              	.LASF302:
 4849 0a76 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_2\000"
 4849      5953434C 
 4849      4B5F434C 
 4849      4B48465F 
 4849      44495649 
 4850              	.LASF170:
 4851 0a92 73727373 		.ascii	"srssNumPll\000"
 4851      4E756D50 
 4851      6C6C00
 4852              	.LASF303:
 4853 0a9d 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_4\000"
 4853      5953434C 
 4853      4B5F434C 
 4853      4B48465F 
 4853      44495649 
 4854              	.LASF260:
 4855 0ab9 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_PILO\000"
 4855      5953434C 
 4855      4B5F434C 
 4855      4B504154 
 4855      485F494E 
 4856              	.LASF304:
 4857 0ad3 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_8\000"
 4857      5953434C 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 191


 4857      4B5F434C 
 4857      4B48465F 
 4857      44495649 
 4858              	.LASF121:
 4859 0aef 4F55545F 		.ascii	"OUT_SET\000"
 4859      53455400 
 4860              	.LASF250:
 4861 0af7 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4861      6E5F7379 
 4861      73636C6B 
 4861      5F737461 
 4861      7475735F 
 4862              	.LASF66:
 4863 0b0d 434C4B5F 		.ascii	"CLK_FLL_CONFIG2\000"
 4863      464C4C5F 
 4863      434F4E46 
 4863      49473200 
 4864              	.LASF67:
 4865 0b1d 434C4B5F 		.ascii	"CLK_FLL_CONFIG3\000"
 4865      464C4C5F 
 4865      434F4E46 
 4865      49473300 
 4866              	.LASF68:
 4867 0b2d 434C4B5F 		.ascii	"CLK_FLL_CONFIG4\000"
 4867      464C4C5F 
 4867      434F4E46 
 4867      49473400 
 4868              	.LASF60:
 4869 0b3d 434C4B5F 		.ascii	"CLK_ECO_CONFIG\000"
 4869      45434F5F 
 4869      434F4E46 
 4869      494700
 4870              	.LASF57:
 4871 0b4c 434C4B5F 		.ascii	"CLK_CAL_CNT1\000"
 4871      43414C5F 
 4871      434E5431 
 4871      00
 4872              	.LASF58:
 4873 0b59 434C4B5F 		.ascii	"CLK_CAL_CNT2\000"
 4873      43414C5F 
 4873      434E5432 
 4873      00
 4874              	.LASF181:
 4875 0b66 666C6173 		.ascii	"flashPipeRequired\000"
 4875      68506970 
 4875      65526571 
 4875      75697265 
 4875      6400
 4876              	.LASF196:
 4877 0b78 70657269 		.ascii	"periTrCmdOffset\000"
 4877      5472436D 
 4877      644F6666 
 4877      73657400 
 4878              	.LASF300:
 4879 0b88 63795F65 		.ascii	"cy_en_clkhf_in_sources_t\000"
 4879      6E5F636C 
 4879      6B68665F 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 192


 4879      696E5F73 
 4879      6F757263 
 4880              	.LASF235:
 4881 0ba1 696E7472 		.ascii	"intrCfg\000"
 4881      43666700 
 4882              	.LASF282:
 4883 0ba9 5F426F6F 		.ascii	"_Bool\000"
 4883      6C00
 4884              	.LASF373:
 4885 0baf 706F7274 		.ascii	"port6_cfg\000"
 4885      365F6366 
 4885      6700
 4886              	.LASF312:
 4887 0bb9 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_NODIV\000"
 4887      5953434C 
 4887      4B5F434C 
 4887      4B54494D 
 4887      45525F49 
 4888              	.LASF383:
 4889 0bd9 43795F53 		.ascii	"Cy_SysPm_LdoSetVoltage\000"
 4889      7973506D 
 4889      5F4C646F 
 4889      53657456 
 4889      6F6C7461 
 4890              	.LASF28:
 4891 0bf0 4D435744 		.ascii	"MCWDT_INTR_MASK\000"
 4891      545F494E 
 4891      54525F4D 
 4891      41534B00 
 4892              	.LASF381:
 4893 0c00 43795F53 		.ascii	"Cy_SysLib_GetResetReason\000"
 4893      79734C69 
 4893      625F4765 
 4893      74526573 
 4893      65745265 
 4894              	.LASF258:
 4895 0c19 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_WCO\000"
 4895      5953434C 
 4895      4B5F434C 
 4895      4B504154 
 4895      485F494E 
 4896              	.LASF106:
 4897 0c32 414C4D31 		.ascii	"ALM1_DATE\000"
 4897      5F444154 
 4897      4500
 4898              	.LASF134:
 4899 0c3c 5644445F 		.ascii	"VDD_INTR\000"
 4899      494E5452 
 4899      00
 4900              	.LASF149:
 4901 0c45 6770696F 		.ascii	"gpioBase\000"
 4901      42617365 
 4901      00
 4902              	.LASF73:
 4903 0c4e 434C4B5F 		.ascii	"CLK_PLL_STATUS\000"
 4903      504C4C5F 
 4903      53544154 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 193


 4903      555300
 4904              	.LASF265:
 4905 0c5d 63795F65 		.ascii	"cy_en_fll_pll_output_mode_t\000"
 4905      6E5F666C 
 4905      6C5F706C 
 4905      6C5F6F75 
 4905      74707574 
 4906              	.LASF114:
 4907 0c79 5449434B 		.ascii	"TICKS\000"
 4907      5300
 4908              	.LASF271:
 4909 0c7f 63795F65 		.ascii	"cy_en_fll_cco_ranges_t\000"
 4909      6E5F666C 
 4909      6C5F6363 
 4909      6F5F7261 
 4909      6E676573 
 4910              	.LASF220:
 4911 0c96 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4911      73537973 
 4911      5469636B 
 4911      43746C4F 
 4911      66667365 
 4912              	.LASF185:
 4913 0cac 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4913      6843746C 
 4913      4D61696E 
 4913      57733046 
 4913      72657100 
 4914              	.LASF97:
 4915 0cc0 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL2\000"
 4915      5452494D 
 4915      5F50494C 
 4915      4F5F4354 
 4915      4C3200
 4916              	.LASF98:
 4917 0cd3 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL3\000"
 4917      5452494D 
 4917      5F50494C 
 4917      4F5F4354 
 4917      4C3300
 4918              	.LASF348:
 4919 0ce6 43795F53 		.ascii	"Cy_SysClk_ClkHfEnable\000"
 4919      7973436C 
 4919      6B5F436C 
 4919      6B486645 
 4919      6E61626C 
 4920              	.LASF194:
 4921 0cfc 64775374 		.ascii	"dwStatusChIdxPos\000"
 4921      61747573 
 4921      43684964 
 4921      78506F73 
 4921      00
 4922              	.LASF382:
 4923 0d0d 43795F53 		.ascii	"Cy_SysLib_ResetBackupDomain\000"
 4923      79734C69 
 4923      625F5265 
 4923      73657442 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 194


 4923      61636B75 
 4924              	.LASF375:
 4925 0d29 43795F53 		.ascii	"Cy_SysClk_FllManualConfigure\000"
 4925      7973436C 
 4925      6B5F466C 
 4925      6C4D616E 
 4925      75616C43 
 4926              	.LASF390:
 4927 0d46 43795F53 		.ascii	"Cy_SystemInit\000"
 4927      79737465 
 4927      6D496E69 
 4927      7400
 4928              	.LASF266:
 4929 0d54 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE0\000"
 4929      5953434C 
 4929      4B5F464C 
 4929      4C5F4343 
 4929      4F5F5241 
 4930              	.LASF267:
 4931 0d6d 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE1\000"
 4931      5953434C 
 4931      4B5F464C 
 4931      4C5F4343 
 4931      4F5F5241 
 4932              	.LASF268:
 4933 0d86 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE2\000"
 4933      5953434C 
 4933      4B5F464C 
 4933      4C5F4343 
 4933      4F5F5241 
 4934              	.LASF269:
 4935 0d9f 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE3\000"
 4935      5953434C 
 4935      4B5F464C 
 4935      4C5F4343 
 4935      4F5F5241 
 4936              	.LASF270:
 4937 0db8 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE4\000"
 4937      5953434C 
 4937      4B5F464C 
 4937      4C5F4343 
 4937      4F5F5241 
 4938              	.LASF119:
 4939 0dd1 4241434B 		.ascii	"BACKUP_V1_Type\000"
 4939      55505F56 
 4939      315F5479 
 4939      706500
 4940              	.LASF144:
 4941 0de0 666C6173 		.ascii	"flashcBase\000"
 4941      68634261 
 4941      736500
 4942              	.LASF15:
 4943 0deb 63686172 		.ascii	"char\000"
 4943      00
 4944              	.LASF118:
 4945 0df0 5452494D 		.ascii	"TRIM\000"
 4945      00
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 195


 4946              	.LASF176:
 4947 0df5 75646250 		.ascii	"udbPresent\000"
 4947      72657365 
 4947      6E7400
 4948              	.LASF177:
 4949 0e00 73797350 		.ascii	"sysPmSimoPresent\000"
 4949      6D53696D 
 4949      6F507265 
 4949      73656E74 
 4949      00
 4950              	.LASF35:
 4951 0e11 5057525F 		.ascii	"PWR_LVD_CTL\000"
 4951      4C56445F 
 4951      43544C00 
 4952              	.LASF237:
 4953 0e1d 6366674F 		.ascii	"cfgOut\000"
 4953      757400
 4954              	.LASF275:
 4955 0e24 656E6162 		.ascii	"enableOutputDiv\000"
 4955      6C654F75 
 4955      74707574 
 4955      44697600 
 4956              	.LASF42:
 4957 0e34 5744545F 		.ascii	"WDT_CNT\000"
 4957      434E5400 
 4958              	.LASF0:
 4959 0e3c 756E7369 		.ascii	"unsigned int\000"
 4959      676E6564 
 4959      20696E74 
 4959      00
 4960              	.LASF195:
 4961 0e49 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4961      61747573 
 4961      43684964 
 4961      784D736B 
 4961      00
 4962              	.LASF76:
 4963 0e5a 53525353 		.ascii	"SRSS_INTR_SET\000"
 4963      5F494E54 
 4963      525F5345 
 4963      5400
 4964              	.LASF16:
 4965 0e68 75696E74 		.ascii	"uint8_t\000"
 4965      385F7400 
 4966              	.LASF51:
 4967 0e70 434C4B5F 		.ascii	"CLK_TIMER_CTL\000"
 4967      54494D45 
 4967      525F4354 
 4967      4C00
 4968              	.LASF371:
 4969 0e7e 73746174 		.ascii	"status\000"
 4969      757300
 4970              	.LASF349:
 4971 0e85 43795F53 		.ascii	"Cy_SysClk_ClkHfSetDivider\000"
 4971      7973436C 
 4971      6B5F436C 
 4971      6B486653 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 196


 4971      65744469 
 4972              	.LASF385:
 4973 0e9f 47656E65 		.ascii	"Generated_Source\\PSoC6\\cyfitter_cfg.c\000"
 4973      72617465 
 4973      645F536F 
 4973      75726365 
 4973      5C50536F 
 4974              	.LASF253:
 4975 0ec5 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ECO\000"
 4975      5953434C 
 4975      4B5F434C 
 4975      4B504154 
 4975      485F494E 
 4976              	.LASF200:
 4977 0ede 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4977      44697643 
 4977      6D644469 
 4977      7653656C 
 4977      4D736B00 
 4978              	.LASF117:
 4979 0ef2 42524547 		.ascii	"BREG\000"
 4979      00
 4980              	.LASF43:
 4981 0ef7 5744545F 		.ascii	"WDT_MATCH\000"
 4981      4D415443 
 4981      4800
 4982              	.LASF206:
 4983 0f01 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4983      44697631 
 4983      365F3543 
 4983      746C4F66 
 4983      66736574 
 4984              	.LASF21:
 4985 0f16 4D435744 		.ascii	"MCWDT_CNTLOW\000"
 4985      545F434E 
 4985      544C4F57 
 4985      00
 4986              	.LASF224:
 4987 0f23 63707573 		.ascii	"cpussRam0Ctl0\000"
 4987      7352616D 
 4987      3043746C 
 4987      3000
 4988              	.LASF342:
 4989 0f31 63795F65 		.ascii	"cy_en_clkbak_in_sources_t\000"
 4989      6E5F636C 
 4989      6B62616B 
 4989      5F696E5F 
 4989      736F7572 
 4990              	.LASF1:
 4991 0f4b 6C6F6E67 		.ascii	"long long int\000"
 4991      206C6F6E 
 4991      6720696E 
 4991      7400
 4992              	.LASF151:
 4993 0f59 69706342 		.ascii	"ipcBase\000"
 4993      61736500 
 4994              	.LASF192:
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 197


 4995 0f61 64774368 		.ascii	"dwChCtlPrioPos\000"
 4995      43746C50 
 4995      72696F50 
 4995      6F7300
 4996              	.LASF152:
 4997 0f70 63727970 		.ascii	"cryptoBase\000"
 4997      746F4261 
 4997      736500
 4998              	.LASF360:
 4999 0f7b 43795F53 		.ascii	"Cy_SysClk_ClkBakSetSource\000"
 4999      7973436C 
 4999      6B5F436C 
 4999      6B42616B 
 4999      53657453 
 5000              	.LASF99:
 5001 0f95 53525353 		.ascii	"SRSS_V1_Type\000"
 5001      5F56315F 
 5001      54797065 
 5001      00
 5002              	.LASF182:
 5003 0fa2 666C6173 		.ascii	"flashWriteDelay\000"
 5003      68577269 
 5003      74654465 
 5003      6C617900 
 5004              	.LASF55:
 5005 0fb2 434C4B5F 		.ascii	"CLK_OUTPUT_FAST\000"
 5005      4F555450 
 5005      55545F46 
 5005      41535400 
 5006              	.LASF384:
 5007 0fc2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5007      43313120 
 5007      352E342E 
 5007      31203230 
 5007      31363036 
 5008 0ff5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5008      20726576 
 5008      6973696F 
 5008      6E203233 
 5008      37373135 
 5009 1028 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5009      67202D66 
 5009      66756E63 
 5009      74696F6E 
 5009      2D736563 
 5010              	.LASF6:
 5011 1054 5F5F696E 		.ascii	"__int16_t\000"
 5011      7431365F 
 5011      7400
 5012              	.LASF328:
 5013 105e 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH11\000"
 5013      5953434C 
 5013      4B5F5055 
 5013      4D505F49 
 5013      4E5F434C 
 5014              	.LASF295:
 5015 107a 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH11\000"
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 198


 5015      5953434C 
 5015      4B5F434C 
 5015      4B48465F 
 5015      494E5F43 
 5016              	.LASF296:
 5017 1097 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH12\000"
 5017      5953434C 
 5017      4B5F434C 
 5017      4B48465F 
 5017      494E5F43 
 5018              	.LASF297:
 5019 10b4 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH13\000"
 5019      5953434C 
 5019      4B5F434C 
 5019      4B48465F 
 5019      494E5F43 
 5020              	.LASF148:
 5021 10d1 6873696F 		.ascii	"hsiomBase\000"
 5021      6D426173 
 5021      6500
 5022              	.LASF299:
 5023 10db 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH15\000"
 5023      5953434C 
 5023      4B5F434C 
 5023      4B48465F 
 5023      494E5F43 
 5024              	.LASF392:
 5025 10f8 6D656D73 		.ascii	"memset\000"
 5025      657400
 5026              	.LASF198:
 5027 10ff 70657269 		.ascii	"periTrGrOffset\000"
 5027      54724772 
 5027      4F666673 
 5027      657400
 5028              	.LASF164:
 5029 110e 63707573 		.ascii	"cpussDwChNr\000"
 5029      73447743 
 5029      684E7200 
 5030              	.LASF353:
 5031 111a 43795F53 		.ascii	"Cy_SysClk_ClkHfSetSource\000"
 5031      7973436C 
 5031      6B5F436C 
 5031      6B486653 
 5031      6574536F 
 5032              	.LASF71:
 5033 1133 434C4B5F 		.ascii	"CLK_PLL_CONFIG\000"
 5033      504C4C5F 
 5033      434F4E46 
 5033      494700
 5034              	.LASF162:
 5035 1142 63707573 		.ascii	"cpussIpcNr\000"
 5035      73497063 
 5035      4E7200
 5036              	.LASF215:
 5037 114d 63707573 		.ascii	"cpussCm4StatusOffset\000"
 5037      73436D34 
 5037      53746174 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 199


 5037      75734F66 
 5037      66736574 
 5038              	.LASF174:
 5039 1162 70617373 		.ascii	"passSarChannels\000"
 5039      53617243 
 5039      68616E6E 
 5039      656C7300 
 5040              	.LASF34:
 5041 1172 5057525F 		.ascii	"PWR_HIBERNATE\000"
 5041      48494245 
 5041      524E4154 
 5041      4500
 5042              	.LASF226:
 5043 1180 63707573 		.ascii	"cpussRam2Ctl0\000"
 5043      7352616D 
 5043      3243746C 
 5043      3000
 5044              	.LASF63:
 5045 118e 434C4B5F 		.ascii	"CLK_PILO_CONFIG\000"
 5045      50494C4F 
 5045      5F434F4E 
 5045      46494700 
 5046              	.LASF334:
 5047 119e 43595F53 		.ascii	"CY_SYSCLK_PUMP_NO_DIV\000"
 5047      5953434C 
 5047      4B5F5055 
 5047      4D505F4E 
 5047      4F5F4449 
 5048              	.LASF84:
 5049 11b4 5057525F 		.ascii	"PWR_TRIM_REF_CTL\000"
 5049      5452494D 
 5049      5F524546 
 5049      5F43544C 
 5049      00
 5050              	.LASF100:
 5051 11c5 5254435F 		.ascii	"RTC_RW\000"
 5051      525700
 5052              	.LASF136:
 5053 11cc 5644445F 		.ascii	"VDD_INTR_MASKED\000"
 5053      494E5452 
 5053      5F4D4153 
 5053      4B454400 
 5054              	.LASF205:
 5055 11dc 70657269 		.ascii	"periDiv16CtlOffset\000"
 5055      44697631 
 5055      3643746C 
 5055      4F666673 
 5055      657400
 5056              	.LASF26:
 5057 11ef 4D435744 		.ascii	"MCWDT_INTR\000"
 5057      545F494E 
 5057      545200
 5058              	.LASF30:
 5059 11fa 4D435744 		.ascii	"MCWDT_LOCK\000"
 5059      545F4C4F 
 5059      434B00
 5060              	.LASF9:
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 200


 5061 1205 73686F72 		.ascii	"short unsigned int\000"
 5061      7420756E 
 5061      7369676E 
 5061      65642069 
 5061      6E7400
 5062              	.LASF2:
 5063 1218 6C6F6E67 		.ascii	"long double\000"
 5063      20646F75 
 5063      626C6500 
 5064              	.LASF18:
 5065 1224 75696E74 		.ascii	"uint16_t\000"
 5065      31365F74 
 5065      00
 5066              	.LASF147:
 5067 122d 70726F74 		.ascii	"protBase\000"
 5067      42617365 
 5067      00
 5068              	.LASF137:
 5069 1236 5644445F 		.ascii	"VDD_INTR_SET\000"
 5069      494E5452 
 5069      5F534554 
 5069      00
 5070              	.LASF197:
 5071 1243 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 5071      5472436D 
 5071      64477253 
 5071      656C4D73 
 5071      6B00
 5072              	.LASF249:
 5073 1255 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 5073      5953434C 
 5073      4B5F494E 
 5073      56414C49 
 5073      445F5354 
 5074              	.LASF338:
 5075 126d 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_16\000"
 5075      5953434C 
 5075      4B5F5055 
 5075      4D505F44 
 5075      49565F31 
 5076              	.LASF171:
 5077 1283 73727373 		.ascii	"srssNumHfroot\000"
 5077      4E756D48 
 5077      66726F6F 
 5077      7400
 5078              	.LASF257:
 5079 1291 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ILO\000"
 5079      5953434C 
 5079      4B5F434C 
 5079      4B504154 
 5079      485F494E 
 5080              	.LASF48:
 5081 12aa 434C4B5F 		.ascii	"CLK_ROOT_SELECT\000"
 5081      524F4F54 
 5081      5F53454C 
 5081      45435400 
 5082              	.LASF159:
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 201


 5083 12ba 69706356 		.ascii	"ipcVersion\000"
 5083      65727369 
 5083      6F6E00
 5084              	.LASF155:
 5085 12c5 64775665 		.ascii	"dwVersion\000"
 5085      7273696F 
 5085      6E00
 5086              	.LASF187:
 5087 12cf 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 5087      6843746C 
 5087      4D61696E 
 5087      57733246 
 5087      72657100 
 5088              	.LASF14:
 5089 12e3 73697A65 		.ascii	"sizetype\000"
 5089      74797065 
 5089      00
 5090              	.LASF247:
 5091 12ec 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 5091      5953434C 
 5091      4B5F4241 
 5091      445F5041 
 5091      52414D00 
 5092              	.LASF222:
 5093 1300 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 5093      73436D34 
 5093      4E6D6943 
 5093      746C4F66 
 5093      66736574 
 5094              	.LASF378:
 5095 1315 43795F53 		.ascii	"Cy_SysTick_SetClockSource\000"
 5095      79735469 
 5095      636B5F53 
 5095      6574436C 
 5095      6F636B53 
 5096              	.LASF204:
 5097 132f 70657269 		.ascii	"periDiv8CtlOffset\000"
 5097      44697638 
 5097      43746C4F 
 5097      66667365 
 5097      7400
 5098              	.LASF40:
 5099 1341 52455345 		.ascii	"RESERVED2\000"
 5099      52564544 
 5099      3200
 5100              	.LASF44:
 5101 134b 52455345 		.ascii	"RESERVED3\000"
 5101      52564544 
 5101      3300
 5102              	.LASF49:
 5103 1355 52455345 		.ascii	"RESERVED4\000"
 5103      52564544 
 5103      3400
 5104              	.LASF52:
 5105 135f 52455345 		.ascii	"RESERVED5\000"
 5105      52564544 
 5105      3500
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 202


 5106              	.LASF59:
 5107 1369 52455345 		.ascii	"RESERVED6\000"
 5107      52564544 
 5107      3600
 5108              	.LASF62:
 5109 1373 52455345 		.ascii	"RESERVED7\000"
 5109      52564544 
 5109      3700
 5110              	.LASF64:
 5111 137d 52455345 		.ascii	"RESERVED8\000"
 5111      52564544 
 5111      3800
 5112              	.LASF70:
 5113 1387 52455345 		.ascii	"RESERVED9\000"
 5113      52564544 
 5113      3900
 5114              	.LASF351:
 5115 1391 64697669 		.ascii	"divider\000"
 5115      64657200 
 5116              	.LASF47:
 5117 1399 434C4B5F 		.ascii	"CLK_PATH_SELECT\000"
 5117      50415448 
 5117      5F53454C 
 5117      45435400 
 5118              	.LASF239:
 5119 13a9 73656C30 		.ascii	"sel0Active\000"
 5119      41637469 
 5119      766500
 5120              	.LASF153:
 5121 13b4 63707573 		.ascii	"cpussVersion\000"
 5121      73566572 
 5121      73696F6E 
 5121      00
 5122              	.LASF212:
 5123 13c1 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 5123      50727443 
 5123      66675369 
 5123      6F4F6666 
 5123      73657400 
 5124              	.LASF157:
 5125 13d5 6770696F 		.ascii	"gpioVersion\000"
 5125      56657273 
 5125      696F6E00 
 5126              	.LASF96:
 5127 13e1 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL\000"
 5127      5452494D 
 5127      5F50494C 
 5127      4F5F4354 
 5127      4C00
 5128              	.LASF78:
 5129 13f3 53525353 		.ascii	"SRSS_INTR_MASKED\000"
 5129      5F494E54 
 5129      525F4D41 
 5129      534B4544 
 5129      00
 5130              	.LASF36:
 5131 1404 5057525F 		.ascii	"PWR_BUCK_CTL\000"
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 203


 5131      4255434B 
 5131      5F43544C 
 5131      00
 5132              	.LASF156:
 5133 1411 666C6173 		.ascii	"flashcVersion\000"
 5133      68635665 
 5133      7273696F 
 5133      6E00
 5134              	.LASF178:
 5135 141f 70726F74 		.ascii	"protBusMasterMask\000"
 5135      4275734D 
 5135      61737465 
 5135      724D6173 
 5135      6B00
 5136              	.LASF361:
 5137 1431 43795F53 		.ascii	"Cy_SysClk_IloEnable\000"
 5137      7973436C 
 5137      6B5F496C 
 5137      6F456E61 
 5137      626C6500 
 5138              	.LASF128:
 5139 1445 4750494F 		.ascii	"GPIO_PRT_V1_Type\000"
 5139      5F505254 
 5139      5F56315F 
 5139      54797065 
 5139      00
 5140              	.LASF341:
 5141 1456 43595F53 		.ascii	"CY_SYSCLK_BAK_IN_CLKLF\000"
 5141      5953434C 
 5141      4B5F4241 
 5141      4B5F494E 
 5141      5F434C4B 
 5142              	.LASF251:
 5143 146d 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_IMO\000"
 5143      5953434C 
 5143      4B5F434C 
 5143      4B504154 
 5143      485F494E 
 5144              	.LASF45:
 5145 1486 4D435744 		.ascii	"MCWDT_STRUCT\000"
 5145      545F5354 
 5145      52554354 
 5145      00
 5146              	.LASF230:
 5147 1493 63686172 		.ascii	"char_t\000"
 5147      5F7400
 5148              	.LASF116:
 5149 149a 52455345 		.ascii	"RESET\000"
 5149      5400
 5150              	.LASF274:
 5151 14a0 63636F52 		.ascii	"ccoRange\000"
 5151      616E6765 
 5151      00
 5152              	.LASF86:
 5153 14a9 434C4B5F 		.ascii	"CLK_TRIM_CCO_CTL\000"
 5153      5452494D 
 5153      5F43434F 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 204


 5153      5F43544C 
 5153      00
 5154              	.LASF301:
 5155 14ba 43595F53 		.ascii	"CY_SYSCLK_CLKHF_NO_DIVIDE\000"
 5155      5953434C 
 5155      4B5F434C 
 5155      4B48465F 
 5155      4E4F5F44 
 5156              	.LASF127:
 5157 14d4 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 5157      494E5F47 
 5157      50494F35 
 5157      5600
 5158              	.LASF27:
 5159 14e2 4D435744 		.ascii	"MCWDT_INTR_SET\000"
 5159      545F494E 
 5159      54525F53 
 5159      455400
 5160              	.LASF311:
 5161 14f1 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_IMO\000"
 5161      5953434C 
 5161      4B5F434C 
 5161      4B54494D 
 5161      45525F49 
 5162              	.LASF184:
 5163 150b 666C6173 		.ascii	"flashEraseDelay\000"
 5163      68457261 
 5163      73654465 
 5163      6C617900 
 5164              	.LASF254:
 5165 151b 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ALTHF\000"
 5165      5953434C 
 5165      4B5F434C 
 5165      4B504154 
 5165      485F494E 
 5166              	.LASF101:
 5167 1536 43414C5F 		.ascii	"CAL_CTL\000"
 5167      43544C00 
 5168              	.LASF379:
 5169 153e 43795F53 		.ascii	"Cy_SysLib_SetWaitStates\000"
 5169      79734C69 
 5169      625F5365 
 5169      74576169 
 5169      74537461 
 5170              	.LASF122:
 5171 1556 4F55545F 		.ascii	"OUT_INV\000"
 5171      494E5600 
 5172              	.LASF217:
 5173 155e 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 5173      73436D34 
 5173      50777243 
 5173      746C4F66 
 5173      66736574 
 5174              	.LASF5:
 5175 1573 5F5F7569 		.ascii	"__uint8_t\000"
 5175      6E74385F 
 5175      7400
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 205


 5176              	.LASF354:
 5177 157d 736F7572 		.ascii	"source\000"
 5177      636500
 5178              	.LASF374:
 5179 1584 706F7274 		.ascii	"port11_cfg\000"
 5179      31315F63 
 5179      666700
 5180              	.LASF255:
 5181 158f 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_DSIMUX\000"
 5181      5953434C 
 5181      4B5F434C 
 5181      4B504154 
 5181      485F494E 
 5182              	.LASF208:
 5183 15ab 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 5183      50727449 
 5183      6E747243 
 5183      66674F66 
 5183      66736574 
 5184              	.LASF262:
 5185 15c0 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_AUTO1\000"
 5185      5953434C 
 5185      4B5F464C 
 5185      4C504C4C 
 5185      5F4F5554 
 5186              	.LASF214:
 5187 15de 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 5187      73436D34 
 5187      436C6F63 
 5187      6B43746C 
 5187      4F666673 
 5188              	.LASF112:
 5189 15f5 494E5452 		.ascii	"INTR_MASKED\000"
 5189      5F4D4153 
 5189      4B454400 
 5190              	.LASF369:
 5191 1601 43795F53 		.ascii	"Cy_SysPm_PmicDisableOutput\000"
 5191      7973506D 
 5191      5F506D69 
 5191      63446973 
 5191      61626C65 
 5192              	.LASF219:
 5193 161c 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 5193      73547269 
 5193      6D526F6D 
 5193      43746C4F 
 5193      66667365 
 5194              	.LASF283:
 5195 1632 63795F73 		.ascii	"cy_stc_fll_manual_config_t\000"
 5195      74635F66 
 5195      6C6C5F6D 
 5195      616E7561 
 5195      6C5F636F 
 5196              	.LASF263:
 5197 164d 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_INPUT\000"
 5197      5953434C 
 5197      4B5F464C 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 206


 5197      4C504C4C 
 5197      5F4F5554 
 5198              	.LASF165:
 5199 166b 63707573 		.ascii	"cpussFlashPaSize\000"
 5199      73466C61 
 5199      73685061 
 5199      53697A65 
 5199      00
 5200              	.LASF388:
 5201 167c 6572726F 		.ascii	"errorCode\000"
 5201      72436F64 
 5201      6500
 5202              	.LASF158:
 5203 1686 6873696F 		.ascii	"hsiomVersion\000"
 5203      6D566572 
 5203      73696F6E 
 5203      00
 5204              	.LASF81:
 5205 1693 5245535F 		.ascii	"RES_CAUSE\000"
 5205      43415553 
 5205      4500
 5206              	.LASF12:
 5207 169d 6C6F6E67 		.ascii	"long unsigned int\000"
 5207      20756E73 
 5207      69676E65 
 5207      6420696E 
 5207      7400
 5208              	.LASF352:
 5209 16af 72657456 		.ascii	"retVal\000"
 5209      616C00
 5210              	.LASF261:
 5211 16b6 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_AUTO\000"
 5211      5953434C 
 5211      4B5F464C 
 5211      4C504C4C 
 5211      5F4F5554 
 5212              	.LASF223:
 5213 16d3 63707573 		.ascii	"cpussRomCtl\000"
 5213      73526F6D 
 5213      43746C00 
 5214              	.LASF389:
 5215 16df 436C6F63 		.ascii	"ClockInit\000"
 5215      6B496E69 
 5215      7400
 5216              	.LASF113:
 5217 16e9 4F534343 		.ascii	"OSCCNT\000"
 5217      4E5400
 5218              	.LASF310:
 5219 16f0 63795F65 		.ascii	"cy_en_clklf_in_sources_t\000"
 5219      6E5F636C 
 5219      6B6C665F 
 5219      696E5F73 
 5219      6F757263 
 5220              	.LASF278:
 5221 1709 70676169 		.ascii	"pgain\000"
 5221      6E00
 5222              	.LASF216:
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 207


 5223 170f 63707573 		.ascii	"cpussCm0StatusOffset\000"
 5223      73436D30 
 5223      53746174 
 5223      75734F66 
 5223      66736574 
 5224              	.LASF41:
 5225 1724 5744545F 		.ascii	"WDT_CTL\000"
 5225      43544C00 
 5226              	.LASF4:
 5227 172c 756E7369 		.ascii	"unsigned char\000"
 5227      676E6564 
 5227      20636861 
 5227      7200
 5228              	.LASF11:
 5229 173a 5F5F7569 		.ascii	"__uint32_t\000"
 5229      6E743332 
 5229      5F7400
 5230              	.LASF142:
 5231 1745 4750494F 		.ascii	"GPIO_Type\000"
 5231      5F547970 
 5231      6500
 5232              	.LASF228:
 5233 174f 6970634C 		.ascii	"ipcLockStatusOffset\000"
 5233      6F636B53 
 5233      74617475 
 5233      734F6666 
 5233      73657400 
 5234              	.LASF308:
 5235 1763 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_ALTLF\000"
 5235      5953434C 
 5235      4B5F434C 
 5235      4B4C465F 
 5235      494E5F41 
 5236              	.LASF241:
 5237 177c 63795F73 		.ascii	"cy_stc_gpio_prt_config_t\000"
 5237      74635F67 
 5237      70696F5F 
 5237      7072745F 
 5237      636F6E66 
 5238              	.LASF123:
 5239 1795 494E5452 		.ascii	"INTR_CFG\000"
 5239      5F434647 
 5239      00
 5240              	.LASF252:
 5241 179e 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_EXT\000"
 5241      5953434C 
 5241      4B5F434C 
 5241      4B504154 
 5241      485F494E 
 5242              	.LASF72:
 5243 17b7 52455345 		.ascii	"RESERVED10\000"
 5243      52564544 
 5243      313000
 5244              	.LASF74:
 5245 17c2 52455345 		.ascii	"RESERVED11\000"
 5245      52564544 
 5245      313100
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 208


 5246              	.LASF80:
 5247 17cd 52455345 		.ascii	"RESERVED12\000"
 5247      52564544 
 5247      313200
 5248              	.LASF83:
 5249 17d8 52455345 		.ascii	"RESERVED13\000"
 5249      52564544 
 5249      313300
 5250              	.LASF88:
 5251 17e3 52455345 		.ascii	"RESERVED14\000"
 5251      52564544 
 5251      313400
 5252              	.LASF90:
 5253 17ee 52455345 		.ascii	"RESERVED15\000"
 5253      52564544 
 5253      313500
 5254              	.LASF92:
 5255 17f9 52455345 		.ascii	"RESERVED16\000"
 5255      52564544 
 5255      313600
 5256              	.LASF327:
 5257 1804 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH10\000"
 5257      5953434C 
 5257      4B5F5055 
 5257      4D505F49 
 5257      4E5F434C 
 5258              	.LASF190:
 5259 1820 64774368 		.ascii	"dwChOffset\000"
 5259      4F666673 
 5259      657400
 5260              	.LASF329:
 5261 182b 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH12\000"
 5261      5953434C 
 5261      4B5F5055 
 5261      4D505F49 
 5261      4E5F434C 
 5262              	.LASF330:
 5263 1847 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH13\000"
 5263      5953434C 
 5263      4B5F5055 
 5263      4D505F49 
 5263      4E5F434C 
 5264              	.LASF331:
 5265 1863 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH14\000"
 5265      5953434C 
 5265      4B5F5055 
 5265      4D505F49 
 5265      4E5F434C 
 5266              	.LASF332:
 5267 187f 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH15\000"
 5267      5953434C 
 5267      4B5F5055 
 5267      4D505F49 
 5267      4E5F434C 
 5268              	.LASF104:
 5269 189b 5254435F 		.ascii	"RTC_DATE\000"
 5269      44415445 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 209


 5269      00
 5270              	.LASF25:
 5271 18a4 4D435744 		.ascii	"MCWDT_CTL\000"
 5271      545F4354 
 5271      4C00
 5272              	.LASF357:
 5273 18ae 43795F53 		.ascii	"Cy_SysClk_ClkFastSetDivider\000"
 5273      7973436C 
 5273      6B5F436C 
 5273      6B466173 
 5273      74536574 
 5274              	.LASF358:
 5275 18ca 43795F53 		.ascii	"Cy_SysClk_ClkLfSetSource\000"
 5275      7973436C 
 5275      6B5F436C 
 5275      6B4C6653 
 5275      6574536F 
 5276              	.LASF111:
 5277 18e3 494E5452 		.ascii	"INTR_MASK\000"
 5277      5F4D4153 
 5277      4B00
 5278              	.LASF24:
 5279 18ed 4D435744 		.ascii	"MCWDT_CONFIG\000"
 5279      545F434F 
 5279      4E464947 
 5279      00
 5280              	.LASF180:
 5281 18fa 666C6173 		.ascii	"flashRwwRequired\000"
 5281      68527777 
 5281      52657175 
 5281      69726564 
 5281      00
 5282              	.LASF94:
 5283 190b 5057525F 		.ascii	"PWR_TRIM_PWRSYS_CTL\000"
 5283      5452494D 
 5283      5F505752 
 5283      5359535F 
 5283      43544C00 
 5284              	.LASF209:
 5285 191f 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 5285      50727443 
 5285      66674F66 
 5285      66736574 
 5285      00
 5286              	.LASF309:
 5287 1930 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_PILO\000"
 5287      5953434C 
 5287      4B5F434C 
 5287      4B4C465F 
 5287      494E5F50 
 5288              	.LASF175:
 5289 1948 65704D6F 		.ascii	"epMonitorNr\000"
 5289      6E69746F 
 5289      724E7200 
 5290              	.LASF186:
 5291 1954 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 5291      6843746C 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 210


 5291      4D61696E 
 5291      57733146 
 5291      72657100 
 5292              	.LASF141:
 5293 1968 4750494F 		.ascii	"GPIO_PRT_Type\000"
 5293      5F505254 
 5293      5F547970 
 5293      6500
 5294              	.LASF135:
 5295 1976 5644445F 		.ascii	"VDD_INTR_MASK\000"
 5295      494E5452 
 5295      5F4D4153 
 5295      4B00
 5296              	.LASF3:
 5297 1984 7369676E 		.ascii	"signed char\000"
 5297      65642063 
 5297      68617200 
 5298              	.LASF87:
 5299 1990 434C4B5F 		.ascii	"CLK_TRIM_CCO_CTL2\000"
 5299      5452494D 
 5299      5F43434F 
 5299      5F43544C 
 5299      3200
 5300              	.LASF163:
 5301 19a2 63707573 		.ascii	"cpussIpcIrqNr\000"
 5301      73497063 
 5301      4972714E 
 5301      7200
 5302              	.LASF193:
 5303 19b0 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 5303      43746C50 
 5303      7265656D 
 5303      70746162 
 5303      6C65506F 
 5304              	.LASF229:
 5305 19c6 63795F73 		.ascii	"cy_stc_device_t\000"
 5305      74635F64 
 5305      65766963 
 5305      655F7400 
 5306              	.LASF347:
 5307 19d6 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_CPU\000"
 5307      59535449 
 5307      434B5F43 
 5307      4C4F434B 
 5307      5F534F55 
 5308              	.LASF346:
 5309 19f6 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_TIMER\000"
 5309      59535449 
 5309      434B5F43 
 5309      4C4F434B 
 5309      5F534F55 
 5310              	.LASF75:
 5311 1a18 53525353 		.ascii	"SRSS_INTR\000"
 5311      5F494E54 
 5311      5200
 5312              	.LASF107:
 5313 1a22 414C4D32 		.ascii	"ALM2_TIME\000"
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 211


 5313      5F54494D 
 5313      4500
 5314              	.LASF160:
 5315 1a2c 70657269 		.ascii	"periVersion\000"
 5315      56657273 
 5315      696F6E00 
 5316              	.LASF233:
 5317 1a38 75696E74 		.ascii	"uint8\000"
 5317      3800
 5318              	.LASF232:
 5319 1a3e 646F7562 		.ascii	"double\000"
 5319      6C6500
 5320              	.LASF150:
 5321 1a45 70617373 		.ascii	"passBase\000"
 5321      42617365 
 5321      00
 5322              	.LASF46:
 5323 1a4e 434C4B5F 		.ascii	"CLK_DSI_SELECT\000"
 5323      4453495F 
 5323      53454C45 
 5323      435400
 5324              	.LASF244:
 5325 1a5d 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_0_9V\000"
 5325      5953504D 
 5325      5F4C444F 
 5325      5F564F4C 
 5325      54414745 
 5326              	.LASF23:
 5327 1a77 4D435744 		.ascii	"MCWDT_MATCH\000"
 5327      545F4D41 
 5327      54434800 
 5328              	.LASF169:
 5329 1a83 73727373 		.ascii	"srssNumClkpath\000"
 5329      4E756D43 
 5329      6C6B7061 
 5329      746800
 5330              	.LASF102:
 5331 1a92 53544154 		.ascii	"STATUS\000"
 5331      555300
 5332              	.LASF189:
 5333 1a99 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 5333      6843746C 
 5333      4D61696E 
 5333      57733446 
 5333      72657100 
 5334              	.LASF359:
 5335 1aad 43795F53 		.ascii	"Cy_SysClk_IloHibernateOn\000"
 5335      7973436C 
 5335      6B5F496C 
 5335      6F486962 
 5335      65726E61 
 5336              	.LASF335:
 5337 1ac6 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_2\000"
 5337      5953434C 
 5337      4B5F5055 
 5337      4D505F44 
 5337      49565F32 
ARM GAS  C:\Users\harsh\AppData\Local\Temp\ccruQtqy.s 			page 212


 5338              	.LASF336:
 5339 1adb 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_4\000"
 5339      5953434C 
 5339      4B5F5055 
 5339      4D505F44 
 5339      49565F34 
 5340              	.LASF337:
 5341 1af0 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_8\000"
 5341      5953434C 
 5341      4B5F5055 
 5341      4D505F44 
 5341      49565F38 
 5342              	.LASF368:
 5343 1b05 43795F53 		.ascii	"Cy_SysClk_IloDisable\000"
 5343      7973436C 
 5343      6B5F496C 
 5343      6F446973 
 5343      61626C65 
 5344              	.LASF325:
 5345 1b1a 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH8\000"
 5345      5953434C 
 5345      4B5F5055 
 5345      4D505F49 
 5345      4E5F434C 
 5346              	.LASF234:
 5347 1b35 696E7472 		.ascii	"intrMask\000"
 5347      4D61736B 
 5347      00
 5348              	.LASF108:
 5349 1b3e 414C4D32 		.ascii	"ALM2_DATE\000"
 5349      5F444154 
 5349      4500
 5350              	.LASF306:
 5351 1b48 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_ILO\000"
 5351      5953434C 
 5351      4B5F434C 
 5351      4B4C465F 
 5351      494E5F49 
 5352              	.LASF259:
 5353 1b5f 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ALTLF\000"
 5353      5953434C 
 5353      4B5F434C 
 5353      4B504154 
 5353      485F494E 
 5354              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

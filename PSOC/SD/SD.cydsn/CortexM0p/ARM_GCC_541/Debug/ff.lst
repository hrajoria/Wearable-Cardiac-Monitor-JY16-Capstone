ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ff.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ld_word,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ld_word, %function
  24              	ld_word:
  25              	.LFB0:
  26              		.file 1 "..\\..\\FatFS-master\\source\\ff.c"
   1:..\..\FatFS-master\source/ff.c **** /*----------------------------------------------------------------------------/
   2:..\..\FatFS-master\source/ff.c **** /  FatFs - Generic FAT Filesystem Module  R0.13a                              /
   3:..\..\FatFS-master\source/ff.c **** /-----------------------------------------------------------------------------/
   4:..\..\FatFS-master\source/ff.c **** /
   5:..\..\FatFS-master\source/ff.c **** / Copyright (C) 2017, ChaN, all right reserved.
   6:..\..\FatFS-master\source/ff.c **** /
   7:..\..\FatFS-master\source/ff.c **** / FatFs module is an open source software. Redistribution and use of FatFs in
   8:..\..\FatFS-master\source/ff.c **** / source and binary forms, with or without modification, are permitted provided
   9:..\..\FatFS-master\source/ff.c **** / that the following condition is met:
  10:..\..\FatFS-master\source/ff.c **** /
  11:..\..\FatFS-master\source/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  12:..\..\FatFS-master\source/ff.c **** /    this condition and the following disclaimer.
  13:..\..\FatFS-master\source/ff.c **** /
  14:..\..\FatFS-master\source/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  15:..\..\FatFS-master\source/ff.c **** / and any warranties related to this software are DISCLAIMED.
  16:..\..\FatFS-master\source/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  17:..\..\FatFS-master\source/ff.c **** / by use of this software.
  18:..\..\FatFS-master\source/ff.c **** /
  19:..\..\FatFS-master\source/ff.c **** /----------------------------------------------------------------------------*/
  20:..\..\FatFS-master\source/ff.c **** 
  21:..\..\FatFS-master\source/ff.c **** 
  22:..\..\FatFS-master\source/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
  23:..\..\FatFS-master\source/ff.c **** #include "diskio.h"		/* Declarations of device I/O functions */
  24:..\..\FatFS-master\source/ff.c **** 
  25:..\..\FatFS-master\source/ff.c **** 
  26:..\..\FatFS-master\source/ff.c **** /*--------------------------------------------------------------------------
  27:..\..\FatFS-master\source/ff.c **** 
  28:..\..\FatFS-master\source/ff.c ****    Module Private Definitions
  29:..\..\FatFS-master\source/ff.c **** 
  30:..\..\FatFS-master\source/ff.c **** ---------------------------------------------------------------------------*/
  31:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 2


  32:..\..\FatFS-master\source/ff.c **** #if FF_DEFINED != 89352	/* Revision ID */
  33:..\..\FatFS-master\source/ff.c **** #error Wrong include file (ff.h).
  34:..\..\FatFS-master\source/ff.c **** #endif
  35:..\..\FatFS-master\source/ff.c **** 
  36:..\..\FatFS-master\source/ff.c **** 
  37:..\..\FatFS-master\source/ff.c **** /* Character code support macros */
  38:..\..\FatFS-master\source/ff.c **** #define IsUpper(c)		((c) >= 'A' && (c) <= 'Z')
  39:..\..\FatFS-master\source/ff.c **** #define IsLower(c)		((c) >= 'a' && (c) <= 'z')
  40:..\..\FatFS-master\source/ff.c **** #define IsDigit(c)		((c) >= '0' && (c) <= '9')
  41:..\..\FatFS-master\source/ff.c **** #define IsSurrogate(c)	((c) >= 0xD800 && (c) <= 0xDFFF)
  42:..\..\FatFS-master\source/ff.c **** #define IsSurrogateH(c)	((c) >= 0xD800 && (c) <= 0xDBFF)
  43:..\..\FatFS-master\source/ff.c **** #define IsSurrogateL(c)	((c) >= 0xDC00 && (c) <= 0xDFFF)
  44:..\..\FatFS-master\source/ff.c **** 
  45:..\..\FatFS-master\source/ff.c **** 
  46:..\..\FatFS-master\source/ff.c **** /* Additional file attribute bits for internal use */
  47:..\..\FatFS-master\source/ff.c **** #define AM_VOL		0x08	/* Volume label */
  48:..\..\FatFS-master\source/ff.c **** #define AM_LFN		0x0F	/* LFN entry */
  49:..\..\FatFS-master\source/ff.c **** #define AM_MASK		0x3F	/* Mask of defined bits */
  50:..\..\FatFS-master\source/ff.c **** 
  51:..\..\FatFS-master\source/ff.c **** 
  52:..\..\FatFS-master\source/ff.c **** /* Additional file access control and file status flags for internal use */
  53:..\..\FatFS-master\source/ff.c **** #define FA_SEEKEND	0x20	/* Seek to end of the file on file open */
  54:..\..\FatFS-master\source/ff.c **** #define FA_MODIFIED	0x40	/* File has been modified */
  55:..\..\FatFS-master\source/ff.c **** #define FA_DIRTY	0x80	/* FIL.buf[] needs to be written-back */
  56:..\..\FatFS-master\source/ff.c **** 
  57:..\..\FatFS-master\source/ff.c **** 
  58:..\..\FatFS-master\source/ff.c **** /* Name status flags in fn[11] */
  59:..\..\FatFS-master\source/ff.c **** #define NSFLAG		11		/* Index of the name status byte */
  60:..\..\FatFS-master\source/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
  61:..\..\FatFS-master\source/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
  62:..\..\FatFS-master\source/ff.c **** #define NS_LAST		0x04	/* Last segment */
  63:..\..\FatFS-master\source/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
  64:..\..\FatFS-master\source/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
  65:..\..\FatFS-master\source/ff.c **** #define NS_DOT		0x20	/* Dot entry */
  66:..\..\FatFS-master\source/ff.c **** #define NS_NOLFN	0x40	/* Do not find LFN */
  67:..\..\FatFS-master\source/ff.c **** #define NS_NONAME	0x80	/* Not followed */
  68:..\..\FatFS-master\source/ff.c **** 
  69:..\..\FatFS-master\source/ff.c **** 
  70:..\..\FatFS-master\source/ff.c **** /* Limits and boundaries */
  71:..\..\FatFS-master\source/ff.c **** #define MAX_DIR		0x200000		/* Max size of FAT directory */
  72:..\..\FatFS-master\source/ff.c **** #define MAX_DIR_EX	0x10000000		/* Max size of exFAT directory */
  73:..\..\FatFS-master\source/ff.c **** #define MAX_FAT12	0xFF5			/* Max FAT12 clusters (differs from specs, but right for real DOS/Windows
  74:..\..\FatFS-master\source/ff.c **** #define MAX_FAT16	0xFFF5			/* Max FAT16 clusters (differs from specs, but right for real DOS/Window
  75:..\..\FatFS-master\source/ff.c **** #define MAX_FAT32	0x0FFFFFF5		/* Max FAT32 clusters (not specified, practical limit) */
  76:..\..\FatFS-master\source/ff.c **** #define MAX_EXFAT	0x7FFFFFFD		/* Max exFAT clusters (differs from specs, implementation limit) */
  77:..\..\FatFS-master\source/ff.c **** 
  78:..\..\FatFS-master\source/ff.c **** 
  79:..\..\FatFS-master\source/ff.c **** /* FatFs refers the FAT structure as simple byte array instead of structure member
  80:..\..\FatFS-master\source/ff.c **** / because the C structure is not binary compatible between different platforms */
  81:..\..\FatFS-master\source/ff.c **** 
  82:..\..\FatFS-master\source/ff.c **** #define BS_JmpBoot			0		/* x86 jump instruction (3-byte) */
  83:..\..\FatFS-master\source/ff.c **** #define BS_OEMName			3		/* OEM name (8-byte) */
  84:..\..\FatFS-master\source/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (WORD) */
  85:..\..\FatFS-master\source/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (BYTE) */
  86:..\..\FatFS-master\source/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (WORD) */
  87:..\..\FatFS-master\source/ff.c **** #define BPB_NumFATs			16		/* Number of FATs (BYTE) */
  88:..\..\FatFS-master\source/ff.c **** #define BPB_RootEntCnt		17		/* Size of root directory area for FAT [entry] (WORD) */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 3


  89:..\..\FatFS-master\source/ff.c **** #define BPB_TotSec16		19		/* Volume size (16-bit) [sector] (WORD) */
  90:..\..\FatFS-master\source/ff.c **** #define BPB_Media			21		/* Media descriptor byte (BYTE) */
  91:..\..\FatFS-master\source/ff.c **** #define BPB_FATSz16			22		/* FAT size (16-bit) [sector] (WORD) */
  92:..\..\FatFS-master\source/ff.c **** #define BPB_SecPerTrk		24		/* Number of sectors per track for int13h [sector] (WORD) */
  93:..\..\FatFS-master\source/ff.c **** #define BPB_NumHeads		26		/* Number of heads for int13h (WORD) */
  94:..\..\FatFS-master\source/ff.c **** #define BPB_HiddSec			28		/* Volume offset from top of the drive (DWORD) */
  95:..\..\FatFS-master\source/ff.c **** #define BPB_TotSec32		32		/* Volume size (32-bit) [sector] (DWORD) */
  96:..\..\FatFS-master\source/ff.c **** #define BS_DrvNum			36		/* Physical drive number for int13h (BYTE) */
  97:..\..\FatFS-master\source/ff.c **** #define BS_NTres			37		/* WindowsNT error flag (BYTE) */
  98:..\..\FatFS-master\source/ff.c **** #define BS_BootSig			38		/* Extended boot signature (BYTE) */
  99:..\..\FatFS-master\source/ff.c **** #define BS_VolID			39		/* Volume serial number (DWORD) */
 100:..\..\FatFS-master\source/ff.c **** #define BS_VolLab			43		/* Volume label string (8-byte) */
 101:..\..\FatFS-master\source/ff.c **** #define BS_FilSysType		54		/* Filesystem type string (8-byte) */
 102:..\..\FatFS-master\source/ff.c **** #define BS_BootCode			62		/* Boot code (448-byte) */
 103:..\..\FatFS-master\source/ff.c **** #define BS_55AA				510		/* Signature word (WORD) */
 104:..\..\FatFS-master\source/ff.c **** 
 105:..\..\FatFS-master\source/ff.c **** #define BPB_FATSz32			36		/* FAT32: FAT size [sector] (DWORD) */
 106:..\..\FatFS-master\source/ff.c **** #define BPB_ExtFlags32		40		/* FAT32: Extended flags (WORD) */
 107:..\..\FatFS-master\source/ff.c **** #define BPB_FSVer32			42		/* FAT32: Filesystem version (WORD) */
 108:..\..\FatFS-master\source/ff.c **** #define BPB_RootClus32		44		/* FAT32: Root directory cluster (DWORD) */
 109:..\..\FatFS-master\source/ff.c **** #define BPB_FSInfo32		48		/* FAT32: Offset of FSINFO sector (WORD) */
 110:..\..\FatFS-master\source/ff.c **** #define BPB_BkBootSec32		50		/* FAT32: Offset of backup boot sector (WORD) */
 111:..\..\FatFS-master\source/ff.c **** #define BS_DrvNum32			64		/* FAT32: Physical drive number for int13h (BYTE) */
 112:..\..\FatFS-master\source/ff.c **** #define BS_NTres32			65		/* FAT32: Error flag (BYTE) */
 113:..\..\FatFS-master\source/ff.c **** #define BS_BootSig32		66		/* FAT32: Extended boot signature (BYTE) */
 114:..\..\FatFS-master\source/ff.c **** #define BS_VolID32			67		/* FAT32: Volume serial number (DWORD) */
 115:..\..\FatFS-master\source/ff.c **** #define BS_VolLab32			71		/* FAT32: Volume label string (8-byte) */
 116:..\..\FatFS-master\source/ff.c **** #define BS_FilSysType32		82		/* FAT32: Filesystem type string (8-byte) */
 117:..\..\FatFS-master\source/ff.c **** #define BS_BootCode32		90		/* FAT32: Boot code (420-byte) */
 118:..\..\FatFS-master\source/ff.c **** 
 119:..\..\FatFS-master\source/ff.c **** #define BPB_ZeroedEx		11		/* exFAT: MBZ field (53-byte) */
 120:..\..\FatFS-master\source/ff.c **** #define BPB_VolOfsEx		64		/* exFAT: Volume offset from top of the drive [sector] (QWORD) */
 121:..\..\FatFS-master\source/ff.c **** #define BPB_TotSecEx		72		/* exFAT: Volume size [sector] (QWORD) */
 122:..\..\FatFS-master\source/ff.c **** #define BPB_FatOfsEx		80		/* exFAT: FAT offset from top of the volume [sector] (DWORD) */
 123:..\..\FatFS-master\source/ff.c **** #define BPB_FatSzEx			84		/* exFAT: FAT size [sector] (DWORD) */
 124:..\..\FatFS-master\source/ff.c **** #define BPB_DataOfsEx		88		/* exFAT: Data offset from top of the volume [sector] (DWORD) */
 125:..\..\FatFS-master\source/ff.c **** #define BPB_NumClusEx		92		/* exFAT: Number of clusters (DWORD) */
 126:..\..\FatFS-master\source/ff.c **** #define BPB_RootClusEx		96		/* exFAT: Root directory start cluster (DWORD) */
 127:..\..\FatFS-master\source/ff.c **** #define BPB_VolIDEx			100		/* exFAT: Volume serial number (DWORD) */
 128:..\..\FatFS-master\source/ff.c **** #define BPB_FSVerEx			104		/* exFAT: Filesystem version (WORD) */
 129:..\..\FatFS-master\source/ff.c **** #define BPB_VolFlagEx		106		/* exFAT: Volume flags (WORD) */
 130:..\..\FatFS-master\source/ff.c **** #define BPB_BytsPerSecEx	108		/* exFAT: Log2 of sector size in unit of byte (BYTE) */
 131:..\..\FatFS-master\source/ff.c **** #define BPB_SecPerClusEx	109		/* exFAT: Log2 of cluster size in unit of sector (BYTE) */
 132:..\..\FatFS-master\source/ff.c **** #define BPB_NumFATsEx		110		/* exFAT: Number of FATs (BYTE) */
 133:..\..\FatFS-master\source/ff.c **** #define BPB_DrvNumEx		111		/* exFAT: Physical drive number for int13h (BYTE) */
 134:..\..\FatFS-master\source/ff.c **** #define BPB_PercInUseEx		112		/* exFAT: Percent in use (BYTE) */
 135:..\..\FatFS-master\source/ff.c **** #define BPB_RsvdEx			113		/* exFAT: Reserved (7-byte) */
 136:..\..\FatFS-master\source/ff.c **** #define BS_BootCodeEx		120		/* exFAT: Boot code (390-byte) */
 137:..\..\FatFS-master\source/ff.c **** 
 138:..\..\FatFS-master\source/ff.c **** #define DIR_Name			0		/* Short file name (11-byte) */
 139:..\..\FatFS-master\source/ff.c **** #define DIR_Attr			11		/* Attribute (BYTE) */
 140:..\..\FatFS-master\source/ff.c **** #define DIR_NTres			12		/* Lower case flag (BYTE) */
 141:..\..\FatFS-master\source/ff.c **** #define DIR_CrtTime10		13		/* Created time sub-second (BYTE) */
 142:..\..\FatFS-master\source/ff.c **** #define DIR_CrtTime			14		/* Created time (DWORD) */
 143:..\..\FatFS-master\source/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (WORD) */
 144:..\..\FatFS-master\source/ff.c **** #define DIR_FstClusHI		20		/* Higher 16-bit of first cluster (WORD) */
 145:..\..\FatFS-master\source/ff.c **** #define DIR_ModTime			22		/* Modified time (DWORD) */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 4


 146:..\..\FatFS-master\source/ff.c **** #define DIR_FstClusLO		26		/* Lower 16-bit of first cluster (WORD) */
 147:..\..\FatFS-master\source/ff.c **** #define DIR_FileSize		28		/* File size (DWORD) */
 148:..\..\FatFS-master\source/ff.c **** #define LDIR_Ord			0		/* LFN: LFN order and LLE flag (BYTE) */
 149:..\..\FatFS-master\source/ff.c **** #define LDIR_Attr			11		/* LFN: LFN attribute (BYTE) */
 150:..\..\FatFS-master\source/ff.c **** #define LDIR_Type			12		/* LFN: Entry type (BYTE) */
 151:..\..\FatFS-master\source/ff.c **** #define LDIR_Chksum			13		/* LFN: Checksum of the SFN (BYTE) */
 152:..\..\FatFS-master\source/ff.c **** #define LDIR_FstClusLO		26		/* LFN: MBZ field (WORD) */
 153:..\..\FatFS-master\source/ff.c **** #define XDIR_Type			0		/* exFAT: Type of exFAT directory entry (BYTE) */
 154:..\..\FatFS-master\source/ff.c **** #define XDIR_NumLabel		1		/* exFAT: Number of volume label characters (BYTE) */
 155:..\..\FatFS-master\source/ff.c **** #define XDIR_Label			2		/* exFAT: Volume label (11-WORD) */
 156:..\..\FatFS-master\source/ff.c **** #define XDIR_CaseSum		4		/* exFAT: Sum of case conversion table (DWORD) */
 157:..\..\FatFS-master\source/ff.c **** #define XDIR_NumSec			1		/* exFAT: Number of secondary entries (BYTE) */
 158:..\..\FatFS-master\source/ff.c **** #define XDIR_SetSum			2		/* exFAT: Sum of the set of directory entries (WORD) */
 159:..\..\FatFS-master\source/ff.c **** #define XDIR_Attr			4		/* exFAT: File attribute (WORD) */
 160:..\..\FatFS-master\source/ff.c **** #define XDIR_CrtTime		8		/* exFAT: Created time (DWORD) */
 161:..\..\FatFS-master\source/ff.c **** #define XDIR_ModTime		12		/* exFAT: Modified time (DWORD) */
 162:..\..\FatFS-master\source/ff.c **** #define XDIR_AccTime		16		/* exFAT: Last accessed time (DWORD) */
 163:..\..\FatFS-master\source/ff.c **** #define XDIR_CrtTime10		20		/* exFAT: Created time subsecond (BYTE) */
 164:..\..\FatFS-master\source/ff.c **** #define XDIR_ModTime10		21		/* exFAT: Modified time subsecond (BYTE) */
 165:..\..\FatFS-master\source/ff.c **** #define XDIR_CrtTZ			22		/* exFAT: Created timezone (BYTE) */
 166:..\..\FatFS-master\source/ff.c **** #define XDIR_ModTZ			23		/* exFAT: Modified timezone (BYTE) */
 167:..\..\FatFS-master\source/ff.c **** #define XDIR_AccTZ			24		/* exFAT: Last accessed timezone (BYTE) */
 168:..\..\FatFS-master\source/ff.c **** #define XDIR_GenFlags		33		/* exFAT: General secondary flags (BYTE) */
 169:..\..\FatFS-master\source/ff.c **** #define XDIR_NumName		35		/* exFAT: Number of file name characters (BYTE) */
 170:..\..\FatFS-master\source/ff.c **** #define XDIR_NameHash		36		/* exFAT: Hash of file name (WORD) */
 171:..\..\FatFS-master\source/ff.c **** #define XDIR_ValidFileSize	40		/* exFAT: Valid file size (QWORD) */
 172:..\..\FatFS-master\source/ff.c **** #define XDIR_FstClus		52		/* exFAT: First cluster of the file data (DWORD) */
 173:..\..\FatFS-master\source/ff.c **** #define XDIR_FileSize		56		/* exFAT: File/Directory size (QWORD) */
 174:..\..\FatFS-master\source/ff.c **** 
 175:..\..\FatFS-master\source/ff.c **** #define SZDIRE				32		/* Size of a directory entry */
 176:..\..\FatFS-master\source/ff.c **** #define DDEM				0xE5	/* Deleted directory entry mark set to DIR_Name[0] */
 177:..\..\FatFS-master\source/ff.c **** #define RDDEM				0x05	/* Replacement of the character collides with DDEM */
 178:..\..\FatFS-master\source/ff.c **** #define LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 179:..\..\FatFS-master\source/ff.c **** 
 180:..\..\FatFS-master\source/ff.c **** #define FSI_LeadSig			0		/* FAT32 FSI: Leading signature (DWORD) */
 181:..\..\FatFS-master\source/ff.c **** #define FSI_StrucSig		484		/* FAT32 FSI: Structure signature (DWORD) */
 182:..\..\FatFS-master\source/ff.c **** #define FSI_Free_Count		488		/* FAT32 FSI: Number of free clusters (DWORD) */
 183:..\..\FatFS-master\source/ff.c **** #define FSI_Nxt_Free		492		/* FAT32 FSI: Last allocated cluster (DWORD) */
 184:..\..\FatFS-master\source/ff.c **** 
 185:..\..\FatFS-master\source/ff.c **** #define MBR_Table			446		/* MBR: Offset of partition table in the MBR */
 186:..\..\FatFS-master\source/ff.c **** #define SZ_PTE				16		/* MBR: Size of a partition table entry */
 187:..\..\FatFS-master\source/ff.c **** #define PTE_Boot			0		/* MBR PTE: Boot indicator */
 188:..\..\FatFS-master\source/ff.c **** #define PTE_StHead			1		/* MBR PTE: Start head */
 189:..\..\FatFS-master\source/ff.c **** #define PTE_StSec			2		/* MBR PTE: Start sector */
 190:..\..\FatFS-master\source/ff.c **** #define PTE_StCyl			3		/* MBR PTE: Start cylinder */
 191:..\..\FatFS-master\source/ff.c **** #define PTE_System			4		/* MBR PTE: System ID */
 192:..\..\FatFS-master\source/ff.c **** #define PTE_EdHead			5		/* MBR PTE: End head */
 193:..\..\FatFS-master\source/ff.c **** #define PTE_EdSec			6		/* MBR PTE: End sector */
 194:..\..\FatFS-master\source/ff.c **** #define PTE_EdCyl			7		/* MBR PTE: End cylinder */
 195:..\..\FatFS-master\source/ff.c **** #define PTE_StLba			8		/* MBR PTE: Start in LBA */
 196:..\..\FatFS-master\source/ff.c **** #define PTE_SizLba			12		/* MBR PTE: Size in LBA */
 197:..\..\FatFS-master\source/ff.c **** 
 198:..\..\FatFS-master\source/ff.c **** 
 199:..\..\FatFS-master\source/ff.c **** /* Post process on fatal error in the file operations */
 200:..\..\FatFS-master\source/ff.c **** #define ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 201:..\..\FatFS-master\source/ff.c **** 
 202:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 5


 203:..\..\FatFS-master\source/ff.c **** /* Re-entrancy related */
 204:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT
 205:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN == 1
 206:..\..\FatFS-master\source/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 207:..\..\FatFS-master\source/ff.c **** #endif
 208:..\..\FatFS-master\source/ff.c **** #define LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 209:..\..\FatFS-master\source/ff.c **** #else
 210:..\..\FatFS-master\source/ff.c **** #define LEAVE_FF(fs, res)	return res
 211:..\..\FatFS-master\source/ff.c **** #endif
 212:..\..\FatFS-master\source/ff.c **** 
 213:..\..\FatFS-master\source/ff.c **** 
 214:..\..\FatFS-master\source/ff.c **** /* Definitions of volume - physical location conversion */
 215:..\..\FatFS-master\source/ff.c **** #if FF_MULTI_PARTITION
 216:..\..\FatFS-master\source/ff.c **** #define LD2PD(vol) VolToPart[vol].pd	/* Get physical drive number */
 217:..\..\FatFS-master\source/ff.c **** #define LD2PT(vol) VolToPart[vol].pt	/* Get partition index */
 218:..\..\FatFS-master\source/ff.c **** #else
 219:..\..\FatFS-master\source/ff.c **** #define LD2PD(vol) (BYTE)(vol)	/* Each logical drive is bound to the same physical drive number */
 220:..\..\FatFS-master\source/ff.c **** #define LD2PT(vol) 0			/* Find first valid partition or in SFD */
 221:..\..\FatFS-master\source/ff.c **** #endif
 222:..\..\FatFS-master\source/ff.c **** 
 223:..\..\FatFS-master\source/ff.c **** 
 224:..\..\FatFS-master\source/ff.c **** /* Definitions of sector size */
 225:..\..\FatFS-master\source/ff.c **** #if (FF_MAX_SS < FF_MIN_SS) || (FF_MAX_SS != 512 && FF_MAX_SS != 1024 && FF_MAX_SS != 2048 && FF_MA
 226:..\..\FatFS-master\source/ff.c **** #error Wrong sector size configuration
 227:..\..\FatFS-master\source/ff.c **** #endif
 228:..\..\FatFS-master\source/ff.c **** #if FF_MAX_SS == FF_MIN_SS
 229:..\..\FatFS-master\source/ff.c **** #define SS(fs)	((UINT)FF_MAX_SS)	/* Fixed sector size */
 230:..\..\FatFS-master\source/ff.c **** #else
 231:..\..\FatFS-master\source/ff.c **** #define SS(fs)	((fs)->ssize)	/* Variable sector size */
 232:..\..\FatFS-master\source/ff.c **** #endif
 233:..\..\FatFS-master\source/ff.c **** 
 234:..\..\FatFS-master\source/ff.c **** 
 235:..\..\FatFS-master\source/ff.c **** /* Timestamp */
 236:..\..\FatFS-master\source/ff.c **** #if FF_FS_NORTC == 1
 237:..\..\FatFS-master\source/ff.c **** #if FF_NORTC_YEAR < 1980 || FF_NORTC_YEAR > 2107 || FF_NORTC_MON < 1 || FF_NORTC_MON > 12 || FF_NOR
 238:..\..\FatFS-master\source/ff.c **** #error Invalid FF_FS_NORTC settings
 239:..\..\FatFS-master\source/ff.c **** #endif
 240:..\..\FatFS-master\source/ff.c **** #define GET_FATTIME()	((DWORD)(FF_NORTC_YEAR - 1980) << 25 | (DWORD)FF_NORTC_MON << 21 | (DWORD)FF_
 241:..\..\FatFS-master\source/ff.c **** #else
 242:..\..\FatFS-master\source/ff.c **** #define GET_FATTIME()	get_fattime()
 243:..\..\FatFS-master\source/ff.c **** #endif
 244:..\..\FatFS-master\source/ff.c **** 
 245:..\..\FatFS-master\source/ff.c **** 
 246:..\..\FatFS-master\source/ff.c **** /* File lock controls */
 247:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
 248:..\..\FatFS-master\source/ff.c **** #if FF_FS_READONLY
 249:..\..\FatFS-master\source/ff.c **** #error FF_FS_LOCK must be 0 at read-only configuration
 250:..\..\FatFS-master\source/ff.c **** #endif
 251:..\..\FatFS-master\source/ff.c **** typedef struct {
 252:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 253:..\..\FatFS-master\source/ff.c **** 	DWORD clu;		/* Object ID 2, containing directory (0:root) */
 254:..\..\FatFS-master\source/ff.c **** 	DWORD ofs;		/* Object ID 3, offset in the directory */
 255:..\..\FatFS-master\source/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 256:..\..\FatFS-master\source/ff.c **** } FILESEM;
 257:..\..\FatFS-master\source/ff.c **** #endif
 258:..\..\FatFS-master\source/ff.c **** 
 259:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 6


 260:..\..\FatFS-master\source/ff.c **** /* SBCS up-case tables (\x80-\xFF) */
 261:..\..\FatFS-master\source/ff.c **** #define TBL_CT437  {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
 262:..\..\FatFS-master\source/ff.c **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 263:..\..\FatFS-master\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 264:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 265:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 266:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 267:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 268:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 269:..\..\FatFS-master\source/ff.c **** #define TBL_CT720  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 270:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 271:..\..\FatFS-master\source/ff.c **** 					0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 272:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 273:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 274:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 275:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 276:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 277:..\..\FatFS-master\source/ff.c **** #define TBL_CT737  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 278:..\..\FatFS-master\source/ff.c **** 					0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \
 279:..\..\FatFS-master\source/ff.c **** 					0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96, \
 280:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 281:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 282:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 283:..\..\FatFS-master\source/ff.c **** 					0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xEF,0xF5,0xF0,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 284:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 285:..\..\FatFS-master\source/ff.c **** #define TBL_CT771  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 286:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 287:..\..\FatFS-master\source/ff.c **** 					0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 288:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 289:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 290:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDC,0xDE,0xDE, \
 291:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 292:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFE,0xFF}
 293:..\..\FatFS-master\source/ff.c **** #define TBL_CT775  {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F
 294:..\..\FatFS-master\source/ff.c **** 					0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 295:..\..\FatFS-master\source/ff.c **** 					0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 296:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 297:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 298:..\..\FatFS-master\source/ff.c **** 					0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xA5,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 299:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF, \
 300:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 301:..\..\FatFS-master\source/ff.c **** #define TBL_CT850  {0x43,0x55,0x45,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x49,0x49,0x49,0x41,0x41
 302:..\..\FatFS-master\source/ff.c **** 					0x45,0x92,0x92,0x4F,0x4F,0x4F,0x55,0x55,0x59,0x4F,0x55,0x4F,0x9C,0x4F,0x9E,0x9F, \
 303:..\..\FatFS-master\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 304:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0x41,0x41,0x41,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 305:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x41,0x41,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 306:..\..\FatFS-master\source/ff.c **** 					0xD1,0xD1,0x45,0x45,0x45,0x49,0x49,0x49,0x49,0xD9,0xDA,0xDB,0xDC,0xDD,0x49,0xDF, \
 307:..\..\FatFS-master\source/ff.c **** 					0x4F,0xE1,0x4F,0x4F,0x4F,0x4F,0xE6,0xE8,0xE8,0x55,0x55,0x55,0x59,0x59,0xEE,0xEF, \
 308:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 309:..\..\FatFS-master\source/ff.c **** #define TBL_CT852  {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F
 310:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0xAC, \
 311:..\..\FatFS-master\source/ff.c **** 					0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF, \
 312:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBD,0xBF, \
 313:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 314:..\..\FatFS-master\source/ff.c **** 					0xD1,0xD1,0xD2,0xD3,0xD2,0xD5,0xD6,0xD7,0xB7,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 315:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF, \
 316:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 7


 317:..\..\FatFS-master\source/ff.c **** #define TBL_CT855  {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F
 318:..\..\FatFS-master\source/ff.c **** 					0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \
 319:..\..\FatFS-master\source/ff.c **** 					0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF, \
 320:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB6,0xB6,0xB8,0xB8,0xB9,0xBA,0xBB,0xBC,0xBE,0xBE,0xBF, \
 321:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 322:..\..\FatFS-master\source/ff.c **** 					0xD1,0xD1,0xD3,0xD3,0xD5,0xD5,0xD7,0xD7,0xDD,0xD9,0xDA,0xDB,0xDC,0xDD,0xE0,0xDF, \
 323:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF, \
 324:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}
 325:..\..\FatFS-master\source/ff.c **** #define TBL_CT857  {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F
 326:..\..\FatFS-master\source/ff.c **** 					0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \
 327:..\..\FatFS-master\source/ff.c **** 					0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 328:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 329:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 330:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0x49,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 331:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0xED,0xEE,0xEF, \
 332:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 333:..\..\FatFS-master\source/ff.c **** #define TBL_CT860  {0x80,0x9A,0x90,0x8F,0x8E,0x91,0x86,0x80,0x89,0x89,0x92,0x8B,0x8C,0x98,0x8E,0x8F
 334:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x92,0x8C,0x99,0xA9,0x96,0x9D,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 335:..\..\FatFS-master\source/ff.c **** 					0x86,0x8B,0x9F,0x96,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 336:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 337:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 338:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 339:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 340:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 341:..\..\FatFS-master\source/ff.c **** #define TBL_CT861  {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x8B,0x8B,0x8D,0x8E,0x8F
 342:..\..\FatFS-master\source/ff.c **** 					0x90,0x92,0x92,0x4F,0x99,0x8D,0x55,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \
 343:..\..\FatFS-master\source/ff.c **** 					0xA4,0xA5,0xA6,0xA7,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 344:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 345:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 346:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 347:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 348:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 349:..\..\FatFS-master\source/ff.c **** #define TBL_CT862  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 350:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 351:..\..\FatFS-master\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 352:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 353:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 354:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 355:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 356:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 357:..\..\FatFS-master\source/ff.c **** #define TBL_CT863  {0x43,0x55,0x45,0x41,0x41,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x41,0x8F
 358:..\..\FatFS-master\source/ff.c **** 					0x45,0x45,0x45,0x4F,0x45,0x49,0x55,0x55,0x98,0x4F,0x55,0x9B,0x9C,0x55,0x55,0x9F, \
 359:..\..\FatFS-master\source/ff.c **** 					0xA0,0xA1,0x4F,0x55,0xA4,0xA5,0xA6,0xA7,0x49,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 360:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 361:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 362:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 363:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 364:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 365:..\..\FatFS-master\source/ff.c **** #define TBL_CT864  {0x80,0x9A,0x45,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
 366:..\..\FatFS-master\source/ff.c **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 367:..\..\FatFS-master\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 368:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 369:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 370:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 371:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 372:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 373:..\..\FatFS-master\source/ff.c **** #define TBL_CT865  {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 8


 374:..\..\FatFS-master\source/ff.c **** 					0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 375:..\..\FatFS-master\source/ff.c **** 					0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 376:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 377:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 378:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 379:..\..\FatFS-master\source/ff.c **** 					0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF, \
 380:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 381:..\..\FatFS-master\source/ff.c **** #define TBL_CT866  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 382:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 383:..\..\FatFS-master\source/ff.c **** 					0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F, \
 384:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 385:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 386:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, \
 387:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \
 388:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}
 389:..\..\FatFS-master\source/ff.c **** #define TBL_CT869  {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F
 390:..\..\FatFS-master\source/ff.c **** 					0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x86,0x9C,0x8D,0x8F,0x90, \
 391:..\..\FatFS-master\source/ff.c **** 					0x91,0x90,0x92,0x95,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF, \
 392:..\..\FatFS-master\source/ff.c **** 					0xB0,0xB1,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, \
 393:..\..\FatFS-master\source/ff.c **** 					0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF, \
 394:..\..\FatFS-master\source/ff.c **** 					0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xA4,0xA5,0xA6,0xD9,0xDA,0xDB,0xDC,0xA7,0xA8,0xDF, \
 395:..\..\FatFS-master\source/ff.c **** 					0xA9,0xAA,0xAC,0xAD,0xB5,0xB6,0xB7,0xB8,0xBD,0xBE,0xC6,0xC7,0xCF,0xCF,0xD0,0xEF, \
 396:..\..\FatFS-master\source/ff.c **** 					0xF0,0xF1,0xD1,0xD2,0xD3,0xF5,0xD4,0xF7,0xF8,0xF9,0xD5,0x96,0x95,0x98,0xFE,0xFF}
 397:..\..\FatFS-master\source/ff.c **** 
 398:..\..\FatFS-master\source/ff.c **** 
 399:..\..\FatFS-master\source/ff.c **** /* DBCS code range |----- 1st byte -----|  |----------- 2nd byte -----------| */
 400:..\..\FatFS-master\source/ff.c **** #define TBL_DC932 {0x81, 0x9F, 0xE0, 0xFC, 0x40, 0x7E, 0x80, 0xFC, 0x00, 0x00}
 401:..\..\FatFS-master\source/ff.c **** #define TBL_DC936 {0x81, 0xFE, 0x00, 0x00, 0x40, 0x7E, 0x80, 0xFE, 0x00, 0x00}
 402:..\..\FatFS-master\source/ff.c **** #define TBL_DC949 {0x81, 0xFE, 0x00, 0x00, 0x41, 0x5A, 0x61, 0x7A, 0x81, 0xFE}
 403:..\..\FatFS-master\source/ff.c **** #define TBL_DC950 {0x81, 0xFE, 0x00, 0x00, 0x40, 0x7E, 0xA1, 0xFE, 0x00, 0x00}
 404:..\..\FatFS-master\source/ff.c **** 
 405:..\..\FatFS-master\source/ff.c **** 
 406:..\..\FatFS-master\source/ff.c **** /* Macros for table definitions */
 407:..\..\FatFS-master\source/ff.c **** #define MERGE_2STR(a, b) a ## b
 408:..\..\FatFS-master\source/ff.c **** #define MKCVTBL(hd, cp) MERGE_2STR(hd, cp)
 409:..\..\FatFS-master\source/ff.c **** 
 410:..\..\FatFS-master\source/ff.c **** 
 411:..\..\FatFS-master\source/ff.c **** 
 412:..\..\FatFS-master\source/ff.c **** 
 413:..\..\FatFS-master\source/ff.c **** /*--------------------------------------------------------------------------
 414:..\..\FatFS-master\source/ff.c **** 
 415:..\..\FatFS-master\source/ff.c ****    Module Private Work Area
 416:..\..\FatFS-master\source/ff.c **** 
 417:..\..\FatFS-master\source/ff.c **** ---------------------------------------------------------------------------*/
 418:..\..\FatFS-master\source/ff.c **** /* Remark: Variables defined here without initial value shall be guaranteed
 419:..\..\FatFS-master\source/ff.c **** /  zero/null at start-up. If not, the linker option or start-up routine is
 420:..\..\FatFS-master\source/ff.c **** /  not compliance with C standard. */
 421:..\..\FatFS-master\source/ff.c **** 
 422:..\..\FatFS-master\source/ff.c **** /*--------------------------------*/
 423:..\..\FatFS-master\source/ff.c **** /* File/Volume controls           */
 424:..\..\FatFS-master\source/ff.c **** /*--------------------------------*/
 425:..\..\FatFS-master\source/ff.c **** 
 426:..\..\FatFS-master\source/ff.c **** #if FF_VOLUMES < 1 || FF_VOLUMES > 10
 427:..\..\FatFS-master\source/ff.c **** #error Wrong FF_VOLUMES setting
 428:..\..\FatFS-master\source/ff.c **** #endif
 429:..\..\FatFS-master\source/ff.c **** static FATFS *FatFs[FF_VOLUMES];	/* Pointer to the filesystem objects (logical drives) */
 430:..\..\FatFS-master\source/ff.c **** static WORD Fsid;					/* File system mount ID */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 9


 431:..\..\FatFS-master\source/ff.c **** 
 432:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH != 0 && FF_VOLUMES >= 2
 433:..\..\FatFS-master\source/ff.c **** static BYTE CurrVol;				/* Current drive */
 434:..\..\FatFS-master\source/ff.c **** #endif
 435:..\..\FatFS-master\source/ff.c **** 
 436:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
 437:..\..\FatFS-master\source/ff.c **** static FILESEM Files[FF_FS_LOCK];	/* Open object lock semaphores */
 438:..\..\FatFS-master\source/ff.c **** #endif
 439:..\..\FatFS-master\source/ff.c **** 
 440:..\..\FatFS-master\source/ff.c **** 
 441:..\..\FatFS-master\source/ff.c **** 
 442:..\..\FatFS-master\source/ff.c **** /*--------------------------------*/
 443:..\..\FatFS-master\source/ff.c **** /* LFN/Directory working buffer   */
 444:..\..\FatFS-master\source/ff.c **** /*--------------------------------*/
 445:..\..\FatFS-master\source/ff.c **** 
 446:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN == 0		/* Non-LFN configuration */
 447:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
 448:..\..\FatFS-master\source/ff.c **** #error LFN must be enabled when enable exFAT
 449:..\..\FatFS-master\source/ff.c **** #endif
 450:..\..\FatFS-master\source/ff.c **** #define DEF_NAMBUF
 451:..\..\FatFS-master\source/ff.c **** #define INIT_NAMBUF(fs)
 452:..\..\FatFS-master\source/ff.c **** #define FREE_NAMBUF()
 453:..\..\FatFS-master\source/ff.c **** #define LEAVE_MKFS(res)	return res
 454:..\..\FatFS-master\source/ff.c **** 
 455:..\..\FatFS-master\source/ff.c **** #else					/* LFN configurations */
 456:..\..\FatFS-master\source/ff.c **** #if FF_MAX_LFN < 12 || FF_MAX_LFN > 255
 457:..\..\FatFS-master\source/ff.c **** #error Wrong setting of FF_MAX_LFN
 458:..\..\FatFS-master\source/ff.c **** #endif
 459:..\..\FatFS-master\source/ff.c **** #if FF_LFN_BUF < 12 || FF_SFN_BUF < 12 || FF_LFN_BUF < FF_SFN_BUF
 460:..\..\FatFS-master\source/ff.c **** #error Wrong setting of FF_LFN_BUF or FF_SFN_BUF
 461:..\..\FatFS-master\source/ff.c **** #endif
 462:..\..\FatFS-master\source/ff.c **** #if FF_LFN_UNICODE < 0 || FF_LFN_UNICODE > 2
 463:..\..\FatFS-master\source/ff.c **** #error Wrong setting of FF_LFN_UNICODE
 464:..\..\FatFS-master\source/ff.c **** #endif
 465:..\..\FatFS-master\source/ff.c **** static const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* FAT: Offset of LFN characters 
 466:..\..\FatFS-master\source/ff.c **** #define MAXDIRB(nc)	((nc + 44U) / 15 * SZDIRE)	/* exFAT: Size of directory entry block scratchpad b
 467:..\..\FatFS-master\source/ff.c **** 
 468:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN == 1		/* LFN enabled with static working buffer */
 469:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
 470:..\..\FatFS-master\source/ff.c **** static BYTE	DirBuf[MAXDIRB(FF_MAX_LFN)];	/* Directory entry block scratchpad buffer */
 471:..\..\FatFS-master\source/ff.c **** #endif
 472:..\..\FatFS-master\source/ff.c **** static WCHAR LfnBuf[FF_MAX_LFN + 1];		/* LFN working buffer */
 473:..\..\FatFS-master\source/ff.c **** #define DEF_NAMBUF
 474:..\..\FatFS-master\source/ff.c **** #define INIT_NAMBUF(fs)
 475:..\..\FatFS-master\source/ff.c **** #define FREE_NAMBUF()
 476:..\..\FatFS-master\source/ff.c **** #define LEAVE_MKFS(res)	return res
 477:..\..\FatFS-master\source/ff.c **** 
 478:..\..\FatFS-master\source/ff.c **** #elif FF_USE_LFN == 2 	/* LFN enabled with dynamic working buffer on the stack */
 479:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
 480:..\..\FatFS-master\source/ff.c **** #define DEF_NAMBUF		WCHAR lbuf[FF_MAX_LFN+1]; BYTE dbuf[MAXDIRB(FF_MAX_LFN)];	/* LFN working buffer
 481:..\..\FatFS-master\source/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; (fs)->dirbuf = dbuf; }
 482:..\..\FatFS-master\source/ff.c **** #define FREE_NAMBUF()
 483:..\..\FatFS-master\source/ff.c **** #else
 484:..\..\FatFS-master\source/ff.c **** #define DEF_NAMBUF		WCHAR lbuf[FF_MAX_LFN+1];	/* LFN working buffer */
 485:..\..\FatFS-master\source/ff.c **** #define INIT_NAMBUF(fs)	{ (fs)->lfnbuf = lbuf; }
 486:..\..\FatFS-master\source/ff.c **** #define FREE_NAMBUF()
 487:..\..\FatFS-master\source/ff.c **** #endif
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 10


 488:..\..\FatFS-master\source/ff.c **** #define LEAVE_MKFS(res)	return res
 489:..\..\FatFS-master\source/ff.c **** 
 490:..\..\FatFS-master\source/ff.c **** #elif FF_USE_LFN == 3 	/* LFN enabled with dynamic working buffer on the heap */
 491:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
 492:..\..\FatFS-master\source/ff.c **** #define DEF_NAMBUF		WCHAR *lfn;	/* Pointer to LFN working buffer and directory entry block scratchp
 493:..\..\FatFS-master\source/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((FF_MAX_LFN+1)*2 + MAXDIRB(FF_MAX_LFN)); if (!lfn) LEAV
 494:..\..\FatFS-master\source/ff.c **** #define FREE_NAMBUF()	ff_memfree(lfn)
 495:..\..\FatFS-master\source/ff.c **** #else
 496:..\..\FatFS-master\source/ff.c **** #define DEF_NAMBUF		WCHAR *lfn;	/* Pointer to LFN working buffer */
 497:..\..\FatFS-master\source/ff.c **** #define INIT_NAMBUF(fs)	{ lfn = ff_memalloc((FF_MAX_LFN+1)*2); if (!lfn) LEAVE_FF(fs, FR_NOT_ENOUGH
 498:..\..\FatFS-master\source/ff.c **** #define FREE_NAMBUF()	ff_memfree(lfn)
 499:..\..\FatFS-master\source/ff.c **** #endif
 500:..\..\FatFS-master\source/ff.c **** #define LEAVE_MKFS(res)	{ if (!work) ff_memfree(buf); return res; }
 501:..\..\FatFS-master\source/ff.c **** #define MAX_MALLOC	0x8000
 502:..\..\FatFS-master\source/ff.c **** 
 503:..\..\FatFS-master\source/ff.c **** #else
 504:..\..\FatFS-master\source/ff.c **** #error Wrong setting of FF_USE_LFN
 505:..\..\FatFS-master\source/ff.c **** 
 506:..\..\FatFS-master\source/ff.c **** #endif	/* FF_USE_LFN == 1 */
 507:..\..\FatFS-master\source/ff.c **** #endif	/* FF_USE_LFN == 0 */
 508:..\..\FatFS-master\source/ff.c **** 
 509:..\..\FatFS-master\source/ff.c **** 
 510:..\..\FatFS-master\source/ff.c **** 
 511:..\..\FatFS-master\source/ff.c **** /*--------------------------------*/
 512:..\..\FatFS-master\source/ff.c **** /* Code conversion tables         */
 513:..\..\FatFS-master\source/ff.c **** /*--------------------------------*/
 514:..\..\FatFS-master\source/ff.c **** 
 515:..\..\FatFS-master\source/ff.c **** #if FF_CODE_PAGE == 0		/* Run-time code page configuration */
 516:..\..\FatFS-master\source/ff.c **** #define CODEPAGE CodePage
 517:..\..\FatFS-master\source/ff.c **** static WORD CodePage;	/* Current code page */
 518:..\..\FatFS-master\source/ff.c **** static const BYTE *ExCvt, *DbcTbl;	/* Pointer to current SBCS up-case table and DBCS code range tab
 519:..\..\FatFS-master\source/ff.c **** static const BYTE Ct437[] = TBL_CT437;
 520:..\..\FatFS-master\source/ff.c **** static const BYTE Ct720[] = TBL_CT720;
 521:..\..\FatFS-master\source/ff.c **** static const BYTE Ct737[] = TBL_CT737;
 522:..\..\FatFS-master\source/ff.c **** static const BYTE Ct771[] = TBL_CT771;
 523:..\..\FatFS-master\source/ff.c **** static const BYTE Ct775[] = TBL_CT775;
 524:..\..\FatFS-master\source/ff.c **** static const BYTE Ct850[] = TBL_CT850;
 525:..\..\FatFS-master\source/ff.c **** static const BYTE Ct852[] = TBL_CT852;
 526:..\..\FatFS-master\source/ff.c **** static const BYTE Ct855[] = TBL_CT855;
 527:..\..\FatFS-master\source/ff.c **** static const BYTE Ct857[] = TBL_CT857;
 528:..\..\FatFS-master\source/ff.c **** static const BYTE Ct860[] = TBL_CT860;
 529:..\..\FatFS-master\source/ff.c **** static const BYTE Ct861[] = TBL_CT861;
 530:..\..\FatFS-master\source/ff.c **** static const BYTE Ct862[] = TBL_CT862;
 531:..\..\FatFS-master\source/ff.c **** static const BYTE Ct863[] = TBL_CT863;
 532:..\..\FatFS-master\source/ff.c **** static const BYTE Ct864[] = TBL_CT864;
 533:..\..\FatFS-master\source/ff.c **** static const BYTE Ct865[] = TBL_CT865;
 534:..\..\FatFS-master\source/ff.c **** static const BYTE Ct866[] = TBL_CT866;
 535:..\..\FatFS-master\source/ff.c **** static const BYTE Ct869[] = TBL_CT869;
 536:..\..\FatFS-master\source/ff.c **** static const BYTE Dc932[] = TBL_DC932;
 537:..\..\FatFS-master\source/ff.c **** static const BYTE Dc936[] = TBL_DC936;
 538:..\..\FatFS-master\source/ff.c **** static const BYTE Dc949[] = TBL_DC949;
 539:..\..\FatFS-master\source/ff.c **** static const BYTE Dc950[] = TBL_DC950;
 540:..\..\FatFS-master\source/ff.c **** 
 541:..\..\FatFS-master\source/ff.c **** #elif FF_CODE_PAGE < 900	/* Static code page configuration (SBCS) */
 542:..\..\FatFS-master\source/ff.c **** #define CODEPAGE FF_CODE_PAGE
 543:..\..\FatFS-master\source/ff.c **** static const BYTE ExCvt[] = MKCVTBL(TBL_CT, FF_CODE_PAGE);
 544:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 11


 545:..\..\FatFS-master\source/ff.c **** #else					/* Static code page configuration (DBCS) */
 546:..\..\FatFS-master\source/ff.c **** #define CODEPAGE FF_CODE_PAGE
 547:..\..\FatFS-master\source/ff.c **** static const BYTE DbcTbl[] = MKCVTBL(TBL_DC, FF_CODE_PAGE);
 548:..\..\FatFS-master\source/ff.c **** 
 549:..\..\FatFS-master\source/ff.c **** #endif
 550:..\..\FatFS-master\source/ff.c **** 
 551:..\..\FatFS-master\source/ff.c **** 
 552:..\..\FatFS-master\source/ff.c **** 
 553:..\..\FatFS-master\source/ff.c **** 
 554:..\..\FatFS-master\source/ff.c **** /*--------------------------------------------------------------------------
 555:..\..\FatFS-master\source/ff.c **** 
 556:..\..\FatFS-master\source/ff.c ****    Module Private Functions
 557:..\..\FatFS-master\source/ff.c **** 
 558:..\..\FatFS-master\source/ff.c **** ---------------------------------------------------------------------------*/
 559:..\..\FatFS-master\source/ff.c **** 
 560:..\..\FatFS-master\source/ff.c **** 
 561:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
 562:..\..\FatFS-master\source/ff.c **** /* Load/Store multi-byte word in the FAT structure                       */
 563:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
 564:..\..\FatFS-master\source/ff.c **** 
 565:..\..\FatFS-master\source/ff.c **** static
 566:..\..\FatFS-master\source/ff.c **** WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
 567:..\..\FatFS-master\source/ff.c **** {
  27              		.loc 1 567 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 568:..\..\FatFS-master\source/ff.c **** 	WORD rv;
 569:..\..\FatFS-master\source/ff.c **** 
 570:..\..\FatFS-master\source/ff.c **** 	rv = ptr[1];
  33              		.loc 1 570 0
  34 0000 4278     		ldrb	r2, [r0, #1]
  35              	.LVL1:
 571:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[0];
  36              		.loc 1 571 0
  37 0002 1202     		lsls	r2, r2, #8
  38              	.LVL2:
  39 0004 0378     		ldrb	r3, [r0]
  40 0006 1A43     		orrs	r2, r3
  41 0008 1000     		movs	r0, r2
  42              	.LVL3:
 572:..\..\FatFS-master\source/ff.c **** 	return rv;
 573:..\..\FatFS-master\source/ff.c **** }
  43              		.loc 1 573 0
  44              		@ sp needed
  45 000a 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE0:
  48              		.size	ld_word, .-ld_word
  49              		.section	.text.ld_dword,"ax",%progbits
  50              		.align	2
  51              		.code	16
  52              		.thumb_func
  53              		.type	ld_dword, %function
  54              	ld_dword:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 12


  55              	.LFB1:
 574:..\..\FatFS-master\source/ff.c **** 
 575:..\..\FatFS-master\source/ff.c **** static
 576:..\..\FatFS-master\source/ff.c **** DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
 577:..\..\FatFS-master\source/ff.c **** {
  56              		.loc 1 577 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL4:
 578:..\..\FatFS-master\source/ff.c **** 	DWORD rv;
 579:..\..\FatFS-master\source/ff.c **** 
 580:..\..\FatFS-master\source/ff.c **** 	rv = ptr[3];
  62              		.loc 1 580 0
  63 0000 C378     		ldrb	r3, [r0, #3]
  64              	.LVL5:
 581:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[2];
  65              		.loc 1 581 0
  66 0002 1B02     		lsls	r3, r3, #8
  67              	.LVL6:
  68 0004 8278     		ldrb	r2, [r0, #2]
  69 0006 1343     		orrs	r3, r2
  70              	.LVL7:
 582:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[1];
  71              		.loc 1 582 0
  72 0008 1B02     		lsls	r3, r3, #8
  73              	.LVL8:
  74 000a 4278     		ldrb	r2, [r0, #1]
  75              	.LVL9:
  76 000c 1343     		orrs	r3, r2
  77              	.LVL10:
 583:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[0];
  78              		.loc 1 583 0
  79 000e 1B02     		lsls	r3, r3, #8
  80              	.LVL11:
  81 0010 0078     		ldrb	r0, [r0]
  82              	.LVL12:
  83 0012 1843     		orrs	r0, r3
  84              	.LVL13:
 584:..\..\FatFS-master\source/ff.c **** 	return rv;
 585:..\..\FatFS-master\source/ff.c **** }
  85              		.loc 1 585 0
  86              		@ sp needed
  87 0014 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE1:
  90              		.size	ld_dword, .-ld_dword
  91 0016 C046     		.section	.text.st_word,"ax",%progbits
  92              		.align	2
  93              		.code	16
  94              		.thumb_func
  95              		.type	st_word, %function
  96              	st_word:
  97              	.LFB2:
 586:..\..\FatFS-master\source/ff.c **** 
 587:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 13


 588:..\..\FatFS-master\source/ff.c **** static
 589:..\..\FatFS-master\source/ff.c **** QWORD ld_qword (const BYTE* ptr)	/* Load an 8-byte little-endian word */
 590:..\..\FatFS-master\source/ff.c **** {
 591:..\..\FatFS-master\source/ff.c **** 	QWORD rv;
 592:..\..\FatFS-master\source/ff.c **** 
 593:..\..\FatFS-master\source/ff.c **** 	rv = ptr[7];
 594:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[6];
 595:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[5];
 596:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[4];
 597:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[3];
 598:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[2];
 599:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[1];
 600:..\..\FatFS-master\source/ff.c **** 	rv = rv << 8 | ptr[0];
 601:..\..\FatFS-master\source/ff.c **** 	return rv;
 602:..\..\FatFS-master\source/ff.c **** }
 603:..\..\FatFS-master\source/ff.c **** #endif
 604:..\..\FatFS-master\source/ff.c **** 
 605:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
 606:..\..\FatFS-master\source/ff.c **** static
 607:..\..\FatFS-master\source/ff.c **** void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
 608:..\..\FatFS-master\source/ff.c **** {
  98              		.loc 1 608 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.LVL14:
 609:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 104              		.loc 1 609 0
 105 0000 0170     		strb	r1, [r0]
 106              	.LVL15:
 610:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val;
 107              		.loc 1 610 0
 108 0002 090A     		lsrs	r1, r1, #8
 109              	.LVL16:
 110 0004 4170     		strb	r1, [r0, #1]
 611:..\..\FatFS-master\source/ff.c **** }
 111              		.loc 1 611 0
 112              		@ sp needed
 113 0006 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE2:
 116              		.size	st_word, .-st_word
 117              		.section	.text.st_dword,"ax",%progbits
 118              		.align	2
 119              		.code	16
 120              		.thumb_func
 121              		.type	st_dword, %function
 122              	st_dword:
 123              	.LFB3:
 612:..\..\FatFS-master\source/ff.c **** 
 613:..\..\FatFS-master\source/ff.c **** static
 614:..\..\FatFS-master\source/ff.c **** void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
 615:..\..\FatFS-master\source/ff.c **** {
 124              		.loc 1 615 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 14


 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.LVL17:
 616:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 130              		.loc 1 616 0
 131 0000 0170     		strb	r1, [r0]
 132 0002 0B0A     		lsrs	r3, r1, #8
 133              	.LVL18:
 617:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 134              		.loc 1 617 0
 135 0004 4370     		strb	r3, [r0, #1]
 136 0006 0B0C     		lsrs	r3, r1, #16
 137              	.LVL19:
 618:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 138              		.loc 1 618 0
 139 0008 8370     		strb	r3, [r0, #2]
 140              	.LVL20:
 619:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val;
 141              		.loc 1 619 0
 142 000a 090E     		lsrs	r1, r1, #24
 143              	.LVL21:
 144 000c C170     		strb	r1, [r0, #3]
 620:..\..\FatFS-master\source/ff.c **** }
 145              		.loc 1 620 0
 146              		@ sp needed
 147 000e 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE3:
 150              		.size	st_dword, .-st_dword
 151              		.section	.text.mem_cpy,"ax",%progbits
 152              		.align	2
 153              		.code	16
 154              		.thumb_func
 155              		.type	mem_cpy, %function
 156              	mem_cpy:
 157              	.LFB4:
 621:..\..\FatFS-master\source/ff.c **** 
 622:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
 623:..\..\FatFS-master\source/ff.c **** static
 624:..\..\FatFS-master\source/ff.c **** void st_qword (BYTE* ptr, QWORD val)	/* Store an 8-byte word in little-endian */
 625:..\..\FatFS-master\source/ff.c **** {
 626:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 627:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 628:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 629:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 630:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 631:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 632:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val; val >>= 8;
 633:..\..\FatFS-master\source/ff.c **** 	*ptr++ = (BYTE)val;
 634:..\..\FatFS-master\source/ff.c **** }
 635:..\..\FatFS-master\source/ff.c **** #endif
 636:..\..\FatFS-master\source/ff.c **** #endif	/* !FF_FS_READONLY */
 637:..\..\FatFS-master\source/ff.c **** 
 638:..\..\FatFS-master\source/ff.c **** 
 639:..\..\FatFS-master\source/ff.c **** 
 640:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
 641:..\..\FatFS-master\source/ff.c **** /* String functions                                                      */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 15


 642:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
 643:..\..\FatFS-master\source/ff.c **** 
 644:..\..\FatFS-master\source/ff.c **** /* Copy memory to memory */
 645:..\..\FatFS-master\source/ff.c **** static
 646:..\..\FatFS-master\source/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt)
 647:..\..\FatFS-master\source/ff.c **** {
 158              		.loc 1 647 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL22:
 648:..\..\FatFS-master\source/ff.c **** 	BYTE *d = (BYTE*)dst;
 649:..\..\FatFS-master\source/ff.c **** 	const BYTE *s = (const BYTE*)src;
 650:..\..\FatFS-master\source/ff.c **** 
 651:..\..\FatFS-master\source/ff.c **** 	if (cnt != 0) {
 164              		.loc 1 651 0
 165 0000 002A     		cmp	r2, #0
 166 0002 06D0     		beq	.L5
 167              	.LVL23:
 168              	.L7:
 652:..\..\FatFS-master\source/ff.c **** 		do {
 653:..\..\FatFS-master\source/ff.c **** 			*d++ = *s++;
 169              		.loc 1 653 0 discriminator 1
 170 0004 0B78     		ldrb	r3, [r1]
 171 0006 0370     		strb	r3, [r0]
 654:..\..\FatFS-master\source/ff.c **** 		} while (--cnt);
 172              		.loc 1 654 0 discriminator 1
 173 0008 013A     		subs	r2, r2, #1
 174              	.LVL24:
 653:..\..\FatFS-master\source/ff.c **** 		} while (--cnt);
 175              		.loc 1 653 0 discriminator 1
 176 000a 0130     		adds	r0, r0, #1
 177              	.LVL25:
 178 000c 0131     		adds	r1, r1, #1
 179              	.LVL26:
 180              		.loc 1 654 0 discriminator 1
 181 000e 002A     		cmp	r2, #0
 182 0010 F8D1     		bne	.L7
 183              	.L5:
 655:..\..\FatFS-master\source/ff.c **** 	}
 656:..\..\FatFS-master\source/ff.c **** }
 184              		.loc 1 656 0
 185              		@ sp needed
 186 0012 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE4:
 189              		.size	mem_cpy, .-mem_cpy
 190              		.section	.text.mem_set,"ax",%progbits
 191              		.align	2
 192              		.code	16
 193              		.thumb_func
 194              		.type	mem_set, %function
 195              	mem_set:
 196              	.LFB5:
 657:..\..\FatFS-master\source/ff.c **** 
 658:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 16


 659:..\..\FatFS-master\source/ff.c **** /* Fill memory block */
 660:..\..\FatFS-master\source/ff.c **** static
 661:..\..\FatFS-master\source/ff.c **** void mem_set (void* dst, int val, UINT cnt)
 662:..\..\FatFS-master\source/ff.c **** {
 197              		.loc 1 662 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 202              	.LVL27:
 203              	.L9:
 663:..\..\FatFS-master\source/ff.c **** 	BYTE *d = (BYTE*)dst;
 664:..\..\FatFS-master\source/ff.c **** 
 665:..\..\FatFS-master\source/ff.c **** 	do {
 666:..\..\FatFS-master\source/ff.c **** 		*d++ = (BYTE)val;
 204              		.loc 1 666 0 discriminator 1
 205 0000 0170     		strb	r1, [r0]
 667:..\..\FatFS-master\source/ff.c **** 	} while (--cnt);
 206              		.loc 1 667 0 discriminator 1
 207 0002 013A     		subs	r2, r2, #1
 208              	.LVL28:
 666:..\..\FatFS-master\source/ff.c **** 	} while (--cnt);
 209              		.loc 1 666 0 discriminator 1
 210 0004 0130     		adds	r0, r0, #1
 211              	.LVL29:
 212              		.loc 1 667 0 discriminator 1
 213 0006 002A     		cmp	r2, #0
 214 0008 FAD1     		bne	.L9
 668:..\..\FatFS-master\source/ff.c **** }
 215              		.loc 1 668 0
 216              		@ sp needed
 217 000a 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE5:
 220              		.size	mem_set, .-mem_set
 221              		.section	.text.mem_cmp,"ax",%progbits
 222              		.align	2
 223              		.code	16
 224              		.thumb_func
 225              		.type	mem_cmp, %function
 226              	mem_cmp:
 227              	.LFB6:
 669:..\..\FatFS-master\source/ff.c **** 
 670:..\..\FatFS-master\source/ff.c **** 
 671:..\..\FatFS-master\source/ff.c **** /* Compare memory block */
 672:..\..\FatFS-master\source/ff.c **** static
 673:..\..\FatFS-master\source/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
 674:..\..\FatFS-master\source/ff.c **** {
 228              		.loc 1 674 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL30:
 233 0000 30B5     		push	{r4, r5, lr}
 234              		.cfi_def_cfa_offset 12
 235              		.cfi_offset 4, -12
 236              		.cfi_offset 5, -8
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 17


 237              		.cfi_offset 14, -4
 238 0002 0300     		movs	r3, r0
 239              	.LVL31:
 240              	.L12:
 675:..\..\FatFS-master\source/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 676:..\..\FatFS-master\source/ff.c **** 	int r = 0;
 677:..\..\FatFS-master\source/ff.c **** 
 678:..\..\FatFS-master\source/ff.c **** 	do {
 679:..\..\FatFS-master\source/ff.c **** 		r = *d++ - *s++;
 241              		.loc 1 679 0 discriminator 2
 242 0004 5D1C     		adds	r5, r3, #1
 243              	.LVL32:
 244 0006 1B78     		ldrb	r3, [r3]
 245 0008 4C1C     		adds	r4, r1, #1
 246              	.LVL33:
 247 000a 0878     		ldrb	r0, [r1]
 248 000c 181A     		subs	r0, r3, r0
 249              	.LVL34:
 680:..\..\FatFS-master\source/ff.c **** 	} while (--cnt && r == 0);
 250              		.loc 1 680 0 discriminator 2
 251 000e 013A     		subs	r2, r2, #1
 252              	.LVL35:
 253 0010 002A     		cmp	r2, #0
 254 0012 03D0     		beq	.L11
 679:..\..\FatFS-master\source/ff.c **** 	} while (--cnt && r == 0);
 255              		.loc 1 679 0 discriminator 1
 256 0014 2B00     		movs	r3, r5
 257 0016 2100     		movs	r1, r4
 258              		.loc 1 680 0 discriminator 1
 259 0018 0028     		cmp	r0, #0
 260 001a F3D0     		beq	.L12
 261              	.L11:
 681:..\..\FatFS-master\source/ff.c **** 
 682:..\..\FatFS-master\source/ff.c **** 	return r;
 683:..\..\FatFS-master\source/ff.c **** }
 262              		.loc 1 683 0
 263              		@ sp needed
 264              	.LVL36:
 265              	.LVL37:
 266 001c 30BD     		pop	{r4, r5, pc}
 267              		.cfi_endproc
 268              	.LFE6:
 269              		.size	mem_cmp, .-mem_cmp
 270 001e C046     		.section	.text.chk_chr,"ax",%progbits
 271              		.align	2
 272              		.code	16
 273              		.thumb_func
 274              		.type	chk_chr, %function
 275              	chk_chr:
 276              	.LFB7:
 684:..\..\FatFS-master\source/ff.c **** 
 685:..\..\FatFS-master\source/ff.c **** 
 686:..\..\FatFS-master\source/ff.c **** /* Check if chr is contained in the string */
 687:..\..\FatFS-master\source/ff.c **** static
 688:..\..\FatFS-master\source/ff.c **** int chk_chr (const char* str, int chr)	/* NZ:contained, ZR:not contained */
 689:..\..\FatFS-master\source/ff.c **** {
 277              		.loc 1 689 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 18


 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282              	.LVL38:
 690:..\..\FatFS-master\source/ff.c **** 	while (*str && *str != chr) str++;
 283              		.loc 1 690 0
 284 0000 00E0     		b	.L14
 285              	.L16:
 286              		.loc 1 690 0 is_stmt 0 discriminator 3
 287 0002 0130     		adds	r0, r0, #1
 288              	.LVL39:
 289              	.L14:
 290              		.loc 1 690 0 discriminator 1
 291 0004 0378     		ldrb	r3, [r0]
 292 0006 002B     		cmp	r3, #0
 293 0008 01D0     		beq	.L15
 294              		.loc 1 690 0 discriminator 2
 295 000a 8B42     		cmp	r3, r1
 296 000c F9D1     		bne	.L16
 297              	.L15:
 691:..\..\FatFS-master\source/ff.c **** 	return *str;
 692:..\..\FatFS-master\source/ff.c **** }
 298              		.loc 1 692 0 is_stmt 1
 299 000e 1800     		movs	r0, r3
 300              	.LVL40:
 301              		@ sp needed
 302 0010 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE7:
 305              		.size	chk_chr, .-chk_chr
 306 0012 C046     		.section	.text.dbc_1st,"ax",%progbits
 307              		.align	2
 308              		.code	16
 309              		.thumb_func
 310              		.type	dbc_1st, %function
 311              	dbc_1st:
 312              	.LFB8:
 693:..\..\FatFS-master\source/ff.c **** 
 694:..\..\FatFS-master\source/ff.c **** 
 695:..\..\FatFS-master\source/ff.c **** /* Test if the character is DBC 1st byte */
 696:..\..\FatFS-master\source/ff.c **** static
 697:..\..\FatFS-master\source/ff.c **** int dbc_1st (BYTE c)
 698:..\..\FatFS-master\source/ff.c **** {
 313              		.loc 1 698 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL41:
 699:..\..\FatFS-master\source/ff.c **** #if FF_CODE_PAGE == 0		/* Variable code page */
 700:..\..\FatFS-master\source/ff.c **** 	if (DbcTbl && c >= DbcTbl[0]) {
 701:..\..\FatFS-master\source/ff.c **** 		if (c <= DbcTbl[1]) return 1;					/* 1st byte range 1 */
 702:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;	/* 1st byte range 2 */
 703:..\..\FatFS-master\source/ff.c **** 	}
 704:..\..\FatFS-master\source/ff.c **** #elif FF_CODE_PAGE >= 900	/* DBCS fixed code page */
 705:..\..\FatFS-master\source/ff.c **** 	if (c >= DbcTbl[0]) {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 19


 319              		.loc 1 705 0
 320 0000 8028     		cmp	r0, #128
 321 0002 07D9     		bls	.L19
 706:..\..\FatFS-master\source/ff.c **** 		if (c <= DbcTbl[1]) return 1;
 322              		.loc 1 706 0
 323 0004 9F28     		cmp	r0, #159
 324 0006 07D9     		bls	.L20
 707:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 325              		.loc 1 707 0
 326 0008 DF28     		cmp	r0, #223
 327 000a 07D9     		bls	.L21
 328              		.loc 1 707 0 is_stmt 0 discriminator 1
 329 000c FC28     		cmp	r0, #252
 330 000e 07D9     		bls	.L22
 708:..\..\FatFS-master\source/ff.c **** 	}
 709:..\..\FatFS-master\source/ff.c **** #else						/* SBCS fixed code page */
 710:..\..\FatFS-master\source/ff.c **** 	if (c != 0) return 0;	/* Always false */
 711:..\..\FatFS-master\source/ff.c **** #endif
 712:..\..\FatFS-master\source/ff.c **** 	return 0;
 331              		.loc 1 712 0 is_stmt 1
 332 0010 0020     		movs	r0, #0
 333              	.LVL42:
 334 0012 06E0     		b	.L18
 335              	.LVL43:
 336              	.L19:
 337 0014 0020     		movs	r0, #0
 338              	.LVL44:
 339 0016 04E0     		b	.L18
 340              	.LVL45:
 341              	.L20:
 706:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 342              		.loc 1 706 0
 343 0018 0120     		movs	r0, #1
 344              	.LVL46:
 345 001a 02E0     		b	.L18
 346              	.LVL47:
 347              	.L21:
 348              		.loc 1 712 0
 349 001c 0020     		movs	r0, #0
 350              	.LVL48:
 351 001e 00E0     		b	.L18
 352              	.LVL49:
 353              	.L22:
 707:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 354              		.loc 1 707 0
 355 0020 0120     		movs	r0, #1
 356              	.LVL50:
 357              	.L18:
 713:..\..\FatFS-master\source/ff.c **** }
 358              		.loc 1 713 0
 359              		@ sp needed
 360 0022 7047     		bx	lr
 361              		.cfi_endproc
 362              	.LFE8:
 363              		.size	dbc_1st, .-dbc_1st
 364              		.section	.text.dbc_2nd,"ax",%progbits
 365              		.align	2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 20


 366              		.code	16
 367              		.thumb_func
 368              		.type	dbc_2nd, %function
 369              	dbc_2nd:
 370              	.LFB9:
 714:..\..\FatFS-master\source/ff.c **** 
 715:..\..\FatFS-master\source/ff.c **** 
 716:..\..\FatFS-master\source/ff.c **** /* Test if the character is DBC 2nd byte */
 717:..\..\FatFS-master\source/ff.c **** static
 718:..\..\FatFS-master\source/ff.c **** int dbc_2nd (BYTE c)
 719:..\..\FatFS-master\source/ff.c **** {
 371              		.loc 1 719 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL51:
 720:..\..\FatFS-master\source/ff.c **** #if FF_CODE_PAGE == 0		/* Variable code page */
 721:..\..\FatFS-master\source/ff.c **** 	if (DbcTbl && c >= DbcTbl[4]) {
 722:..\..\FatFS-master\source/ff.c **** 		if (c <= DbcTbl[5]) return 1;					/* 2nd byte range 1 */
 723:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;	/* 2nd byte range 2 */
 724:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;	/* 2nd byte range 3 */
 725:..\..\FatFS-master\source/ff.c **** 	}
 726:..\..\FatFS-master\source/ff.c **** #elif FF_CODE_PAGE >= 900	/* DBCS fixed code page */
 727:..\..\FatFS-master\source/ff.c **** 	if (c >= DbcTbl[4]) {
 377              		.loc 1 727 0
 378 0000 3F28     		cmp	r0, #63
 379 0002 09D9     		bls	.L26
 728:..\..\FatFS-master\source/ff.c **** 		if (c <= DbcTbl[5]) return 1;
 380              		.loc 1 728 0
 381 0004 7E28     		cmp	r0, #126
 382 0006 09D9     		bls	.L27
 729:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 383              		.loc 1 729 0
 384 0008 8028     		cmp	r0, #128
 385 000a 01D3     		bcc	.L25
 386              		.loc 1 729 0 is_stmt 0 discriminator 1
 387 000c FC28     		cmp	r0, #252
 388 000e 07D9     		bls	.L28
 389              	.L25:
 730:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 390              		.loc 1 730 0 is_stmt 1 discriminator 1
 391 0010 0028     		cmp	r0, #0
 392 0012 07D0     		beq	.L29
 731:..\..\FatFS-master\source/ff.c **** 	}
 732:..\..\FatFS-master\source/ff.c **** #else						/* SBCS fixed code page */
 733:..\..\FatFS-master\source/ff.c **** 	if (c != 0) return 0;	/* Always false */
 734:..\..\FatFS-master\source/ff.c **** #endif
 735:..\..\FatFS-master\source/ff.c **** 	return 0;
 393              		.loc 1 735 0
 394 0014 0020     		movs	r0, #0
 395              	.LVL52:
 396 0016 06E0     		b	.L24
 397              	.LVL53:
 398              	.L26:
 399 0018 0020     		movs	r0, #0
 400              	.LVL54:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 21


 401 001a 04E0     		b	.L24
 402              	.LVL55:
 403              	.L27:
 728:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 404              		.loc 1 728 0
 405 001c 0120     		movs	r0, #1
 406              	.LVL56:
 407 001e 02E0     		b	.L24
 408              	.LVL57:
 409              	.L28:
 729:..\..\FatFS-master\source/ff.c **** 		if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 410              		.loc 1 729 0
 411 0020 0120     		movs	r0, #1
 412              	.LVL58:
 413 0022 00E0     		b	.L24
 414              	.LVL59:
 415              	.L29:
 730:..\..\FatFS-master\source/ff.c **** 	}
 416              		.loc 1 730 0
 417 0024 0120     		movs	r0, #1
 418              	.LVL60:
 419              	.L24:
 736:..\..\FatFS-master\source/ff.c **** }
 420              		.loc 1 736 0
 421              		@ sp needed
 422 0026 7047     		bx	lr
 423              		.cfi_endproc
 424              	.LFE9:
 425              		.size	dbc_2nd, .-dbc_2nd
 426              		.section	.text.clst2sect,"ax",%progbits
 427              		.align	2
 428              		.code	16
 429              		.thumb_func
 430              		.type	clst2sect, %function
 431              	clst2sect:
 432              	.LFB13:
 737:..\..\FatFS-master\source/ff.c **** 
 738:..\..\FatFS-master\source/ff.c **** 
 739:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
 740:..\..\FatFS-master\source/ff.c **** 
 741:..\..\FatFS-master\source/ff.c **** /* Get a character from TCHAR string in defined API encodeing */
 742:..\..\FatFS-master\source/ff.c **** static
 743:..\..\FatFS-master\source/ff.c **** DWORD tchar2uni (		/* Returns character in UTF-16 encoding (>=0x10000 on double encoding unit, 0xFF
 744:..\..\FatFS-master\source/ff.c **** 	const TCHAR** str	/* Pointer to pointer to TCHAR string in configured encoding */
 745:..\..\FatFS-master\source/ff.c **** )
 746:..\..\FatFS-master\source/ff.c **** {
 747:..\..\FatFS-master\source/ff.c **** 	DWORD uc;
 748:..\..\FatFS-master\source/ff.c **** 	const TCHAR *p = *str;
 749:..\..\FatFS-master\source/ff.c **** 
 750:..\..\FatFS-master\source/ff.c **** #if FF_LFN_UNICODE == 1		/* UTF-16 input */
 751:..\..\FatFS-master\source/ff.c **** 	WCHAR wc;
 752:..\..\FatFS-master\source/ff.c **** 
 753:..\..\FatFS-master\source/ff.c **** 	uc = *p++;
 754:..\..\FatFS-master\source/ff.c **** 	if (IsSurrogate(uc)) {	/* Surrogate? */
 755:..\..\FatFS-master\source/ff.c **** 		wc = *p++;		/* Get low surrogate */
 756:..\..\FatFS-master\source/ff.c **** 		if (!IsSurrogateH(uc) || !IsSurrogateL(wc)) return 0xFFFFFFFF;	/* Wrong surrogate? */
 757:..\..\FatFS-master\source/ff.c **** 		uc = uc << 16 | wc;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 22


 758:..\..\FatFS-master\source/ff.c **** 	}
 759:..\..\FatFS-master\source/ff.c **** 
 760:..\..\FatFS-master\source/ff.c **** #elif FF_LFN_UNICODE == 2	/* UTF-8 input */
 761:..\..\FatFS-master\source/ff.c **** 	BYTE b;
 762:..\..\FatFS-master\source/ff.c **** 	int nf;
 763:..\..\FatFS-master\source/ff.c **** 
 764:..\..\FatFS-master\source/ff.c **** 	uc = (BYTE)*p++;	/* Get a byte */
 765:..\..\FatFS-master\source/ff.c **** 	if (uc & 0x80) {	/* Multiple byte code? */
 766:..\..\FatFS-master\source/ff.c **** 		if ((uc & 0xE0) == 0xC0) {	/* 2-byte sequence? */
 767:..\..\FatFS-master\source/ff.c **** 			uc &= 0x1F; nf = 1;
 768:..\..\FatFS-master\source/ff.c **** 		} else {
 769:..\..\FatFS-master\source/ff.c **** 			if ((uc & 0xF0) == 0xE0) {	/* 3-byte sequence? */
 770:..\..\FatFS-master\source/ff.c **** 				uc &= 0x0F; nf = 2;
 771:..\..\FatFS-master\source/ff.c **** 			} else {
 772:..\..\FatFS-master\source/ff.c **** 				if ((uc & 0xF8) == 0xF0) {	/* 4-byte sequence? */
 773:..\..\FatFS-master\source/ff.c **** 					uc &= 0x07; nf = 3;
 774:..\..\FatFS-master\source/ff.c **** 				} else {					/* Wrong sequence */
 775:..\..\FatFS-master\source/ff.c **** 					return 0xFFFFFFFF;
 776:..\..\FatFS-master\source/ff.c **** 				}
 777:..\..\FatFS-master\source/ff.c **** 			}
 778:..\..\FatFS-master\source/ff.c **** 		}
 779:..\..\FatFS-master\source/ff.c **** 		do {	/* Get trailing bytes */
 780:..\..\FatFS-master\source/ff.c **** 			b = (BYTE)*p++;
 781:..\..\FatFS-master\source/ff.c **** 			if ((b & 0xC0) != 0x80) return 0xFFFFFFFF;	/* Wrong sequence? */
 782:..\..\FatFS-master\source/ff.c **** 			uc = uc << 6 | (b & 0x3F);
 783:..\..\FatFS-master\source/ff.c **** 		} while (--nf != 0);
 784:..\..\FatFS-master\source/ff.c **** 		if (uc < 0x80 || IsSurrogate(uc) || uc >= 0x110000) return 0xFFFFFFFF;	/* Wrong code? */
 785:..\..\FatFS-master\source/ff.c **** 		if (uc >= 0x10000) uc = 0xD800DC00 | ((uc - 0x10000) << 6 & 0x3FF0000) | (uc & 0x3FF);	/* Make a 
 786:..\..\FatFS-master\source/ff.c **** 	}
 787:..\..\FatFS-master\source/ff.c **** 
 788:..\..\FatFS-master\source/ff.c **** #else		/* ANSI/OEM input */
 789:..\..\FatFS-master\source/ff.c **** 	BYTE b;
 790:..\..\FatFS-master\source/ff.c **** 	WCHAR wc;
 791:..\..\FatFS-master\source/ff.c **** 
 792:..\..\FatFS-master\source/ff.c **** 	wc = (BYTE)*p++;			/* Get a byte */
 793:..\..\FatFS-master\source/ff.c **** 	if (dbc_1st((BYTE)wc)) {	/* Is it a DBC 1st byte? */
 794:..\..\FatFS-master\source/ff.c **** 		b = (BYTE)*p++;			/* Get 2nd byte */
 795:..\..\FatFS-master\source/ff.c **** 		if (!dbc_2nd(b)) return 0xFFFFFFFF;	/* Invalid code? */
 796:..\..\FatFS-master\source/ff.c **** 		wc = (wc << 8) + b;		/* Make a DBC */
 797:..\..\FatFS-master\source/ff.c **** 	}
 798:..\..\FatFS-master\source/ff.c **** 	if (wc != 0) {
 799:..\..\FatFS-master\source/ff.c **** 		wc = ff_oem2uni(wc, CODEPAGE);	/* ANSI/OEM ==> Unicode */
 800:..\..\FatFS-master\source/ff.c **** 		if (wc == 0) return 0xFFFFFFFF;	/* Invalid code? */
 801:..\..\FatFS-master\source/ff.c **** 	}
 802:..\..\FatFS-master\source/ff.c **** 	uc = wc;
 803:..\..\FatFS-master\source/ff.c **** 
 804:..\..\FatFS-master\source/ff.c **** #endif
 805:..\..\FatFS-master\source/ff.c **** 	*str = p;	/* Next read pointer */
 806:..\..\FatFS-master\source/ff.c **** 	return uc;
 807:..\..\FatFS-master\source/ff.c **** }
 808:..\..\FatFS-master\source/ff.c **** 
 809:..\..\FatFS-master\source/ff.c **** 
 810:..\..\FatFS-master\source/ff.c **** /* Output a TCHAR string in defined API encoding */
 811:..\..\FatFS-master\source/ff.c **** static
 812:..\..\FatFS-master\source/ff.c **** BYTE put_utf (	/* Returns number of encoding units written (0:buffer overflow or wrong encoding) */
 813:..\..\FatFS-master\source/ff.c **** 	DWORD chr,	/* UTF-16 encoded character (Double encoding unit char if >=0x10000) */
 814:..\..\FatFS-master\source/ff.c **** 	TCHAR* buf,	/* Output buffer */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 23


 815:..\..\FatFS-master\source/ff.c **** 	UINT szb	/* Size of the buffer */
 816:..\..\FatFS-master\source/ff.c **** )
 817:..\..\FatFS-master\source/ff.c **** {
 818:..\..\FatFS-master\source/ff.c **** #if FF_LFN_UNICODE == 1	/* UTF-16 output */
 819:..\..\FatFS-master\source/ff.c **** 	WCHAR hs, wc;
 820:..\..\FatFS-master\source/ff.c **** 
 821:..\..\FatFS-master\source/ff.c **** 	hs = (WCHAR)(chr >> 16);
 822:..\..\FatFS-master\source/ff.c **** 	wc = (WCHAR)chr;
 823:..\..\FatFS-master\source/ff.c **** 	if (hs == 0) {	/* Single encoding unit? */
 824:..\..\FatFS-master\source/ff.c **** 		if (szb < 1 || IsSurrogate(wc)) return 0;	/* Buffer overflow or wrong code? */
 825:..\..\FatFS-master\source/ff.c **** 		*buf = wc;
 826:..\..\FatFS-master\source/ff.c **** 		return 1;
 827:..\..\FatFS-master\source/ff.c **** 	}
 828:..\..\FatFS-master\source/ff.c **** 	if (szb < 2 || !IsSurrogateH(hs) || !IsSurrogateL(wc)) return 0;	/* Buffer overflow or wrong surro
 829:..\..\FatFS-master\source/ff.c **** 	*buf++ = hs;
 830:..\..\FatFS-master\source/ff.c **** 	*buf++ = wc;
 831:..\..\FatFS-master\source/ff.c **** 	return 2;
 832:..\..\FatFS-master\source/ff.c **** 
 833:..\..\FatFS-master\source/ff.c **** #elif FF_LFN_UNICODE == 2	/* UTF-8 output */
 834:..\..\FatFS-master\source/ff.c **** 	DWORD hc;
 835:..\..\FatFS-master\source/ff.c **** 
 836:..\..\FatFS-master\source/ff.c **** 	if (chr < 0x80) {	/* Single byte code? */
 837:..\..\FatFS-master\source/ff.c **** 		if (szb < 1) return 0;	/* Buffer overflow? */
 838:..\..\FatFS-master\source/ff.c **** 		*buf = (TCHAR)chr;
 839:..\..\FatFS-master\source/ff.c **** 		return 1;
 840:..\..\FatFS-master\source/ff.c **** 	}
 841:..\..\FatFS-master\source/ff.c **** 	if (chr < 0x800) {	/* 2-byte sequence? */
 842:..\..\FatFS-master\source/ff.c **** 		if (szb < 2) return 0;	/* Buffer overflow? */
 843:..\..\FatFS-master\source/ff.c **** 		*buf++ = (TCHAR)(0xC0 | (chr >> 6 & 0x1F));
 844:..\..\FatFS-master\source/ff.c **** 		*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
 845:..\..\FatFS-master\source/ff.c **** 		return 2;
 846:..\..\FatFS-master\source/ff.c **** 	}
 847:..\..\FatFS-master\source/ff.c **** 	if (chr < 0x10000) {	/* 3-byte sequence? */
 848:..\..\FatFS-master\source/ff.c **** 		if (szb < 3 || IsSurrogate(chr)) return 0;	/* Buffer overflow or wrong code? */
 849:..\..\FatFS-master\source/ff.c **** 		*buf++ = (TCHAR)(0xE0 | (chr >> 12 & 0x0F));
 850:..\..\FatFS-master\source/ff.c **** 		*buf++ = (TCHAR)(0x80 | (chr >> 6 & 0x3F));
 851:..\..\FatFS-master\source/ff.c **** 		*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
 852:..\..\FatFS-master\source/ff.c **** 		return 3;
 853:..\..\FatFS-master\source/ff.c **** 	}
 854:..\..\FatFS-master\source/ff.c **** 	/* 4-byte sequence */
 855:..\..\FatFS-master\source/ff.c **** 	if (szb < 4) return 0;	/* Buffer overflow? */
 856:..\..\FatFS-master\source/ff.c **** 	hc = ((chr & 0xFFFF0000) - 0xD8000000) >> 6;	/* Get high 10 bits */
 857:..\..\FatFS-master\source/ff.c **** 	chr = (chr & 0xFFFF) - 0xDC00;					/* Get low 10 bits */
 858:..\..\FatFS-master\source/ff.c **** 	if (hc >= 0x100000 || chr >= 0x400) return 0;	/* Wrong surrogate? */
 859:..\..\FatFS-master\source/ff.c **** 	chr = (hc | chr) + 0x10000;
 860:..\..\FatFS-master\source/ff.c **** 	*buf++ = (TCHAR)(0xF0 | (chr >> 18 & 0x07));
 861:..\..\FatFS-master\source/ff.c **** 	*buf++ = (TCHAR)(0x80 | (chr >> 12 & 0x3F));
 862:..\..\FatFS-master\source/ff.c **** 	*buf++ = (TCHAR)(0x80 | (chr >> 6 & 0x3F));
 863:..\..\FatFS-master\source/ff.c **** 	*buf++ = (TCHAR)(0x80 | (chr >> 0 & 0x3F));
 864:..\..\FatFS-master\source/ff.c **** 	return 4;
 865:..\..\FatFS-master\source/ff.c **** 
 866:..\..\FatFS-master\source/ff.c **** #else						/* ANSI/OEM output */
 867:..\..\FatFS-master\source/ff.c **** 	WCHAR wc;
 868:..\..\FatFS-master\source/ff.c **** 
 869:..\..\FatFS-master\source/ff.c **** 	wc = ff_uni2oem(chr, CODEPAGE);
 870:..\..\FatFS-master\source/ff.c **** 	if (wc >= 0x100) {	/* Is this a DBC? */
 871:..\..\FatFS-master\source/ff.c **** 		if (szb < 2) return 0;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 24


 872:..\..\FatFS-master\source/ff.c **** 		*buf++ = (char)(wc >> 8);	/* Store DBC 1st byte */
 873:..\..\FatFS-master\source/ff.c **** 		*buf++ = (TCHAR)wc;			/* Store DBC 2nd byte */
 874:..\..\FatFS-master\source/ff.c **** 		return 2;
 875:..\..\FatFS-master\source/ff.c **** 	}
 876:..\..\FatFS-master\source/ff.c **** 	if (wc == 0 || szb < 1) return 0;	/* Invalid char or buffer overflow? */
 877:..\..\FatFS-master\source/ff.c **** 	*buf++ = (TCHAR)wc;					/* Store the character */
 878:..\..\FatFS-master\source/ff.c **** 	return 1;
 879:..\..\FatFS-master\source/ff.c **** #endif
 880:..\..\FatFS-master\source/ff.c **** }
 881:..\..\FatFS-master\source/ff.c **** #endif	/* FF_USE_LFN */
 882:..\..\FatFS-master\source/ff.c **** 
 883:..\..\FatFS-master\source/ff.c **** 
 884:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT
 885:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
 886:..\..\FatFS-master\source/ff.c **** /* Request/Release grant to access the volume                            */
 887:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
 888:..\..\FatFS-master\source/ff.c **** static
 889:..\..\FatFS-master\source/ff.c **** int lock_fs (		/* 1:Ok, 0:timeout */
 890:..\..\FatFS-master\source/ff.c **** 	FATFS* fs		/* Filesystem object */
 891:..\..\FatFS-master\source/ff.c **** )
 892:..\..\FatFS-master\source/ff.c **** {
 893:..\..\FatFS-master\source/ff.c **** 	return ff_req_grant(fs->sobj);
 894:..\..\FatFS-master\source/ff.c **** }
 895:..\..\FatFS-master\source/ff.c **** 
 896:..\..\FatFS-master\source/ff.c **** 
 897:..\..\FatFS-master\source/ff.c **** static
 898:..\..\FatFS-master\source/ff.c **** void unlock_fs (
 899:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,		/* Filesystem object */
 900:..\..\FatFS-master\source/ff.c **** 	FRESULT res		/* Result code to be returned */
 901:..\..\FatFS-master\source/ff.c **** )
 902:..\..\FatFS-master\source/ff.c **** {
 903:..\..\FatFS-master\source/ff.c **** 	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 904:..\..\FatFS-master\source/ff.c **** 		ff_rel_grant(fs->sobj);
 905:..\..\FatFS-master\source/ff.c **** 	}
 906:..\..\FatFS-master\source/ff.c **** }
 907:..\..\FatFS-master\source/ff.c **** 
 908:..\..\FatFS-master\source/ff.c **** #endif
 909:..\..\FatFS-master\source/ff.c **** 
 910:..\..\FatFS-master\source/ff.c **** 
 911:..\..\FatFS-master\source/ff.c **** 
 912:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
 913:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
 914:..\..\FatFS-master\source/ff.c **** /* File lock control functions                                           */
 915:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
 916:..\..\FatFS-master\source/ff.c **** 
 917:..\..\FatFS-master\source/ff.c **** static
 918:..\..\FatFS-master\source/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 919:..\..\FatFS-master\source/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 920:..\..\FatFS-master\source/ff.c **** 	int acc			/* Desired access type (0:Read mode open, 1:Write mode open, 2:Delete or rename) */
 921:..\..\FatFS-master\source/ff.c **** )
 922:..\..\FatFS-master\source/ff.c **** {
 923:..\..\FatFS-master\source/ff.c **** 	UINT i, be;
 924:..\..\FatFS-master\source/ff.c **** 
 925:..\..\FatFS-master\source/ff.c **** 	/* Search open object table for the object */
 926:..\..\FatFS-master\source/ff.c **** 	be = 0;
 927:..\..\FatFS-master\source/ff.c **** 	for (i = 0; i < FF_FS_LOCK; i++) {
 928:..\..\FatFS-master\source/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 25


 929:..\..\FatFS-master\source/ff.c **** 			if (Files[i].fs == dp->obj.fs &&	 	/* Check if the object matches with an open object */
 930:..\..\FatFS-master\source/ff.c **** 				Files[i].clu == dp->obj.sclust &&
 931:..\..\FatFS-master\source/ff.c **** 				Files[i].ofs == dp->dptr) break;
 932:..\..\FatFS-master\source/ff.c **** 		} else {			/* Blank entry */
 933:..\..\FatFS-master\source/ff.c **** 			be = 1;
 934:..\..\FatFS-master\source/ff.c **** 		}
 935:..\..\FatFS-master\source/ff.c **** 	}
 936:..\..\FatFS-master\source/ff.c **** 	if (i == FF_FS_LOCK) {	/* The object has not been opened */
 937:..\..\FatFS-master\source/ff.c **** 		return (!be && acc != 2) ? FR_TOO_MANY_OPEN_FILES : FR_OK;	/* Is there a blank entry for new obje
 938:..\..\FatFS-master\source/ff.c **** 	}
 939:..\..\FatFS-master\source/ff.c **** 
 940:..\..\FatFS-master\source/ff.c **** 	/* The object was opened. Reject any open against writing file and all write mode open */
 941:..\..\FatFS-master\source/ff.c **** 	return (acc != 0 || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 942:..\..\FatFS-master\source/ff.c **** }
 943:..\..\FatFS-master\source/ff.c **** 
 944:..\..\FatFS-master\source/ff.c **** 
 945:..\..\FatFS-master\source/ff.c **** static
 946:..\..\FatFS-master\source/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 947:..\..\FatFS-master\source/ff.c **** {
 948:..\..\FatFS-master\source/ff.c **** 	UINT i;
 949:..\..\FatFS-master\source/ff.c **** 
 950:..\..\FatFS-master\source/ff.c **** 	for (i = 0; i < FF_FS_LOCK && Files[i].fs; i++) ;
 951:..\..\FatFS-master\source/ff.c **** 	return (i == FF_FS_LOCK) ? 0 : 1;
 952:..\..\FatFS-master\source/ff.c **** }
 953:..\..\FatFS-master\source/ff.c **** 
 954:..\..\FatFS-master\source/ff.c **** 
 955:..\..\FatFS-master\source/ff.c **** static
 956:..\..\FatFS-master\source/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 957:..\..\FatFS-master\source/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 958:..\..\FatFS-master\source/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 959:..\..\FatFS-master\source/ff.c **** )
 960:..\..\FatFS-master\source/ff.c **** {
 961:..\..\FatFS-master\source/ff.c **** 	UINT i;
 962:..\..\FatFS-master\source/ff.c **** 
 963:..\..\FatFS-master\source/ff.c **** 
 964:..\..\FatFS-master\source/ff.c **** 	for (i = 0; i < FF_FS_LOCK; i++) {	/* Find the object */
 965:..\..\FatFS-master\source/ff.c **** 		if (Files[i].fs == dp->obj.fs &&
 966:..\..\FatFS-master\source/ff.c **** 			Files[i].clu == dp->obj.sclust &&
 967:..\..\FatFS-master\source/ff.c **** 			Files[i].ofs == dp->dptr) break;
 968:..\..\FatFS-master\source/ff.c **** 	}
 969:..\..\FatFS-master\source/ff.c **** 
 970:..\..\FatFS-master\source/ff.c **** 	if (i == FF_FS_LOCK) {				/* Not opened. Register it as new. */
 971:..\..\FatFS-master\source/ff.c **** 		for (i = 0; i < FF_FS_LOCK && Files[i].fs; i++) ;
 972:..\..\FatFS-master\source/ff.c **** 		if (i == FF_FS_LOCK) return 0;	/* No free entry to register (int err) */
 973:..\..\FatFS-master\source/ff.c **** 		Files[i].fs = dp->obj.fs;
 974:..\..\FatFS-master\source/ff.c **** 		Files[i].clu = dp->obj.sclust;
 975:..\..\FatFS-master\source/ff.c **** 		Files[i].ofs = dp->dptr;
 976:..\..\FatFS-master\source/ff.c **** 		Files[i].ctr = 0;
 977:..\..\FatFS-master\source/ff.c **** 	}
 978:..\..\FatFS-master\source/ff.c **** 
 979:..\..\FatFS-master\source/ff.c **** 	if (acc >= 1 && Files[i].ctr) return 0;	/* Access violation (int err) */
 980:..\..\FatFS-master\source/ff.c **** 
 981:..\..\FatFS-master\source/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 982:..\..\FatFS-master\source/ff.c **** 
 983:..\..\FatFS-master\source/ff.c **** 	return i + 1;	/* Index number origin from 1 */
 984:..\..\FatFS-master\source/ff.c **** }
 985:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 26


 986:..\..\FatFS-master\source/ff.c **** 
 987:..\..\FatFS-master\source/ff.c **** static
 988:..\..\FatFS-master\source/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 989:..\..\FatFS-master\source/ff.c **** 	UINT i			/* Semaphore index (1..) */
 990:..\..\FatFS-master\source/ff.c **** )
 991:..\..\FatFS-master\source/ff.c **** {
 992:..\..\FatFS-master\source/ff.c **** 	WORD n;
 993:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
 994:..\..\FatFS-master\source/ff.c **** 
 995:..\..\FatFS-master\source/ff.c **** 
 996:..\..\FatFS-master\source/ff.c **** 	if (--i < FF_FS_LOCK) {	/* Index number origin from 0 */
 997:..\..\FatFS-master\source/ff.c **** 		n = Files[i].ctr;
 998:..\..\FatFS-master\source/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 999:..\..\FatFS-master\source/ff.c **** 		if (n > 0) n--;				/* Decrement read mode open count */
1000:..\..\FatFS-master\source/ff.c **** 		Files[i].ctr = n;
1001:..\..\FatFS-master\source/ff.c **** 		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
1002:..\..\FatFS-master\source/ff.c **** 		res = FR_OK;
1003:..\..\FatFS-master\source/ff.c **** 	} else {
1004:..\..\FatFS-master\source/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
1005:..\..\FatFS-master\source/ff.c **** 	}
1006:..\..\FatFS-master\source/ff.c **** 	return res;
1007:..\..\FatFS-master\source/ff.c **** }
1008:..\..\FatFS-master\source/ff.c **** 
1009:..\..\FatFS-master\source/ff.c **** 
1010:..\..\FatFS-master\source/ff.c **** static
1011:..\..\FatFS-master\source/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
1012:..\..\FatFS-master\source/ff.c **** 	FATFS *fs
1013:..\..\FatFS-master\source/ff.c **** )
1014:..\..\FatFS-master\source/ff.c **** {
1015:..\..\FatFS-master\source/ff.c **** 	UINT i;
1016:..\..\FatFS-master\source/ff.c **** 
1017:..\..\FatFS-master\source/ff.c **** 	for (i = 0; i < FF_FS_LOCK; i++) {
1018:..\..\FatFS-master\source/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
1019:..\..\FatFS-master\source/ff.c **** 	}
1020:..\..\FatFS-master\source/ff.c **** }
1021:..\..\FatFS-master\source/ff.c **** 
1022:..\..\FatFS-master\source/ff.c **** #endif	/* FF_FS_LOCK != 0 */
1023:..\..\FatFS-master\source/ff.c **** 
1024:..\..\FatFS-master\source/ff.c **** 
1025:..\..\FatFS-master\source/ff.c **** 
1026:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1027:..\..\FatFS-master\source/ff.c **** /* Move/Flush disk access window in the filesystem object                */
1028:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1029:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1030:..\..\FatFS-master\source/ff.c **** static
1031:..\..\FatFS-master\source/ff.c **** FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
1032:..\..\FatFS-master\source/ff.c **** 	FATFS* fs			/* Filesystem object */
1033:..\..\FatFS-master\source/ff.c **** )
1034:..\..\FatFS-master\source/ff.c **** {
1035:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_OK;
1036:..\..\FatFS-master\source/ff.c **** 
1037:..\..\FatFS-master\source/ff.c **** 
1038:..\..\FatFS-master\source/ff.c **** 	if (fs->wflag) {	/* Is the disk access window dirty */
1039:..\..\FatFS-master\source/ff.c **** 		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
1040:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 0;	/* Clear window dirty flag */
1041:..\..\FatFS-master\source/ff.c **** 			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
1042:..\..\FatFS-master\source/ff.c **** 				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it t
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 27


1043:..\..\FatFS-master\source/ff.c **** 			}
1044:..\..\FatFS-master\source/ff.c **** 		} else {
1045:..\..\FatFS-master\source/ff.c **** 			res = FR_DISK_ERR;
1046:..\..\FatFS-master\source/ff.c **** 		}
1047:..\..\FatFS-master\source/ff.c **** 	}
1048:..\..\FatFS-master\source/ff.c **** 	return res;
1049:..\..\FatFS-master\source/ff.c **** }
1050:..\..\FatFS-master\source/ff.c **** #endif
1051:..\..\FatFS-master\source/ff.c **** 
1052:..\..\FatFS-master\source/ff.c **** 
1053:..\..\FatFS-master\source/ff.c **** static
1054:..\..\FatFS-master\source/ff.c **** FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERR */
1055:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,			/* Filesystem object */
1056:..\..\FatFS-master\source/ff.c **** 	DWORD sector		/* Sector number to make appearance in the fs->win[] */
1057:..\..\FatFS-master\source/ff.c **** )
1058:..\..\FatFS-master\source/ff.c **** {
1059:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_OK;
1060:..\..\FatFS-master\source/ff.c **** 
1061:..\..\FatFS-master\source/ff.c **** 
1062:..\..\FatFS-master\source/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
1063:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1064:..\..\FatFS-master\source/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
1065:..\..\FatFS-master\source/ff.c **** #endif
1066:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
1067:..\..\FatFS-master\source/ff.c **** 			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
1068:..\..\FatFS-master\source/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if read data is not valid */
1069:..\..\FatFS-master\source/ff.c **** 				res = FR_DISK_ERR;
1070:..\..\FatFS-master\source/ff.c **** 			}
1071:..\..\FatFS-master\source/ff.c **** 			fs->winsect = sector;
1072:..\..\FatFS-master\source/ff.c **** 		}
1073:..\..\FatFS-master\source/ff.c **** 	}
1074:..\..\FatFS-master\source/ff.c **** 	return res;
1075:..\..\FatFS-master\source/ff.c **** }
1076:..\..\FatFS-master\source/ff.c **** 
1077:..\..\FatFS-master\source/ff.c **** 
1078:..\..\FatFS-master\source/ff.c **** 
1079:..\..\FatFS-master\source/ff.c **** 
1080:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1081:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1082:..\..\FatFS-master\source/ff.c **** /* Synchronize filesystem and data on the storage                        */
1083:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1084:..\..\FatFS-master\source/ff.c **** 
1085:..\..\FatFS-master\source/ff.c **** static
1086:..\..\FatFS-master\source/ff.c **** FRESULT sync_fs (	/* Returns FR_OK or FR_DISK_ERR */
1087:..\..\FatFS-master\source/ff.c **** 	FATFS* fs		/* Filesystem object */
1088:..\..\FatFS-master\source/ff.c **** )
1089:..\..\FatFS-master\source/ff.c **** {
1090:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
1091:..\..\FatFS-master\source/ff.c **** 
1092:..\..\FatFS-master\source/ff.c **** 
1093:..\..\FatFS-master\source/ff.c **** 	res = sync_window(fs);
1094:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
1095:..\..\FatFS-master\source/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
1096:..\..\FatFS-master\source/ff.c **** 			/* Create FSInfo structure */
1097:..\..\FatFS-master\source/ff.c **** 			mem_set(fs->win, 0, SS(fs));
1098:..\..\FatFS-master\source/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
1099:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 28


1100:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
1101:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
1102:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
1103:..\..\FatFS-master\source/ff.c **** 			/* Write it into the FSInfo sector */
1104:..\..\FatFS-master\source/ff.c **** 			fs->winsect = fs->volbase + 1;
1105:..\..\FatFS-master\source/ff.c **** 			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
1106:..\..\FatFS-master\source/ff.c **** 			fs->fsi_flag = 0;
1107:..\..\FatFS-master\source/ff.c **** 		}
1108:..\..\FatFS-master\source/ff.c **** 		/* Make sure that no pending write process in the lower layer */
1109:..\..\FatFS-master\source/ff.c **** 		if (disk_ioctl(fs->pdrv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
1110:..\..\FatFS-master\source/ff.c **** 	}
1111:..\..\FatFS-master\source/ff.c **** 
1112:..\..\FatFS-master\source/ff.c **** 	return res;
1113:..\..\FatFS-master\source/ff.c **** }
1114:..\..\FatFS-master\source/ff.c **** 
1115:..\..\FatFS-master\source/ff.c **** #endif
1116:..\..\FatFS-master\source/ff.c **** 
1117:..\..\FatFS-master\source/ff.c **** 
1118:..\..\FatFS-master\source/ff.c **** 
1119:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1120:..\..\FatFS-master\source/ff.c **** /* Get physical sector number from cluster number                        */
1121:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1122:..\..\FatFS-master\source/ff.c **** 
1123:..\..\FatFS-master\source/ff.c **** static
1124:..\..\FatFS-master\source/ff.c **** DWORD clst2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
1125:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,		/* Filesystem object */
1126:..\..\FatFS-master\source/ff.c **** 	DWORD clst		/* Cluster# to be converted */
1127:..\..\FatFS-master\source/ff.c **** )
1128:..\..\FatFS-master\source/ff.c **** {
 433              		.loc 1 1128 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438              	.LVL61:
1129:..\..\FatFS-master\source/ff.c **** 	clst -= 2;		/* Cluster number is origin from 2 */
 439              		.loc 1 1129 0
 440 0000 0239     		subs	r1, r1, #2
 441              	.LVL62:
1130:..\..\FatFS-master\source/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
 442              		.loc 1 1130 0
 443 0002 4369     		ldr	r3, [r0, #20]
 444 0004 023B     		subs	r3, r3, #2
 445 0006 9942     		cmp	r1, r3
 446 0008 04D2     		bcs	.L32
1131:..\..\FatFS-master\source/ff.c **** 	return fs->database + fs->csize * clst;		/* Start sector number of the cluster */
 447              		.loc 1 1131 0
 448 000a 836A     		ldr	r3, [r0, #40]
 449 000c 4089     		ldrh	r0, [r0, #10]
 450              	.LVL63:
 451 000e 4143     		muls	r1, r0
 452              	.LVL64:
 453 0010 5818     		adds	r0, r3, r1
 454 0012 00E0     		b	.L31
 455              	.LVL65:
 456              	.L32:
1130:..\..\FatFS-master\source/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 29


 457              		.loc 1 1130 0
 458 0014 0020     		movs	r0, #0
 459              	.LVL66:
 460              	.L31:
1132:..\..\FatFS-master\source/ff.c **** }
 461              		.loc 1 1132 0
 462              		@ sp needed
 463 0016 7047     		bx	lr
 464              		.cfi_endproc
 465              	.LFE13:
 466              		.size	clst2sect, .-clst2sect
 467              		.section	.text.ld_clust,"ax",%progbits
 468              		.align	2
 469              		.code	16
 470              		.thumb_func
 471              		.type	ld_clust, %function
 472              	ld_clust:
 473              	.LFB22:
1133:..\..\FatFS-master\source/ff.c **** 
1134:..\..\FatFS-master\source/ff.c **** 
1135:..\..\FatFS-master\source/ff.c **** 
1136:..\..\FatFS-master\source/ff.c **** 
1137:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1138:..\..\FatFS-master\source/ff.c **** /* FAT access - Read value of a FAT entry                                */
1139:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1140:..\..\FatFS-master\source/ff.c **** 
1141:..\..\FatFS-master\source/ff.c **** static
1142:..\..\FatFS-master\source/ff.c **** DWORD get_fat (		/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
1143:..\..\FatFS-master\source/ff.c **** 	FFOBJID* obj,	/* Corresponding object */
1144:..\..\FatFS-master\source/ff.c **** 	DWORD clst		/* Cluster number to get the value */
1145:..\..\FatFS-master\source/ff.c **** )
1146:..\..\FatFS-master\source/ff.c **** {
1147:..\..\FatFS-master\source/ff.c **** 	UINT wc, bc;
1148:..\..\FatFS-master\source/ff.c **** 	DWORD val;
1149:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = obj->fs;
1150:..\..\FatFS-master\source/ff.c **** 
1151:..\..\FatFS-master\source/ff.c **** 
1152:..\..\FatFS-master\source/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
1153:..\..\FatFS-master\source/ff.c **** 		val = 1;	/* Internal error */
1154:..\..\FatFS-master\source/ff.c **** 
1155:..\..\FatFS-master\source/ff.c **** 	} else {
1156:..\..\FatFS-master\source/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
1157:..\..\FatFS-master\source/ff.c **** 
1158:..\..\FatFS-master\source/ff.c **** 		switch (fs->fs_type) {
1159:..\..\FatFS-master\source/ff.c **** 		case FS_FAT12 :
1160:..\..\FatFS-master\source/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
1161:..\..\FatFS-master\source/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1162:..\..\FatFS-master\source/ff.c **** 			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
1163:..\..\FatFS-master\source/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
1164:..\..\FatFS-master\source/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
1165:..\..\FatFS-master\source/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
1166:..\..\FatFS-master\source/ff.c **** 			break;
1167:..\..\FatFS-master\source/ff.c **** 
1168:..\..\FatFS-master\source/ff.c **** 		case FS_FAT16 :
1169:..\..\FatFS-master\source/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
1170:..\..\FatFS-master\source/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
1171:..\..\FatFS-master\source/ff.c **** 			break;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 30


1172:..\..\FatFS-master\source/ff.c **** 
1173:..\..\FatFS-master\source/ff.c **** 		case FS_FAT32 :
1174:..\..\FatFS-master\source/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1175:..\..\FatFS-master\source/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upp
1176:..\..\FatFS-master\source/ff.c **** 			break;
1177:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
1178:..\..\FatFS-master\source/ff.c **** 		case FS_EXFAT :
1179:..\..\FatFS-master\source/ff.c **** 			if (obj->objsize != 0) {
1180:..\..\FatFS-master\source/ff.c **** 				DWORD cofs = clst - obj->sclust;	/* Offset from start cluster */
1181:..\..\FatFS-master\source/ff.c **** 				DWORD clen = (DWORD)((obj->objsize - 1) / SS(fs)) / fs->csize;	/* Number of clusters - 1 */
1182:..\..\FatFS-master\source/ff.c **** 
1183:..\..\FatFS-master\source/ff.c **** 				if (obj->stat == 2 && cofs <= clen) {	/* Is it a contiguous chain? */
1184:..\..\FatFS-master\source/ff.c **** 					val = (cofs == clen) ? 0x7FFFFFFF : clst + 1;	/* No data on the FAT, generate the value */
1185:..\..\FatFS-master\source/ff.c **** 					break;
1186:..\..\FatFS-master\source/ff.c **** 				}
1187:..\..\FatFS-master\source/ff.c **** 				if (obj->stat == 3 && cofs < obj->n_cont) {	/* Is it in the 1st fragment? */
1188:..\..\FatFS-master\source/ff.c **** 					val = clst + 1; 	/* Generate the value */
1189:..\..\FatFS-master\source/ff.c **** 					break;
1190:..\..\FatFS-master\source/ff.c **** 				}
1191:..\..\FatFS-master\source/ff.c **** 				if (obj->stat != 2) {	/* Get value from FAT if FAT chain is valid */
1192:..\..\FatFS-master\source/ff.c **** 					if (obj->n_frag != 0) {	/* Is it on the growing edge? */
1193:..\..\FatFS-master\source/ff.c **** 						val = 0x7FFFFFFF;	/* Generate EOC */
1194:..\..\FatFS-master\source/ff.c **** 					} else {
1195:..\..\FatFS-master\source/ff.c **** 						if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
1196:..\..\FatFS-master\source/ff.c **** 						val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x7FFFFFFF;
1197:..\..\FatFS-master\source/ff.c **** 					}
1198:..\..\FatFS-master\source/ff.c **** 					break;
1199:..\..\FatFS-master\source/ff.c **** 				}
1200:..\..\FatFS-master\source/ff.c **** 			}
1201:..\..\FatFS-master\source/ff.c **** 			/* go to default */
1202:..\..\FatFS-master\source/ff.c **** #endif
1203:..\..\FatFS-master\source/ff.c **** 		default:
1204:..\..\FatFS-master\source/ff.c **** 			val = 1;	/* Internal error */
1205:..\..\FatFS-master\source/ff.c **** 		}
1206:..\..\FatFS-master\source/ff.c **** 	}
1207:..\..\FatFS-master\source/ff.c **** 
1208:..\..\FatFS-master\source/ff.c **** 	return val;
1209:..\..\FatFS-master\source/ff.c **** }
1210:..\..\FatFS-master\source/ff.c **** 
1211:..\..\FatFS-master\source/ff.c **** 
1212:..\..\FatFS-master\source/ff.c **** 
1213:..\..\FatFS-master\source/ff.c **** 
1214:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1215:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1216:..\..\FatFS-master\source/ff.c **** /* FAT access - Change value of a FAT entry                              */
1217:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1218:..\..\FatFS-master\source/ff.c **** 
1219:..\..\FatFS-master\source/ff.c **** static
1220:..\..\FatFS-master\source/ff.c **** FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
1221:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,		/* Corresponding filesystem object */
1222:..\..\FatFS-master\source/ff.c **** 	DWORD clst,		/* FAT index number (cluster number) to be changed */
1223:..\..\FatFS-master\source/ff.c **** 	DWORD val		/* New value to be set to the entry */
1224:..\..\FatFS-master\source/ff.c **** )
1225:..\..\FatFS-master\source/ff.c **** {
1226:..\..\FatFS-master\source/ff.c **** 	UINT bc;
1227:..\..\FatFS-master\source/ff.c **** 	BYTE *p;
1228:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_INT_ERR;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 31


1229:..\..\FatFS-master\source/ff.c **** 
1230:..\..\FatFS-master\source/ff.c **** 
1231:..\..\FatFS-master\source/ff.c **** 	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
1232:..\..\FatFS-master\source/ff.c **** 		switch (fs->fs_type) {
1233:..\..\FatFS-master\source/ff.c **** 		case FS_FAT12 :
1234:..\..\FatFS-master\source/ff.c **** 			bc = (UINT)clst; bc += bc / 2;	/* bc: byte offset of the entry */
1235:..\..\FatFS-master\source/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1236:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
1237:..\..\FatFS-master\source/ff.c **** 			p = fs->win + bc++ % SS(fs);
1238:..\..\FatFS-master\source/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Put 1st byte */
1239:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
1240:..\..\FatFS-master\source/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
1241:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
1242:..\..\FatFS-master\source/ff.c **** 			p = fs->win + bc % SS(fs);
1243:..\..\FatFS-master\source/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte 
1244:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
1245:..\..\FatFS-master\source/ff.c **** 			break;
1246:..\..\FatFS-master\source/ff.c **** 
1247:..\..\FatFS-master\source/ff.c **** 		case FS_FAT16 :
1248:..\..\FatFS-master\source/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
1249:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
1250:..\..\FatFS-master\source/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
1251:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
1252:..\..\FatFS-master\source/ff.c **** 			break;
1253:..\..\FatFS-master\source/ff.c **** 
1254:..\..\FatFS-master\source/ff.c **** 		case FS_FAT32 :
1255:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
1256:..\..\FatFS-master\source/ff.c **** 		case FS_EXFAT :
1257:..\..\FatFS-master\source/ff.c **** #endif
1258:..\..\FatFS-master\source/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
1259:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
1260:..\..\FatFS-master\source/ff.c **** 			if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1261:..\..\FatFS-master\source/ff.c **** 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
1262:..\..\FatFS-master\source/ff.c **** 			}
1263:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + clst * 4 % SS(fs), val);
1264:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
1265:..\..\FatFS-master\source/ff.c **** 			break;
1266:..\..\FatFS-master\source/ff.c **** 		}
1267:..\..\FatFS-master\source/ff.c **** 	}
1268:..\..\FatFS-master\source/ff.c **** 	return res;
1269:..\..\FatFS-master\source/ff.c **** }
1270:..\..\FatFS-master\source/ff.c **** 
1271:..\..\FatFS-master\source/ff.c **** #endif /* !FF_FS_READONLY */
1272:..\..\FatFS-master\source/ff.c **** 
1273:..\..\FatFS-master\source/ff.c **** 
1274:..\..\FatFS-master\source/ff.c **** 
1275:..\..\FatFS-master\source/ff.c **** 
1276:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT && !FF_FS_READONLY
1277:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1278:..\..\FatFS-master\source/ff.c **** /* exFAT: Accessing FAT and Allocation Bitmap                            */
1279:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1280:..\..\FatFS-master\source/ff.c **** 
1281:..\..\FatFS-master\source/ff.c **** /*--------------------------------------*/
1282:..\..\FatFS-master\source/ff.c **** /* Find a contiguous free cluster block */
1283:..\..\FatFS-master\source/ff.c **** /*--------------------------------------*/
1284:..\..\FatFS-master\source/ff.c **** 
1285:..\..\FatFS-master\source/ff.c **** static
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 32


1286:..\..\FatFS-master\source/ff.c **** DWORD find_bitmap (	/* 0:Not found, 2..:Cluster block found, 0xFFFFFFFF:Disk error */
1287:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,	/* Filesystem object */
1288:..\..\FatFS-master\source/ff.c **** 	DWORD clst,	/* Cluster number to scan from */
1289:..\..\FatFS-master\source/ff.c **** 	DWORD ncl	/* Number of contiguous clusters to find (1..) */
1290:..\..\FatFS-master\source/ff.c **** )
1291:..\..\FatFS-master\source/ff.c **** {
1292:..\..\FatFS-master\source/ff.c **** 	BYTE bm, bv;
1293:..\..\FatFS-master\source/ff.c **** 	UINT i;
1294:..\..\FatFS-master\source/ff.c **** 	DWORD val, scl, ctr;
1295:..\..\FatFS-master\source/ff.c **** 
1296:..\..\FatFS-master\source/ff.c **** 
1297:..\..\FatFS-master\source/ff.c **** 	clst -= 2;	/* The first bit in the bitmap corresponds to cluster #2 */
1298:..\..\FatFS-master\source/ff.c **** 	if (clst >= fs->n_fatent - 2) clst = 0;
1299:..\..\FatFS-master\source/ff.c **** 	scl = val = clst; ctr = 0;
1300:..\..\FatFS-master\source/ff.c **** 	for (;;) {
1301:..\..\FatFS-master\source/ff.c **** 		if (move_window(fs, fs->database + val / 8 / SS(fs)) != FR_OK) return 0xFFFFFFFF;	/* (assuming bi
1302:..\..\FatFS-master\source/ff.c **** 		i = val / 8 % SS(fs); bm = 1 << (val % 8);
1303:..\..\FatFS-master\source/ff.c **** 		do {
1304:..\..\FatFS-master\source/ff.c **** 			do {
1305:..\..\FatFS-master\source/ff.c **** 				bv = fs->win[i] & bm; bm <<= 1;		/* Get bit value */
1306:..\..\FatFS-master\source/ff.c **** 				if (++val >= fs->n_fatent - 2) {	/* Next cluster (with wrap-around) */
1307:..\..\FatFS-master\source/ff.c **** 					val = 0; bm = 0; i = SS(fs);
1308:..\..\FatFS-master\source/ff.c **** 				}
1309:..\..\FatFS-master\source/ff.c **** 				if (bv == 0) {	/* Is it a free cluster? */
1310:..\..\FatFS-master\source/ff.c **** 					if (++ctr == ncl) return scl + 2;	/* Check if run length is sufficient for required */
1311:..\..\FatFS-master\source/ff.c **** 				} else {
1312:..\..\FatFS-master\source/ff.c **** 					scl = val; ctr = 0;		/* Encountered a cluster in-use, restart to scan */
1313:..\..\FatFS-master\source/ff.c **** 				}
1314:..\..\FatFS-master\source/ff.c **** 				if (val == clst) return 0;	/* All cluster scanned? */
1315:..\..\FatFS-master\source/ff.c **** 			} while (bm != 0);
1316:..\..\FatFS-master\source/ff.c **** 			bm = 1;
1317:..\..\FatFS-master\source/ff.c **** 		} while (++i < SS(fs));
1318:..\..\FatFS-master\source/ff.c **** 	}
1319:..\..\FatFS-master\source/ff.c **** }
1320:..\..\FatFS-master\source/ff.c **** 
1321:..\..\FatFS-master\source/ff.c **** 
1322:..\..\FatFS-master\source/ff.c **** /*----------------------------------------*/
1323:..\..\FatFS-master\source/ff.c **** /* Set/Clear a block of allocation bitmap */
1324:..\..\FatFS-master\source/ff.c **** /*----------------------------------------*/
1325:..\..\FatFS-master\source/ff.c **** 
1326:..\..\FatFS-master\source/ff.c **** static
1327:..\..\FatFS-master\source/ff.c **** FRESULT change_bitmap (
1328:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,	/* Filesystem object */
1329:..\..\FatFS-master\source/ff.c **** 	DWORD clst,	/* Cluster number to change from */
1330:..\..\FatFS-master\source/ff.c **** 	DWORD ncl,	/* Number of clusters to be changed */
1331:..\..\FatFS-master\source/ff.c **** 	int bv		/* bit value to be set (0 or 1) */
1332:..\..\FatFS-master\source/ff.c **** )
1333:..\..\FatFS-master\source/ff.c **** {
1334:..\..\FatFS-master\source/ff.c **** 	BYTE bm;
1335:..\..\FatFS-master\source/ff.c **** 	UINT i;
1336:..\..\FatFS-master\source/ff.c **** 	DWORD sect;
1337:..\..\FatFS-master\source/ff.c **** 
1338:..\..\FatFS-master\source/ff.c **** 
1339:..\..\FatFS-master\source/ff.c **** 	clst -= 2;	/* The first bit corresponds to cluster #2 */
1340:..\..\FatFS-master\source/ff.c **** 	sect = fs->database + clst / 8 / SS(fs);	/* Sector address (assuming bitmap is located top of the 
1341:..\..\FatFS-master\source/ff.c **** 	i = clst / 8 % SS(fs);						/* Byte offset in the sector */
1342:..\..\FatFS-master\source/ff.c **** 	bm = 1 << (clst % 8);						/* Bit mask in the byte */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 33


1343:..\..\FatFS-master\source/ff.c **** 	for (;;) {
1344:..\..\FatFS-master\source/ff.c **** 		if (move_window(fs, sect++) != FR_OK) return FR_DISK_ERR;
1345:..\..\FatFS-master\source/ff.c **** 		do {
1346:..\..\FatFS-master\source/ff.c **** 			do {
1347:..\..\FatFS-master\source/ff.c **** 				if (bv == (int)((fs->win[i] & bm) != 0)) return FR_INT_ERR;	/* Is the bit expected value? */
1348:..\..\FatFS-master\source/ff.c **** 				fs->win[i] ^= bm;	/* Flip the bit */
1349:..\..\FatFS-master\source/ff.c **** 				fs->wflag = 1;
1350:..\..\FatFS-master\source/ff.c **** 				if (--ncl == 0) return FR_OK;	/* All bits processed? */
1351:..\..\FatFS-master\source/ff.c **** 			} while (bm <<= 1);		/* Next bit */
1352:..\..\FatFS-master\source/ff.c **** 			bm = 1;
1353:..\..\FatFS-master\source/ff.c **** 		} while (++i < SS(fs));		/* Next byte */
1354:..\..\FatFS-master\source/ff.c **** 		i = 0;
1355:..\..\FatFS-master\source/ff.c **** 	}
1356:..\..\FatFS-master\source/ff.c **** }
1357:..\..\FatFS-master\source/ff.c **** 
1358:..\..\FatFS-master\source/ff.c **** 
1359:..\..\FatFS-master\source/ff.c **** /*---------------------------------------------*/
1360:..\..\FatFS-master\source/ff.c **** /* Fill the first fragment of the FAT chain    */
1361:..\..\FatFS-master\source/ff.c **** /*---------------------------------------------*/
1362:..\..\FatFS-master\source/ff.c **** 
1363:..\..\FatFS-master\source/ff.c **** static
1364:..\..\FatFS-master\source/ff.c **** FRESULT fill_first_frag (
1365:..\..\FatFS-master\source/ff.c **** 	FFOBJID* obj	/* Pointer to the corresponding object */
1366:..\..\FatFS-master\source/ff.c **** )
1367:..\..\FatFS-master\source/ff.c **** {
1368:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
1369:..\..\FatFS-master\source/ff.c **** 	DWORD cl, n;
1370:..\..\FatFS-master\source/ff.c **** 
1371:..\..\FatFS-master\source/ff.c **** 
1372:..\..\FatFS-master\source/ff.c **** 	if (obj->stat == 3) {	/* Has the object been changed 'fragmented' in this session? */
1373:..\..\FatFS-master\source/ff.c **** 		for (cl = obj->sclust, n = obj->n_cont; n; cl++, n--) {	/* Create cluster chain on the FAT */
1374:..\..\FatFS-master\source/ff.c **** 			res = put_fat(obj->fs, cl, cl + 1);
1375:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) return res;
1376:..\..\FatFS-master\source/ff.c **** 		}
1377:..\..\FatFS-master\source/ff.c **** 		obj->stat = 0;	/* Change status 'FAT chain is valid' */
1378:..\..\FatFS-master\source/ff.c **** 	}
1379:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
1380:..\..\FatFS-master\source/ff.c **** }
1381:..\..\FatFS-master\source/ff.c **** 
1382:..\..\FatFS-master\source/ff.c **** 
1383:..\..\FatFS-master\source/ff.c **** /*---------------------------------------------*/
1384:..\..\FatFS-master\source/ff.c **** /* Fill the last fragment of the FAT chain     */
1385:..\..\FatFS-master\source/ff.c **** /*---------------------------------------------*/
1386:..\..\FatFS-master\source/ff.c **** 
1387:..\..\FatFS-master\source/ff.c **** static
1388:..\..\FatFS-master\source/ff.c **** FRESULT fill_last_frag (
1389:..\..\FatFS-master\source/ff.c **** 	FFOBJID* obj,	/* Pointer to the corresponding object */
1390:..\..\FatFS-master\source/ff.c **** 	DWORD lcl,		/* Last cluster of the fragment */
1391:..\..\FatFS-master\source/ff.c **** 	DWORD term		/* Value to set the last FAT entry */
1392:..\..\FatFS-master\source/ff.c **** )
1393:..\..\FatFS-master\source/ff.c **** {
1394:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
1395:..\..\FatFS-master\source/ff.c **** 
1396:..\..\FatFS-master\source/ff.c **** 
1397:..\..\FatFS-master\source/ff.c **** 	while (obj->n_frag > 0) {	/* Create the chain of last fragment */
1398:..\..\FatFS-master\source/ff.c **** 		res = put_fat(obj->fs, lcl - obj->n_frag + 1, (obj->n_frag > 1) ? lcl - obj->n_frag + 2 : term);
1399:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) return res;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 34


1400:..\..\FatFS-master\source/ff.c **** 		obj->n_frag--;
1401:..\..\FatFS-master\source/ff.c **** 	}
1402:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
1403:..\..\FatFS-master\source/ff.c **** }
1404:..\..\FatFS-master\source/ff.c **** 
1405:..\..\FatFS-master\source/ff.c **** #endif	/* FF_FS_EXFAT && !FF_FS_READONLY */
1406:..\..\FatFS-master\source/ff.c **** 
1407:..\..\FatFS-master\source/ff.c **** 
1408:..\..\FatFS-master\source/ff.c **** 
1409:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1410:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1411:..\..\FatFS-master\source/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1412:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1413:..\..\FatFS-master\source/ff.c **** static
1414:..\..\FatFS-master\source/ff.c **** FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
1415:..\..\FatFS-master\source/ff.c **** 	FFOBJID* obj,		/* Corresponding object */
1416:..\..\FatFS-master\source/ff.c **** 	DWORD clst,			/* Cluster to remove a chain from */
1417:..\..\FatFS-master\source/ff.c **** 	DWORD pclst			/* Previous cluster of clst (0:entire chain) */
1418:..\..\FatFS-master\source/ff.c **** )
1419:..\..\FatFS-master\source/ff.c **** {
1420:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_OK;
1421:..\..\FatFS-master\source/ff.c **** 	DWORD nxt;
1422:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = obj->fs;
1423:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT || FF_USE_TRIM
1424:..\..\FatFS-master\source/ff.c **** 	DWORD scl = clst, ecl = clst;
1425:..\..\FatFS-master\source/ff.c **** #endif
1426:..\..\FatFS-master\source/ff.c **** #if FF_USE_TRIM
1427:..\..\FatFS-master\source/ff.c **** 	DWORD rt[2];
1428:..\..\FatFS-master\source/ff.c **** #endif
1429:..\..\FatFS-master\source/ff.c **** 
1430:..\..\FatFS-master\source/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
1431:..\..\FatFS-master\source/ff.c **** 
1432:..\..\FatFS-master\source/ff.c **** 	/* Mark the previous cluster 'EOC' on the FAT if it exists */
1433:..\..\FatFS-master\source/ff.c **** 	if (pclst != 0 && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
1434:..\..\FatFS-master\source/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
1435:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) return res;
1436:..\..\FatFS-master\source/ff.c **** 	}
1437:..\..\FatFS-master\source/ff.c **** 
1438:..\..\FatFS-master\source/ff.c **** 	/* Remove the chain */
1439:..\..\FatFS-master\source/ff.c **** 	do {
1440:..\..\FatFS-master\source/ff.c **** 		nxt = get_fat(obj, clst);			/* Get cluster status */
1441:..\..\FatFS-master\source/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
1442:..\..\FatFS-master\source/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
1443:..\..\FatFS-master\source/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
1444:..\..\FatFS-master\source/ff.c **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
1445:..\..\FatFS-master\source/ff.c **** 			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
1446:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) return res;
1447:..\..\FatFS-master\source/ff.c **** 		}
1448:..\..\FatFS-master\source/ff.c **** 		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
1449:..\..\FatFS-master\source/ff.c **** 			fs->free_clst++;
1450:..\..\FatFS-master\source/ff.c **** 			fs->fsi_flag |= 1;
1451:..\..\FatFS-master\source/ff.c **** 		}
1452:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT || FF_USE_TRIM
1453:..\..\FatFS-master\source/ff.c **** 		if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1454:..\..\FatFS-master\source/ff.c **** 			ecl = nxt;
1455:..\..\FatFS-master\source/ff.c **** 		} else {				/* End of contiguous cluster block */
1456:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 35


1457:..\..\FatFS-master\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
1458:..\..\FatFS-master\source/ff.c **** 				res = change_bitmap(fs, scl, ecl - scl + 1, 0);	/* Mark the cluster block 'free' on the bitmap 
1459:..\..\FatFS-master\source/ff.c **** 				if (res != FR_OK) return res;
1460:..\..\FatFS-master\source/ff.c **** 			}
1461:..\..\FatFS-master\source/ff.c **** #endif
1462:..\..\FatFS-master\source/ff.c **** #if FF_USE_TRIM
1463:..\..\FatFS-master\source/ff.c **** 			rt[0] = clst2sect(fs, scl);					/* Start of data area freed */
1464:..\..\FatFS-master\source/ff.c **** 			rt[1] = clst2sect(fs, ecl) + fs->csize - 1;	/* End of data area freed */
1465:..\..\FatFS-master\source/ff.c **** 			disk_ioctl(fs->pdrv, CTRL_TRIM, rt);		/* Inform device the data in the block is no longer needed
1466:..\..\FatFS-master\source/ff.c **** #endif
1467:..\..\FatFS-master\source/ff.c **** 			scl = ecl = nxt;
1468:..\..\FatFS-master\source/ff.c **** 		}
1469:..\..\FatFS-master\source/ff.c **** #endif
1470:..\..\FatFS-master\source/ff.c **** 		clst = nxt;					/* Next cluster */
1471:..\..\FatFS-master\source/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
1472:..\..\FatFS-master\source/ff.c **** 
1473:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
1474:..\..\FatFS-master\source/ff.c **** 	/* Some post processes for chain status */
1475:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {
1476:..\..\FatFS-master\source/ff.c **** 		if (pclst == 0) {	/* Has the entire chain been removed? */
1477:..\..\FatFS-master\source/ff.c **** 			obj->stat = 0;		/* Change the chain status 'initial' */
1478:..\..\FatFS-master\source/ff.c **** 		} else {
1479:..\..\FatFS-master\source/ff.c **** 			if (obj->stat == 0) {	/* Is it a fragmented chain from the beginning of this session? */
1480:..\..\FatFS-master\source/ff.c **** 				clst = obj->sclust;		/* Follow the chain to check if it gets contiguous */
1481:..\..\FatFS-master\source/ff.c **** 				while (clst != pclst) {
1482:..\..\FatFS-master\source/ff.c **** 					nxt = get_fat(obj, clst);
1483:..\..\FatFS-master\source/ff.c **** 					if (nxt < 2) return FR_INT_ERR;
1484:..\..\FatFS-master\source/ff.c **** 					if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
1485:..\..\FatFS-master\source/ff.c **** 					if (nxt != clst + 1) break;	/* Not contiguous? */
1486:..\..\FatFS-master\source/ff.c **** 					clst++;
1487:..\..\FatFS-master\source/ff.c **** 				}
1488:..\..\FatFS-master\source/ff.c **** 				if (clst == pclst) {	/* Has the chain got contiguous again? */
1489:..\..\FatFS-master\source/ff.c **** 					obj->stat = 2;		/* Change the chain status 'contiguous' */
1490:..\..\FatFS-master\source/ff.c **** 				}
1491:..\..\FatFS-master\source/ff.c **** 			} else {
1492:..\..\FatFS-master\source/ff.c **** 				if (obj->stat == 3 && pclst >= obj->sclust && pclst <= obj->sclust + obj->n_cont) {	/* Was the 
1493:..\..\FatFS-master\source/ff.c **** 					obj->stat = 2;	/* Change the chain status 'contiguous' */
1494:..\..\FatFS-master\source/ff.c **** 				}
1495:..\..\FatFS-master\source/ff.c **** 			}
1496:..\..\FatFS-master\source/ff.c **** 		}
1497:..\..\FatFS-master\source/ff.c **** 	}
1498:..\..\FatFS-master\source/ff.c **** #endif
1499:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
1500:..\..\FatFS-master\source/ff.c **** }
1501:..\..\FatFS-master\source/ff.c **** 
1502:..\..\FatFS-master\source/ff.c **** 
1503:..\..\FatFS-master\source/ff.c **** 
1504:..\..\FatFS-master\source/ff.c **** 
1505:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1506:..\..\FatFS-master\source/ff.c **** /* FAT handling - Stretch a chain or Create a new chain                  */
1507:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1508:..\..\FatFS-master\source/ff.c **** static
1509:..\..\FatFS-master\source/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1510:..\..\FatFS-master\source/ff.c **** 	FFOBJID* obj,		/* Corresponding object */
1511:..\..\FatFS-master\source/ff.c **** 	DWORD clst			/* Cluster# to stretch, 0:Create a new chain */
1512:..\..\FatFS-master\source/ff.c **** )
1513:..\..\FatFS-master\source/ff.c **** {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 36


1514:..\..\FatFS-master\source/ff.c **** 	DWORD cs, ncl, scl;
1515:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
1516:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = obj->fs;
1517:..\..\FatFS-master\source/ff.c **** 
1518:..\..\FatFS-master\source/ff.c **** 
1519:..\..\FatFS-master\source/ff.c **** 	if (clst == 0) {	/* Create a new chain */
1520:..\..\FatFS-master\source/ff.c **** 		scl = fs->last_clst;				/* Suggested cluster to start to find */
1521:..\..\FatFS-master\source/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
1522:..\..\FatFS-master\source/ff.c **** 	}
1523:..\..\FatFS-master\source/ff.c **** 	else {				/* Stretch a chain */
1524:..\..\FatFS-master\source/ff.c **** 		cs = get_fat(obj, clst);			/* Check the cluster status */
1525:..\..\FatFS-master\source/ff.c **** 		if (cs < 2) return 1;				/* Test for insanity */
1526:..\..\FatFS-master\source/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
1527:..\..\FatFS-master\source/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1528:..\..\FatFS-master\source/ff.c **** 		scl = clst;							/* Cluster to start to find */
1529:..\..\FatFS-master\source/ff.c **** 	}
1530:..\..\FatFS-master\source/ff.c **** 	if (fs->free_clst == 0) return 0;		/* No free cluster */
1531:..\..\FatFS-master\source/ff.c **** 
1532:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
1533:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
1534:..\..\FatFS-master\source/ff.c **** 		ncl = find_bitmap(fs, scl, 1);				/* Find a free cluster */
1535:..\..\FatFS-master\source/ff.c **** 		if (ncl == 0 || ncl == 0xFFFFFFFF) return ncl;	/* No free cluster or hard error? */
1536:..\..\FatFS-master\source/ff.c **** 		res = change_bitmap(fs, ncl, 1, 1);			/* Mark the cluster 'in use' */
1537:..\..\FatFS-master\source/ff.c **** 		if (res == FR_INT_ERR) return 1;
1538:..\..\FatFS-master\source/ff.c **** 		if (res == FR_DISK_ERR) return 0xFFFFFFFF;
1539:..\..\FatFS-master\source/ff.c **** 		if (clst == 0) {							/* Is it a new chain? */
1540:..\..\FatFS-master\source/ff.c **** 			obj->stat = 2;							/* Set status 'contiguous' */
1541:..\..\FatFS-master\source/ff.c **** 		} else {									/* It is a stretched chain */
1542:..\..\FatFS-master\source/ff.c **** 			if (obj->stat == 2 && ncl != scl + 1) {	/* Is the chain got fragmented? */
1543:..\..\FatFS-master\source/ff.c **** 				obj->n_cont = scl - obj->sclust;	/* Set size of the contiguous part */
1544:..\..\FatFS-master\source/ff.c **** 				obj->stat = 3;						/* Change status 'just fragmented' */
1545:..\..\FatFS-master\source/ff.c **** 			}
1546:..\..\FatFS-master\source/ff.c **** 		}
1547:..\..\FatFS-master\source/ff.c **** 		if (obj->stat != 2) {	/* Is the file non-contiguous? */
1548:..\..\FatFS-master\source/ff.c **** 			if (ncl == clst + 1) {	/* Is the cluster next to previous one? */
1549:..\..\FatFS-master\source/ff.c **** 				obj->n_frag = obj->n_frag ? obj->n_frag + 1 : 2;	/* Increment size of last framgent */
1550:..\..\FatFS-master\source/ff.c **** 			} else {				/* New fragment */
1551:..\..\FatFS-master\source/ff.c **** 				if (obj->n_frag == 0) obj->n_frag = 1;
1552:..\..\FatFS-master\source/ff.c **** 				res = fill_last_frag(obj, clst, ncl);	/* Fill last fragment on the FAT and link it to new one *
1553:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) obj->n_frag = 1;
1554:..\..\FatFS-master\source/ff.c **** 			}
1555:..\..\FatFS-master\source/ff.c **** 		}
1556:..\..\FatFS-master\source/ff.c **** 	} else
1557:..\..\FatFS-master\source/ff.c **** #endif
1558:..\..\FatFS-master\source/ff.c **** 	{	/* On the FAT/FAT32 volume */
1559:..\..\FatFS-master\source/ff.c **** 		ncl = 0;
1560:..\..\FatFS-master\source/ff.c **** 		if (scl == clst) {						/* Stretching an existing chain? */
1561:..\..\FatFS-master\source/ff.c **** 			ncl = scl + 1;						/* Test if next cluster is free */
1562:..\..\FatFS-master\source/ff.c **** 			if (ncl >= fs->n_fatent) ncl = 2;
1563:..\..\FatFS-master\source/ff.c **** 			cs = get_fat(obj, ncl);				/* Get next cluster status */
1564:..\..\FatFS-master\source/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
1565:..\..\FatFS-master\source/ff.c **** 			if (cs != 0) {						/* Not free? */
1566:..\..\FatFS-master\source/ff.c **** 				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
1567:..\..\FatFS-master\source/ff.c **** 				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
1568:..\..\FatFS-master\source/ff.c **** 				ncl = 0;
1569:..\..\FatFS-master\source/ff.c **** 			}
1570:..\..\FatFS-master\source/ff.c **** 		}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 37


1571:..\..\FatFS-master\source/ff.c **** 		if (ncl == 0) {	/* The new cluster cannot be contiguous and find another fragment */
1572:..\..\FatFS-master\source/ff.c **** 			ncl = scl;	/* Start cluster */
1573:..\..\FatFS-master\source/ff.c **** 			for (;;) {
1574:..\..\FatFS-master\source/ff.c **** 				ncl++;							/* Next cluster */
1575:..\..\FatFS-master\source/ff.c **** 				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
1576:..\..\FatFS-master\source/ff.c **** 					ncl = 2;
1577:..\..\FatFS-master\source/ff.c **** 					if (ncl > scl) return 0;	/* No free cluster found? */
1578:..\..\FatFS-master\source/ff.c **** 				}
1579:..\..\FatFS-master\source/ff.c **** 				cs = get_fat(obj, ncl);			/* Get the cluster status */
1580:..\..\FatFS-master\source/ff.c **** 				if (cs == 0) break;				/* Found a free cluster? */
1581:..\..\FatFS-master\source/ff.c **** 				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
1582:..\..\FatFS-master\source/ff.c **** 				if (ncl == scl) return 0;		/* No free cluster found? */
1583:..\..\FatFS-master\source/ff.c **** 			}
1584:..\..\FatFS-master\source/ff.c **** 		}
1585:..\..\FatFS-master\source/ff.c **** 		res = put_fat(fs, ncl, 0xFFFFFFFF);		/* Mark the new cluster 'EOC' */
1586:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK && clst != 0) {
1587:..\..\FatFS-master\source/ff.c **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
1588:..\..\FatFS-master\source/ff.c **** 		}
1589:..\..\FatFS-master\source/ff.c **** 	}
1590:..\..\FatFS-master\source/ff.c **** 
1591:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
1592:..\..\FatFS-master\source/ff.c **** 		fs->last_clst = ncl;
1593:..\..\FatFS-master\source/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
1594:..\..\FatFS-master\source/ff.c **** 		fs->fsi_flag |= 1;
1595:..\..\FatFS-master\source/ff.c **** 	} else {
1596:..\..\FatFS-master\source/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
1597:..\..\FatFS-master\source/ff.c **** 	}
1598:..\..\FatFS-master\source/ff.c **** 
1599:..\..\FatFS-master\source/ff.c **** 	return ncl;		/* Return new cluster number or error status */
1600:..\..\FatFS-master\source/ff.c **** }
1601:..\..\FatFS-master\source/ff.c **** 
1602:..\..\FatFS-master\source/ff.c **** #endif /* !FF_FS_READONLY */
1603:..\..\FatFS-master\source/ff.c **** 
1604:..\..\FatFS-master\source/ff.c **** 
1605:..\..\FatFS-master\source/ff.c **** 
1606:..\..\FatFS-master\source/ff.c **** 
1607:..\..\FatFS-master\source/ff.c **** #if FF_USE_FASTSEEK
1608:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1609:..\..\FatFS-master\source/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1610:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1611:..\..\FatFS-master\source/ff.c **** 
1612:..\..\FatFS-master\source/ff.c **** static
1613:..\..\FatFS-master\source/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1614:..\..\FatFS-master\source/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1615:..\..\FatFS-master\source/ff.c **** 	FSIZE_t ofs		/* File offset to be converted to cluster# */
1616:..\..\FatFS-master\source/ff.c **** )
1617:..\..\FatFS-master\source/ff.c **** {
1618:..\..\FatFS-master\source/ff.c **** 	DWORD cl, ncl, *tbl;
1619:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = fp->obj.fs;
1620:..\..\FatFS-master\source/ff.c **** 
1621:..\..\FatFS-master\source/ff.c **** 
1622:..\..\FatFS-master\source/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
1623:..\..\FatFS-master\source/ff.c **** 	cl = (DWORD)(ofs / SS(fs) / fs->csize);	/* Cluster order from top of the file */
1624:..\..\FatFS-master\source/ff.c **** 	for (;;) {
1625:..\..\FatFS-master\source/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
1626:..\..\FatFS-master\source/ff.c **** 		if (ncl == 0) return 0;	/* End of table? (error) */
1627:..\..\FatFS-master\source/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 38


1628:..\..\FatFS-master\source/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
1629:..\..\FatFS-master\source/ff.c **** 	}
1630:..\..\FatFS-master\source/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
1631:..\..\FatFS-master\source/ff.c **** }
1632:..\..\FatFS-master\source/ff.c **** 
1633:..\..\FatFS-master\source/ff.c **** #endif	/* FF_USE_FASTSEEK */
1634:..\..\FatFS-master\source/ff.c **** 
1635:..\..\FatFS-master\source/ff.c **** 
1636:..\..\FatFS-master\source/ff.c **** 
1637:..\..\FatFS-master\source/ff.c **** 
1638:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1639:..\..\FatFS-master\source/ff.c **** /* Directory handling - Fill a cluster with zeros                        */
1640:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1641:..\..\FatFS-master\source/ff.c **** 
1642:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1643:..\..\FatFS-master\source/ff.c **** static
1644:..\..\FatFS-master\source/ff.c **** FRESULT dir_clear (	/* Returns FR_OK or FR_DISK_ERR */
1645:..\..\FatFS-master\source/ff.c **** 	FATFS *fs,		/* Filesystem object */
1646:..\..\FatFS-master\source/ff.c **** 	DWORD clst		/* Directory table to clear */
1647:..\..\FatFS-master\source/ff.c **** )
1648:..\..\FatFS-master\source/ff.c **** {
1649:..\..\FatFS-master\source/ff.c **** 	DWORD sect;
1650:..\..\FatFS-master\source/ff.c **** 	UINT n, szb;
1651:..\..\FatFS-master\source/ff.c **** 	BYTE *ibuf;
1652:..\..\FatFS-master\source/ff.c **** 
1653:..\..\FatFS-master\source/ff.c **** 
1654:..\..\FatFS-master\source/ff.c **** 	if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
1655:..\..\FatFS-master\source/ff.c **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
1656:..\..\FatFS-master\source/ff.c **** 	fs->winsect = sect;				/* Set window to top of the cluster */
1657:..\..\FatFS-master\source/ff.c **** 	mem_set(fs->win, 0, SS(fs));	/* Clear window buffer */
1658:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN == 3		/* Quick table clear by using multi-secter write */
1659:..\..\FatFS-master\source/ff.c **** 	/* Allocate a temporary buffer */
1660:..\..\FatFS-master\source/ff.c **** 	for (szb = ((DWORD)fs->csize * SS(fs) >= MAX_MALLOC) ? MAX_MALLOC : fs->csize * SS(fs); szb > SS(f
1661:..\..\FatFS-master\source/ff.c **** 	if (szb > SS(fs)) {		/* Buffer allocated? */
1662:..\..\FatFS-master\source/ff.c **** 		mem_set(ibuf, 0, szb);
1663:..\..\FatFS-master\source/ff.c **** 		szb /= SS(fs);		/* Bytes -> Sectors */
1664:..\..\FatFS-master\source/ff.c **** 		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* 
1665:..\..\FatFS-master\source/ff.c **** 		ff_memfree(ibuf);
1666:..\..\FatFS-master\source/ff.c **** 	} else
1667:..\..\FatFS-master\source/ff.c **** #endif
1668:..\..\FatFS-master\source/ff.c **** 	{
1669:..\..\FatFS-master\source/ff.c **** 		ibuf = fs->win; szb = 1;	/* Use window buffer (single-sector writes may take a time) */
1670:..\..\FatFS-master\source/ff.c **** 		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* 
1671:..\..\FatFS-master\source/ff.c **** 	}
1672:..\..\FatFS-master\source/ff.c **** 	return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
1673:..\..\FatFS-master\source/ff.c **** }
1674:..\..\FatFS-master\source/ff.c **** #endif	/* !FF_FS_READONLY */
1675:..\..\FatFS-master\source/ff.c **** 
1676:..\..\FatFS-master\source/ff.c **** 
1677:..\..\FatFS-master\source/ff.c **** 
1678:..\..\FatFS-master\source/ff.c **** 
1679:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1680:..\..\FatFS-master\source/ff.c **** /* Directory handling - Set directory index                              */
1681:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1682:..\..\FatFS-master\source/ff.c **** 
1683:..\..\FatFS-master\source/ff.c **** static
1684:..\..\FatFS-master\source/ff.c **** FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 39


1685:..\..\FatFS-master\source/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1686:..\..\FatFS-master\source/ff.c **** 	DWORD ofs		/* Offset of directory table */
1687:..\..\FatFS-master\source/ff.c **** )
1688:..\..\FatFS-master\source/ff.c **** {
1689:..\..\FatFS-master\source/ff.c **** 	DWORD csz, clst;
1690:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
1691:..\..\FatFS-master\source/ff.c **** 
1692:..\..\FatFS-master\source/ff.c **** 
1693:..\..\FatFS-master\source/ff.c **** 	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIR
1694:..\..\FatFS-master\source/ff.c **** 		return FR_INT_ERR;
1695:..\..\FatFS-master\source/ff.c **** 	}
1696:..\..\FatFS-master\source/ff.c **** 	dp->dptr = ofs;				/* Set current offset */
1697:..\..\FatFS-master\source/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
1698:..\..\FatFS-master\source/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
1699:..\..\FatFS-master\source/ff.c **** 		clst = fs->dirbase;
1700:..\..\FatFS-master\source/ff.c **** 		if (FF_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
1701:..\..\FatFS-master\source/ff.c **** 	}
1702:..\..\FatFS-master\source/ff.c **** 
1703:..\..\FatFS-master\source/ff.c **** 	if (clst == 0) {	/* Static table (root-directory on the FAT volume) */
1704:..\..\FatFS-master\source/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
1705:..\..\FatFS-master\source/ff.c **** 		dp->sect = fs->dirbase;
1706:..\..\FatFS-master\source/ff.c **** 
1707:..\..\FatFS-master\source/ff.c **** 	} else {			/* Dynamic table (sub-directory or root-directory on the FAT32/exFAT volume) */
1708:..\..\FatFS-master\source/ff.c **** 		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
1709:..\..\FatFS-master\source/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
1710:..\..\FatFS-master\source/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
1711:..\..\FatFS-master\source/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1712:..\..\FatFS-master\source/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
1713:..\..\FatFS-master\source/ff.c **** 			ofs -= csz;
1714:..\..\FatFS-master\source/ff.c **** 		}
1715:..\..\FatFS-master\source/ff.c **** 		dp->sect = clst2sect(fs, clst);
1716:..\..\FatFS-master\source/ff.c **** 	}
1717:..\..\FatFS-master\source/ff.c **** 	dp->clust = clst;					/* Current cluster# */
1718:..\..\FatFS-master\source/ff.c **** 	if (dp->sect == 0) return FR_INT_ERR;
1719:..\..\FatFS-master\source/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
1720:..\..\FatFS-master\source/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
1721:..\..\FatFS-master\source/ff.c **** 
1722:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
1723:..\..\FatFS-master\source/ff.c **** }
1724:..\..\FatFS-master\source/ff.c **** 
1725:..\..\FatFS-master\source/ff.c **** 
1726:..\..\FatFS-master\source/ff.c **** 
1727:..\..\FatFS-master\source/ff.c **** 
1728:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1729:..\..\FatFS-master\source/ff.c **** /* Directory handling - Move directory table index next                  */
1730:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1731:..\..\FatFS-master\source/ff.c **** 
1732:..\..\FatFS-master\source/ff.c **** static
1733:..\..\FatFS-master\source/ff.c **** FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1734:..\..\FatFS-master\source/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1735:..\..\FatFS-master\source/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1736:..\..\FatFS-master\source/ff.c **** )
1737:..\..\FatFS-master\source/ff.c **** {
1738:..\..\FatFS-master\source/ff.c **** 	DWORD ofs, clst;
1739:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
1740:..\..\FatFS-master\source/ff.c **** 
1741:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 40


1742:..\..\FatFS-master\source/ff.c **** 	ofs = dp->dptr + SZDIRE;	/* Next entry */
1743:..\..\FatFS-master\source/ff.c **** 	if (dp->sect == 0 || ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DI
1744:..\..\FatFS-master\source/ff.c **** 
1745:..\..\FatFS-master\source/ff.c **** 	if (ofs % SS(fs) == 0) {	/* Sector changed? */
1746:..\..\FatFS-master\source/ff.c **** 		dp->sect++;				/* Next sector */
1747:..\..\FatFS-master\source/ff.c **** 
1748:..\..\FatFS-master\source/ff.c **** 		if (dp->clust == 0) {	/* Static table */
1749:..\..\FatFS-master\source/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
1750:..\..\FatFS-master\source/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
1751:..\..\FatFS-master\source/ff.c **** 			}
1752:..\..\FatFS-master\source/ff.c **** 		}
1753:..\..\FatFS-master\source/ff.c **** 		else {					/* Dynamic table */
1754:..\..\FatFS-master\source/ff.c **** 			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
1755:..\..\FatFS-master\source/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
1756:..\..\FatFS-master\source/ff.c **** 				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
1757:..\..\FatFS-master\source/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1758:..\..\FatFS-master\source/ff.c **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
1759:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1760:..\..\FatFS-master\source/ff.c **** 					if (!stretch) {								/* If no stretch, report EOT */
1761:..\..\FatFS-master\source/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
1762:..\..\FatFS-master\source/ff.c **** 					}
1763:..\..\FatFS-master\source/ff.c **** 					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
1764:..\..\FatFS-master\source/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1765:..\..\FatFS-master\source/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
1766:..\..\FatFS-master\source/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1767:..\..\FatFS-master\source/ff.c **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
1768:..\..\FatFS-master\source/ff.c **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
1769:..\..\FatFS-master\source/ff.c **** #else
1770:..\..\FatFS-master\source/ff.c **** 					if (!stretch) dp->sect = 0;					/* (this line is to suppress compiler warning) */
1771:..\..\FatFS-master\source/ff.c **** 					dp->sect = 0; return FR_NO_FILE;			/* Report EOT */
1772:..\..\FatFS-master\source/ff.c **** #endif
1773:..\..\FatFS-master\source/ff.c **** 				}
1774:..\..\FatFS-master\source/ff.c **** 				dp->clust = clst;		/* Initialize data for new cluster */
1775:..\..\FatFS-master\source/ff.c **** 				dp->sect = clst2sect(fs, clst);
1776:..\..\FatFS-master\source/ff.c **** 			}
1777:..\..\FatFS-master\source/ff.c **** 		}
1778:..\..\FatFS-master\source/ff.c **** 	}
1779:..\..\FatFS-master\source/ff.c **** 	dp->dptr = ofs;						/* Current entry */
1780:..\..\FatFS-master\source/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
1781:..\..\FatFS-master\source/ff.c **** 
1782:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
1783:..\..\FatFS-master\source/ff.c **** }
1784:..\..\FatFS-master\source/ff.c **** 
1785:..\..\FatFS-master\source/ff.c **** 
1786:..\..\FatFS-master\source/ff.c **** 
1787:..\..\FatFS-master\source/ff.c **** 
1788:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1789:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1790:..\..\FatFS-master\source/ff.c **** /* Directory handling - Reserve a block of directory entries             */
1791:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1792:..\..\FatFS-master\source/ff.c **** 
1793:..\..\FatFS-master\source/ff.c **** static
1794:..\..\FatFS-master\source/ff.c **** FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
1795:..\..\FatFS-master\source/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1796:..\..\FatFS-master\source/ff.c **** 	UINT nent		/* Number of contiguous entries to allocate */
1797:..\..\FatFS-master\source/ff.c **** )
1798:..\..\FatFS-master\source/ff.c **** {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 41


1799:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
1800:..\..\FatFS-master\source/ff.c **** 	UINT n;
1801:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
1802:..\..\FatFS-master\source/ff.c **** 
1803:..\..\FatFS-master\source/ff.c **** 
1804:..\..\FatFS-master\source/ff.c **** 	res = dir_sdi(dp, 0);
1805:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
1806:..\..\FatFS-master\source/ff.c **** 		n = 0;
1807:..\..\FatFS-master\source/ff.c **** 		do {
1808:..\..\FatFS-master\source/ff.c **** 			res = move_window(fs, dp->sect);
1809:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
1810:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
1811:..\..\FatFS-master\source/ff.c **** 			if ((fs->fs_type == FS_EXFAT) ? (int)((dp->dir[XDIR_Type] & 0x80) == 0) : (int)(dp->dir[DIR_Name
1812:..\..\FatFS-master\source/ff.c **** #else
1813:..\..\FatFS-master\source/ff.c **** 			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
1814:..\..\FatFS-master\source/ff.c **** #endif
1815:..\..\FatFS-master\source/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1816:..\..\FatFS-master\source/ff.c **** 			} else {
1817:..\..\FatFS-master\source/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1818:..\..\FatFS-master\source/ff.c **** 			}
1819:..\..\FatFS-master\source/ff.c **** 			res = dir_next(dp, 1);
1820:..\..\FatFS-master\source/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
1821:..\..\FatFS-master\source/ff.c **** 	}
1822:..\..\FatFS-master\source/ff.c **** 
1823:..\..\FatFS-master\source/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1824:..\..\FatFS-master\source/ff.c **** 	return res;
1825:..\..\FatFS-master\source/ff.c **** }
1826:..\..\FatFS-master\source/ff.c **** 
1827:..\..\FatFS-master\source/ff.c **** #endif	/* !FF_FS_READONLY */
1828:..\..\FatFS-master\source/ff.c **** 
1829:..\..\FatFS-master\source/ff.c **** 
1830:..\..\FatFS-master\source/ff.c **** 
1831:..\..\FatFS-master\source/ff.c **** 
1832:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1833:..\..\FatFS-master\source/ff.c **** /* FAT: Directory handling - Load/Store start cluster number             */
1834:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1835:..\..\FatFS-master\source/ff.c **** 
1836:..\..\FatFS-master\source/ff.c **** static
1837:..\..\FatFS-master\source/ff.c **** DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
1838:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,		/* Pointer to the fs object */
1839:..\..\FatFS-master\source/ff.c **** 	const BYTE* dir	/* Pointer to the key entry */
1840:..\..\FatFS-master\source/ff.c **** )
1841:..\..\FatFS-master\source/ff.c **** {
 474              		.loc 1 1841 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL67:
 479 0000 70B5     		push	{r4, r5, r6, lr}
 480              		.cfi_def_cfa_offset 16
 481              		.cfi_offset 4, -16
 482              		.cfi_offset 5, -12
 483              		.cfi_offset 6, -8
 484              		.cfi_offset 14, -4
 485 0002 0600     		movs	r6, r0
 486 0004 0D00     		movs	r5, r1
1842:..\..\FatFS-master\source/ff.c **** 	DWORD cl;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 42


1843:..\..\FatFS-master\source/ff.c **** 
1844:..\..\FatFS-master\source/ff.c **** 	cl = ld_word(dir + DIR_FstClusLO);
 487              		.loc 1 1844 0
 488 0006 0800     		movs	r0, r1
 489              	.LVL68:
 490 0008 1A30     		adds	r0, r0, #26
 491 000a FFF7FEFF 		bl	ld_word
 492              	.LVL69:
 493 000e 0400     		movs	r4, r0
 494              	.LVL70:
1845:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 495              		.loc 1 1845 0
 496 0010 3378     		ldrb	r3, [r6]
 497 0012 032B     		cmp	r3, #3
 498 0014 05D1     		bne	.L34
1846:..\..\FatFS-master\source/ff.c **** 		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 499              		.loc 1 1846 0
 500 0016 2800     		movs	r0, r5
 501              	.LVL71:
 502 0018 1430     		adds	r0, r0, #20
 503 001a FFF7FEFF 		bl	ld_word
 504              	.LVL72:
 505 001e 0004     		lsls	r0, r0, #16
 506 0020 2043     		orrs	r0, r4
 507              	.LVL73:
 508              	.L34:
1847:..\..\FatFS-master\source/ff.c **** 	}
1848:..\..\FatFS-master\source/ff.c **** 
1849:..\..\FatFS-master\source/ff.c **** 	return cl;
1850:..\..\FatFS-master\source/ff.c **** }
 509              		.loc 1 1850 0
 510              		@ sp needed
 511              	.LVL74:
 512              	.LVL75:
 513 0022 70BD     		pop	{r4, r5, r6, pc}
 514              		.cfi_endproc
 515              	.LFE22:
 516              		.size	ld_clust, .-ld_clust
 517              		.section	.text.st_clust,"ax",%progbits
 518              		.align	2
 519              		.code	16
 520              		.thumb_func
 521              		.type	st_clust, %function
 522              	st_clust:
 523              	.LFB23:
1851:..\..\FatFS-master\source/ff.c **** 
1852:..\..\FatFS-master\source/ff.c **** 
1853:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1854:..\..\FatFS-master\source/ff.c **** static
1855:..\..\FatFS-master\source/ff.c **** void st_clust (
1856:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1857:..\..\FatFS-master\source/ff.c **** 	BYTE* dir,	/* Pointer to the key entry */
1858:..\..\FatFS-master\source/ff.c **** 	DWORD cl	/* Value to be set */
1859:..\..\FatFS-master\source/ff.c **** )
1860:..\..\FatFS-master\source/ff.c **** {
 524              		.loc 1 1860 0
 525              		.cfi_startproc
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 43


 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              	.LVL76:
 529 0000 70B5     		push	{r4, r5, r6, lr}
 530              		.cfi_def_cfa_offset 16
 531              		.cfi_offset 4, -16
 532              		.cfi_offset 5, -12
 533              		.cfi_offset 6, -8
 534              		.cfi_offset 14, -4
 535 0002 0600     		movs	r6, r0
 536 0004 0C00     		movs	r4, r1
 537 0006 1500     		movs	r5, r2
1861:..\..\FatFS-master\source/ff.c **** 	st_word(dir + DIR_FstClusLO, (WORD)cl);
 538              		.loc 1 1861 0
 539 0008 91B2     		uxth	r1, r2
 540              	.LVL77:
 541 000a 2000     		movs	r0, r4
 542              	.LVL78:
 543 000c 1A30     		adds	r0, r0, #26
 544 000e FFF7FEFF 		bl	st_word
 545              	.LVL79:
1862:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type == FS_FAT32) {
 546              		.loc 1 1862 0
 547 0012 3378     		ldrb	r3, [r6]
 548 0014 032B     		cmp	r3, #3
 549 0016 04D1     		bne	.L35
1863:..\..\FatFS-master\source/ff.c **** 		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
 550              		.loc 1 1863 0
 551 0018 290C     		lsrs	r1, r5, #16
 552 001a 2000     		movs	r0, r4
 553 001c 1430     		adds	r0, r0, #20
 554 001e FFF7FEFF 		bl	st_word
 555              	.LVL80:
 556              	.L35:
1864:..\..\FatFS-master\source/ff.c **** 	}
1865:..\..\FatFS-master\source/ff.c **** }
 557              		.loc 1 1865 0
 558              		@ sp needed
 559              	.LVL81:
 560              	.LVL82:
 561              	.LVL83:
 562 0022 70BD     		pop	{r4, r5, r6, pc}
 563              		.cfi_endproc
 564              	.LFE23:
 565              		.size	st_clust, .-st_clust
 566              		.section	.text.get_fileinfo,"ax",%progbits
 567              		.align	2
 568              		.code	16
 569              		.thumb_func
 570              		.type	get_fileinfo, %function
 571              	get_fileinfo:
 572              	.LFB28:
1866:..\..\FatFS-master\source/ff.c **** #endif
1867:..\..\FatFS-master\source/ff.c **** 
1868:..\..\FatFS-master\source/ff.c **** 
1869:..\..\FatFS-master\source/ff.c **** 
1870:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 44


1871:..\..\FatFS-master\source/ff.c **** /*--------------------------------------------------------*/
1872:..\..\FatFS-master\source/ff.c **** /* FAT-LFN: Compare a part of file name with an LFN entry */
1873:..\..\FatFS-master\source/ff.c **** /*--------------------------------------------------------*/
1874:..\..\FatFS-master\source/ff.c **** static
1875:..\..\FatFS-master\source/ff.c **** int cmp_lfn (				/* 1:matched, 0:not matched */
1876:..\..\FatFS-master\source/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN working buffer to be compared */
1877:..\..\FatFS-master\source/ff.c **** 	BYTE* dir				/* Pointer to the directory entry containing the part of LFN */
1878:..\..\FatFS-master\source/ff.c **** )
1879:..\..\FatFS-master\source/ff.c **** {
1880:..\..\FatFS-master\source/ff.c **** 	UINT i, s;
1881:..\..\FatFS-master\source/ff.c **** 	WCHAR wc, uc;
1882:..\..\FatFS-master\source/ff.c **** 
1883:..\..\FatFS-master\source/ff.c **** 
1884:..\..\FatFS-master\source/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
1885:..\..\FatFS-master\source/ff.c **** 
1886:..\..\FatFS-master\source/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1887:..\..\FatFS-master\source/ff.c **** 
1888:..\..\FatFS-master\source/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1889:..\..\FatFS-master\source/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1890:..\..\FatFS-master\source/ff.c **** 		if (wc != 0) {
1891:..\..\FatFS-master\source/ff.c **** 			if (i >= FF_MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
1892:..\..\FatFS-master\source/ff.c **** 				return 0;					/* Not matched */
1893:..\..\FatFS-master\source/ff.c **** 			}
1894:..\..\FatFS-master\source/ff.c **** 			wc = uc;
1895:..\..\FatFS-master\source/ff.c **** 		} else {
1896:..\..\FatFS-master\source/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1897:..\..\FatFS-master\source/ff.c **** 		}
1898:..\..\FatFS-master\source/ff.c **** 	}
1899:..\..\FatFS-master\source/ff.c **** 
1900:..\..\FatFS-master\source/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different len
1901:..\..\FatFS-master\source/ff.c **** 
1902:..\..\FatFS-master\source/ff.c **** 	return 1;		/* The part of LFN matched */
1903:..\..\FatFS-master\source/ff.c **** }
1904:..\..\FatFS-master\source/ff.c **** 
1905:..\..\FatFS-master\source/ff.c **** 
1906:..\..\FatFS-master\source/ff.c **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 || FF_USE_LABEL || FF_FS_EXFAT
1907:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------*/
1908:..\..\FatFS-master\source/ff.c **** /* FAT-LFN: Pick a part of file name from an LFN entry */
1909:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------*/
1910:..\..\FatFS-master\source/ff.c **** static
1911:..\..\FatFS-master\source/ff.c **** int pick_lfn (			/* 1:succeeded, 0:buffer overflow or invalid LFN entry */
1912:..\..\FatFS-master\source/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN working buffer */
1913:..\..\FatFS-master\source/ff.c **** 	BYTE* dir			/* Pointer to the LFN entry */
1914:..\..\FatFS-master\source/ff.c **** )
1915:..\..\FatFS-master\source/ff.c **** {
1916:..\..\FatFS-master\source/ff.c **** 	UINT i, s;
1917:..\..\FatFS-master\source/ff.c **** 	WCHAR wc, uc;
1918:..\..\FatFS-master\source/ff.c **** 
1919:..\..\FatFS-master\source/ff.c **** 
1920:..\..\FatFS-master\source/ff.c **** 	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
1921:..\..\FatFS-master\source/ff.c **** 
1922:..\..\FatFS-master\source/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
1923:..\..\FatFS-master\source/ff.c **** 
1924:..\..\FatFS-master\source/ff.c **** 	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
1925:..\..\FatFS-master\source/ff.c **** 		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
1926:..\..\FatFS-master\source/ff.c **** 		if (wc != 0) {
1927:..\..\FatFS-master\source/ff.c **** 			if (i >= FF_MAX_LFN) return 0;	/* Buffer overflow? */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 45


1928:..\..\FatFS-master\source/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1929:..\..\FatFS-master\source/ff.c **** 		} else {
1930:..\..\FatFS-master\source/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1931:..\..\FatFS-master\source/ff.c **** 		}
1932:..\..\FatFS-master\source/ff.c **** 	}
1933:..\..\FatFS-master\source/ff.c **** 
1934:..\..\FatFS-master\source/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1935:..\..\FatFS-master\source/ff.c **** 		if (i >= FF_MAX_LFN) return 0;		/* Buffer overflow? */
1936:..\..\FatFS-master\source/ff.c **** 		lfnbuf[i] = 0;
1937:..\..\FatFS-master\source/ff.c **** 	}
1938:..\..\FatFS-master\source/ff.c **** 
1939:..\..\FatFS-master\source/ff.c **** 	return 1;		/* The part of LFN is valid */
1940:..\..\FatFS-master\source/ff.c **** }
1941:..\..\FatFS-master\source/ff.c **** #endif
1942:..\..\FatFS-master\source/ff.c **** 
1943:..\..\FatFS-master\source/ff.c **** 
1944:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
1945:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------*/
1946:..\..\FatFS-master\source/ff.c **** /* FAT-LFN: Create an entry of LFN entries */
1947:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------*/
1948:..\..\FatFS-master\source/ff.c **** static
1949:..\..\FatFS-master\source/ff.c **** void put_lfn (
1950:..\..\FatFS-master\source/ff.c **** 	const WCHAR* lfn,	/* Pointer to the LFN */
1951:..\..\FatFS-master\source/ff.c **** 	BYTE* dir,			/* Pointer to the LFN entry to be created */
1952:..\..\FatFS-master\source/ff.c **** 	BYTE ord,			/* LFN order (1-20) */
1953:..\..\FatFS-master\source/ff.c **** 	BYTE sum			/* Checksum of the corresponding SFN */
1954:..\..\FatFS-master\source/ff.c **** )
1955:..\..\FatFS-master\source/ff.c **** {
1956:..\..\FatFS-master\source/ff.c **** 	UINT i, s;
1957:..\..\FatFS-master\source/ff.c **** 	WCHAR wc;
1958:..\..\FatFS-master\source/ff.c **** 
1959:..\..\FatFS-master\source/ff.c **** 
1960:..\..\FatFS-master\source/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set checksum */
1961:..\..\FatFS-master\source/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1962:..\..\FatFS-master\source/ff.c **** 	dir[LDIR_Type] = 0;
1963:..\..\FatFS-master\source/ff.c **** 	st_word(dir + LDIR_FstClusLO, 0);
1964:..\..\FatFS-master\source/ff.c **** 
1965:..\..\FatFS-master\source/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
1966:..\..\FatFS-master\source/ff.c **** 	s = wc = 0;
1967:..\..\FatFS-master\source/ff.c **** 	do {
1968:..\..\FatFS-master\source/ff.c **** 		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
1969:..\..\FatFS-master\source/ff.c **** 		st_word(dir + LfnOfs[s], wc);		/* Put it */
1970:..\..\FatFS-master\source/ff.c **** 		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
1971:..\..\FatFS-master\source/ff.c **** 	} while (++s < 13);
1972:..\..\FatFS-master\source/ff.c **** 	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
1973:..\..\FatFS-master\source/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1974:..\..\FatFS-master\source/ff.c **** }
1975:..\..\FatFS-master\source/ff.c **** 
1976:..\..\FatFS-master\source/ff.c **** #endif	/* !FF_FS_READONLY */
1977:..\..\FatFS-master\source/ff.c **** #endif	/* FF_USE_LFN */
1978:..\..\FatFS-master\source/ff.c **** 
1979:..\..\FatFS-master\source/ff.c **** 
1980:..\..\FatFS-master\source/ff.c **** 
1981:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN && !FF_FS_READONLY
1982:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
1983:..\..\FatFS-master\source/ff.c **** /* FAT-LFN: Create a Numbered SFN                                        */
1984:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 46


1985:..\..\FatFS-master\source/ff.c **** 
1986:..\..\FatFS-master\source/ff.c **** static
1987:..\..\FatFS-master\source/ff.c **** void gen_numname (
1988:..\..\FatFS-master\source/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1989:..\..\FatFS-master\source/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1990:..\..\FatFS-master\source/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1991:..\..\FatFS-master\source/ff.c **** 	UINT seq			/* Sequence number */
1992:..\..\FatFS-master\source/ff.c **** )
1993:..\..\FatFS-master\source/ff.c **** {
1994:..\..\FatFS-master\source/ff.c **** 	BYTE ns[8], c;
1995:..\..\FatFS-master\source/ff.c **** 	UINT i, j;
1996:..\..\FatFS-master\source/ff.c **** 	WCHAR wc;
1997:..\..\FatFS-master\source/ff.c **** 	DWORD sr;
1998:..\..\FatFS-master\source/ff.c **** 
1999:..\..\FatFS-master\source/ff.c **** 
2000:..\..\FatFS-master\source/ff.c **** 	mem_cpy(dst, src, 11);
2001:..\..\FatFS-master\source/ff.c **** 
2002:..\..\FatFS-master\source/ff.c **** 	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number 
2003:..\..\FatFS-master\source/ff.c **** 		sr = seq;
2004:..\..\FatFS-master\source/ff.c **** 		while (*lfn) {	/* Create a CRC */
2005:..\..\FatFS-master\source/ff.c **** 			wc = *lfn++;
2006:..\..\FatFS-master\source/ff.c **** 			for (i = 0; i < 16; i++) {
2007:..\..\FatFS-master\source/ff.c **** 				sr = (sr << 1) + (wc & 1);
2008:..\..\FatFS-master\source/ff.c **** 				wc >>= 1;
2009:..\..\FatFS-master\source/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
2010:..\..\FatFS-master\source/ff.c **** 			}
2011:..\..\FatFS-master\source/ff.c **** 		}
2012:..\..\FatFS-master\source/ff.c **** 		seq = (UINT)sr;
2013:..\..\FatFS-master\source/ff.c **** 	}
2014:..\..\FatFS-master\source/ff.c **** 
2015:..\..\FatFS-master\source/ff.c **** 	/* itoa (hexdecimal) */
2016:..\..\FatFS-master\source/ff.c **** 	i = 7;
2017:..\..\FatFS-master\source/ff.c **** 	do {
2018:..\..\FatFS-master\source/ff.c **** 		c = (BYTE)((seq % 16) + '0');
2019:..\..\FatFS-master\source/ff.c **** 		if (c > '9') c += 7;
2020:..\..\FatFS-master\source/ff.c **** 		ns[i--] = c;
2021:..\..\FatFS-master\source/ff.c **** 		seq /= 16;
2022:..\..\FatFS-master\source/ff.c **** 	} while (seq);
2023:..\..\FatFS-master\source/ff.c **** 	ns[i] = '~';
2024:..\..\FatFS-master\source/ff.c **** 
2025:..\..\FatFS-master\source/ff.c **** 	/* Append the number to the SFN body */
2026:..\..\FatFS-master\source/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
2027:..\..\FatFS-master\source/ff.c **** 		if (dbc_1st(dst[j])) {
2028:..\..\FatFS-master\source/ff.c **** 			if (j == i - 1) break;
2029:..\..\FatFS-master\source/ff.c **** 			j++;
2030:..\..\FatFS-master\source/ff.c **** 		}
2031:..\..\FatFS-master\source/ff.c **** 	}
2032:..\..\FatFS-master\source/ff.c **** 	do {
2033:..\..\FatFS-master\source/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
2034:..\..\FatFS-master\source/ff.c **** 	} while (j < 8);
2035:..\..\FatFS-master\source/ff.c **** }
2036:..\..\FatFS-master\source/ff.c **** #endif	/* FF_USE_LFN && !FF_FS_READONLY */
2037:..\..\FatFS-master\source/ff.c **** 
2038:..\..\FatFS-master\source/ff.c **** 
2039:..\..\FatFS-master\source/ff.c **** 
2040:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
2041:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 47


2042:..\..\FatFS-master\source/ff.c **** /* FAT-LFN: Calculate checksum of an SFN entry                           */
2043:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2044:..\..\FatFS-master\source/ff.c **** 
2045:..\..\FatFS-master\source/ff.c **** static
2046:..\..\FatFS-master\source/ff.c **** BYTE sum_sfn (
2047:..\..\FatFS-master\source/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
2048:..\..\FatFS-master\source/ff.c **** )
2049:..\..\FatFS-master\source/ff.c **** {
2050:..\..\FatFS-master\source/ff.c **** 	BYTE sum = 0;
2051:..\..\FatFS-master\source/ff.c **** 	UINT n = 11;
2052:..\..\FatFS-master\source/ff.c **** 
2053:..\..\FatFS-master\source/ff.c **** 	do {
2054:..\..\FatFS-master\source/ff.c **** 		sum = (sum >> 1) + (sum << 7) + *dir++;
2055:..\..\FatFS-master\source/ff.c **** 	} while (--n);
2056:..\..\FatFS-master\source/ff.c **** 	return sum;
2057:..\..\FatFS-master\source/ff.c **** }
2058:..\..\FatFS-master\source/ff.c **** 
2059:..\..\FatFS-master\source/ff.c **** #endif	/* FF_USE_LFN */
2060:..\..\FatFS-master\source/ff.c **** 
2061:..\..\FatFS-master\source/ff.c **** 
2062:..\..\FatFS-master\source/ff.c **** 
2063:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
2064:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2065:..\..\FatFS-master\source/ff.c **** /* exFAT: Checksum                                                       */
2066:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2067:..\..\FatFS-master\source/ff.c **** 
2068:..\..\FatFS-master\source/ff.c **** static
2069:..\..\FatFS-master\source/ff.c **** WORD xdir_sum (			/* Get checksum of the directoly entry block */
2070:..\..\FatFS-master\source/ff.c **** 	const BYTE* dir		/* Directory entry block to be calculated */
2071:..\..\FatFS-master\source/ff.c **** )
2072:..\..\FatFS-master\source/ff.c **** {
2073:..\..\FatFS-master\source/ff.c **** 	UINT i, szblk;
2074:..\..\FatFS-master\source/ff.c **** 	WORD sum;
2075:..\..\FatFS-master\source/ff.c **** 
2076:..\..\FatFS-master\source/ff.c **** 
2077:..\..\FatFS-master\source/ff.c **** 	szblk = (dir[XDIR_NumSec] + 1) * SZDIRE;
2078:..\..\FatFS-master\source/ff.c **** 	for (i = sum = 0; i < szblk; i++) {
2079:..\..\FatFS-master\source/ff.c **** 		if (i == XDIR_SetSum) {	/* Skip sum field */
2080:..\..\FatFS-master\source/ff.c **** 			i++;
2081:..\..\FatFS-master\source/ff.c **** 		} else {
2082:..\..\FatFS-master\source/ff.c **** 			sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + dir[i];
2083:..\..\FatFS-master\source/ff.c **** 		}
2084:..\..\FatFS-master\source/ff.c **** 	}
2085:..\..\FatFS-master\source/ff.c **** 	return sum;
2086:..\..\FatFS-master\source/ff.c **** }
2087:..\..\FatFS-master\source/ff.c **** 
2088:..\..\FatFS-master\source/ff.c **** 
2089:..\..\FatFS-master\source/ff.c **** 
2090:..\..\FatFS-master\source/ff.c **** static
2091:..\..\FatFS-master\source/ff.c **** WORD xname_sum (		/* Get check sum (to be used as hash) of the name */
2092:..\..\FatFS-master\source/ff.c **** 	const WCHAR* name	/* File name to be calculated */
2093:..\..\FatFS-master\source/ff.c **** )
2094:..\..\FatFS-master\source/ff.c **** {
2095:..\..\FatFS-master\source/ff.c **** 	WCHAR chr;
2096:..\..\FatFS-master\source/ff.c **** 	WORD sum = 0;
2097:..\..\FatFS-master\source/ff.c **** 
2098:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 48


2099:..\..\FatFS-master\source/ff.c **** 	while ((chr = *name++) != 0) {
2100:..\..\FatFS-master\source/ff.c **** 		chr = (WCHAR)ff_wtoupper(chr);		/* File name needs to be upper-case converted */
2101:..\..\FatFS-master\source/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr & 0xFF);
2102:..\..\FatFS-master\source/ff.c **** 		sum = ((sum & 1) ? 0x8000 : 0) + (sum >> 1) + (chr >> 8);
2103:..\..\FatFS-master\source/ff.c **** 	}
2104:..\..\FatFS-master\source/ff.c **** 	return sum;
2105:..\..\FatFS-master\source/ff.c **** }
2106:..\..\FatFS-master\source/ff.c **** 
2107:..\..\FatFS-master\source/ff.c **** 
2108:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY && FF_USE_MKFS
2109:..\..\FatFS-master\source/ff.c **** static
2110:..\..\FatFS-master\source/ff.c **** DWORD xsum32 (
2111:..\..\FatFS-master\source/ff.c **** 	BYTE  dat,	/* Byte to be calculated */
2112:..\..\FatFS-master\source/ff.c **** 	DWORD sum	/* Previous sum */
2113:..\..\FatFS-master\source/ff.c **** )
2114:..\..\FatFS-master\source/ff.c **** {
2115:..\..\FatFS-master\source/ff.c **** 	sum = ((sum & 1) ? 0x80000000 : 0) + (sum >> 1) + dat;
2116:..\..\FatFS-master\source/ff.c **** 	return sum;
2117:..\..\FatFS-master\source/ff.c **** }
2118:..\..\FatFS-master\source/ff.c **** #endif
2119:..\..\FatFS-master\source/ff.c **** 
2120:..\..\FatFS-master\source/ff.c **** 
2121:..\..\FatFS-master\source/ff.c **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2
2122:..\..\FatFS-master\source/ff.c **** /*------------------------------------------------------*/
2123:..\..\FatFS-master\source/ff.c **** /* exFAT: Get object information from a directory block */
2124:..\..\FatFS-master\source/ff.c **** /*------------------------------------------------------*/
2125:..\..\FatFS-master\source/ff.c **** 
2126:..\..\FatFS-master\source/ff.c **** static
2127:..\..\FatFS-master\source/ff.c **** void get_xfileinfo (
2128:..\..\FatFS-master\source/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block 85+C0+C1s */
2129:..\..\FatFS-master\source/ff.c **** 	FILINFO* fno		/* Buffer to store the extracted file information */
2130:..\..\FatFS-master\source/ff.c **** )
2131:..\..\FatFS-master\source/ff.c **** {
2132:..\..\FatFS-master\source/ff.c **** 	WCHAR wc, hs;
2133:..\..\FatFS-master\source/ff.c **** 	UINT di, si, nc;
2134:..\..\FatFS-master\source/ff.c **** 
2135:..\..\FatFS-master\source/ff.c **** 	/* Get file name from the entry block */
2136:..\..\FatFS-master\source/ff.c **** 	si = SZDIRE * 2;	/* 1st C1 entry */
2137:..\..\FatFS-master\source/ff.c **** 	nc = hs = di = 0;
2138:..\..\FatFS-master\source/ff.c **** 	while (nc < dirb[XDIR_NumName]) {
2139:..\..\FatFS-master\source/ff.c **** 		if (si >= MAXDIRB(FF_MAX_LFN)) { di = 0; break; }	/* Truncated directory block? */
2140:..\..\FatFS-master\source/ff.c **** 		if ((si % SZDIRE) == 0) si += 2;		/* Skip entry type field */
2141:..\..\FatFS-master\source/ff.c **** 		wc = ld_word(dirb + si); si += 2; nc++;	/* Get a character */
2142:..\..\FatFS-master\source/ff.c **** 		if (hs == 0 && IsSurrogate(wc)) {	/* Is it a surrogate? */
2143:..\..\FatFS-master\source/ff.c **** 			hs = wc; continue;	/* Get low surrogate */
2144:..\..\FatFS-master\source/ff.c **** 		}
2145:..\..\FatFS-master\source/ff.c **** 		wc = put_utf((DWORD)hs << 16 | wc, &fno->fname[di], FF_LFN_BUF - di);	/* Store it in UTF-16 or UT
2146:..\..\FatFS-master\source/ff.c **** 		if (wc == 0) { di = 0; break; }	/* Buffer overflow or wrong encoding? */
2147:..\..\FatFS-master\source/ff.c **** 		di += wc;
2148:..\..\FatFS-master\source/ff.c **** 		hs = 0;
2149:..\..\FatFS-master\source/ff.c **** 	}
2150:..\..\FatFS-master\source/ff.c **** 	if (hs != 0) di = 0;					/* Broken surrogate pair? */
2151:..\..\FatFS-master\source/ff.c **** 	if (di == 0) fno->fname[di++] = '?';	/* Inaccessible object name? */
2152:..\..\FatFS-master\source/ff.c **** 	fno->fname[di] = 0;						/* Terminate the name */
2153:..\..\FatFS-master\source/ff.c **** 	fno->altname[0] = 0;					/* exFAT does not have SFN */
2154:..\..\FatFS-master\source/ff.c **** 
2155:..\..\FatFS-master\source/ff.c **** 	fno->fattrib = dirb[XDIR_Attr];			/* Attribute */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 49


2156:..\..\FatFS-master\source/ff.c **** 	fno->fsize = (fno->fattrib & AM_DIR) ? 0 : ld_qword(dirb + XDIR_FileSize);	/* Size */
2157:..\..\FatFS-master\source/ff.c **** 	fno->ftime = ld_word(dirb + XDIR_ModTime + 0);	/* Time */
2158:..\..\FatFS-master\source/ff.c **** 	fno->fdate = ld_word(dirb + XDIR_ModTime + 2);	/* Date */
2159:..\..\FatFS-master\source/ff.c **** }
2160:..\..\FatFS-master\source/ff.c **** 
2161:..\..\FatFS-master\source/ff.c **** #endif	/* FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 */
2162:..\..\FatFS-master\source/ff.c **** 
2163:..\..\FatFS-master\source/ff.c **** 
2164:..\..\FatFS-master\source/ff.c **** /*-----------------------------------*/
2165:..\..\FatFS-master\source/ff.c **** /* exFAT: Get a directry entry block */
2166:..\..\FatFS-master\source/ff.c **** /*-----------------------------------*/
2167:..\..\FatFS-master\source/ff.c **** 
2168:..\..\FatFS-master\source/ff.c **** static
2169:..\..\FatFS-master\source/ff.c **** FRESULT load_xdir (	/* FR_INT_ERR: invalid entry block */
2170:..\..\FatFS-master\source/ff.c **** 	DIR* dp			/* Reading direcotry object pointing top of the entry block to load */
2171:..\..\FatFS-master\source/ff.c **** )
2172:..\..\FatFS-master\source/ff.c **** {
2173:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
2174:..\..\FatFS-master\source/ff.c **** 	UINT i, sz_ent;
2175:..\..\FatFS-master\source/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the on-memory direcotry entry block 85+C0+C1s */
2176:..\..\FatFS-master\source/ff.c **** 
2177:..\..\FatFS-master\source/ff.c **** 
2178:..\..\FatFS-master\source/ff.c **** 	/* Load 85 entry */
2179:..\..\FatFS-master\source/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
2180:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) return res;
2181:..\..\FatFS-master\source/ff.c **** 	if (dp->dir[XDIR_Type] != 0x85) return FR_INT_ERR;	/* Invalid order */
2182:..\..\FatFS-master\source/ff.c **** 	mem_cpy(dirb + 0 * SZDIRE, dp->dir, SZDIRE);
2183:..\..\FatFS-master\source/ff.c **** 	sz_ent = (dirb[XDIR_NumSec] + 1) * SZDIRE;
2184:..\..\FatFS-master\source/ff.c **** 	if (sz_ent < 3 * SZDIRE || sz_ent > 19 * SZDIRE) return FR_INT_ERR;
2185:..\..\FatFS-master\source/ff.c **** 
2186:..\..\FatFS-master\source/ff.c **** 	/* Load C0 entry */
2187:..\..\FatFS-master\source/ff.c **** 	res = dir_next(dp, 0);
2188:..\..\FatFS-master\source/ff.c **** 	if (res == FR_NO_FILE) res = FR_INT_ERR;	/* It cannot be */
2189:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) return res;
2190:..\..\FatFS-master\source/ff.c **** 	res = move_window(dp->obj.fs, dp->sect);
2191:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) return res;
2192:..\..\FatFS-master\source/ff.c **** 	if (dp->dir[XDIR_Type] != 0xC0) return FR_INT_ERR;	/* Invalid order */
2193:..\..\FatFS-master\source/ff.c **** 	mem_cpy(dirb + 1 * SZDIRE, dp->dir, SZDIRE);
2194:..\..\FatFS-master\source/ff.c **** 	if (MAXDIRB(dirb[XDIR_NumName]) > sz_ent) return FR_INT_ERR;
2195:..\..\FatFS-master\source/ff.c **** 
2196:..\..\FatFS-master\source/ff.c **** 	/* Load C1 entries */
2197:..\..\FatFS-master\source/ff.c **** 	i = 2 * SZDIRE;	/* C1 offset to load */
2198:..\..\FatFS-master\source/ff.c **** 	do {
2199:..\..\FatFS-master\source/ff.c **** 		res = dir_next(dp, 0);
2200:..\..\FatFS-master\source/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;	/* It cannot be */
2201:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) return res;
2202:..\..\FatFS-master\source/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2203:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) return res;
2204:..\..\FatFS-master\source/ff.c **** 		if (dp->dir[XDIR_Type] != 0xC1) return FR_INT_ERR;	/* Invalid order */
2205:..\..\FatFS-master\source/ff.c **** 		if (i < MAXDIRB(FF_MAX_LFN)) mem_cpy(dirb + i, dp->dir, SZDIRE);
2206:..\..\FatFS-master\source/ff.c **** 	} while ((i += SZDIRE) < sz_ent);
2207:..\..\FatFS-master\source/ff.c **** 
2208:..\..\FatFS-master\source/ff.c **** 	/* Sanity check (do it for only accessible object) */
2209:..\..\FatFS-master\source/ff.c **** 	if (i <= MAXDIRB(FF_MAX_LFN)) {
2210:..\..\FatFS-master\source/ff.c **** 		if (xdir_sum(dirb) != ld_word(dirb + XDIR_SetSum)) return FR_INT_ERR;
2211:..\..\FatFS-master\source/ff.c **** 	}
2212:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 50


2213:..\..\FatFS-master\source/ff.c **** }
2214:..\..\FatFS-master\source/ff.c **** 
2215:..\..\FatFS-master\source/ff.c **** 
2216:..\..\FatFS-master\source/ff.c **** /*------------------------------------------------------------------*/
2217:..\..\FatFS-master\source/ff.c **** /* exFAT: Initialize object allocation info with loaded entry block */
2218:..\..\FatFS-master\source/ff.c **** /*------------------------------------------------------------------*/
2219:..\..\FatFS-master\source/ff.c **** 
2220:..\..\FatFS-master\source/ff.c **** static
2221:..\..\FatFS-master\source/ff.c **** void init_alloc_info (
2222:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,		/* Filesystem object */
2223:..\..\FatFS-master\source/ff.c **** 	FFOBJID* obj	/* Object allocation information to be initialized */
2224:..\..\FatFS-master\source/ff.c **** )
2225:..\..\FatFS-master\source/ff.c **** {
2226:..\..\FatFS-master\source/ff.c **** 	obj->sclust = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Start cluster */
2227:..\..\FatFS-master\source/ff.c **** 	obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);	/* Size */
2228:..\..\FatFS-master\source/ff.c **** 	obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;				/* Allocation status */
2229:..\..\FatFS-master\source/ff.c **** 	obj->n_frag = 0;										/* No last fragment info */
2230:..\..\FatFS-master\source/ff.c **** }
2231:..\..\FatFS-master\source/ff.c **** 
2232:..\..\FatFS-master\source/ff.c **** 
2233:..\..\FatFS-master\source/ff.c **** 
2234:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY || FF_FS_RPATH != 0
2235:..\..\FatFS-master\source/ff.c **** /*------------------------------------------------*/
2236:..\..\FatFS-master\source/ff.c **** /* exFAT: Load the object's directory entry block */
2237:..\..\FatFS-master\source/ff.c **** /*------------------------------------------------*/
2238:..\..\FatFS-master\source/ff.c **** static
2239:..\..\FatFS-master\source/ff.c **** FRESULT load_obj_xdir (	
2240:..\..\FatFS-master\source/ff.c **** 	DIR* dp,			/* Blank directory object to be used to access containing direcotry */
2241:..\..\FatFS-master\source/ff.c **** 	const FFOBJID* obj	/* Object with its containing directory information */
2242:..\..\FatFS-master\source/ff.c **** )
2243:..\..\FatFS-master\source/ff.c **** {
2244:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
2245:..\..\FatFS-master\source/ff.c **** 
2246:..\..\FatFS-master\source/ff.c **** 	/* Open object containing directory */
2247:..\..\FatFS-master\source/ff.c **** 	dp->obj.fs = obj->fs;
2248:..\..\FatFS-master\source/ff.c **** 	dp->obj.sclust = obj->c_scl;
2249:..\..\FatFS-master\source/ff.c **** 	dp->obj.stat = (BYTE)obj->c_size;
2250:..\..\FatFS-master\source/ff.c **** 	dp->obj.objsize = obj->c_size & 0xFFFFFF00;
2251:..\..\FatFS-master\source/ff.c **** 	dp->obj.n_frag = 0;
2252:..\..\FatFS-master\source/ff.c **** 	dp->blk_ofs = obj->c_ofs;
2253:..\..\FatFS-master\source/ff.c **** 
2254:..\..\FatFS-master\source/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);	/* Goto object's entry block */
2255:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
2256:..\..\FatFS-master\source/ff.c **** 		res = load_xdir(dp);		/* Load the object's entry block */
2257:..\..\FatFS-master\source/ff.c **** 	}
2258:..\..\FatFS-master\source/ff.c **** 	return res;
2259:..\..\FatFS-master\source/ff.c **** }
2260:..\..\FatFS-master\source/ff.c **** #endif
2261:..\..\FatFS-master\source/ff.c **** 
2262:..\..\FatFS-master\source/ff.c **** 
2263:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
2264:..\..\FatFS-master\source/ff.c **** /*----------------------------------------*/
2265:..\..\FatFS-master\source/ff.c **** /* exFAT: Store the directory entry block */
2266:..\..\FatFS-master\source/ff.c **** /*----------------------------------------*/
2267:..\..\FatFS-master\source/ff.c **** static
2268:..\..\FatFS-master\source/ff.c **** FRESULT store_xdir (
2269:..\..\FatFS-master\source/ff.c **** 	DIR* dp				/* Pointer to the direcotry object */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 51


2270:..\..\FatFS-master\source/ff.c **** )
2271:..\..\FatFS-master\source/ff.c **** {
2272:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
2273:..\..\FatFS-master\source/ff.c **** 	UINT nent;
2274:..\..\FatFS-master\source/ff.c **** 	BYTE* dirb = dp->obj.fs->dirbuf;	/* Pointer to the direcotry entry block 85+C0+C1s */
2275:..\..\FatFS-master\source/ff.c **** 
2276:..\..\FatFS-master\source/ff.c **** 	/* Create set sum */
2277:..\..\FatFS-master\source/ff.c **** 	st_word(dirb + XDIR_SetSum, xdir_sum(dirb));
2278:..\..\FatFS-master\source/ff.c **** 	nent = dirb[XDIR_NumSec] + 1;
2279:..\..\FatFS-master\source/ff.c **** 
2280:..\..\FatFS-master\source/ff.c **** 	/* Store the direcotry entry block to the directory */
2281:..\..\FatFS-master\source/ff.c **** 	res = dir_sdi(dp, dp->blk_ofs);
2282:..\..\FatFS-master\source/ff.c **** 	while (res == FR_OK) {
2283:..\..\FatFS-master\source/ff.c **** 		res = move_window(dp->obj.fs, dp->sect);
2284:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) break;
2285:..\..\FatFS-master\source/ff.c **** 		mem_cpy(dp->dir, dirb, SZDIRE);
2286:..\..\FatFS-master\source/ff.c **** 		dp->obj.fs->wflag = 1;
2287:..\..\FatFS-master\source/ff.c **** 		if (--nent == 0) break;
2288:..\..\FatFS-master\source/ff.c **** 		dirb += SZDIRE;
2289:..\..\FatFS-master\source/ff.c **** 		res = dir_next(dp, 0);
2290:..\..\FatFS-master\source/ff.c **** 	}
2291:..\..\FatFS-master\source/ff.c **** 	return (res == FR_OK || res == FR_DISK_ERR) ? res : FR_INT_ERR;
2292:..\..\FatFS-master\source/ff.c **** }
2293:..\..\FatFS-master\source/ff.c **** 
2294:..\..\FatFS-master\source/ff.c **** 
2295:..\..\FatFS-master\source/ff.c **** 
2296:..\..\FatFS-master\source/ff.c **** /*-------------------------------------------*/
2297:..\..\FatFS-master\source/ff.c **** /* exFAT: Create a new directory enrty block */
2298:..\..\FatFS-master\source/ff.c **** /*-------------------------------------------*/
2299:..\..\FatFS-master\source/ff.c **** 
2300:..\..\FatFS-master\source/ff.c **** static
2301:..\..\FatFS-master\source/ff.c **** void create_xdir (
2302:..\..\FatFS-master\source/ff.c **** 	BYTE* dirb,			/* Pointer to the direcotry entry block buffer */
2303:..\..\FatFS-master\source/ff.c **** 	const WCHAR* lfn	/* Pointer to the object name */
2304:..\..\FatFS-master\source/ff.c **** )
2305:..\..\FatFS-master\source/ff.c **** {
2306:..\..\FatFS-master\source/ff.c **** 	UINT i;
2307:..\..\FatFS-master\source/ff.c **** 	BYTE nc1, nlen;
2308:..\..\FatFS-master\source/ff.c **** 	WCHAR wc;
2309:..\..\FatFS-master\source/ff.c **** 
2310:..\..\FatFS-master\source/ff.c **** 
2311:..\..\FatFS-master\source/ff.c **** 	/* Create 85,C0 entry */
2312:..\..\FatFS-master\source/ff.c **** 	mem_set(dirb, 0, 2 * SZDIRE);
2313:..\..\FatFS-master\source/ff.c **** 	dirb[0 * SZDIRE + XDIR_Type] = 0x85;	/* 85 entry */
2314:..\..\FatFS-master\source/ff.c **** 	dirb[1 * SZDIRE + XDIR_Type] = 0xC0;	/* C0 entry */
2315:..\..\FatFS-master\source/ff.c **** 
2316:..\..\FatFS-master\source/ff.c **** 	/* Create C1 entries */
2317:..\..\FatFS-master\source/ff.c **** 	i = SZDIRE * 2;	/* Top of C1 entries */
2318:..\..\FatFS-master\source/ff.c **** 	nlen = nc1 = 0; wc = 1;
2319:..\..\FatFS-master\source/ff.c **** 	do {
2320:..\..\FatFS-master\source/ff.c **** 		dirb[i++] = 0xC1; dirb[i++] = 0;	/* Entry type C1 */
2321:..\..\FatFS-master\source/ff.c **** 		do {	/* Fill name field */
2322:..\..\FatFS-master\source/ff.c **** 			if (wc != 0 && (wc = lfn[nlen]) != 0) nlen++;	/* Get a character if exist */
2323:..\..\FatFS-master\source/ff.c **** 			st_word(dirb + i, wc); 		/* Store it */
2324:..\..\FatFS-master\source/ff.c **** 			i += 2;
2325:..\..\FatFS-master\source/ff.c **** 		} while (i % SZDIRE != 0);
2326:..\..\FatFS-master\source/ff.c **** 		nc1++;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 52


2327:..\..\FatFS-master\source/ff.c **** 	} while (lfn[nlen]);	/* Fill next entry if any char follows */
2328:..\..\FatFS-master\source/ff.c **** 
2329:..\..\FatFS-master\source/ff.c **** 	dirb[XDIR_NumName] = nlen;		/* Set name length */
2330:..\..\FatFS-master\source/ff.c **** 	dirb[XDIR_NumSec] = 1 + nc1;	/* Set secondary count (C0 + C1s) */
2331:..\..\FatFS-master\source/ff.c **** 	st_word(dirb + XDIR_NameHash, xname_sum(lfn));	/* Set name hash */
2332:..\..\FatFS-master\source/ff.c **** }
2333:..\..\FatFS-master\source/ff.c **** 
2334:..\..\FatFS-master\source/ff.c **** #endif	/* !FF_FS_READONLY */
2335:..\..\FatFS-master\source/ff.c **** #endif	/* FF_FS_EXFAT */
2336:..\..\FatFS-master\source/ff.c **** 
2337:..\..\FatFS-master\source/ff.c **** 
2338:..\..\FatFS-master\source/ff.c **** 
2339:..\..\FatFS-master\source/ff.c **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 || FF_USE_LABEL || FF_FS_EXFAT
2340:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2341:..\..\FatFS-master\source/ff.c **** /* Read an object from the directory                                     */
2342:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2343:..\..\FatFS-master\source/ff.c **** 
2344:..\..\FatFS-master\source/ff.c **** #define dir_read_file(dp) dir_read(dp, 0)
2345:..\..\FatFS-master\source/ff.c **** #define dir_read_label(dp) dir_read(dp, 1)
2346:..\..\FatFS-master\source/ff.c **** 
2347:..\..\FatFS-master\source/ff.c **** static
2348:..\..\FatFS-master\source/ff.c **** FRESULT dir_read (
2349:..\..\FatFS-master\source/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2350:..\..\FatFS-master\source/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
2351:..\..\FatFS-master\source/ff.c **** )
2352:..\..\FatFS-master\source/ff.c **** {
2353:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_NO_FILE;
2354:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2355:..\..\FatFS-master\source/ff.c **** 	BYTE a, c;
2356:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
2357:..\..\FatFS-master\source/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
2358:..\..\FatFS-master\source/ff.c **** #endif
2359:..\..\FatFS-master\source/ff.c **** 
2360:..\..\FatFS-master\source/ff.c **** 	while (dp->sect) {
2361:..\..\FatFS-master\source/ff.c **** 		res = move_window(fs, dp->sect);
2362:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) break;
2363:..\..\FatFS-master\source/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
2364:..\..\FatFS-master\source/ff.c **** 		if (c == 0) {
2365:..\..\FatFS-master\source/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
2366:..\..\FatFS-master\source/ff.c **** 		}
2367:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
2368:..\..\FatFS-master\source/ff.c **** 		if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2369:..\..\FatFS-master\source/ff.c **** 			if (FF_USE_LABEL && vol) {
2370:..\..\FatFS-master\source/ff.c **** 				if (c == 0x83) break;	/* Volume label entry? */
2371:..\..\FatFS-master\source/ff.c **** 			} else {
2372:..\..\FatFS-master\source/ff.c **** 				if (c == 0x85) {		/* Start of the file entry block? */
2373:..\..\FatFS-master\source/ff.c **** 					dp->blk_ofs = dp->dptr;	/* Get location of the block */
2374:..\..\FatFS-master\source/ff.c **** 					res = load_xdir(dp);	/* Load the entry block */
2375:..\..\FatFS-master\source/ff.c **** 					if (res == FR_OK) {
2376:..\..\FatFS-master\source/ff.c **** 						dp->obj.attr = fs->dirbuf[XDIR_Attr] & AM_MASK;	/* Get attribute */
2377:..\..\FatFS-master\source/ff.c **** 					}
2378:..\..\FatFS-master\source/ff.c **** 					break;
2379:..\..\FatFS-master\source/ff.c **** 				}
2380:..\..\FatFS-master\source/ff.c **** 			}
2381:..\..\FatFS-master\source/ff.c **** 		} else
2382:..\..\FatFS-master\source/ff.c **** #endif
2383:..\..\FatFS-master\source/ff.c **** 		{	/* On the FAT/FAT32 volume */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 53


2384:..\..\FatFS-master\source/ff.c **** 			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
2385:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2386:..\..\FatFS-master\source/ff.c **** 			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid 
2387:..\..\FatFS-master\source/ff.c **** 				ord = 0xFF;
2388:..\..\FatFS-master\source/ff.c **** 			} else {
2389:..\..\FatFS-master\source/ff.c **** 				if (a == AM_LFN) {			/* An LFN entry is found */
2390:..\..\FatFS-master\source/ff.c **** 					if (c & LLEF) {			/* Is it start of an LFN sequence? */
2391:..\..\FatFS-master\source/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2392:..\..\FatFS-master\source/ff.c **** 						c &= (BYTE)~LLEF; ord = c;
2393:..\..\FatFS-master\source/ff.c **** 						dp->blk_ofs = dp->dptr;
2394:..\..\FatFS-master\source/ff.c **** 					}
2395:..\..\FatFS-master\source/ff.c **** 					/* Check LFN validity and capture it */
2396:..\..\FatFS-master\source/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0
2397:..\..\FatFS-master\source/ff.c **** 				} else {					/* An SFN entry is found */
2398:..\..\FatFS-master\source/ff.c **** 					if (ord != 0 || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
2399:..\..\FatFS-master\source/ff.c **** 						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
2400:..\..\FatFS-master\source/ff.c **** 					}
2401:..\..\FatFS-master\source/ff.c **** 					break;
2402:..\..\FatFS-master\source/ff.c **** 				}
2403:..\..\FatFS-master\source/ff.c **** 			}
2404:..\..\FatFS-master\source/ff.c **** #else		/* Non LFN configuration */
2405:..\..\FatFS-master\source/ff.c **** 			if (c != DDEM && c != '.' && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a 
2406:..\..\FatFS-master\source/ff.c **** 				break;
2407:..\..\FatFS-master\source/ff.c **** 			}
2408:..\..\FatFS-master\source/ff.c **** #endif
2409:..\..\FatFS-master\source/ff.c **** 		}
2410:..\..\FatFS-master\source/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
2411:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) break;
2412:..\..\FatFS-master\source/ff.c **** 	}
2413:..\..\FatFS-master\source/ff.c **** 
2414:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
2415:..\..\FatFS-master\source/ff.c **** 	return res;
2416:..\..\FatFS-master\source/ff.c **** }
2417:..\..\FatFS-master\source/ff.c **** 
2418:..\..\FatFS-master\source/ff.c **** #endif	/* FF_FS_MINIMIZE <= 1 || FF_USE_LABEL || FF_FS_RPATH >= 2 */
2419:..\..\FatFS-master\source/ff.c **** 
2420:..\..\FatFS-master\source/ff.c **** 
2421:..\..\FatFS-master\source/ff.c **** 
2422:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2423:..\..\FatFS-master\source/ff.c **** /* Directory handling - Find an object in the directory                  */
2424:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2425:..\..\FatFS-master\source/ff.c **** 
2426:..\..\FatFS-master\source/ff.c **** static
2427:..\..\FatFS-master\source/ff.c **** FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
2428:..\..\FatFS-master\source/ff.c **** 	DIR* dp			/* Pointer to the directory object with the file name */
2429:..\..\FatFS-master\source/ff.c **** )
2430:..\..\FatFS-master\source/ff.c **** {
2431:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
2432:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2433:..\..\FatFS-master\source/ff.c **** 	BYTE c;
2434:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
2435:..\..\FatFS-master\source/ff.c **** 	BYTE a, ord, sum;
2436:..\..\FatFS-master\source/ff.c **** #endif
2437:..\..\FatFS-master\source/ff.c **** 
2438:..\..\FatFS-master\source/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
2439:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) return res;
2440:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 54


2441:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2442:..\..\FatFS-master\source/ff.c **** 		BYTE nc;
2443:..\..\FatFS-master\source/ff.c **** 		UINT di, ni;
2444:..\..\FatFS-master\source/ff.c **** 		WORD hash = xname_sum(fs->lfnbuf);		/* Hash value of the name to find */
2445:..\..\FatFS-master\source/ff.c **** 
2446:..\..\FatFS-master\source/ff.c **** 		while ((res = dir_read_file(dp)) == FR_OK) {	/* Read an item */
2447:..\..\FatFS-master\source/ff.c **** #if FF_MAX_LFN < 255
2448:..\..\FatFS-master\source/ff.c **** 			if (fs->dirbuf[XDIR_NumName] > FF_MAX_LFN) continue;			/* Skip comparison if inaccessible object
2449:..\..\FatFS-master\source/ff.c **** #endif
2450:..\..\FatFS-master\source/ff.c **** 			if (ld_word(fs->dirbuf + XDIR_NameHash) != hash) continue;	/* Skip comparison if hash mismatched
2451:..\..\FatFS-master\source/ff.c **** 			for (nc = fs->dirbuf[XDIR_NumName], di = SZDIRE * 2, ni = 0; nc; nc--, di += 2, ni++) {	/* Compa
2452:..\..\FatFS-master\source/ff.c **** 				if ((di % SZDIRE) == 0) di += 2;
2453:..\..\FatFS-master\source/ff.c **** 				if (ff_wtoupper(ld_word(fs->dirbuf + di)) != ff_wtoupper(fs->lfnbuf[ni])) break;
2454:..\..\FatFS-master\source/ff.c **** 			}
2455:..\..\FatFS-master\source/ff.c **** 			if (nc == 0 && !fs->lfnbuf[ni]) break;	/* Name matched? */
2456:..\..\FatFS-master\source/ff.c **** 		}
2457:..\..\FatFS-master\source/ff.c **** 		return res;
2458:..\..\FatFS-master\source/ff.c **** 	}
2459:..\..\FatFS-master\source/ff.c **** #endif
2460:..\..\FatFS-master\source/ff.c **** 	/* On the FAT/FAT32 volume */
2461:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
2462:..\..\FatFS-master\source/ff.c **** 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2463:..\..\FatFS-master\source/ff.c **** #endif
2464:..\..\FatFS-master\source/ff.c **** 	do {
2465:..\..\FatFS-master\source/ff.c **** 		res = move_window(fs, dp->sect);
2466:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) break;
2467:..\..\FatFS-master\source/ff.c **** 		c = dp->dir[DIR_Name];
2468:..\..\FatFS-master\source/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
2469:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2470:..\..\FatFS-master\source/ff.c **** 		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
2471:..\..\FatFS-master\source/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
2472:..\..\FatFS-master\source/ff.c **** 			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2473:..\..\FatFS-master\source/ff.c **** 		} else {
2474:..\..\FatFS-master\source/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
2475:..\..\FatFS-master\source/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
2476:..\..\FatFS-master\source/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
2477:..\..\FatFS-master\source/ff.c **** 						sum = dp->dir[LDIR_Chksum];
2478:..\..\FatFS-master\source/ff.c **** 						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
2479:..\..\FatFS-master\source/ff.c **** 						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
2480:..\..\FatFS-master\source/ff.c **** 					}
2481:..\..\FatFS-master\source/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
2482:..\..\FatFS-master\source/ff.c **** 					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0x
2483:..\..\FatFS-master\source/ff.c **** 				}
2484:..\..\FatFS-master\source/ff.c **** 			} else {					/* An SFN entry is found */
2485:..\..\FatFS-master\source/ff.c **** 				if (ord == 0 && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
2486:..\..\FatFS-master\source/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
2487:..\..\FatFS-master\source/ff.c **** 				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
2488:..\..\FatFS-master\source/ff.c **** 			}
2489:..\..\FatFS-master\source/ff.c **** 		}
2490:..\..\FatFS-master\source/ff.c **** #else		/* Non LFN configuration */
2491:..\..\FatFS-master\source/ff.c **** 		dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
2492:..\..\FatFS-master\source/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
2493:..\..\FatFS-master\source/ff.c **** #endif
2494:..\..\FatFS-master\source/ff.c **** 		res = dir_next(dp, 0);	/* Next entry */
2495:..\..\FatFS-master\source/ff.c **** 	} while (res == FR_OK);
2496:..\..\FatFS-master\source/ff.c **** 
2497:..\..\FatFS-master\source/ff.c **** 	return res;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 55


2498:..\..\FatFS-master\source/ff.c **** }
2499:..\..\FatFS-master\source/ff.c **** 
2500:..\..\FatFS-master\source/ff.c **** 
2501:..\..\FatFS-master\source/ff.c **** 
2502:..\..\FatFS-master\source/ff.c **** 
2503:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
2504:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2505:..\..\FatFS-master\source/ff.c **** /* Register an object to the directory                                   */
2506:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2507:..\..\FatFS-master\source/ff.c **** 
2508:..\..\FatFS-master\source/ff.c **** static
2509:..\..\FatFS-master\source/ff.c **** FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DI
2510:..\..\FatFS-master\source/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
2511:..\..\FatFS-master\source/ff.c **** )
2512:..\..\FatFS-master\source/ff.c **** {
2513:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
2514:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2515:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2516:..\..\FatFS-master\source/ff.c **** 	UINT n, nlen, nent;
2517:..\..\FatFS-master\source/ff.c **** 	BYTE sn[12], sum;
2518:..\..\FatFS-master\source/ff.c **** 
2519:..\..\FatFS-master\source/ff.c **** 
2520:..\..\FatFS-master\source/ff.c **** 	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
2521:..\..\FatFS-master\source/ff.c **** 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
2522:..\..\FatFS-master\source/ff.c **** 
2523:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
2524:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2525:..\..\FatFS-master\source/ff.c **** 		nent = (nlen + 14) / 15 + 2;	/* Number of entries to allocate (85+C0+C1s) */
2526:..\..\FatFS-master\source/ff.c **** 		res = dir_alloc(dp, nent);		/* Allocate entries */
2527:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) return res;
2528:..\..\FatFS-master\source/ff.c **** 		dp->blk_ofs = dp->dptr - SZDIRE * (nent - 1);	/* Set the allocated entry block offset */
2529:..\..\FatFS-master\source/ff.c **** 
2530:..\..\FatFS-master\source/ff.c **** 		if (dp->obj.stat & 4) {			/* Has the directory been stretched? */
2531:..\..\FatFS-master\source/ff.c **** 			dp->obj.stat &= ~4;
2532:..\..\FatFS-master\source/ff.c **** 			res = fill_first_frag(&dp->obj);	/* Fill the first fragment on the FAT if needed */
2533:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) return res;
2534:..\..\FatFS-master\source/ff.c **** 			res = fill_last_frag(&dp->obj, dp->clust, 0xFFFFFFFF);	/* Fill the last fragment on the FAT if n
2535:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) return res;
2536:..\..\FatFS-master\source/ff.c **** 			if (dp->obj.sclust != 0) {		/* Is it a sub directory? */
2537:..\..\FatFS-master\source/ff.c **** 				DIR dj;
2538:..\..\FatFS-master\source/ff.c **** 
2539:..\..\FatFS-master\source/ff.c **** 				res = load_obj_xdir(&dj, &dp->obj);	/* Load the object status */
2540:..\..\FatFS-master\source/ff.c **** 				if (res != FR_OK) return res;
2541:..\..\FatFS-master\source/ff.c **** 				dp->obj.objsize += (DWORD)fs->csize * SS(fs);			/* Increase the directory size by cluster size 
2542:..\..\FatFS-master\source/ff.c **** 				st_qword(fs->dirbuf + XDIR_FileSize, dp->obj.objsize);	/* Update the allocation status */
2543:..\..\FatFS-master\source/ff.c **** 				st_qword(fs->dirbuf + XDIR_ValidFileSize, dp->obj.objsize);
2544:..\..\FatFS-master\source/ff.c **** 				fs->dirbuf[XDIR_GenFlags] = dp->obj.stat | 1;
2545:..\..\FatFS-master\source/ff.c **** 				res = store_xdir(&dj);				/* Store the object status */
2546:..\..\FatFS-master\source/ff.c **** 				if (res != FR_OK) return res;
2547:..\..\FatFS-master\source/ff.c **** 			}
2548:..\..\FatFS-master\source/ff.c **** 		}
2549:..\..\FatFS-master\source/ff.c **** 
2550:..\..\FatFS-master\source/ff.c **** 		create_xdir(fs->dirbuf, fs->lfnbuf);	/* Create on-memory directory block to be written later */
2551:..\..\FatFS-master\source/ff.c **** 		return FR_OK;
2552:..\..\FatFS-master\source/ff.c **** 	}
2553:..\..\FatFS-master\source/ff.c **** #endif
2554:..\..\FatFS-master\source/ff.c **** 	/* On the FAT/FAT32 volume */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 56


2555:..\..\FatFS-master\source/ff.c **** 	mem_cpy(sn, dp->fn, 12);
2556:..\..\FatFS-master\source/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
2557:..\..\FatFS-master\source/ff.c **** 		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
2558:..\..\FatFS-master\source/ff.c **** 		for (n = 1; n < 100; n++) {
2559:..\..\FatFS-master\source/ff.c **** 			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
2560:..\..\FatFS-master\source/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
2561:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
2562:..\..\FatFS-master\source/ff.c **** 		}
2563:..\..\FatFS-master\source/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
2564:..\..\FatFS-master\source/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
2565:..\..\FatFS-master\source/ff.c **** 		dp->fn[NSFLAG] = sn[NSFLAG];
2566:..\..\FatFS-master\source/ff.c **** 	}
2567:..\..\FatFS-master\source/ff.c **** 
2568:..\..\FatFS-master\source/ff.c **** 	/* Create an SFN with/without LFNs. */
2569:..\..\FatFS-master\source/ff.c **** 	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
2570:..\..\FatFS-master\source/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
2571:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
2572:..\..\FatFS-master\source/ff.c **** 		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
2573:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
2574:..\..\FatFS-master\source/ff.c **** 			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
2575:..\..\FatFS-master\source/ff.c **** 			do {					/* Store LFN entries in bottom first */
2576:..\..\FatFS-master\source/ff.c **** 				res = move_window(fs, dp->sect);
2577:..\..\FatFS-master\source/ff.c **** 				if (res != FR_OK) break;
2578:..\..\FatFS-master\source/ff.c **** 				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
2579:..\..\FatFS-master\source/ff.c **** 				fs->wflag = 1;
2580:..\..\FatFS-master\source/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
2581:..\..\FatFS-master\source/ff.c **** 			} while (res == FR_OK && --nent);
2582:..\..\FatFS-master\source/ff.c **** 		}
2583:..\..\FatFS-master\source/ff.c **** 	}
2584:..\..\FatFS-master\source/ff.c **** 
2585:..\..\FatFS-master\source/ff.c **** #else	/* Non LFN configuration */
2586:..\..\FatFS-master\source/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
2587:..\..\FatFS-master\source/ff.c **** 
2588:..\..\FatFS-master\source/ff.c **** #endif
2589:..\..\FatFS-master\source/ff.c **** 
2590:..\..\FatFS-master\source/ff.c **** 	/* Set SFN entry */
2591:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
2592:..\..\FatFS-master\source/ff.c **** 		res = move_window(fs, dp->sect);
2593:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
2594:..\..\FatFS-master\source/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
2595:..\..\FatFS-master\source/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
2596:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
2597:..\..\FatFS-master\source/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
2598:..\..\FatFS-master\source/ff.c **** #endif
2599:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
2600:..\..\FatFS-master\source/ff.c **** 		}
2601:..\..\FatFS-master\source/ff.c **** 	}
2602:..\..\FatFS-master\source/ff.c **** 
2603:..\..\FatFS-master\source/ff.c **** 	return res;
2604:..\..\FatFS-master\source/ff.c **** }
2605:..\..\FatFS-master\source/ff.c **** 
2606:..\..\FatFS-master\source/ff.c **** #endif /* !FF_FS_READONLY */
2607:..\..\FatFS-master\source/ff.c **** 
2608:..\..\FatFS-master\source/ff.c **** 
2609:..\..\FatFS-master\source/ff.c **** 
2610:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY && FF_FS_MINIMIZE == 0
2611:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 57


2612:..\..\FatFS-master\source/ff.c **** /* Remove an object from the directory                                   */
2613:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2614:..\..\FatFS-master\source/ff.c **** 
2615:..\..\FatFS-master\source/ff.c **** static
2616:..\..\FatFS-master\source/ff.c **** FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
2617:..\..\FatFS-master\source/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
2618:..\..\FatFS-master\source/ff.c **** )
2619:..\..\FatFS-master\source/ff.c **** {
2620:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
2621:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2622:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2623:..\..\FatFS-master\source/ff.c **** 	DWORD last = dp->dptr;
2624:..\..\FatFS-master\source/ff.c **** 
2625:..\..\FatFS-master\source/ff.c **** 	res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);	/* Goto top of the entry blo
2626:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
2627:..\..\FatFS-master\source/ff.c **** 		do {
2628:..\..\FatFS-master\source/ff.c **** 			res = move_window(fs, dp->sect);
2629:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
2630:..\..\FatFS-master\source/ff.c **** 			if (FF_FS_EXFAT && fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2631:..\..\FatFS-master\source/ff.c **** 				dp->dir[XDIR_Type] &= 0x7F;	/* Clear the entry InUse flag. */
2632:..\..\FatFS-master\source/ff.c **** 			} else {									/* On the FAT/FAT32 volume */
2633:..\..\FatFS-master\source/ff.c **** 				dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'. */
2634:..\..\FatFS-master\source/ff.c **** 			}
2635:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
2636:..\..\FatFS-master\source/ff.c **** 			if (dp->dptr >= last) break;	/* If reached last entry then all entries of the object has been de
2637:..\..\FatFS-master\source/ff.c **** 			res = dir_next(dp, 0);	/* Next entry */
2638:..\..\FatFS-master\source/ff.c **** 		} while (res == FR_OK);
2639:..\..\FatFS-master\source/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
2640:..\..\FatFS-master\source/ff.c **** 	}
2641:..\..\FatFS-master\source/ff.c **** #else			/* Non LFN configuration */
2642:..\..\FatFS-master\source/ff.c **** 
2643:..\..\FatFS-master\source/ff.c **** 	res = move_window(fs, dp->sect);
2644:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
2645:..\..\FatFS-master\source/ff.c **** 		dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'.*/
2646:..\..\FatFS-master\source/ff.c **** 		fs->wflag = 1;
2647:..\..\FatFS-master\source/ff.c **** 	}
2648:..\..\FatFS-master\source/ff.c **** #endif
2649:..\..\FatFS-master\source/ff.c **** 
2650:..\..\FatFS-master\source/ff.c **** 	return res;
2651:..\..\FatFS-master\source/ff.c **** }
2652:..\..\FatFS-master\source/ff.c **** 
2653:..\..\FatFS-master\source/ff.c **** #endif /* !FF_FS_READONLY && FF_FS_MINIMIZE == 0 */
2654:..\..\FatFS-master\source/ff.c **** 
2655:..\..\FatFS-master\source/ff.c **** 
2656:..\..\FatFS-master\source/ff.c **** 
2657:..\..\FatFS-master\source/ff.c **** #if FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2
2658:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2659:..\..\FatFS-master\source/ff.c **** /* Get file information from directory entry                             */
2660:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2661:..\..\FatFS-master\source/ff.c **** 
2662:..\..\FatFS-master\source/ff.c **** static
2663:..\..\FatFS-master\source/ff.c **** void get_fileinfo (
2664:..\..\FatFS-master\source/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
2665:..\..\FatFS-master\source/ff.c **** 	FILINFO* fno	/* Pointer to the file information to be filled */
2666:..\..\FatFS-master\source/ff.c **** )
2667:..\..\FatFS-master\source/ff.c **** {
 573              		.loc 1 2667 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 58


 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              	.LVL84:
 578 0000 70B5     		push	{r4, r5, r6, lr}
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 4, -16
 581              		.cfi_offset 5, -12
 582              		.cfi_offset 6, -8
 583              		.cfi_offset 14, -4
 584 0002 0400     		movs	r4, r0
 585 0004 0D00     		movs	r5, r1
2668:..\..\FatFS-master\source/ff.c **** 	UINT si, di;
2669:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
2670:..\..\FatFS-master\source/ff.c **** 	WCHAR wc, hs;
2671:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
2672:..\..\FatFS-master\source/ff.c **** #else
2673:..\..\FatFS-master\source/ff.c **** 	TCHAR c;
2674:..\..\FatFS-master\source/ff.c **** #endif
2675:..\..\FatFS-master\source/ff.c **** 
2676:..\..\FatFS-master\source/ff.c **** 
2677:..\..\FatFS-master\source/ff.c **** 	fno->fname[0] = 0;			/* Invaidate file info */
 586              		.loc 1 2677 0
 587 0006 0023     		movs	r3, #0
 588 0008 4B72     		strb	r3, [r1, #9]
2678:..\..\FatFS-master\source/ff.c **** 	if (dp->sect == 0) return;	/* Exit if read pointer has reached end of directory */
 589              		.loc 1 2678 0
 590 000a 8369     		ldr	r3, [r0, #24]
 591 000c 002B     		cmp	r3, #0
 592 000e 2BD0     		beq	.L37
 593 0010 0021     		movs	r1, #0
 594              	.LVL85:
 595 0012 0023     		movs	r3, #0
 596 0014 11E0     		b	.L39
 597              	.LVL86:
 598              	.L43:
2679:..\..\FatFS-master\source/ff.c **** 
2680:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2681:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
2682:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type == FS_EXFAT) {	/* On the exFAT volume */
2683:..\..\FatFS-master\source/ff.c **** 		get_xfileinfo(fs->dirbuf, fno);
2684:..\..\FatFS-master\source/ff.c **** 		return;
2685:..\..\FatFS-master\source/ff.c **** 	} else
2686:..\..\FatFS-master\source/ff.c **** #endif
2687:..\..\FatFS-master\source/ff.c **** 	{	/* On the FAT/FAT32 volume */
2688:..\..\FatFS-master\source/ff.c **** 		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
2689:..\..\FatFS-master\source/ff.c **** 			si = di = hs = 0;
2690:..\..\FatFS-master\source/ff.c **** 			while (fs->lfnbuf[si] != 0) {
2691:..\..\FatFS-master\source/ff.c **** 				wc = fs->lfnbuf[si++];		/* Get an LFN character (UTF-16) */
2692:..\..\FatFS-master\source/ff.c **** 				if (hs == 0 && IsSurrogate(wc)) {	/* Is it a surrogate? */
2693:..\..\FatFS-master\source/ff.c **** 					hs = wc; continue;		/* Get low surrogate */
2694:..\..\FatFS-master\source/ff.c **** 				}
2695:..\..\FatFS-master\source/ff.c **** 				wc = put_utf((DWORD)hs << 16 | wc, &fno->fname[di], FF_LFN_BUF - di);	/* Store it in UTF-16 or 
2696:..\..\FatFS-master\source/ff.c **** 				if (wc == 0) { di = 0; break; }	/* Invalid char or buffer overflow? */
2697:..\..\FatFS-master\source/ff.c **** 				di += wc;
2698:..\..\FatFS-master\source/ff.c **** 				hs = 0;
2699:..\..\FatFS-master\source/ff.c **** 			}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 59


2700:..\..\FatFS-master\source/ff.c **** 			if (hs != 0) di = 0;	/* Broken surrogate pair? */
2701:..\..\FatFS-master\source/ff.c **** 			fno->fname[di] = 0;		/* Terminate the LFN (null string means LFN is invalid) */
2702:..\..\FatFS-master\source/ff.c **** 		}
2703:..\..\FatFS-master\source/ff.c **** 	}
2704:..\..\FatFS-master\source/ff.c **** 
2705:..\..\FatFS-master\source/ff.c **** 	si = di = 0;
2706:..\..\FatFS-master\source/ff.c **** 	while (si < 11) {		/* Get SFN from SFN entry */
2707:..\..\FatFS-master\source/ff.c **** 		wc = dp->dir[si++];			/* Get a char */
2708:..\..\FatFS-master\source/ff.c **** 		if (wc == ' ') continue;	/* Skip padding spaces */
2709:..\..\FatFS-master\source/ff.c **** 		if (wc == RDDEM) wc = DDEM;	/* Restore replaced DDEM character */
2710:..\..\FatFS-master\source/ff.c **** 		if (si == 9 && di < FF_SFN_BUF) fno->altname[di++] = '.';	/* Insert a . if extension is exist */
2711:..\..\FatFS-master\source/ff.c **** #if FF_LFN_UNICODE >= 1	/* Unicode output */
2712:..\..\FatFS-master\source/ff.c **** 		if (dbc_1st((BYTE)wc) && si != 8 && si != 11 && dbc_2nd(dp->dir[si])) {	/* Make a DBC if needed *
2713:..\..\FatFS-master\source/ff.c **** 			wc = wc << 8 | dp->dir[si++];
2714:..\..\FatFS-master\source/ff.c **** 		}
2715:..\..\FatFS-master\source/ff.c **** 		wc = ff_oem2uni(wc, CODEPAGE);		/* ANSI/OEM -> Unicode */
2716:..\..\FatFS-master\source/ff.c **** 		if (wc == 0) { di = 0; break; }		/* Wrong char in the current code page? */
2717:..\..\FatFS-master\source/ff.c **** 		wc = put_utf(wc, &fno->altname[di], FF_SFN_BUF - di);	/* Store it in UTF-16 or UTF-8 */
2718:..\..\FatFS-master\source/ff.c **** 		if (wc == 0) { di = 0; break; }		/* Buffer overflow? */
2719:..\..\FatFS-master\source/ff.c **** 		di += wc;
2720:..\..\FatFS-master\source/ff.c **** #else					/* ANSI/OEM output */
2721:..\..\FatFS-master\source/ff.c **** 		fno->altname[di++] = (TCHAR)wc;	/* Store it without any conversion */
2722:..\..\FatFS-master\source/ff.c **** #endif
2723:..\..\FatFS-master\source/ff.c **** 	}
2724:..\..\FatFS-master\source/ff.c **** 	fno->altname[di] = 0;	/* Terminate the SFN  (null string means SFN is invalid) */
2725:..\..\FatFS-master\source/ff.c **** 
2726:..\..\FatFS-master\source/ff.c **** 	if (fno->fname[0] == 0) {	/* If LFN is invalid, altname[] needs to be copied to fname[] */
2727:..\..\FatFS-master\source/ff.c **** 		if (di == 0) {	/* If LFN and SFN both are invalid, this object is inaccesible */
2728:..\..\FatFS-master\source/ff.c **** 			fno->fname[di++] = '?';
2729:..\..\FatFS-master\source/ff.c **** 		} else {
2730:..\..\FatFS-master\source/ff.c **** 			for (si = di = 0; fno->altname[si]; si++, di++) {	/* Copy altname[] to fname[] with case informa
2731:..\..\FatFS-master\source/ff.c **** 				wc = (WCHAR)fno->altname[si];
2732:..\..\FatFS-master\source/ff.c **** 				if (IsUpper(wc) && (dp->dir[DIR_NTres] & ((si >= 9) ? NS_EXT : NS_BODY))) wc += 0x20;
2733:..\..\FatFS-master\source/ff.c **** 				fno->fname[di] = (TCHAR)wc;
2734:..\..\FatFS-master\source/ff.c **** 			}
2735:..\..\FatFS-master\source/ff.c **** 		}
2736:..\..\FatFS-master\source/ff.c **** 		fno->fname[di] = 0;	/* Terminate the LFN */
2737:..\..\FatFS-master\source/ff.c **** 		if (!dp->dir[DIR_NTres]) fno->altname[0] = 0;	/* Altname is not needed if neither LFN nor case in
2738:..\..\FatFS-master\source/ff.c **** 	}
2739:..\..\FatFS-master\source/ff.c **** 
2740:..\..\FatFS-master\source/ff.c **** #else	/* Non-LFN configuration */
2741:..\..\FatFS-master\source/ff.c **** 	si = di = 0;
2742:..\..\FatFS-master\source/ff.c **** 	while (si < 11) {		/* Copy name body and extension */
2743:..\..\FatFS-master\source/ff.c **** 		c = (TCHAR)dp->dir[si++];
 599              		.loc 1 2743 0
 600 0016 5A1C     		adds	r2, r3, #1
 601              	.LVL87:
 602 0018 E069     		ldr	r0, [r4, #28]
 603 001a C35C     		ldrb	r3, [r0, r3]
 604              	.LVL88:
2744:..\..\FatFS-master\source/ff.c **** 		if (c == ' ') continue;		/* Skip padding spaces */
 605              		.loc 1 2744 0
 606 001c 202B     		cmp	r3, #32
 607 001e 0BD0     		beq	.L40
2745:..\..\FatFS-master\source/ff.c **** 		if (c == RDDEM) c = DDEM;	/* Restore replaced DDEM character */
 608              		.loc 1 2745 0
 609 0020 052B     		cmp	r3, #5
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 60


 610 0022 00D1     		bne	.L41
 611 0024 E033     		adds	r3, r3, #224
 612              	.LVL89:
 613              	.L41:
2746:..\..\FatFS-master\source/ff.c **** 		if (si == 9) fno->fname[di++] = '.';/* Insert a . if extension is exist */
 614              		.loc 1 2746 0
 615 0026 092A     		cmp	r2, #9
 616 0028 03D1     		bne	.L42
 617              	.LVL90:
 618              		.loc 1 2746 0 is_stmt 0 discriminator 1
 619 002a 6818     		adds	r0, r5, r1
 620 002c 2E26     		movs	r6, #46
 621 002e 4672     		strb	r6, [r0, #9]
 622 0030 0131     		adds	r1, r1, #1
 623              	.LVL91:
 624              	.L42:
2747:..\..\FatFS-master\source/ff.c **** 		fno->fname[di++] = c;
 625              		.loc 1 2747 0 is_stmt 1
 626 0032 6818     		adds	r0, r5, r1
 627 0034 4372     		strb	r3, [r0, #9]
 628 0036 0131     		adds	r1, r1, #1
 629              	.LVL92:
 630              	.L40:
 631 0038 1300     		movs	r3, r2
 632              	.LVL93:
 633              	.L39:
2742:..\..\FatFS-master\source/ff.c **** 		c = (TCHAR)dp->dir[si++];
 634              		.loc 1 2742 0
 635 003a 0A2B     		cmp	r3, #10
 636 003c EBD9     		bls	.L43
2748:..\..\FatFS-master\source/ff.c **** 	}
2749:..\..\FatFS-master\source/ff.c **** 	fno->fname[di] = 0;
 637              		.loc 1 2749 0
 638 003e 6918     		adds	r1, r5, r1
 639              	.LVL94:
 640 0040 0023     		movs	r3, #0
 641              	.LVL95:
 642 0042 4B72     		strb	r3, [r1, #9]
2750:..\..\FatFS-master\source/ff.c **** #endif
2751:..\..\FatFS-master\source/ff.c **** 
2752:..\..\FatFS-master\source/ff.c **** 	fno->fattrib = dp->dir[DIR_Attr];					/* Attribute */
 643              		.loc 1 2752 0
 644 0044 E369     		ldr	r3, [r4, #28]
 645 0046 DB7A     		ldrb	r3, [r3, #11]
 646 0048 2B72     		strb	r3, [r5, #8]
2753:..\..\FatFS-master\source/ff.c **** 	fno->fsize = ld_dword(dp->dir + DIR_FileSize);		/* Size */
 647              		.loc 1 2753 0
 648 004a E069     		ldr	r0, [r4, #28]
 649 004c 1C30     		adds	r0, r0, #28
 650 004e FFF7FEFF 		bl	ld_dword
 651              	.LVL96:
 652 0052 2860     		str	r0, [r5]
2754:..\..\FatFS-master\source/ff.c **** 	fno->ftime = ld_word(dp->dir + DIR_ModTime + 0);	/* Time */
 653              		.loc 1 2754 0
 654 0054 E069     		ldr	r0, [r4, #28]
 655 0056 1630     		adds	r0, r0, #22
 656 0058 FFF7FEFF 		bl	ld_word
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 61


 657              	.LVL97:
 658 005c E880     		strh	r0, [r5, #6]
2755:..\..\FatFS-master\source/ff.c **** 	fno->fdate = ld_word(dp->dir + DIR_ModTime + 2);	/* Date */
 659              		.loc 1 2755 0
 660 005e E069     		ldr	r0, [r4, #28]
 661 0060 1830     		adds	r0, r0, #24
 662 0062 FFF7FEFF 		bl	ld_word
 663              	.LVL98:
 664 0066 A880     		strh	r0, [r5, #4]
 665              	.L37:
2756:..\..\FatFS-master\source/ff.c **** }
 666              		.loc 1 2756 0
 667              		@ sp needed
 668              	.LVL99:
 669              	.LVL100:
 670 0068 70BD     		pop	{r4, r5, r6, pc}
 671              		.cfi_endproc
 672              	.LFE28:
 673              		.size	get_fileinfo, .-get_fileinfo
 674 006a C046     		.section	.text.create_name,"ax",%progbits
 675              		.align	2
 676              		.code	16
 677              		.thumb_func
 678              		.type	create_name, %function
 679              	create_name:
 680              	.LFB29:
2757:..\..\FatFS-master\source/ff.c **** 
2758:..\..\FatFS-master\source/ff.c **** #endif /* FF_FS_MINIMIZE <= 1 || FF_FS_RPATH >= 2 */
2759:..\..\FatFS-master\source/ff.c **** 
2760:..\..\FatFS-master\source/ff.c **** 
2761:..\..\FatFS-master\source/ff.c **** 
2762:..\..\FatFS-master\source/ff.c **** #if FF_USE_FIND && FF_FS_MINIMIZE <= 1
2763:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2764:..\..\FatFS-master\source/ff.c **** /* Pattern matching                                                      */
2765:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2766:..\..\FatFS-master\source/ff.c **** 
2767:..\..\FatFS-master\source/ff.c **** static
2768:..\..\FatFS-master\source/ff.c **** DWORD get_achar (		/* Get a character and advances ptr */
2769:..\..\FatFS-master\source/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the ANSI/OEM or Unicode string */
2770:..\..\FatFS-master\source/ff.c **** )
2771:..\..\FatFS-master\source/ff.c **** {
2772:..\..\FatFS-master\source/ff.c **** 	DWORD chr;
2773:..\..\FatFS-master\source/ff.c **** 
2774:..\..\FatFS-master\source/ff.c **** 
2775:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN && FF_LFN_UNICODE >= 1	/* Unicode input */
2776:..\..\FatFS-master\source/ff.c **** 	chr = tchar2uni(ptr);
2777:..\..\FatFS-master\source/ff.c **** 	if (chr == 0xFFFFFFFF) chr = 0;		/* Wrong UTF encoding is recognized as end of the string */
2778:..\..\FatFS-master\source/ff.c **** 	chr = ff_wtoupper(chr);
2779:..\..\FatFS-master\source/ff.c **** 
2780:..\..\FatFS-master\source/ff.c **** #else									/* ANSI/OEM input */
2781:..\..\FatFS-master\source/ff.c **** 	chr = (BYTE)*(*ptr)++;				/* Get a byte */
2782:..\..\FatFS-master\source/ff.c **** 	if (IsLower(chr)) chr -= 0x20;		/* To upper ASCII char */
2783:..\..\FatFS-master\source/ff.c **** #if FF_CODE_PAGE == 0
2784:..\..\FatFS-master\source/ff.c **** 	if (ExCvt && chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2785:..\..\FatFS-master\source/ff.c **** #elif FF_CODE_PAGE < 900
2786:..\..\FatFS-master\source/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
2787:..\..\FatFS-master\source/ff.c **** #endif
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 62


2788:..\..\FatFS-master\source/ff.c **** #if FF_CODE_PAGE == 0 || FF_CODE_PAGE >= 900
2789:..\..\FatFS-master\source/ff.c **** 	if (dbc_1st((BYTE)chr)) {	/* Get DBC 2nd byte if needed */
2790:..\..\FatFS-master\source/ff.c **** 		chr = dbc_2nd((BYTE)**ptr) ? chr << 8 | (BYTE)*(*ptr)++ : 0;
2791:..\..\FatFS-master\source/ff.c **** 	}
2792:..\..\FatFS-master\source/ff.c **** #endif
2793:..\..\FatFS-master\source/ff.c **** 
2794:..\..\FatFS-master\source/ff.c **** #endif
2795:..\..\FatFS-master\source/ff.c **** 	return chr;
2796:..\..\FatFS-master\source/ff.c **** }
2797:..\..\FatFS-master\source/ff.c **** 
2798:..\..\FatFS-master\source/ff.c **** 
2799:..\..\FatFS-master\source/ff.c **** static
2800:..\..\FatFS-master\source/ff.c **** int pattern_matching (	/* 0:not matched, 1:matched */
2801:..\..\FatFS-master\source/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
2802:..\..\FatFS-master\source/ff.c **** 	const TCHAR* nam,	/* String to be tested */
2803:..\..\FatFS-master\source/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
2804:..\..\FatFS-master\source/ff.c **** 	int inf				/* Infinite search (* specified) */
2805:..\..\FatFS-master\source/ff.c **** )
2806:..\..\FatFS-master\source/ff.c **** {
2807:..\..\FatFS-master\source/ff.c **** 	const TCHAR *pp, *np;
2808:..\..\FatFS-master\source/ff.c **** 	DWORD pc, nc;
2809:..\..\FatFS-master\source/ff.c **** 	int nm, nx;
2810:..\..\FatFS-master\source/ff.c **** 
2811:..\..\FatFS-master\source/ff.c **** 
2812:..\..\FatFS-master\source/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
2813:..\..\FatFS-master\source/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
2814:..\..\FatFS-master\source/ff.c **** 	}
2815:..\..\FatFS-master\source/ff.c **** 	if (*pat == 0 && inf) return 1;	/* (short circuit) */
2816:..\..\FatFS-master\source/ff.c **** 
2817:..\..\FatFS-master\source/ff.c **** 	do {
2818:..\..\FatFS-master\source/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
2819:..\..\FatFS-master\source/ff.c **** 		for (;;) {
2820:..\..\FatFS-master\source/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
2821:..\..\FatFS-master\source/ff.c **** 				nm = nx = 0;
2822:..\..\FatFS-master\source/ff.c **** 				do {				/* Analyze the wildcard block */
2823:..\..\FatFS-master\source/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
2824:..\..\FatFS-master\source/ff.c **** 				} while (*pp == '?' || *pp == '*');
2825:..\..\FatFS-master\source/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
2826:..\..\FatFS-master\source/ff.c **** 				nc = *np; break;	/* Branch mismatched */
2827:..\..\FatFS-master\source/ff.c **** 			}
2828:..\..\FatFS-master\source/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
2829:..\..\FatFS-master\source/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
2830:..\..\FatFS-master\source/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
2831:..\..\FatFS-master\source/ff.c **** 			if (pc == 0) return 1;	/* Branch matched? (matched at end of both strings) */
2832:..\..\FatFS-master\source/ff.c **** 		}
2833:..\..\FatFS-master\source/ff.c **** 		get_achar(&nam);			/* nam++ */
2834:..\..\FatFS-master\source/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
2835:..\..\FatFS-master\source/ff.c **** 
2836:..\..\FatFS-master\source/ff.c **** 	return 0;
2837:..\..\FatFS-master\source/ff.c **** }
2838:..\..\FatFS-master\source/ff.c **** 
2839:..\..\FatFS-master\source/ff.c **** #endif /* FF_USE_FIND && FF_FS_MINIMIZE <= 1 */
2840:..\..\FatFS-master\source/ff.c **** 
2841:..\..\FatFS-master\source/ff.c **** 
2842:..\..\FatFS-master\source/ff.c **** 
2843:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2844:..\..\FatFS-master\source/ff.c **** /* Pick a top segment and create the object name in directory form       */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 63


2845:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
2846:..\..\FatFS-master\source/ff.c **** 
2847:..\..\FatFS-master\source/ff.c **** static
2848:..\..\FatFS-master\source/ff.c **** FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
2849:..\..\FatFS-master\source/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
2850:..\..\FatFS-master\source/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
2851:..\..\FatFS-master\source/ff.c **** )
2852:..\..\FatFS-master\source/ff.c **** {
 681              		.loc 1 2852 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 8
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              	.LVL101:
 686 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 687              		.cfi_def_cfa_offset 20
 688              		.cfi_offset 4, -20
 689              		.cfi_offset 5, -16
 690              		.cfi_offset 6, -12
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 5F46     		mov	r7, fp
 694 0004 5646     		mov	r6, r10
 695 0006 4D46     		mov	r5, r9
 696 0008 4446     		mov	r4, r8
 697 000a F0B4     		push	{r4, r5, r6, r7}
 698              		.cfi_def_cfa_offset 36
 699              		.cfi_offset 8, -36
 700              		.cfi_offset 9, -32
 701              		.cfi_offset 10, -28
 702              		.cfi_offset 11, -24
 703 000c 83B0     		sub	sp, sp, #12
 704              		.cfi_def_cfa_offset 48
 705 000e 0190     		str	r0, [sp, #4]
 706 0010 8A46     		mov	r10, r1
2853:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
2854:..\..\FatFS-master\source/ff.c **** 	BYTE b, cf;
2855:..\..\FatFS-master\source/ff.c **** 	WCHAR wc, *lfn;
2856:..\..\FatFS-master\source/ff.c **** 	DWORD uc;
2857:..\..\FatFS-master\source/ff.c **** 	UINT i, ni, si, di;
2858:..\..\FatFS-master\source/ff.c **** 	const TCHAR *p;
2859:..\..\FatFS-master\source/ff.c **** 
2860:..\..\FatFS-master\source/ff.c **** 
2861:..\..\FatFS-master\source/ff.c **** 	/* Create LFN into LFN working buffer */
2862:..\..\FatFS-master\source/ff.c **** 	p = *path; lfn = dp->obj.fs->lfnbuf; di = 0;
2863:..\..\FatFS-master\source/ff.c **** 	for (;;) {
2864:..\..\FatFS-master\source/ff.c **** 		uc = tchar2uni(&p);			/* Get a character */
2865:..\..\FatFS-master\source/ff.c **** 		if (uc == 0xFFFFFFFF) return FR_INVALID_NAME;		/* Invalid code or UTF decode error */
2866:..\..\FatFS-master\source/ff.c **** 		if (uc >= 0x10000) lfn[di++] = (WCHAR)(uc >> 16);	/* Store high surrogate if needed */
2867:..\..\FatFS-master\source/ff.c **** 		wc = (WCHAR)uc;
2868:..\..\FatFS-master\source/ff.c **** 		if (wc < ' ' || wc == '/' || wc == '\\') break;	/* Break if end of the path or a separator is fou
2869:..\..\FatFS-master\source/ff.c **** 		if (wc < 0x80 && chk_chr("\"*:<>\?|\x7F", wc)) return FR_INVALID_NAME;	/* Reject illegal characte
2870:..\..\FatFS-master\source/ff.c **** 		if (di >= FF_MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
2871:..\..\FatFS-master\source/ff.c **** 		lfn[di++] = wc;					/* Store the Unicode character */
2872:..\..\FatFS-master\source/ff.c **** 	}
2873:..\..\FatFS-master\source/ff.c **** 	while (*p == '/' || *p == '\\') p++;	/* Skip duplicated separators if exist */
2874:..\..\FatFS-master\source/ff.c **** 	*path = p;							/* Return pointer to the next segment */
2875:..\..\FatFS-master\source/ff.c **** 	cf = (wc < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 64


2876:..\..\FatFS-master\source/ff.c **** 
2877:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH != 0
2878:..\..\FatFS-master\source/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') ||
2879:..\..\FatFS-master\source/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {	/* Is this segment a dot name? */
2880:..\..\FatFS-master\source/ff.c **** 		lfn[di] = 0;
2881:..\..\FatFS-master\source/ff.c **** 		for (i = 0; i < 11; i++) {		/* Create dot name for SFN entry */
2882:..\..\FatFS-master\source/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
2883:..\..\FatFS-master\source/ff.c **** 		}
2884:..\..\FatFS-master\source/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
2885:..\..\FatFS-master\source/ff.c **** 		return FR_OK;
2886:..\..\FatFS-master\source/ff.c **** 	}
2887:..\..\FatFS-master\source/ff.c **** #endif
2888:..\..\FatFS-master\source/ff.c **** 	while (di) {						/* Snip off trailing spaces and dots if exist */
2889:..\..\FatFS-master\source/ff.c **** 		wc = lfn[di - 1];
2890:..\..\FatFS-master\source/ff.c **** 		if (wc != ' ' && wc != '.') break;
2891:..\..\FatFS-master\source/ff.c **** 		di--;
2892:..\..\FatFS-master\source/ff.c **** 	}
2893:..\..\FatFS-master\source/ff.c **** 	lfn[di] = 0;							/* LFN is created into the working buffer */
2894:..\..\FatFS-master\source/ff.c **** 	if (di == 0) return FR_INVALID_NAME;	/* Reject null name */
2895:..\..\FatFS-master\source/ff.c **** 
2896:..\..\FatFS-master\source/ff.c **** 	/* Create SFN in directory form */
2897:..\..\FatFS-master\source/ff.c **** 	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
2898:..\..\FatFS-master\source/ff.c **** 	if (si > 0 || lfn[si] == '.') cf |= NS_LOSS | NS_LFN;	/* Is there any leading space or dot? */
2899:..\..\FatFS-master\source/ff.c **** 	while (di > 0 && lfn[di - 1] != '.') di--;	/* Find last dot (di<=si: no extension) */
2900:..\..\FatFS-master\source/ff.c **** 
2901:..\..\FatFS-master\source/ff.c **** 	mem_set(dp->fn, ' ', 11);
2902:..\..\FatFS-master\source/ff.c **** 	i = b = 0; ni = 8;
2903:..\..\FatFS-master\source/ff.c **** 	for (;;) {
2904:..\..\FatFS-master\source/ff.c **** 		wc = lfn[si++];					/* Get an LFN character */
2905:..\..\FatFS-master\source/ff.c **** 		if (wc == 0) break;				/* Break on end of the LFN */
2906:..\..\FatFS-master\source/ff.c **** 		if (wc == ' ' || (wc == '.' && si != di)) {	/* Remove embedded spaces and dots */
2907:..\..\FatFS-master\source/ff.c **** 			cf |= NS_LOSS | NS_LFN;
2908:..\..\FatFS-master\source/ff.c **** 			continue;
2909:..\..\FatFS-master\source/ff.c **** 		}
2910:..\..\FatFS-master\source/ff.c **** 
2911:..\..\FatFS-master\source/ff.c **** 		if (i >= ni || si == di) {		/* End of field? */
2912:..\..\FatFS-master\source/ff.c **** 			if (ni == 11) {				/* Name extension overflow? */
2913:..\..\FatFS-master\source/ff.c **** 				cf |= NS_LOSS | NS_LFN;
2914:..\..\FatFS-master\source/ff.c **** 				break;
2915:..\..\FatFS-master\source/ff.c **** 			}
2916:..\..\FatFS-master\source/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Name body overflow? */
2917:..\..\FatFS-master\source/ff.c **** 			if (si > di) break;						/* No name extension? */
2918:..\..\FatFS-master\source/ff.c **** 			si = di; i = 8; ni = 11; b <<= 2;		/* Enter name extension */
2919:..\..\FatFS-master\source/ff.c **** 			continue;
2920:..\..\FatFS-master\source/ff.c **** 		}
2921:..\..\FatFS-master\source/ff.c **** 
2922:..\..\FatFS-master\source/ff.c **** 		if (wc >= 0x80) {	/* Is this a non-ASCII character? */
2923:..\..\FatFS-master\source/ff.c **** 			cf |= NS_LFN;	/* LFN entry needs to be created */
2924:..\..\FatFS-master\source/ff.c **** #if FF_CODE_PAGE == 0
2925:..\..\FatFS-master\source/ff.c **** 			if (ExCvt) {	/* At SBCS */
2926:..\..\FatFS-master\source/ff.c **** 				wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
2927:..\..\FatFS-master\source/ff.c **** 				if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
2928:..\..\FatFS-master\source/ff.c **** 			} else {		/* At DBCS */
2929:..\..\FatFS-master\source/ff.c **** 				wc = ff_uni2oem(ff_wtoupper(wc), CODEPAGE);	/* Unicode ==> Upper convert ==> ANSI/OEM code */
2930:..\..\FatFS-master\source/ff.c **** 			}
2931:..\..\FatFS-master\source/ff.c **** #elif FF_CODE_PAGE < 900	/* SBCS cfg */
2932:..\..\FatFS-master\source/ff.c **** 			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 65


2933:..\..\FatFS-master\source/ff.c **** 			if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
2934:..\..\FatFS-master\source/ff.c **** #else						/* DBCS cfg */
2935:..\..\FatFS-master\source/ff.c **** 			wc = ff_uni2oem(ff_wtoupper(wc), CODEPAGE);	/* Unicode ==> Upper convert ==> ANSI/OEM code */
2936:..\..\FatFS-master\source/ff.c **** #endif
2937:..\..\FatFS-master\source/ff.c **** 		}
2938:..\..\FatFS-master\source/ff.c **** 
2939:..\..\FatFS-master\source/ff.c **** 		if (wc >= 0x100) {				/* Is this a DBC? */
2940:..\..\FatFS-master\source/ff.c **** 			if (i >= ni - 1) {			/* Field overflow? */
2941:..\..\FatFS-master\source/ff.c **** 				cf |= NS_LOSS | NS_LFN;
2942:..\..\FatFS-master\source/ff.c **** 				i = ni; continue;		/* Next field */
2943:..\..\FatFS-master\source/ff.c **** 			}
2944:..\..\FatFS-master\source/ff.c **** 			dp->fn[i++] = (BYTE)(wc >> 8);	/* Put 1st byte */
2945:..\..\FatFS-master\source/ff.c **** 		} else {						/* SBC */
2946:..\..\FatFS-master\source/ff.c **** 			if (wc == 0 || chk_chr("+,;=[]", wc)) {	/* Replace illegal characters for SFN if needed */
2947:..\..\FatFS-master\source/ff.c **** 				wc = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2948:..\..\FatFS-master\source/ff.c **** 			} else {
2949:..\..\FatFS-master\source/ff.c **** 				if (IsUpper(wc)) {		/* ASCII upper case? */
2950:..\..\FatFS-master\source/ff.c **** 					b |= 2;
2951:..\..\FatFS-master\source/ff.c **** 				}
2952:..\..\FatFS-master\source/ff.c **** 				if (IsLower(wc)) {		/* ASCII lower case? */
2953:..\..\FatFS-master\source/ff.c **** 					b |= 1; wc -= 0x20;
2954:..\..\FatFS-master\source/ff.c **** 				}
2955:..\..\FatFS-master\source/ff.c **** 			}
2956:..\..\FatFS-master\source/ff.c **** 		}
2957:..\..\FatFS-master\source/ff.c **** 		dp->fn[i++] = (BYTE)wc;
2958:..\..\FatFS-master\source/ff.c **** 	}
2959:..\..\FatFS-master\source/ff.c **** 
2960:..\..\FatFS-master\source/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it
2961:..\..\FatFS-master\source/ff.c **** 
2962:..\..\FatFS-master\source/ff.c **** 	if (ni == 8) b <<= 2;				/* Shift capital flags if no extension */
2963:..\..\FatFS-master\source/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* LFN entry needs to be created if co
2964:..\..\FatFS-master\source/ff.c **** 	if (!(cf & NS_LFN)) {				/* When LFN is in 8.3 format without extended character, NT flags are cre
2965:..\..\FatFS-master\source/ff.c **** 		if (b & 0x01) cf |= NS_EXT;		/* NT flag (Extension has small capital letters only) */
2966:..\..\FatFS-master\source/ff.c **** 		if (b & 0x04) cf |= NS_BODY;	/* NT flag (Body has small capital letters only) */
2967:..\..\FatFS-master\source/ff.c **** 	}
2968:..\..\FatFS-master\source/ff.c **** 
2969:..\..\FatFS-master\source/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created into dp->fn[] */
2970:..\..\FatFS-master\source/ff.c **** 
2971:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
2972:..\..\FatFS-master\source/ff.c **** 
2973:..\..\FatFS-master\source/ff.c **** 
2974:..\..\FatFS-master\source/ff.c **** #else	/* FF_USE_LFN : Non-LFN configuration */
2975:..\..\FatFS-master\source/ff.c **** 	BYTE c, d, *sfn;
2976:..\..\FatFS-master\source/ff.c **** 	UINT ni, si, i;
2977:..\..\FatFS-master\source/ff.c **** 	const char *p;
2978:..\..\FatFS-master\source/ff.c **** 
2979:..\..\FatFS-master\source/ff.c **** 	/* Create file name in directory form */
2980:..\..\FatFS-master\source/ff.c **** 	p = *path; sfn = dp->fn;
 707              		.loc 1 2980 0
 708 0012 0B68     		ldr	r3, [r1]
 709 0014 9846     		mov	r8, r3
 710              	.LVL102:
 711 0016 0300     		movs	r3, r0
 712              	.LVL103:
 713 0018 2022     		movs	r2, #32
 714 001a 9446     		mov	ip, r2
 715 001c 6344     		add	r3, r3, ip
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 66


 716 001e 9B46     		mov	fp, r3
 717              	.LVL104:
2981:..\..\FatFS-master\source/ff.c **** 	mem_set(sfn, ' ', 11);
 718              		.loc 1 2981 0
 719 0020 153A     		subs	r2, r2, #21
 720 0022 2021     		movs	r1, #32
 721              	.LVL105:
 722 0024 1800     		movs	r0, r3
 723              	.LVL106:
 724 0026 FFF7FEFF 		bl	mem_set
 725              	.LVL107:
2982:..\..\FatFS-master\source/ff.c **** 	si = i = 0; ni = 8;
 726              		.loc 1 2982 0
 727 002a 0027     		movs	r7, #0
 728 002c 0026     		movs	r6, #0
 729 002e 0823     		movs	r3, #8
 730 0030 9946     		mov	r9, r3
 731              	.LVL108:
 732              	.L46:
2983:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH != 0
2984:..\..\FatFS-master\source/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2985:..\..\FatFS-master\source/ff.c **** 		for (;;) {
2986:..\..\FatFS-master\source/ff.c **** 			c = (BYTE)p[si++];
2987:..\..\FatFS-master\source/ff.c **** 			if (c != '.' || si >= 3) break;
2988:..\..\FatFS-master\source/ff.c **** 			sfn[i++] = c;
2989:..\..\FatFS-master\source/ff.c **** 		}
2990:..\..\FatFS-master\source/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2991:..\..\FatFS-master\source/ff.c **** 		*path = p + si;								/* Return pointer to the next segment */
2992:..\..\FatFS-master\source/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of the path
2993:..\..\FatFS-master\source/ff.c **** 		return FR_OK;
2994:..\..\FatFS-master\source/ff.c **** 	}
2995:..\..\FatFS-master\source/ff.c **** #endif
2996:..\..\FatFS-master\source/ff.c **** 	for (;;) {
2997:..\..\FatFS-master\source/ff.c **** 		c = (BYTE)p[si++];				/* Get a byte */
 733              		.loc 1 2997 0
 734 0032 751C     		adds	r5, r6, #1
 735              	.LVL109:
 736 0034 4346     		mov	r3, r8
 737 0036 9C5D     		ldrb	r4, [r3, r6]
 738              	.LVL110:
2998:..\..\FatFS-master\source/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 739              		.loc 1 2998 0
 740 0038 202C     		cmp	r4, #32
 741 003a 43D9     		bls	.L47
 742              	.LVL111:
2999:..\..\FatFS-master\source/ff.c **** 		if (c == '/' || c == '\\') {	/* Break if a separator is found */
 743              		.loc 1 2999 0
 744 003c 2F2C     		cmp	r4, #47
 745 003e 03D0     		beq	.L48
 746              		.loc 1 2999 0 is_stmt 0 discriminator 1
 747 0040 5C2C     		cmp	r4, #92
 748 0042 08D1     		bne	.L66
 749 0044 00E0     		b	.L48
 750              	.LVL112:
 751              	.L50:
3000:..\..\FatFS-master\source/ff.c **** 			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 752              		.loc 1 3000 0 is_stmt 1 discriminator 4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 67


 753 0046 0135     		adds	r5, r5, #1
 754              	.LVL113:
 755              	.L48:
 756              		.loc 1 3000 0 is_stmt 0 discriminator 1
 757 0048 4346     		mov	r3, r8
 758 004a 5B5D     		ldrb	r3, [r3, r5]
 759 004c 2F2B     		cmp	r3, #47
 760 004e FAD0     		beq	.L50
 761              		.loc 1 3000 0 discriminator 3
 762 0050 5C2B     		cmp	r3, #92
 763 0052 F8D0     		beq	.L50
 764 0054 36E0     		b	.L47
 765              	.LVL114:
 766              	.L66:
3001:..\..\FatFS-master\source/ff.c **** 			break;
3002:..\..\FatFS-master\source/ff.c **** 		}
3003:..\..\FatFS-master\source/ff.c **** 		if (c == '.' || i >= ni) {		/* End of body or field overflow? */
 767              		.loc 1 3003 0 is_stmt 1
 768 0056 2E2C     		cmp	r4, #46
 769 0058 01D0     		beq	.L51
 770              		.loc 1 3003 0 is_stmt 0 discriminator 1
 771 005a B945     		cmp	r9, r7
 772 005c 09D8     		bhi	.L52
 773              	.L51:
3004:..\..\FatFS-master\source/ff.c **** 			if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Field overflow or invalid dot? */
 774              		.loc 1 3004 0 is_stmt 1
 775 005e 4B46     		mov	r3, r9
 776              	.LVL115:
 777 0060 0B2B     		cmp	r3, #11
 778 0062 47D0     		beq	.L59
 779              	.LVL116:
 780              		.loc 1 3004 0 is_stmt 0 discriminator 2
 781 0064 2E2C     		cmp	r4, #46
 782 0066 47D1     		bne	.L60
2997:..\..\FatFS-master\source/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 783              		.loc 1 2997 0 is_stmt 1
 784 0068 2E00     		movs	r6, r5
3005:..\..\FatFS-master\source/ff.c **** 			i = 8; ni = 11;				/* Enter file extension field */
 785              		.loc 1 3005 0
 786 006a 0827     		movs	r7, #8
 787              	.LVL117:
 788 006c 0B23     		movs	r3, #11
 789              	.LVL118:
 790 006e 9946     		mov	r9, r3
 791              	.LVL119:
 792 0070 DFE7     		b	.L46
 793              	.LVL120:
 794              	.L52:
3006:..\..\FatFS-master\source/ff.c **** 			continue;
3007:..\..\FatFS-master\source/ff.c **** 		}
3008:..\..\FatFS-master\source/ff.c **** #if FF_CODE_PAGE == 0
3009:..\..\FatFS-master\source/ff.c **** 		if (ExCvt && c >= 0x80) {		/* Is SBC extended character? */
3010:..\..\FatFS-master\source/ff.c **** 			c = ExCvt[c & 0x7F];		/* To upper SBC extended character */
3011:..\..\FatFS-master\source/ff.c **** 		}
3012:..\..\FatFS-master\source/ff.c **** #elif FF_CODE_PAGE < 900
3013:..\..\FatFS-master\source/ff.c **** 		if (c >= 0x80) {				/* Is SBC extended character? */
3014:..\..\FatFS-master\source/ff.c **** 			c = ExCvt[c & 0x7F];		/* To upper SBC extended character */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 68


3015:..\..\FatFS-master\source/ff.c **** 		}
3016:..\..\FatFS-master\source/ff.c **** #endif
3017:..\..\FatFS-master\source/ff.c **** 		if (dbc_1st(c)) {				/* Check if it is a DBC 1st byte */
 795              		.loc 1 3017 0
 796 0072 2000     		movs	r0, r4
 797 0074 FFF7FEFF 		bl	dbc_1st
 798              	.LVL121:
 799 0078 0028     		cmp	r0, #0
 800 007a 11D0     		beq	.L55
3018:..\..\FatFS-master\source/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
 801              		.loc 1 3018 0
 802 007c 0236     		adds	r6, r6, #2
 803              	.LVL122:
 804 007e 4346     		mov	r3, r8
 805 0080 5D5D     		ldrb	r5, [r3, r5]
 806              	.LVL123:
3019:..\..\FatFS-master\source/ff.c **** 			if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
 807              		.loc 1 3019 0
 808 0082 2800     		movs	r0, r5
 809 0084 FFF7FEFF 		bl	dbc_2nd
 810              	.LVL124:
 811 0088 0028     		cmp	r0, #0
 812 008a 37D0     		beq	.L61
 813              		.loc 1 3019 0 is_stmt 0 discriminator 2
 814 008c 4B46     		mov	r3, r9
 815 008e 013B     		subs	r3, r3, #1
 816 0090 9F42     		cmp	r7, r3
 817 0092 35D2     		bcs	.L62
3020:..\..\FatFS-master\source/ff.c **** 			sfn[i++] = c;
 818              		.loc 1 3020 0 is_stmt 1
 819 0094 7B1C     		adds	r3, r7, #1
 820              	.LVL125:
 821 0096 5A46     		mov	r2, fp
 822 0098 D455     		strb	r4, [r2, r7]
 823              	.LVL126:
3021:..\..\FatFS-master\source/ff.c **** 			sfn[i++] = d;
 824              		.loc 1 3021 0
 825 009a D554     		strb	r5, [r2, r3]
 826 009c 0237     		adds	r7, r7, #2
 827              	.LVL127:
 828 009e C8E7     		b	.L46
 829              	.LVL128:
 830              	.L55:
3022:..\..\FatFS-master\source/ff.c **** 		} else {						/* SBC */
3023:..\..\FatFS-master\source/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
 831              		.loc 1 3023 0
 832 00a0 2100     		movs	r1, r4
 833 00a2 1D48     		ldr	r0, .L67
 834 00a4 FFF7FEFF 		bl	chk_chr
 835              	.LVL129:
 836 00a8 0028     		cmp	r0, #0
 837 00aa 2BD1     		bne	.L63
3024:..\..\FatFS-master\source/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 838              		.loc 1 3024 0
 839 00ac 2300     		movs	r3, r4
 840 00ae 613B     		subs	r3, r3, #97
 841 00b0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 69


 842 00b2 192B     		cmp	r3, #25
 843 00b4 01D8     		bhi	.L56
 844              		.loc 1 3024 0 is_stmt 0 discriminator 1
 845 00b6 203C     		subs	r4, r4, #32
 846              	.LVL130:
 847 00b8 E4B2     		uxtb	r4, r4
 848              	.LVL131:
 849              	.L56:
3025:..\..\FatFS-master\source/ff.c **** 			sfn[i++] = c;
 850              		.loc 1 3025 0 is_stmt 1
 851 00ba 5B46     		mov	r3, fp
 852 00bc DC55     		strb	r4, [r3, r7]
 853 00be 0137     		adds	r7, r7, #1
 854              	.LVL132:
2997:..\..\FatFS-master\source/ff.c **** 		if (c <= ' ') break; 			/* Break if end of the path name */
 855              		.loc 1 2997 0
 856 00c0 2E00     		movs	r6, r5
 857 00c2 B6E7     		b	.L46
 858              	.L47:
3026:..\..\FatFS-master\source/ff.c **** 		}
3027:..\..\FatFS-master\source/ff.c **** 	}
3028:..\..\FatFS-master\source/ff.c **** 	*path = p + si;						/* Return pointer to the next segment */
 859              		.loc 1 3028 0
 860 00c4 4544     		add	r5, r5, r8
 861              	.LVL133:
 862 00c6 5346     		mov	r3, r10
 863 00c8 1D60     		str	r5, [r3]
3029:..\..\FatFS-master\source/ff.c **** 	if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
 864              		.loc 1 3029 0
 865 00ca 002F     		cmp	r7, #0
 866 00cc 1CD0     		beq	.L64
 867              	.LVL134:
3030:..\..\FatFS-master\source/ff.c **** 
3031:..\..\FatFS-master\source/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with 
 868              		.loc 1 3031 0
 869 00ce 2023     		movs	r3, #32
 870              	.LVL135:
 871 00d0 019A     		ldr	r2, [sp, #4]
 872 00d2 D35C     		ldrb	r3, [r2, r3]
 873 00d4 E52B     		cmp	r3, #229
 874 00d6 03D1     		bne	.L57
 875              		.loc 1 3031 0 is_stmt 0 discriminator 1
 876 00d8 0522     		movs	r2, #5
 877 00da C53B     		subs	r3, r3, #197
 878 00dc 0199     		ldr	r1, [sp, #4]
 879 00de CA54     		strb	r2, [r1, r3]
 880              	.L57:
3032:..\..\FatFS-master\source/ff.c **** 	sfn[NSFLAG] = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 881              		.loc 1 3032 0 is_stmt 1
 882 00e0 202C     		cmp	r4, #32
 883 00e2 01D8     		bhi	.L65
 884 00e4 0422     		movs	r2, #4
 885 00e6 00E0     		b	.L58
 886              	.L65:
 887 00e8 0022     		movs	r2, #0
 888              	.L58:
 889              		.loc 1 3032 0 is_stmt 0 discriminator 4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 70


 890 00ea 2B23     		movs	r3, #43
 891 00ec 0199     		ldr	r1, [sp, #4]
 892 00ee CA54     		strb	r2, [r1, r3]
3033:..\..\FatFS-master\source/ff.c **** 
3034:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
 893              		.loc 1 3034 0 is_stmt 1 discriminator 4
 894 00f0 0020     		movs	r0, #0
 895 00f2 0AE0     		b	.L53
 896              	.LVL136:
 897              	.L59:
3004:..\..\FatFS-master\source/ff.c **** 			i = 8; ni = 11;				/* Enter file extension field */
 898              		.loc 1 3004 0
 899 00f4 0620     		movs	r0, #6
 900 00f6 08E0     		b	.L53
 901              	.L60:
 902 00f8 0620     		movs	r0, #6
 903 00fa 06E0     		b	.L53
 904              	.LVL137:
 905              	.L61:
3019:..\..\FatFS-master\source/ff.c **** 			sfn[i++] = c;
 906              		.loc 1 3019 0
 907 00fc 0620     		movs	r0, #6
 908 00fe 04E0     		b	.L53
 909              	.L62:
 910 0100 0620     		movs	r0, #6
 911 0102 02E0     		b	.L53
 912              	.LVL138:
 913              	.L63:
3023:..\..\FatFS-master\source/ff.c **** 			if (IsLower(c)) c -= 0x20;	/* To upper */
 914              		.loc 1 3023 0
 915 0104 0620     		movs	r0, #6
 916 0106 00E0     		b	.L53
 917              	.LVL139:
 918              	.L64:
3029:..\..\FatFS-master\source/ff.c **** 
 919              		.loc 1 3029 0
 920 0108 0620     		movs	r0, #6
 921              	.LVL140:
 922              	.L53:
3035:..\..\FatFS-master\source/ff.c **** #endif /* FF_USE_LFN */
3036:..\..\FatFS-master\source/ff.c **** }
 923              		.loc 1 3036 0
 924 010a 03B0     		add	sp, sp, #12
 925              		@ sp needed
 926              	.LVL141:
 927              	.LVL142:
 928              	.LVL143:
 929              	.LVL144:
 930              	.LVL145:
 931              	.LVL146:
 932 010c 3CBC     		pop	{r2, r3, r4, r5}
 933 010e 9046     		mov	r8, r2
 934 0110 9946     		mov	r9, r3
 935 0112 A246     		mov	r10, r4
 936 0114 AB46     		mov	fp, r5
 937 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 938              	.L68:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 71


 939              		.align	2
 940              	.L67:
 941 0118 00000000 		.word	.LC0
 942              		.cfi_endproc
 943              	.LFE29:
 944              		.size	create_name, .-create_name
 945              		.section	.text.get_ldnumber,"ax",%progbits
 946              		.align	2
 947              		.code	16
 948              		.thumb_func
 949              		.type	get_ldnumber, %function
 950              	get_ldnumber:
 951              	.LFB31:
3037:..\..\FatFS-master\source/ff.c **** 
3038:..\..\FatFS-master\source/ff.c **** 
3039:..\..\FatFS-master\source/ff.c **** 
3040:..\..\FatFS-master\source/ff.c **** 
3041:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3042:..\..\FatFS-master\source/ff.c **** /* Follow a file path                                                    */
3043:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3044:..\..\FatFS-master\source/ff.c **** 
3045:..\..\FatFS-master\source/ff.c **** static
3046:..\..\FatFS-master\source/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
3047:..\..\FatFS-master\source/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
3048:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
3049:..\..\FatFS-master\source/ff.c **** )
3050:..\..\FatFS-master\source/ff.c **** {
3051:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
3052:..\..\FatFS-master\source/ff.c **** 	BYTE ns;
3053:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
3054:..\..\FatFS-master\source/ff.c **** 
3055:..\..\FatFS-master\source/ff.c **** 
3056:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH != 0
3057:..\..\FatFS-master\source/ff.c **** 	if (*path != '/' && *path != '\\') {	/* Without heading separator */
3058:..\..\FatFS-master\source/ff.c **** 		dp->obj.sclust = fs->cdir;				/* Start from current directory */
3059:..\..\FatFS-master\source/ff.c **** 	} else
3060:..\..\FatFS-master\source/ff.c **** #endif
3061:..\..\FatFS-master\source/ff.c **** 	{										/* With heading separator */
3062:..\..\FatFS-master\source/ff.c **** 		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
3063:..\..\FatFS-master\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
3064:..\..\FatFS-master\source/ff.c **** 	}
3065:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
3066:..\..\FatFS-master\source/ff.c **** 	dp->obj.n_frag = 0;	/* Invalidate last fragment counter of the object */
3067:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH != 0
3068:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type == FS_EXFAT && dp->obj.sclust) {	/* exFAT: Retrieve the sub-directory's status */
3069:..\..\FatFS-master\source/ff.c **** 		DIR dj;
3070:..\..\FatFS-master\source/ff.c **** 
3071:..\..\FatFS-master\source/ff.c **** 		dp->obj.c_scl = fs->cdc_scl;
3072:..\..\FatFS-master\source/ff.c **** 		dp->obj.c_size = fs->cdc_size;
3073:..\..\FatFS-master\source/ff.c **** 		dp->obj.c_ofs = fs->cdc_ofs;
3074:..\..\FatFS-master\source/ff.c **** 		res = load_obj_xdir(&dj, &dp->obj);
3075:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) return res;
3076:..\..\FatFS-master\source/ff.c **** 		dp->obj.objsize = ld_dword(fs->dirbuf + XDIR_FileSize);
3077:..\..\FatFS-master\source/ff.c **** 		dp->obj.stat = fs->dirbuf[XDIR_GenFlags] & 2;
3078:..\..\FatFS-master\source/ff.c **** 	}
3079:..\..\FatFS-master\source/ff.c **** #endif
3080:..\..\FatFS-master\source/ff.c **** #endif
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 72


3081:..\..\FatFS-master\source/ff.c **** 
3082:..\..\FatFS-master\source/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
3083:..\..\FatFS-master\source/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
3084:..\..\FatFS-master\source/ff.c **** 		res = dir_sdi(dp, 0);
3085:..\..\FatFS-master\source/ff.c **** 
3086:..\..\FatFS-master\source/ff.c **** 	} else {								/* Follow path */
3087:..\..\FatFS-master\source/ff.c **** 		for (;;) {
3088:..\..\FatFS-master\source/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
3089:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
3090:..\..\FatFS-master\source/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
3091:..\..\FatFS-master\source/ff.c **** 			ns = dp->fn[NSFLAG];
3092:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
3093:..\..\FatFS-master\source/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
3094:..\..\FatFS-master\source/ff.c **** 					if (FF_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
3095:..\..\FatFS-master\source/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
3096:..\..\FatFS-master\source/ff.c **** 						dp->fn[NSFLAG] = NS_NONAME;
3097:..\..\FatFS-master\source/ff.c **** 						res = FR_OK;
3098:..\..\FatFS-master\source/ff.c **** 					} else {							/* Could not find the object */
3099:..\..\FatFS-master\source/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
3100:..\..\FatFS-master\source/ff.c **** 					}
3101:..\..\FatFS-master\source/ff.c **** 				}
3102:..\..\FatFS-master\source/ff.c **** 				break;
3103:..\..\FatFS-master\source/ff.c **** 			}
3104:..\..\FatFS-master\source/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
3105:..\..\FatFS-master\source/ff.c **** 			/* Get into the sub-directory */
3106:..\..\FatFS-master\source/ff.c **** 			if (!(dp->obj.attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
3107:..\..\FatFS-master\source/ff.c **** 				res = FR_NO_PATH; break;
3108:..\..\FatFS-master\source/ff.c **** 			}
3109:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
3110:..\..\FatFS-master\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {		/* Save containing directory information for next dir */
3111:..\..\FatFS-master\source/ff.c **** 				dp->obj.c_scl = dp->obj.sclust;
3112:..\..\FatFS-master\source/ff.c **** 				dp->obj.c_size = ((DWORD)dp->obj.objsize & 0xFFFFFF00) | dp->obj.stat;
3113:..\..\FatFS-master\source/ff.c **** 				dp->obj.c_ofs = dp->blk_ofs;
3114:..\..\FatFS-master\source/ff.c **** 				init_alloc_info(fs, &dp->obj);	/* Open next directory */
3115:..\..\FatFS-master\source/ff.c **** 			} else
3116:..\..\FatFS-master\source/ff.c **** #endif
3117:..\..\FatFS-master\source/ff.c **** 			{
3118:..\..\FatFS-master\source/ff.c **** 				dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
3119:..\..\FatFS-master\source/ff.c **** 			}
3120:..\..\FatFS-master\source/ff.c **** 		}
3121:..\..\FatFS-master\source/ff.c **** 	}
3122:..\..\FatFS-master\source/ff.c **** 
3123:..\..\FatFS-master\source/ff.c **** 	return res;
3124:..\..\FatFS-master\source/ff.c **** }
3125:..\..\FatFS-master\source/ff.c **** 
3126:..\..\FatFS-master\source/ff.c **** 
3127:..\..\FatFS-master\source/ff.c **** 
3128:..\..\FatFS-master\source/ff.c **** 
3129:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3130:..\..\FatFS-master\source/ff.c **** /* Get logical drive number from path name                               */
3131:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3132:..\..\FatFS-master\source/ff.c **** 
3133:..\..\FatFS-master\source/ff.c **** static
3134:..\..\FatFS-master\source/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
3135:..\..\FatFS-master\source/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
3136:..\..\FatFS-master\source/ff.c **** )
3137:..\..\FatFS-master\source/ff.c **** {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 73


 952              		.loc 1 3137 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL147:
 957 0000 10B5     		push	{r4, lr}
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 4, -8
 960              		.cfi_offset 14, -4
 961              	.LVL148:
3138:..\..\FatFS-master\source/ff.c **** 	const TCHAR *tp, *tt;
3139:..\..\FatFS-master\source/ff.c **** 	UINT i;
3140:..\..\FatFS-master\source/ff.c **** 	int vol = -1;
3141:..\..\FatFS-master\source/ff.c **** #if FF_STR_VOLUME_ID		/* Find string drive id */
3142:..\..\FatFS-master\source/ff.c **** 	static const char* const volid[] = {FF_VOLUME_STRS};
3143:..\..\FatFS-master\source/ff.c **** 	const char *sp;
3144:..\..\FatFS-master\source/ff.c **** 	char c;
3145:..\..\FatFS-master\source/ff.c **** 	TCHAR tc;
3146:..\..\FatFS-master\source/ff.c **** #endif
3147:..\..\FatFS-master\source/ff.c **** 
3148:..\..\FatFS-master\source/ff.c **** 
3149:..\..\FatFS-master\source/ff.c **** 	if (*path != 0) {	/* If the pointer is not a null */
 962              		.loc 1 3149 0
 963 0002 0168     		ldr	r1, [r0]
 964 0004 0029     		cmp	r1, #0
 965 0006 04D1     		bne	.L74
3140:..\..\FatFS-master\source/ff.c **** #if FF_STR_VOLUME_ID		/* Find string drive id */
 966              		.loc 1 3140 0
 967 0008 0123     		movs	r3, #1
 968 000a 5B42     		rsbs	r3, r3, #0
 969 000c 1FE0     		b	.L71
 970              	.LVL149:
 971              	.L73:
3150:..\..\FatFS-master\source/ff.c **** 		for (tt = *path; (UINT)*tt >= (FF_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find a colon in 
 972              		.loc 1 3150 0 discriminator 4
 973 000e 0132     		adds	r2, r2, #1
 974              	.LVL150:
 975 0010 00E0     		b	.L70
 976              	.LVL151:
 977              	.L74:
 978 0012 0A00     		movs	r2, r1
 979              	.L70:
 980              	.LVL152:
 981              		.loc 1 3150 0 is_stmt 0 discriminator 1
 982 0014 1378     		ldrb	r3, [r2]
 983 0016 202B     		cmp	r3, #32
 984 0018 01D9     		bls	.L72
 985              		.loc 1 3150 0 discriminator 3
 986 001a 3A2B     		cmp	r3, #58
 987 001c F7D1     		bne	.L73
 988              	.L72:
3151:..\..\FatFS-master\source/ff.c **** 		if (*tt == ':') {	/* If a colon is exist in the path name */
 989              		.loc 1 3151 0 is_stmt 1
 990 001e 3A2B     		cmp	r3, #58
 991 0020 0BD1     		bne	.L75
 992              	.LVL153:
3152:..\..\FatFS-master\source/ff.c **** 			tp = *path;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 74


3153:..\..\FatFS-master\source/ff.c **** 			i = *tp++;
 993              		.loc 1 3153 0
 994 0022 4C1C     		adds	r4, r1, #1
 995              	.LVL154:
 996 0024 0B78     		ldrb	r3, [r1]
 997              	.LVL155:
3154:..\..\FatFS-master\source/ff.c **** 			if (IsDigit(i) && tp == tt) {	/* Is there a numeric drive id + colon? */
 998              		.loc 1 3154 0
 999 0026 303B     		subs	r3, r3, #48
 1000              	.LVL156:
 1001 0028 092B     		cmp	r3, #9
 1002 002a 08D8     		bhi	.L76
 1003              		.loc 1 3154 0 is_stmt 0 discriminator 1
 1004 002c A242     		cmp	r2, r4
 1005 002e 09D1     		bne	.L77
 1006              	.LVL157:
3155:..\..\FatFS-master\source/ff.c **** 				if ((i -= '0') < FF_VOLUMES) {	/* If drive id is found, get the value and strip it */
 1007              		.loc 1 3155 0 is_stmt 1
 1008 0030 002B     		cmp	r3, #0
 1009 0032 0AD1     		bne	.L78
 1010              	.LVL158:
3156:..\..\FatFS-master\source/ff.c **** 					vol = (int)i;
3157:..\..\FatFS-master\source/ff.c **** 					*path = ++tt;
 1011              		.loc 1 3157 0
 1012 0034 0132     		adds	r2, r2, #1
 1013              	.LVL159:
 1014 0036 0260     		str	r2, [r0]
 1015 0038 09E0     		b	.L71
 1016              	.LVL160:
 1017              	.L75:
3158:..\..\FatFS-master\source/ff.c **** 				}
3159:..\..\FatFS-master\source/ff.c **** 			}
3160:..\..\FatFS-master\source/ff.c **** #if FF_STR_VOLUME_ID
3161:..\..\FatFS-master\source/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
3162:..\..\FatFS-master\source/ff.c **** 				i = 0; tt++;
3163:..\..\FatFS-master\source/ff.c **** 				do {
3164:..\..\FatFS-master\source/ff.c **** 					sp = volid[i]; tp = *path;
3165:..\..\FatFS-master\source/ff.c **** 					do {	/* Compare a string drive id with path name */
3166:..\..\FatFS-master\source/ff.c **** 						c = *sp++; tc = *tp++;
3167:..\..\FatFS-master\source/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
3168:..\..\FatFS-master\source/ff.c **** 					} while (c && (TCHAR)c == tc);
3169:..\..\FatFS-master\source/ff.c **** 				} while ((c || tp != tt) && ++i < FF_VOLUMES);	/* Repeat for each id until pattern match */
3170:..\..\FatFS-master\source/ff.c **** 				if (i < FF_VOLUMES) {	/* If a drive id is found, get the value and strip it */
3171:..\..\FatFS-master\source/ff.c **** 					vol = (int)i;
3172:..\..\FatFS-master\source/ff.c **** 					*path = tt;
3173:..\..\FatFS-master\source/ff.c **** 				}
3174:..\..\FatFS-master\source/ff.c **** 			}
3175:..\..\FatFS-master\source/ff.c **** #endif
3176:..\..\FatFS-master\source/ff.c **** 		} else {	/* No volume id and use default drive */
3177:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH != 0 && FF_VOLUMES >= 2
3178:..\..\FatFS-master\source/ff.c **** 			vol = CurrVol;	/* Current drive */
3179:..\..\FatFS-master\source/ff.c **** #else
3180:..\..\FatFS-master\source/ff.c **** 			vol = 0;		/* Drive 0 */
 1018              		.loc 1 3180 0
 1019 003a 0023     		movs	r3, #0
 1020 003c 07E0     		b	.L71
 1021              	.LVL161:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 75


 1022              	.L76:
3140:..\..\FatFS-master\source/ff.c **** #if FF_STR_VOLUME_ID		/* Find string drive id */
 1023              		.loc 1 3140 0
 1024 003e 0123     		movs	r3, #1
 1025              	.LVL162:
 1026 0040 5B42     		rsbs	r3, r3, #0
 1027 0042 04E0     		b	.L71
 1028              	.L77:
 1029 0044 0123     		movs	r3, #1
 1030 0046 5B42     		rsbs	r3, r3, #0
 1031 0048 01E0     		b	.L71
 1032              	.LVL163:
 1033              	.L78:
 1034 004a 0123     		movs	r3, #1
 1035              	.LVL164:
 1036 004c 5B42     		rsbs	r3, r3, #0
 1037              	.LVL165:
 1038              	.L71:
3181:..\..\FatFS-master\source/ff.c **** #endif
3182:..\..\FatFS-master\source/ff.c **** 		}
3183:..\..\FatFS-master\source/ff.c **** 	}
3184:..\..\FatFS-master\source/ff.c **** 	return vol;
3185:..\..\FatFS-master\source/ff.c **** }
 1039              		.loc 1 3185 0
 1040 004e 1800     		movs	r0, r3
 1041              	.LVL166:
 1042              		@ sp needed
 1043 0050 10BD     		pop	{r4, pc}
 1044              		.cfi_endproc
 1045              	.LFE31:
 1046              		.size	get_ldnumber, .-get_ldnumber
 1047 0052 C046     		.section	.text.validate,"ax",%progbits
 1048              		.align	2
 1049              		.code	16
 1050              		.thumb_func
 1051              		.type	validate, %function
 1052              	validate:
 1053              	.LFB34:
3186:..\..\FatFS-master\source/ff.c **** 
3187:..\..\FatFS-master\source/ff.c **** 
3188:..\..\FatFS-master\source/ff.c **** 
3189:..\..\FatFS-master\source/ff.c **** 
3190:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3191:..\..\FatFS-master\source/ff.c **** /* Load a sector and check if it is an FAT VBR                           */
3192:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3193:..\..\FatFS-master\source/ff.c **** 
3194:..\..\FatFS-master\source/ff.c **** static
3195:..\..\FatFS-master\source/ff.c **** BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
3196:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,	/* Filesystem object */
3197:..\..\FatFS-master\source/ff.c **** 	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
3198:..\..\FatFS-master\source/ff.c **** )
3199:..\..\FatFS-master\source/ff.c **** {
3200:..\..\FatFS-master\source/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
3201:..\..\FatFS-master\source/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
3202:..\..\FatFS-master\source/ff.c **** 
3203:..\..\FatFS-master\source/ff.c **** 	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed 
3204:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 76


3205:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
3206:..\..\FatFS-master\source/ff.c **** 	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Check if exFAT VBR
3207:..\..\FatFS-master\source/ff.c **** #endif
3208:..\..\FatFS-master\source/ff.c **** 	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/
3209:..\..\FatFS-master\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
3210:..\..\FatFS-master\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
3211:..\..\FatFS-master\source/ff.c **** 	}
3212:..\..\FatFS-master\source/ff.c **** 	return 2;	/* Valid BS but not FAT */
3213:..\..\FatFS-master\source/ff.c **** }
3214:..\..\FatFS-master\source/ff.c **** 
3215:..\..\FatFS-master\source/ff.c **** 
3216:..\..\FatFS-master\source/ff.c **** 
3217:..\..\FatFS-master\source/ff.c **** 
3218:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3219:..\..\FatFS-master\source/ff.c **** /* Determine logical drive number and mount the volume if needed         */
3220:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3221:..\..\FatFS-master\source/ff.c **** 
3222:..\..\FatFS-master\source/ff.c **** static
3223:..\..\FatFS-master\source/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
3224:..\..\FatFS-master\source/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
3225:..\..\FatFS-master\source/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found filesystem object */
3226:..\..\FatFS-master\source/ff.c **** 	BYTE mode			/* !=0: Check write protection for write access */
3227:..\..\FatFS-master\source/ff.c **** )
3228:..\..\FatFS-master\source/ff.c **** {
3229:..\..\FatFS-master\source/ff.c **** 	BYTE fmt, *pt;
3230:..\..\FatFS-master\source/ff.c **** 	int vol;
3231:..\..\FatFS-master\source/ff.c **** 	DSTATUS stat;
3232:..\..\FatFS-master\source/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
3233:..\..\FatFS-master\source/ff.c **** 	WORD nrsv;
3234:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
3235:..\..\FatFS-master\source/ff.c **** 	UINT i;
3236:..\..\FatFS-master\source/ff.c **** 
3237:..\..\FatFS-master\source/ff.c **** 
3238:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive number */
3239:..\..\FatFS-master\source/ff.c **** 	*rfs = 0;
3240:..\..\FatFS-master\source/ff.c **** 	vol = get_ldnumber(path);
3241:..\..\FatFS-master\source/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
3242:..\..\FatFS-master\source/ff.c **** 
3243:..\..\FatFS-master\source/ff.c **** 	/* Check if the filesystem object is valid or not */
3244:..\..\FatFS-master\source/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the filesystem object */
3245:..\..\FatFS-master\source/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
3246:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT
3247:..\..\FatFS-master\source/ff.c **** 	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
3248:..\..\FatFS-master\source/ff.c **** #endif
3249:..\..\FatFS-master\source/ff.c **** 	*rfs = fs;							/* Return pointer to the filesystem object */
3250:..\..\FatFS-master\source/ff.c **** 
3251:..\..\FatFS-master\source/ff.c **** 	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
3252:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type != 0) {				/* If the volume has been mounted */
3253:..\..\FatFS-master\source/ff.c **** 		stat = disk_status(fs->pdrv);
3254:..\..\FatFS-master\source/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
3255:..\..\FatFS-master\source/ff.c **** 			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
3256:..\..\FatFS-master\source/ff.c **** 				return FR_WRITE_PROTECTED;
3257:..\..\FatFS-master\source/ff.c **** 			}
3258:..\..\FatFS-master\source/ff.c **** 			return FR_OK;				/* The filesystem object is valid */
3259:..\..\FatFS-master\source/ff.c **** 		}
3260:..\..\FatFS-master\source/ff.c **** 	}
3261:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 77


3262:..\..\FatFS-master\source/ff.c **** 	/* The filesystem object is not valid. */
3263:..\..\FatFS-master\source/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the filesystem object)
3264:..\..\FatFS-master\source/ff.c **** 
3265:..\..\FatFS-master\source/ff.c **** 	fs->fs_type = 0;					/* Clear the filesystem object */
3266:..\..\FatFS-master\source/ff.c **** 	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
3267:..\..\FatFS-master\source/ff.c **** 	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
3268:..\..\FatFS-master\source/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
3269:..\..\FatFS-master\source/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
3270:..\..\FatFS-master\source/ff.c **** 	}
3271:..\..\FatFS-master\source/ff.c **** 	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
3272:..\..\FatFS-master\source/ff.c **** 		return FR_WRITE_PROTECTED;
3273:..\..\FatFS-master\source/ff.c **** 	}
3274:..\..\FatFS-master\source/ff.c **** #if FF_MAX_SS != FF_MIN_SS				/* Get sector size (multiple sector size cfg only) */
3275:..\..\FatFS-master\source/ff.c **** 	if (disk_ioctl(fs->pdrv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK) return FR_DISK_ERR;
3276:..\..\FatFS-master\source/ff.c **** 	if (SS(fs) > FF_MAX_SS || SS(fs) < FF_MIN_SS || (SS(fs) & (SS(fs) - 1))) return FR_DISK_ERR;
3277:..\..\FatFS-master\source/ff.c **** #endif
3278:..\..\FatFS-master\source/ff.c **** 
3279:..\..\FatFS-master\source/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning rules, FDISK and SFD. */
3280:..\..\FatFS-master\source/ff.c **** 	bsect = 0;
3281:..\..\FatFS-master\source/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
3282:..\..\FatFS-master\source/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
3283:..\..\FatFS-master\source/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
3284:..\..\FatFS-master\source/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
3285:..\..\FatFS-master\source/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
3286:..\..\FatFS-master\source/ff.c **** 		}
3287:..\..\FatFS-master\source/ff.c **** 		i = LD2PT(vol);					/* Partition number: 0:auto, 1-4:forced */
3288:..\..\FatFS-master\source/ff.c **** 		if (i != 0) i--;
3289:..\..\FatFS-master\source/ff.c **** 		do {							/* Find an FAT volume */
3290:..\..\FatFS-master\source/ff.c **** 			bsect = br[i];
3291:..\..\FatFS-master\source/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
3292:..\..\FatFS-master\source/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
3293:..\..\FatFS-master\source/ff.c **** 	}
3294:..\..\FatFS-master\source/ff.c **** 	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
3295:..\..\FatFS-master\source/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
3296:..\..\FatFS-master\source/ff.c **** 
3297:..\..\FatFS-master\source/ff.c **** 	/* An FAT volume is found (bsect). Following code initializes the filesystem object */
3298:..\..\FatFS-master\source/ff.c **** 
3299:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
3300:..\..\FatFS-master\source/ff.c **** 	if (fmt == 1) {
3301:..\..\FatFS-master\source/ff.c **** 		QWORD maxlba;
3302:..\..\FatFS-master\source/ff.c **** 
3303:..\..\FatFS-master\source/ff.c **** 		for (i = BPB_ZeroedEx; i < BPB_ZeroedEx + 53 && fs->win[i] == 0; i++) ;	/* Check zero filler */
3304:..\..\FatFS-master\source/ff.c **** 		if (i < BPB_ZeroedEx + 53) return FR_NO_FILESYSTEM;
3305:..\..\FatFS-master\source/ff.c **** 
3306:..\..\FatFS-master\source/ff.c **** 		if (ld_word(fs->win + BPB_FSVerEx) != 0x100) return FR_NO_FILESYSTEM;	/* Check exFAT version (mus
3307:..\..\FatFS-master\source/ff.c **** 
3308:..\..\FatFS-master\source/ff.c **** 		if (1 << fs->win[BPB_BytsPerSecEx] != SS(fs)) {	/* (BPB_BytsPerSecEx must be equal to the physica
3309:..\..\FatFS-master\source/ff.c **** 			return FR_NO_FILESYSTEM;
3310:..\..\FatFS-master\source/ff.c **** 		}
3311:..\..\FatFS-master\source/ff.c **** 
3312:..\..\FatFS-master\source/ff.c **** 		maxlba = ld_qword(fs->win + BPB_TotSecEx) + bsect;	/* Last LBA + 1 of the volume */
3313:..\..\FatFS-master\source/ff.c **** 		if (maxlba >= 0x100000000) return FR_NO_FILESYSTEM;	/* (It cannot be handled in 32-bit LBA) */
3314:..\..\FatFS-master\source/ff.c **** 
3315:..\..\FatFS-master\source/ff.c **** 		fs->fsize = ld_dword(fs->win + BPB_FatSzEx);	/* Number of sectors per FAT */
3316:..\..\FatFS-master\source/ff.c **** 
3317:..\..\FatFS-master\source/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATsEx];			/* Number of FATs */
3318:..\..\FatFS-master\source/ff.c **** 		if (fs->n_fats != 1) return FR_NO_FILESYSTEM;	/* (Supports only 1 FAT) */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 78


3319:..\..\FatFS-master\source/ff.c **** 
3320:..\..\FatFS-master\source/ff.c **** 		fs->csize = 1 << fs->win[BPB_SecPerClusEx];		/* Cluster size */
3321:..\..\FatFS-master\source/ff.c **** 		if (fs->csize == 0)	return FR_NO_FILESYSTEM;	/* (Must be 1..32768) */
3322:..\..\FatFS-master\source/ff.c **** 
3323:..\..\FatFS-master\source/ff.c **** 		nclst = ld_dword(fs->win + BPB_NumClusEx);		/* Number of clusters */
3324:..\..\FatFS-master\source/ff.c **** 		if (nclst > MAX_EXFAT) return FR_NO_FILESYSTEM;	/* (Too many clusters) */
3325:..\..\FatFS-master\source/ff.c **** 		fs->n_fatent = nclst + 2;
3326:..\..\FatFS-master\source/ff.c **** 
3327:..\..\FatFS-master\source/ff.c **** 		/* Boundaries and Limits */
3328:..\..\FatFS-master\source/ff.c **** 		fs->volbase = bsect;
3329:..\..\FatFS-master\source/ff.c **** 		fs->database = bsect + ld_dword(fs->win + BPB_DataOfsEx);
3330:..\..\FatFS-master\source/ff.c **** 		fs->fatbase = bsect + ld_dword(fs->win + BPB_FatOfsEx);
3331:..\..\FatFS-master\source/ff.c **** 		if (maxlba < (QWORD)fs->database + nclst * fs->csize) return FR_NO_FILESYSTEM;	/* (Volume size mu
3332:..\..\FatFS-master\source/ff.c **** 		fs->dirbase = ld_dword(fs->win + BPB_RootClusEx);
3333:..\..\FatFS-master\source/ff.c **** 
3334:..\..\FatFS-master\source/ff.c **** 		/* Check if bitmap location is in assumption (at the first cluster) */
3335:..\..\FatFS-master\source/ff.c **** 		if (move_window(fs, clst2sect(fs, fs->dirbase)) != FR_OK) return FR_DISK_ERR;
3336:..\..\FatFS-master\source/ff.c **** 		for (i = 0; i < SS(fs); i += SZDIRE) {
3337:..\..\FatFS-master\source/ff.c **** 			if (fs->win[i] == 0x81 && ld_dword(fs->win + i + 20) == 2) break;	/* 81 entry with cluster #2? *
3338:..\..\FatFS-master\source/ff.c **** 		}
3339:..\..\FatFS-master\source/ff.c **** 		if (i == SS(fs)) return FR_NO_FILESYSTEM;
3340:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
3341:..\..\FatFS-master\source/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3342:..\..\FatFS-master\source/ff.c **** #endif
3343:..\..\FatFS-master\source/ff.c **** 		fmt = FS_EXFAT;			/* FAT sub-type */
3344:..\..\FatFS-master\source/ff.c **** 	} else
3345:..\..\FatFS-master\source/ff.c **** #endif	/* FF_FS_EXFAT */
3346:..\..\FatFS-master\source/ff.c **** 	{
3347:..\..\FatFS-master\source/ff.c **** 		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must
3348:..\..\FatFS-master\source/ff.c **** 
3349:..\..\FatFS-master\source/ff.c **** 		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
3350:..\..\FatFS-master\source/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
3351:..\..\FatFS-master\source/ff.c **** 		fs->fsize = fasize;
3352:..\..\FatFS-master\source/ff.c **** 
3353:..\..\FatFS-master\source/ff.c **** 		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
3354:..\..\FatFS-master\source/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
3355:..\..\FatFS-master\source/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
3356:..\..\FatFS-master\source/ff.c **** 
3357:..\..\FatFS-master\source/ff.c **** 		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
3358:..\..\FatFS-master\source/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
3359:..\..\FatFS-master\source/ff.c **** 
3360:..\..\FatFS-master\source/ff.c **** 		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
3361:..\..\FatFS-master\source/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
3362:..\..\FatFS-master\source/ff.c **** 
3363:..\..\FatFS-master\source/ff.c **** 		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
3364:..\..\FatFS-master\source/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
3365:..\..\FatFS-master\source/ff.c **** 
3366:..\..\FatFS-master\source/ff.c **** 		nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
3367:..\..\FatFS-master\source/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
3368:..\..\FatFS-master\source/ff.c **** 
3369:..\..\FatFS-master\source/ff.c **** 		/* Determine the FAT sub type */
3370:..\..\FatFS-master\source/ff.c **** 		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
3371:..\..\FatFS-master\source/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
3372:..\..\FatFS-master\source/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
3373:..\..\FatFS-master\source/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
3374:..\..\FatFS-master\source/ff.c **** 		fmt = 0;
3375:..\..\FatFS-master\source/ff.c **** 		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 79


3376:..\..\FatFS-master\source/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
3377:..\..\FatFS-master\source/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
3378:..\..\FatFS-master\source/ff.c **** 		if (fmt == 0) return FR_NO_FILESYSTEM;
3379:..\..\FatFS-master\source/ff.c **** 
3380:..\..\FatFS-master\source/ff.c **** 		/* Boundaries and Limits */
3381:..\..\FatFS-master\source/ff.c **** 		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
3382:..\..\FatFS-master\source/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
3383:..\..\FatFS-master\source/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
3384:..\..\FatFS-master\source/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
3385:..\..\FatFS-master\source/ff.c **** 		if (fmt == FS_FAT32) {
3386:..\..\FatFS-master\source/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
3387:..\..\FatFS-master\source/ff.c **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
3388:..\..\FatFS-master\source/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
3389:..\..\FatFS-master\source/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
3390:..\..\FatFS-master\source/ff.c **** 		} else {
3391:..\..\FatFS-master\source/ff.c **** 			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
3392:..\..\FatFS-master\source/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
3393:..\..\FatFS-master\source/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
3394:..\..\FatFS-master\source/ff.c **** 				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
3395:..\..\FatFS-master\source/ff.c **** 		}
3396:..\..\FatFS-master\source/ff.c **** 		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not
3397:..\..\FatFS-master\source/ff.c **** 
3398:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
3399:..\..\FatFS-master\source/ff.c **** 		/* Get FSInfo if available */
3400:..\..\FatFS-master\source/ff.c **** 		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
3401:..\..\FatFS-master\source/ff.c **** 		fs->fsi_flag = 0x80;
3402:..\..\FatFS-master\source/ff.c **** #if (FF_FS_NOFSINFO & 3) != 3
3403:..\..\FatFS-master\source/ff.c **** 		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
3404:..\..\FatFS-master\source/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
3405:..\..\FatFS-master\source/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
3406:..\..\FatFS-master\source/ff.c **** 		{
3407:..\..\FatFS-master\source/ff.c **** 			fs->fsi_flag = 0;
3408:..\..\FatFS-master\source/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
3409:..\..\FatFS-master\source/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
3410:..\..\FatFS-master\source/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
3411:..\..\FatFS-master\source/ff.c **** 			{
3412:..\..\FatFS-master\source/ff.c **** #if (FF_FS_NOFSINFO & 1) == 0
3413:..\..\FatFS-master\source/ff.c **** 				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
3414:..\..\FatFS-master\source/ff.c **** #endif
3415:..\..\FatFS-master\source/ff.c **** #if (FF_FS_NOFSINFO & 2) == 0
3416:..\..\FatFS-master\source/ff.c **** 				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
3417:..\..\FatFS-master\source/ff.c **** #endif
3418:..\..\FatFS-master\source/ff.c **** 			}
3419:..\..\FatFS-master\source/ff.c **** 		}
3420:..\..\FatFS-master\source/ff.c **** #endif	/* (FF_FS_NOFSINFO & 3) != 3 */
3421:..\..\FatFS-master\source/ff.c **** #endif	/* !FF_FS_READONLY */
3422:..\..\FatFS-master\source/ff.c **** 	}
3423:..\..\FatFS-master\source/ff.c **** 
3424:..\..\FatFS-master\source/ff.c **** 	fs->fs_type = fmt;		/* FAT sub-type */
3425:..\..\FatFS-master\source/ff.c **** 	fs->id = ++Fsid;		/* Volume mount ID */
3426:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN == 1
3427:..\..\FatFS-master\source/ff.c **** 	fs->lfnbuf = LfnBuf;	/* Static LFN working buffer */
3428:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
3429:..\..\FatFS-master\source/ff.c **** 	fs->dirbuf = DirBuf;	/* Static directory block scratchpad buuffer */
3430:..\..\FatFS-master\source/ff.c **** #endif
3431:..\..\FatFS-master\source/ff.c **** #endif
3432:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH != 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 80


3433:..\..\FatFS-master\source/ff.c **** 	fs->cdir = 0;			/* Initialize current directory */
3434:..\..\FatFS-master\source/ff.c **** #endif
3435:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0			/* Clear file lock semaphores */
3436:..\..\FatFS-master\source/ff.c **** 	clear_lock(fs);
3437:..\..\FatFS-master\source/ff.c **** #endif
3438:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
3439:..\..\FatFS-master\source/ff.c **** }
3440:..\..\FatFS-master\source/ff.c **** 
3441:..\..\FatFS-master\source/ff.c **** 
3442:..\..\FatFS-master\source/ff.c **** 
3443:..\..\FatFS-master\source/ff.c **** 
3444:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3445:..\..\FatFS-master\source/ff.c **** /* Check if the file/directory object is valid or not                    */
3446:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3447:..\..\FatFS-master\source/ff.c **** 
3448:..\..\FatFS-master\source/ff.c **** static
3449:..\..\FatFS-master\source/ff.c **** FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
3450:..\..\FatFS-master\source/ff.c **** 	FFOBJID* obj,	/* Pointer to the FFOBJID, the 1st member in the FIL/DIR object, to check validity *
3451:..\..\FatFS-master\source/ff.c **** 	FATFS** rfs		/* Pointer to pointer to the owner filesystem object to return */
3452:..\..\FatFS-master\source/ff.c **** )
3453:..\..\FatFS-master\source/ff.c **** {
 1054              		.loc 1 3453 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL167:
 1059 0000 70B5     		push	{r4, r5, r6, lr}
 1060              		.cfi_def_cfa_offset 16
 1061              		.cfi_offset 4, -16
 1062              		.cfi_offset 5, -12
 1063              		.cfi_offset 6, -8
 1064              		.cfi_offset 14, -4
 1065 0002 0400     		movs	r4, r0
 1066 0004 0D00     		movs	r5, r1
 1067              	.LVL168:
3454:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
3455:..\..\FatFS-master\source/ff.c **** 
3456:..\..\FatFS-master\source/ff.c **** 
3457:..\..\FatFS-master\source/ff.c **** 	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid
 1068              		.loc 1 3457 0
 1069 0006 0028     		cmp	r0, #0
 1070 0008 10D0     		beq	.L82
 1071              		.loc 1 3457 0 is_stmt 0 discriminator 1
 1072 000a 0368     		ldr	r3, [r0]
 1073 000c 002B     		cmp	r3, #0
 1074 000e 0FD0     		beq	.L83
 1075              		.loc 1 3457 0 discriminator 2
 1076 0010 1A78     		ldrb	r2, [r3]
 1077 0012 002A     		cmp	r2, #0
 1078 0014 0ED0     		beq	.L84
 1079              		.loc 1 3457 0 discriminator 3
 1080 0016 8188     		ldrh	r1, [r0, #4]
 1081              	.LVL169:
 1082 0018 DA88     		ldrh	r2, [r3, #6]
 1083 001a 9142     		cmp	r1, r2
 1084 001c 0CD1     		bne	.L85
3458:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 81


3459:..\..\FatFS-master\source/ff.c **** 		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
3460:..\..\FatFS-master\source/ff.c **** 			if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initializ
3461:..\..\FatFS-master\source/ff.c **** 				res = FR_OK;
3462:..\..\FatFS-master\source/ff.c **** 			} else {
3463:..\..\FatFS-master\source/ff.c **** 				unlock_fs(obj->fs, FR_OK);
3464:..\..\FatFS-master\source/ff.c **** 			}
3465:..\..\FatFS-master\source/ff.c **** 		} else {
3466:..\..\FatFS-master\source/ff.c **** 			res = FR_TIMEOUT;
3467:..\..\FatFS-master\source/ff.c **** 		}
3468:..\..\FatFS-master\source/ff.c **** #else
3469:..\..\FatFS-master\source/ff.c **** 		if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialize
 1085              		.loc 1 3469 0 is_stmt 1
 1086 001e 5878     		ldrb	r0, [r3, #1]
 1087              	.LVL170:
 1088 0020 FFF7FEFF 		bl	disk_status
 1089              	.LVL171:
 1090 0024 C307     		lsls	r3, r0, #31
 1091 0026 09D5     		bpl	.L86
3454:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_INVALID_OBJECT;
 1092              		.loc 1 3454 0
 1093 0028 0920     		movs	r0, #9
 1094 002a 08E0     		b	.L80
 1095              	.LVL172:
 1096              	.L82:
 1097 002c 0920     		movs	r0, #9
 1098              	.LVL173:
 1099 002e 06E0     		b	.L80
 1100              	.LVL174:
 1101              	.L83:
 1102 0030 0920     		movs	r0, #9
 1103              	.LVL175:
 1104 0032 04E0     		b	.L80
 1105              	.LVL176:
 1106              	.L84:
 1107 0034 0920     		movs	r0, #9
 1108              	.LVL177:
 1109 0036 02E0     		b	.L80
 1110              	.LVL178:
 1111              	.L85:
 1112 0038 0920     		movs	r0, #9
 1113              	.LVL179:
 1114 003a 00E0     		b	.L80
 1115              	.L86:
3470:..\..\FatFS-master\source/ff.c **** 			res = FR_OK;
 1116              		.loc 1 3470 0
 1117 003c 0020     		movs	r0, #0
 1118              	.L80:
 1119              	.LVL180:
3471:..\..\FatFS-master\source/ff.c **** 		}
3472:..\..\FatFS-master\source/ff.c **** #endif
3473:..\..\FatFS-master\source/ff.c **** 	}
3474:..\..\FatFS-master\source/ff.c **** 	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 1120              		.loc 1 3474 0
 1121 003e 0028     		cmp	r0, #0
 1122 0040 01D1     		bne	.L87
 1123              		.loc 1 3474 0 is_stmt 0 discriminator 1
 1124 0042 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 82


 1125 0044 00E0     		b	.L81
 1126              	.L87:
 1127              		.loc 1 3474 0
 1128 0046 0023     		movs	r3, #0
 1129              	.L81:
 1130              		.loc 1 3474 0 discriminator 4
 1131 0048 2B60     		str	r3, [r5]
3475:..\..\FatFS-master\source/ff.c **** 	return res;
3476:..\..\FatFS-master\source/ff.c **** }
 1132              		.loc 1 3476 0 is_stmt 1 discriminator 4
 1133              		@ sp needed
 1134              	.LVL181:
 1135              	.LVL182:
 1136 004a 70BD     		pop	{r4, r5, r6, pc}
 1137              		.cfi_endproc
 1138              	.LFE34:
 1139              		.size	validate, .-validate
 1140              		.section	.text.sync_window,"ax",%progbits
 1141              		.align	2
 1142              		.code	16
 1143              		.thumb_func
 1144              		.type	sync_window, %function
 1145              	sync_window:
 1146              	.LFB10:
1034:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_OK;
 1147              		.loc 1 1034 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151              	.LVL183:
 1152 0000 70B5     		push	{r4, r5, r6, lr}
 1153              		.cfi_def_cfa_offset 16
 1154              		.cfi_offset 4, -16
 1155              		.cfi_offset 5, -12
 1156              		.cfi_offset 6, -8
 1157              		.cfi_offset 14, -4
 1158 0002 0400     		movs	r4, r0
 1159              	.LVL184:
1038:..\..\FatFS-master\source/ff.c **** 		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
 1160              		.loc 1 1038 0
 1161 0004 C378     		ldrb	r3, [r0, #3]
 1162 0006 002B     		cmp	r3, #0
 1163 0008 1CD0     		beq	.L90
1039:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 0;	/* Clear window dirty flag */
 1164              		.loc 1 1039 0
 1165 000a 0500     		movs	r5, r0
 1166 000c 3035     		adds	r5, r5, #48
 1167 000e 4078     		ldrb	r0, [r0, #1]
 1168              	.LVL185:
 1169 0010 0123     		movs	r3, #1
 1170 0012 E26A     		ldr	r2, [r4, #44]
 1171 0014 2900     		movs	r1, r5
 1172 0016 FFF7FEFF 		bl	disk_write
 1173              	.LVL186:
 1174 001a 0028     		cmp	r0, #0
 1175 001c 14D1     		bne	.L91
1040:..\..\FatFS-master\source/ff.c **** 			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 83


 1176              		.loc 1 1040 0
 1177 001e 0023     		movs	r3, #0
 1178 0020 E370     		strb	r3, [r4, #3]
1041:..\..\FatFS-master\source/ff.c **** 				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it t
 1179              		.loc 1 1041 0
 1180 0022 E16A     		ldr	r1, [r4, #44]
 1181 0024 236A     		ldr	r3, [r4, #32]
 1182 0026 CB1A     		subs	r3, r1, r3
 1183 0028 A269     		ldr	r2, [r4, #24]
 1184 002a 9342     		cmp	r3, r2
 1185 002c 0ED2     		bcs	.L92
1042:..\..\FatFS-master\source/ff.c **** 			}
 1186              		.loc 1 1042 0
 1187 002e A378     		ldrb	r3, [r4, #2]
 1188 0030 022B     		cmp	r3, #2
 1189 0032 0DD1     		bne	.L93
1042:..\..\FatFS-master\source/ff.c **** 			}
 1190              		.loc 1 1042 0 is_stmt 0 discriminator 1
 1191 0034 8A18     		adds	r2, r1, r2
 1192 0036 6078     		ldrb	r0, [r4, #1]
 1193 0038 013B     		subs	r3, r3, #1
 1194 003a 2900     		movs	r1, r5
 1195 003c FFF7FEFF 		bl	disk_write
 1196              	.LVL187:
1035:..\..\FatFS-master\source/ff.c **** 
 1197              		.loc 1 1035 0 is_stmt 1 discriminator 1
 1198 0040 0020     		movs	r0, #0
 1199 0042 06E0     		b	.L89
 1200              	.LVL188:
 1201              	.L90:
1035:..\..\FatFS-master\source/ff.c **** 
 1202              		.loc 1 1035 0 is_stmt 0
 1203 0044 0020     		movs	r0, #0
 1204              	.LVL189:
 1205 0046 04E0     		b	.L89
 1206              	.L91:
1045:..\..\FatFS-master\source/ff.c **** 		}
 1207              		.loc 1 1045 0 is_stmt 1
 1208 0048 0120     		movs	r0, #1
 1209 004a 02E0     		b	.L89
 1210              	.L92:
1035:..\..\FatFS-master\source/ff.c **** 
 1211              		.loc 1 1035 0
 1212 004c 0020     		movs	r0, #0
 1213 004e 00E0     		b	.L89
 1214              	.L93:
 1215 0050 0020     		movs	r0, #0
 1216              	.L89:
 1217              	.LVL190:
1049:..\..\FatFS-master\source/ff.c **** #endif
 1218              		.loc 1 1049 0
 1219              		@ sp needed
 1220              	.LVL191:
 1221 0052 70BD     		pop	{r4, r5, r6, pc}
 1222              		.cfi_endproc
 1223              	.LFE10:
 1224              		.size	sync_window, .-sync_window
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 84


 1225              		.section	.text.move_window,"ax",%progbits
 1226              		.align	2
 1227              		.code	16
 1228              		.thumb_func
 1229              		.type	move_window, %function
 1230              	move_window:
 1231              	.LFB11:
1058:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_OK;
 1232              		.loc 1 1058 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 0
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
 1236              	.LVL192:
 1237 0000 70B5     		push	{r4, r5, r6, lr}
 1238              		.cfi_def_cfa_offset 16
 1239              		.cfi_offset 4, -16
 1240              		.cfi_offset 5, -12
 1241              		.cfi_offset 6, -8
 1242              		.cfi_offset 14, -4
 1243 0002 0500     		movs	r5, r0
 1244 0004 0E00     		movs	r6, r1
 1245              	.LVL193:
1062:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
 1246              		.loc 1 1062 0
 1247 0006 C36A     		ldr	r3, [r0, #44]
 1248 0008 8B42     		cmp	r3, r1
 1249 000a 11D0     		beq	.L97
1064:..\..\FatFS-master\source/ff.c **** #endif
 1250              		.loc 1 1064 0
 1251 000c FFF7FEFF 		bl	sync_window
 1252              	.LVL194:
 1253 0010 041E     		subs	r4, r0, #0
 1254              	.LVL195:
1066:..\..\FatFS-master\source/ff.c **** 			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
 1255              		.loc 1 1066 0
 1256 0012 0ED1     		bne	.L95
1067:..\..\FatFS-master\source/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if read data is not valid */
 1257              		.loc 1 1067 0
 1258 0014 2900     		movs	r1, r5
 1259 0016 3031     		adds	r1, r1, #48
 1260 0018 6878     		ldrb	r0, [r5, #1]
 1261              	.LVL196:
 1262 001a 0123     		movs	r3, #1
 1263 001c 3200     		movs	r2, r6
 1264 001e FFF7FEFF 		bl	disk_read
 1265              	.LVL197:
 1266 0022 0028     		cmp	r0, #0
 1267 0024 02D0     		beq	.L96
1069:..\..\FatFS-master\source/ff.c **** 			}
 1268              		.loc 1 1069 0
 1269 0026 0134     		adds	r4, r4, #1
 1270              	.LVL198:
1068:..\..\FatFS-master\source/ff.c **** 				res = FR_DISK_ERR;
 1271              		.loc 1 1068 0
 1272 0028 0126     		movs	r6, #1
 1273              	.LVL199:
 1274 002a 7642     		rsbs	r6, r6, #0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 85


 1275              	.LVL200:
 1276              	.L96:
1071:..\..\FatFS-master\source/ff.c **** 		}
 1277              		.loc 1 1071 0
 1278 002c EE62     		str	r6, [r5, #44]
 1279 002e 00E0     		b	.L95
 1280              	.LVL201:
 1281              	.L97:
1059:..\..\FatFS-master\source/ff.c **** 
 1282              		.loc 1 1059 0
 1283 0030 0024     		movs	r4, #0
 1284              	.LVL202:
 1285              	.L95:
1075:..\..\FatFS-master\source/ff.c **** 
 1286              		.loc 1 1075 0
 1287 0032 2000     		movs	r0, r4
 1288              		@ sp needed
 1289              	.LVL203:
 1290              	.LVL204:
 1291              	.LVL205:
 1292 0034 70BD     		pop	{r4, r5, r6, pc}
 1293              		.cfi_endproc
 1294              	.LFE11:
 1295              		.size	move_window, .-move_window
 1296 0036 C046     		.section	.text.check_fs,"ax",%progbits
 1297              		.align	2
 1298              		.code	16
 1299              		.thumb_func
 1300              		.type	check_fs, %function
 1301              	check_fs:
 1302              	.LFB32:
3199:..\..\FatFS-master\source/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 1303              		.loc 1 3199 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              	.LVL206:
 1308 0000 10B5     		push	{r4, lr}
 1309              		.cfi_def_cfa_offset 8
 1310              		.cfi_offset 4, -8
 1311              		.cfi_offset 14, -4
 1312 0002 0400     		movs	r4, r0
3200:..\..\FatFS-master\source/ff.c **** 	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 1313              		.loc 1 3200 0
 1314 0004 0023     		movs	r3, #0
 1315 0006 C370     		strb	r3, [r0, #3]
 1316 0008 013B     		subs	r3, r3, #1
 1317 000a C362     		str	r3, [r0, #44]
3201:..\..\FatFS-master\source/ff.c **** 
 1318              		.loc 1 3201 0
 1319 000c FFF7FEFF 		bl	move_window
 1320              	.LVL207:
 1321 0010 0028     		cmp	r0, #0
 1322 0012 1FD1     		bne	.L102
3203:..\..\FatFS-master\source/ff.c **** 
 1323              		.loc 1 3203 0
 1324 0014 144B     		ldr	r3, .L107
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 86


 1325 0016 E018     		adds	r0, r4, r3
 1326 0018 FFF7FEFF 		bl	ld_word
 1327              	.LVL208:
 1328 001c 134B     		ldr	r3, .L107+4
 1329 001e 9842     		cmp	r0, r3
 1330 0020 1AD1     		bne	.L103
3208:..\..\FatFS-master\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1331              		.loc 1 3208 0
 1332 0022 3023     		movs	r3, #48
 1333 0024 E35C     		ldrb	r3, [r4, r3]
 1334 0026 E92B     		cmp	r3, #233
 1335 0028 03D0     		beq	.L101
3208:..\..\FatFS-master\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1336              		.loc 1 3208 0 is_stmt 0 discriminator 1
 1337 002a EB2B     		cmp	r3, #235
 1338 002c 01D0     		beq	.L101
3208:..\..\FatFS-master\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
 1339              		.loc 1 3208 0 discriminator 2
 1340 002e E82B     		cmp	r3, #232
 1341 0030 14D1     		bne	.L104
 1342              	.L101:
3209:..\..\FatFS-master\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
 1343              		.loc 1 3209 0 is_stmt 1
 1344 0032 0322     		movs	r2, #3
 1345 0034 0E49     		ldr	r1, .L107+8
 1346 0036 2000     		movs	r0, r4
 1347 0038 6630     		adds	r0, r0, #102
 1348 003a FFF7FEFF 		bl	mem_cmp
 1349              	.LVL209:
 1350 003e 0028     		cmp	r0, #0
 1351 0040 0ED0     		beq	.L105
3210:..\..\FatFS-master\source/ff.c **** 	}
 1352              		.loc 1 3210 0
 1353 0042 2000     		movs	r0, r4
 1354 0044 8230     		adds	r0, r0, #130
 1355 0046 0522     		movs	r2, #5
 1356 0048 0A49     		ldr	r1, .L107+12
 1357 004a FFF7FEFF 		bl	mem_cmp
 1358              	.LVL210:
 1359 004e 0028     		cmp	r0, #0
 1360 0050 08D1     		bne	.L106
 1361 0052 08E0     		b	.L100
 1362              	.L102:
3201:..\..\FatFS-master\source/ff.c **** 
 1363              		.loc 1 3201 0
 1364 0054 0420     		movs	r0, #4
 1365 0056 06E0     		b	.L100
 1366              	.L103:
3203:..\..\FatFS-master\source/ff.c **** 
 1367              		.loc 1 3203 0
 1368 0058 0320     		movs	r0, #3
 1369 005a 04E0     		b	.L100
 1370              	.L104:
3212:..\..\FatFS-master\source/ff.c **** }
 1371              		.loc 1 3212 0
 1372 005c 0220     		movs	r0, #2
 1373 005e 02E0     		b	.L100
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 87


 1374              	.L105:
3209:..\..\FatFS-master\source/ff.c **** 		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
 1375              		.loc 1 3209 0
 1376 0060 0020     		movs	r0, #0
 1377 0062 00E0     		b	.L100
 1378              	.L106:
3212:..\..\FatFS-master\source/ff.c **** }
 1379              		.loc 1 3212 0
 1380 0064 0220     		movs	r0, #2
 1381              	.L100:
3213:..\..\FatFS-master\source/ff.c **** 
 1382              		.loc 1 3213 0
 1383              		@ sp needed
 1384              	.LVL211:
 1385 0066 10BD     		pop	{r4, pc}
 1386              	.L108:
 1387              		.align	2
 1388              	.L107:
 1389 0068 2E020000 		.word	558
 1390 006c 55AA0000 		.word	43605
 1391 0070 10000000 		.word	.LC2
 1392 0074 14000000 		.word	.LC4
 1393              		.cfi_endproc
 1394              	.LFE32:
 1395              		.size	check_fs, .-check_fs
 1396              		.global	__aeabi_uidiv
 1397              		.section	.text.find_volume,"ax",%progbits
 1398              		.align	2
 1399              		.code	16
 1400              		.thumb_func
 1401              		.type	find_volume, %function
 1402              	find_volume:
 1403              	.LFB33:
3228:..\..\FatFS-master\source/ff.c **** 	BYTE fmt, *pt;
 1404              		.loc 1 3228 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 24
 1407              		@ frame_needed = 0, uses_anonymous_args = 0
 1408              	.LVL212:
 1409 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1410              		.cfi_def_cfa_offset 20
 1411              		.cfi_offset 4, -20
 1412              		.cfi_offset 5, -16
 1413              		.cfi_offset 6, -12
 1414              		.cfi_offset 7, -8
 1415              		.cfi_offset 14, -4
 1416 0002 5F46     		mov	r7, fp
 1417 0004 5646     		mov	r6, r10
 1418 0006 4D46     		mov	r5, r9
 1419 0008 4446     		mov	r4, r8
 1420 000a F0B4     		push	{r4, r5, r6, r7}
 1421              		.cfi_def_cfa_offset 36
 1422              		.cfi_offset 8, -36
 1423              		.cfi_offset 9, -32
 1424              		.cfi_offset 10, -28
 1425              		.cfi_offset 11, -24
 1426 000c 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 88


 1427              		.cfi_def_cfa_offset 64
 1428 000e 0E00     		movs	r6, r1
 1429 0010 1700     		movs	r7, r2
3239:..\..\FatFS-master\source/ff.c **** 	vol = get_ldnumber(path);
 1430              		.loc 1 3239 0
 1431 0012 0023     		movs	r3, #0
 1432 0014 0B60     		str	r3, [r1]
3240:..\..\FatFS-master\source/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1433              		.loc 1 3240 0
 1434 0016 FFF7FEFF 		bl	get_ldnumber
 1435              	.LVL213:
 1436 001a 051E     		subs	r5, r0, #0
 1437              	.LVL214:
3241:..\..\FatFS-master\source/ff.c **** 
 1438              		.loc 1 3241 0
 1439 001c 00DA     		bge	.LCB1454
 1440 001e 42E1     		b	.L128	@long jump
 1441              	.LCB1454:
3244:..\..\FatFS-master\source/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
 1442              		.loc 1 3244 0
 1443 0020 8300     		lsls	r3, r0, #2
 1444 0022 B94A     		ldr	r2, .L155
 1445 0024 9C58     		ldr	r4, [r3, r2]
 1446              	.LVL215:
3245:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT
 1447              		.loc 1 3245 0
 1448 0026 002C     		cmp	r4, #0
 1449 0028 00D1     		bne	.LCB1460
 1450 002a 3EE1     		b	.L129	@long jump
 1451              	.LCB1460:
3249:..\..\FatFS-master\source/ff.c **** 
 1452              		.loc 1 3249 0
 1453 002c 3460     		str	r4, [r6]
3251:..\..\FatFS-master\source/ff.c **** 	if (fs->fs_type != 0) {				/* If the volume has been mounted */
 1454              		.loc 1 3251 0
 1455 002e 0123     		movs	r3, #1
 1456 0030 9F43     		bics	r7, r3
 1457              	.LVL216:
3252:..\..\FatFS-master\source/ff.c **** 		stat = disk_status(fs->pdrv);
 1458              		.loc 1 3252 0
 1459 0032 2378     		ldrb	r3, [r4]
 1460 0034 002B     		cmp	r3, #0
 1461 0036 0CD0     		beq	.L111
3253:..\..\FatFS-master\source/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1462              		.loc 1 3253 0
 1463 0038 6078     		ldrb	r0, [r4, #1]
 1464              	.LVL217:
 1465 003a FFF7FEFF 		bl	disk_status
 1466              	.LVL218:
3254:..\..\FatFS-master\source/ff.c **** 			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 1467              		.loc 1 3254 0
 1468 003e C307     		lsls	r3, r0, #31
 1469 0040 07D4     		bmi	.L111
3255:..\..\FatFS-master\source/ff.c **** 				return FR_WRITE_PROTECTED;
 1470              		.loc 1 3255 0
 1471 0042 002F     		cmp	r7, #0
 1472 0044 00D1     		bne	.LCB1480
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 89


 1473 0046 32E1     		b	.L130	@long jump
 1474              	.LCB1480:
3255:..\..\FatFS-master\source/ff.c **** 				return FR_WRITE_PROTECTED;
 1475              		.loc 1 3255 0 is_stmt 0 discriminator 1
 1476 0048 4307     		lsls	r3, r0, #29
 1477 004a 00D5     		bpl	.LCB1485
 1478 004c 31E1     		b	.L131	@long jump
 1479              	.LCB1485:
3258:..\..\FatFS-master\source/ff.c **** 		}
 1480              		.loc 1 3258 0 is_stmt 1
 1481 004e 0020     		movs	r0, #0
 1482              	.LVL219:
 1483 0050 52E1     		b	.L110
 1484              	.L111:
3265:..\..\FatFS-master\source/ff.c **** 	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1485              		.loc 1 3265 0
 1486 0052 0023     		movs	r3, #0
 1487 0054 2370     		strb	r3, [r4]
3266:..\..\FatFS-master\source/ff.c **** 	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
 1488              		.loc 1 3266 0
 1489 0056 E8B2     		uxtb	r0, r5
 1490 0058 6070     		strb	r0, [r4, #1]
3267:..\..\FatFS-master\source/ff.c **** 	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 1491              		.loc 1 3267 0
 1492 005a FFF7FEFF 		bl	disk_initialize
 1493              	.LVL220:
3268:..\..\FatFS-master\source/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1494              		.loc 1 3268 0
 1495 005e C307     		lsls	r3, r0, #31
 1496 0060 00D5     		bpl	.LCB1504
 1497 0062 28E1     		b	.L132	@long jump
 1498              	.LCB1504:
3271:..\..\FatFS-master\source/ff.c **** 		return FR_WRITE_PROTECTED;
 1499              		.loc 1 3271 0
 1500 0064 002F     		cmp	r7, #0
 1501 0066 02D0     		beq	.L112
3271:..\..\FatFS-master\source/ff.c **** 		return FR_WRITE_PROTECTED;
 1502              		.loc 1 3271 0 is_stmt 0 discriminator 1
 1503 0068 4307     		lsls	r3, r0, #29
 1504 006a 00D5     		bpl	.LCB1511
 1505 006c 25E1     		b	.L133	@long jump
 1506              	.LCB1511:
 1507              	.L112:
 1508              	.LVL221:
3281:..\..\FatFS-master\source/ff.c **** 	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 1509              		.loc 1 3281 0 is_stmt 1
 1510 006e 0021     		movs	r1, #0
 1511 0070 2000     		movs	r0, r4
 1512              	.LVL222:
 1513 0072 FFF7FEFF 		bl	check_fs
 1514              	.LVL223:
3282:..\..\FatFS-master\source/ff.c **** 		for (i = 0; i < 4; i++) {		/* Get partition offset */
 1515              		.loc 1 3282 0
 1516 0076 0228     		cmp	r0, #2
 1517 0078 15D0     		beq	.L134
3280:..\..\FatFS-master\source/ff.c **** 	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 1518              		.loc 1 3280 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 90


 1519 007a 0025     		movs	r5, #0
 1520              	.LVL224:
 1521 007c 27E0     		b	.L114
 1522              	.LVL225:
 1523              	.L116:
3284:..\..\FatFS-master\source/ff.c **** 			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 1524              		.loc 1 3284 0
 1525 007e 2200     		movs	r2, r4
 1526 0080 3032     		adds	r2, r2, #48
 1527 0082 2801     		lsls	r0, r5, #4
 1528 0084 0300     		movs	r3, r0
 1529 0086 BF33     		adds	r3, r3, #191
 1530 0088 FF33     		adds	r3, r3, #255
 1531 008a D018     		adds	r0, r2, r3
 1532              	.LVL226:
3285:..\..\FatFS-master\source/ff.c **** 		}
 1533              		.loc 1 3285 0
 1534 008c 0379     		ldrb	r3, [r0, #4]
 1535 008e 002B     		cmp	r3, #0
 1536 0090 03D0     		beq	.L135
3285:..\..\FatFS-master\source/ff.c **** 		}
 1537              		.loc 1 3285 0 is_stmt 0 discriminator 1
 1538 0092 0830     		adds	r0, r0, #8
 1539              	.LVL227:
 1540 0094 FFF7FEFF 		bl	ld_dword
 1541              	.LVL228:
 1542 0098 00E0     		b	.L115
 1543              	.LVL229:
 1544              	.L135:
3285:..\..\FatFS-master\source/ff.c **** 		}
 1545              		.loc 1 3285 0
 1546 009a 0020     		movs	r0, #0
 1547              	.LVL230:
 1548              	.L115:
3285:..\..\FatFS-master\source/ff.c **** 		}
 1549              		.loc 1 3285 0 discriminator 4
 1550 009c AB00     		lsls	r3, r5, #2
 1551 009e 02AA     		add	r2, sp, #8
 1552 00a0 9850     		str	r0, [r3, r2]
3283:..\..\FatFS-master\source/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1553              		.loc 1 3283 0 is_stmt 1 discriminator 4
 1554 00a2 0135     		adds	r5, r5, #1
 1555              	.LVL231:
 1556 00a4 00E0     		b	.L113
 1557              	.LVL232:
 1558              	.L134:
 1559 00a6 0025     		movs	r5, #0
 1560              	.LVL233:
 1561              	.L113:
3283:..\..\FatFS-master\source/ff.c **** 			pt = fs->win + (MBR_Table + i * SZ_PTE);
 1562              		.loc 1 3283 0 is_stmt 0 discriminator 2
 1563 00a8 032D     		cmp	r5, #3
 1564 00aa E8D9     		bls	.L116
 1565 00ac 0026     		movs	r6, #0
 1566              	.LVL234:
 1567              	.L118:
3290:..\..\FatFS-master\source/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 91


 1568              		.loc 1 3290 0 is_stmt 1
 1569 00ae B300     		lsls	r3, r6, #2
 1570 00b0 02AA     		add	r2, sp, #8
 1571 00b2 9D58     		ldr	r5, [r3, r2]
 1572              	.LVL235:
3291:..\..\FatFS-master\source/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1573              		.loc 1 3291 0
 1574 00b4 002D     		cmp	r5, #0
 1575 00b6 04D0     		beq	.L136
3291:..\..\FatFS-master\source/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1576              		.loc 1 3291 0 is_stmt 0 discriminator 1
 1577 00b8 2900     		movs	r1, r5
 1578 00ba 2000     		movs	r0, r4
 1579 00bc FFF7FEFF 		bl	check_fs
 1580              	.LVL236:
 1581 00c0 00E0     		b	.L117
 1582              	.L136:
3291:..\..\FatFS-master\source/ff.c **** 		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 1583              		.loc 1 3291 0
 1584 00c2 0320     		movs	r0, #3
 1585              	.L117:
 1586              	.LVL237:
3292:..\..\FatFS-master\source/ff.c **** 	}
 1587              		.loc 1 3292 0 is_stmt 1 discriminator 4
 1588 00c4 0128     		cmp	r0, #1
 1589 00c6 02D9     		bls	.L114
3292:..\..\FatFS-master\source/ff.c **** 	}
 1590              		.loc 1 3292 0 is_stmt 0 discriminator 1
 1591 00c8 0136     		adds	r6, r6, #1
 1592              	.LVL238:
 1593 00ca 032E     		cmp	r6, #3
 1594 00cc EFD9     		bls	.L118
 1595              	.LVL239:
 1596              	.L114:
3294:..\..\FatFS-master\source/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1597              		.loc 1 3294 0 is_stmt 1
 1598 00ce 0428     		cmp	r0, #4
 1599 00d0 00D1     		bne	.LCB1625
 1600 00d2 F4E0     		b	.L137	@long jump
 1601              	.LCB1625:
3295:..\..\FatFS-master\source/ff.c **** 
 1602              		.loc 1 3295 0
 1603 00d4 0128     		cmp	r0, #1
 1604 00d6 00D9     		bls	.LCB1627
 1605 00d8 F3E0     		b	.L138	@long jump
 1606              	.LCB1627:
3347:..\..\FatFS-master\source/ff.c **** 
 1607              		.loc 1 3347 0
 1608 00da 2000     		movs	r0, r4
 1609              	.LVL240:
 1610 00dc 3B30     		adds	r0, r0, #59
 1611 00de FFF7FEFF 		bl	ld_word
 1612              	.LVL241:
 1613 00e2 8023     		movs	r3, #128
 1614 00e4 9B00     		lsls	r3, r3, #2
 1615 00e6 9842     		cmp	r0, r3
 1616 00e8 00D0     		beq	.LCB1636
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 92


 1617 00ea ECE0     		b	.L139	@long jump
 1618              	.LCB1636:
3349:..\..\FatFS-master\source/ff.c **** 		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 1619              		.loc 1 3349 0
 1620 00ec 2000     		movs	r0, r4
 1621 00ee 4630     		adds	r0, r0, #70
 1622 00f0 FFF7FEFF 		bl	ld_word
 1623              	.LVL242:
 1624 00f4 8246     		mov	r10, r0
 1625              	.LVL243:
3350:..\..\FatFS-master\source/ff.c **** 		fs->fsize = fasize;
 1626              		.loc 1 3350 0
 1627 00f6 0028     		cmp	r0, #0
 1628 00f8 04D1     		bne	.L119
3350:..\..\FatFS-master\source/ff.c **** 		fs->fsize = fasize;
 1629              		.loc 1 3350 0 is_stmt 0 discriminator 1
 1630 00fa 2000     		movs	r0, r4
 1631              	.LVL244:
 1632 00fc 5430     		adds	r0, r0, #84
 1633 00fe FFF7FEFF 		bl	ld_dword
 1634              	.LVL245:
 1635 0102 8246     		mov	r10, r0
 1636              	.LVL246:
 1637              	.L119:
3351:..\..\FatFS-master\source/ff.c **** 
 1638              		.loc 1 3351 0 is_stmt 1
 1639 0104 5346     		mov	r3, r10
 1640 0106 A361     		str	r3, [r4, #24]
3353:..\..\FatFS-master\source/ff.c **** 		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 1641              		.loc 1 3353 0
 1642 0108 4023     		movs	r3, #64
 1643 010a E35C     		ldrb	r3, [r4, r3]
 1644 010c A370     		strb	r3, [r4, #2]
3354:..\..\FatFS-master\source/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1645              		.loc 1 3354 0
 1646 010e 5A1E     		subs	r2, r3, #1
 1647 0110 D2B2     		uxtb	r2, r2
 1648 0112 012A     		cmp	r2, #1
 1649 0114 00D9     		bls	.LCB1665
 1650 0116 D8E0     		b	.L140	@long jump
 1651              	.LCB1665:
3355:..\..\FatFS-master\source/ff.c **** 
 1652              		.loc 1 3355 0
 1653 0118 5246     		mov	r2, r10
 1654 011a 5A43     		muls	r2, r3
 1655 011c 9346     		mov	fp, r2
 1656              	.LVL247:
3357:..\..\FatFS-master\source/ff.c **** 		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power o
 1657              		.loc 1 3357 0
 1658 011e 3D23     		movs	r3, #61
 1659 0120 E35C     		ldrb	r3, [r4, r3]
 1660 0122 9846     		mov	r8, r3
 1661 0124 6381     		strh	r3, [r4, #10]
3358:..\..\FatFS-master\source/ff.c **** 
 1662              		.loc 1 3358 0
 1663 0126 002B     		cmp	r3, #0
 1664 0128 00D1     		bne	.LCB1676
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 93


 1665 012a D0E0     		b	.L141	@long jump
 1666              	.LCB1676:
3358:..\..\FatFS-master\source/ff.c **** 
 1667              		.loc 1 3358 0 is_stmt 0 discriminator 2
 1668 012c 013B     		subs	r3, r3, #1
 1669 012e 4246     		mov	r2, r8
 1670              	.LVL248:
 1671 0130 1342     		tst	r3, r2
 1672 0132 00D0     		beq	.LCB1682
 1673 0134 CDE0     		b	.L142	@long jump
 1674              	.LCB1682:
3360:..\..\FatFS-master\source/ff.c **** 		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 1675              		.loc 1 3360 0 is_stmt 1
 1676 0136 2000     		movs	r0, r4
 1677 0138 4130     		adds	r0, r0, #65
 1678 013a FFF7FEFF 		bl	ld_word
 1679              	.LVL249:
 1680 013e 0700     		movs	r7, r0
 1681              	.LVL250:
 1682 0140 0190     		str	r0, [sp, #4]
 1683 0142 2081     		strh	r0, [r4, #8]
3361:..\..\FatFS-master\source/ff.c **** 
 1684              		.loc 1 3361 0
 1685 0144 0307     		lsls	r3, r0, #28
 1686 0146 00D0     		beq	.LCB1695
 1687 0148 C5E0     		b	.L143	@long jump
 1688              	.LCB1695:
3363:..\..\FatFS-master\source/ff.c **** 		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 1689              		.loc 1 3363 0
 1690 014a 2000     		movs	r0, r4
 1691 014c 4330     		adds	r0, r0, #67
 1692 014e FFF7FEFF 		bl	ld_word
 1693              	.LVL251:
 1694 0152 061E     		subs	r6, r0, #0
 1695              	.LVL252:
3364:..\..\FatFS-master\source/ff.c **** 
 1696              		.loc 1 3364 0
 1697 0154 04D1     		bne	.L120
3364:..\..\FatFS-master\source/ff.c **** 
 1698              		.loc 1 3364 0 is_stmt 0 discriminator 1
 1699 0156 2000     		movs	r0, r4
 1700              	.LVL253:
 1701 0158 5030     		adds	r0, r0, #80
 1702 015a FFF7FEFF 		bl	ld_dword
 1703              	.LVL254:
 1704 015e 0600     		movs	r6, r0
 1705              	.LVL255:
 1706              	.L120:
3366:..\..\FatFS-master\source/ff.c **** 		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 1707              		.loc 1 3366 0 is_stmt 1
 1708 0160 2000     		movs	r0, r4
 1709 0162 3E30     		adds	r0, r0, #62
 1710 0164 FFF7FEFF 		bl	ld_word
 1711              	.LVL256:
 1712 0168 8146     		mov	r9, r0
 1713              	.LVL257:
3367:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 94


 1714              		.loc 1 3367 0
 1715 016a 0028     		cmp	r0, #0
 1716 016c 00D1     		bne	.LCB1724
 1717 016e B4E0     		b	.L144	@long jump
 1718              	.LCB1724:
3370:..\..\FatFS-master\source/ff.c **** 		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 1719              		.loc 1 3370 0
 1720 0170 5B46     		mov	r3, fp
 1721 0172 4B44     		add	r3, r3, r9
 1722 0174 3F09     		lsrs	r7, r7, #4
 1723 0176 BFB2     		uxth	r7, r7
 1724 0178 DF19     		adds	r7, r3, r7
 1725              	.LVL258:
3371:..\..\FatFS-master\source/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 1726              		.loc 1 3371 0
 1727 017a BE42     		cmp	r6, r7
 1728 017c 00D2     		bcs	.LCB1732
 1729 017e AEE0     		b	.L145	@long jump
 1730              	.LCB1732:
3372:..\..\FatFS-master\source/ff.c **** 		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1731              		.loc 1 3372 0
 1732 0180 F01B     		subs	r0, r6, r7
 1733              	.LVL259:
 1734 0182 4146     		mov	r1, r8
 1735 0184 FFF7FEFF 		bl	__aeabi_uidiv
 1736              	.LVL260:
3373:..\..\FatFS-master\source/ff.c **** 		fmt = 0;
 1737              		.loc 1 3373 0
 1738 0188 0028     		cmp	r0, #0
 1739 018a 00D1     		bne	.LCB1740
 1740 018c A9E0     		b	.L146	@long jump
 1741              	.LCB1740:
 1742              	.LVL261:
3375:..\..\FatFS-master\source/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1743              		.loc 1 3375 0
 1744 018e 5F4B     		ldr	r3, .L155+4
 1745 0190 9842     		cmp	r0, r3
 1746 0192 02D9     		bls	.L147
3374:..\..\FatFS-master\source/ff.c **** 		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
 1747              		.loc 1 3374 0
 1748 0194 0023     		movs	r3, #0
 1749 0196 9846     		mov	r8, r3
 1750 0198 01E0     		b	.L121
 1751              	.L147:
3375:..\..\FatFS-master\source/ff.c **** 		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 1752              		.loc 1 3375 0
 1753 019a 0323     		movs	r3, #3
 1754 019c 9846     		mov	r8, r3
 1755              	.L121:
 1756              	.LVL262:
3376:..\..\FatFS-master\source/ff.c **** 		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 1757              		.loc 1 3376 0
 1758 019e 5C4B     		ldr	r3, .L155+8
 1759 01a0 9842     		cmp	r0, r3
 1760 01a2 01D8     		bhi	.L122
 1761 01a4 0223     		movs	r3, #2
 1762 01a6 9846     		mov	r8, r3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 95


 1763              	.LVL263:
 1764              	.L122:
3377:..\..\FatFS-master\source/ff.c **** 		if (fmt == 0) return FR_NO_FILESYSTEM;
 1765              		.loc 1 3377 0
 1766 01a8 5A4B     		ldr	r3, .L155+12
 1767 01aa 9842     		cmp	r0, r3
 1768 01ac 01D8     		bhi	.L123
 1769 01ae 0123     		movs	r3, #1
 1770 01b0 9846     		mov	r8, r3
 1771              	.LVL264:
 1772              	.L123:
3378:..\..\FatFS-master\source/ff.c **** 
 1773              		.loc 1 3378 0
 1774 01b2 4346     		mov	r3, r8
 1775 01b4 002B     		cmp	r3, #0
 1776 01b6 00D1     		bne	.LCB1778
 1777 01b8 95E0     		b	.L150	@long jump
 1778              	.LCB1778:
3381:..\..\FatFS-master\source/ff.c **** 		fs->volbase = bsect;							/* Volume start sector */
 1779              		.loc 1 3381 0
 1780 01ba 861C     		adds	r6, r0, #2
 1781              	.LVL265:
 1782 01bc 6661     		str	r6, [r4, #20]
3382:..\..\FatFS-master\source/ff.c **** 		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 1783              		.loc 1 3382 0
 1784 01be E561     		str	r5, [r4, #28]
3383:..\..\FatFS-master\source/ff.c **** 		fs->database = bsect + sysect;					/* Data start sector */
 1785              		.loc 1 3383 0
 1786 01c0 4B46     		mov	r3, r9
 1787 01c2 EB18     		adds	r3, r5, r3
 1788 01c4 2362     		str	r3, [r4, #32]
3384:..\..\FatFS-master\source/ff.c **** 		if (fmt == FS_FAT32) {
 1789              		.loc 1 3384 0
 1790 01c6 EF19     		adds	r7, r5, r7
 1791              	.LVL266:
 1792 01c8 A762     		str	r7, [r4, #40]
3385:..\..\FatFS-master\source/ff.c **** 			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0
 1793              		.loc 1 3385 0
 1794 01ca 4246     		mov	r2, r8
 1795 01cc 032A     		cmp	r2, #3
 1796 01ce 11D1     		bne	.L124
3386:..\..\FatFS-master\source/ff.c **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 1797              		.loc 1 3386 0
 1798 01d0 2000     		movs	r0, r4
 1799              	.LVL267:
 1800 01d2 5A30     		adds	r0, r0, #90
 1801 01d4 FFF7FEFF 		bl	ld_word
 1802              	.LVL268:
 1803 01d8 0028     		cmp	r0, #0
 1804 01da 00D0     		beq	.LCB1799
 1805 01dc 85E0     		b	.L151	@long jump
 1806              	.LCB1799:
3387:..\..\FatFS-master\source/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 1807              		.loc 1 3387 0
 1808 01de 019B     		ldr	r3, [sp, #4]
 1809 01e0 002B     		cmp	r3, #0
 1810 01e2 00D0     		beq	.LCB1802
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 96


 1811 01e4 83E0     		b	.L152	@long jump
 1812              	.LCB1802:
3388:..\..\FatFS-master\source/ff.c **** 			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 1813              		.loc 1 3388 0
 1814 01e6 2000     		movs	r0, r4
 1815 01e8 5C30     		adds	r0, r0, #92
 1816 01ea FFF7FEFF 		bl	ld_dword
 1817              	.LVL269:
 1818 01ee 6062     		str	r0, [r4, #36]
3389:..\..\FatFS-master\source/ff.c **** 		} else {
 1819              		.loc 1 3389 0
 1820 01f0 B600     		lsls	r6, r6, #2
 1821              	.LVL270:
 1822 01f2 0FE0     		b	.L125
 1823              	.LVL271:
 1824              	.L124:
3391:..\..\FatFS-master\source/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 1825              		.loc 1 3391 0
 1826 01f4 019A     		ldr	r2, [sp, #4]
 1827 01f6 002A     		cmp	r2, #0
 1828 01f8 7BD0     		beq	.L153
3392:..\..\FatFS-master\source/ff.c **** 			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
 1829              		.loc 1 3392 0
 1830 01fa 5B44     		add	r3, r3, fp
 1831 01fc 6362     		str	r3, [r4, #36]
3394:..\..\FatFS-master\source/ff.c **** 		}
 1832              		.loc 1 3394 0
 1833 01fe 4346     		mov	r3, r8
 1834 0200 022B     		cmp	r3, #2
 1835 0202 01D1     		bne	.L126
3394:..\..\FatFS-master\source/ff.c **** 		}
 1836              		.loc 1 3394 0 is_stmt 0 discriminator 1
 1837 0204 7600     		lsls	r6, r6, #1
 1838 0206 05E0     		b	.L125
 1839              	.L126:
3394:..\..\FatFS-master\source/ff.c **** 		}
 1840              		.loc 1 3394 0 discriminator 2
 1841 0208 0323     		movs	r3, #3
 1842 020a 7343     		muls	r3, r6
 1843 020c 5B08     		lsrs	r3, r3, #1
 1844 020e 0122     		movs	r2, #1
 1845 0210 1640     		ands	r6, r2
 1846 0212 9E19     		adds	r6, r3, r6
 1847              	.LVL272:
 1848              	.L125:
3396:..\..\FatFS-master\source/ff.c **** 
 1849              		.loc 1 3396 0 is_stmt 1
 1850 0214 404B     		ldr	r3, .L155+16
 1851 0216 9C46     		mov	ip, r3
 1852 0218 6644     		add	r6, r6, ip
 1853              	.LVL273:
 1854 021a 760A     		lsrs	r6, r6, #9
 1855              	.LVL274:
 1856 021c B245     		cmp	r10, r6
 1857 021e 6AD3     		bcc	.L154
3400:..\..\FatFS-master\source/ff.c **** 		fs->fsi_flag = 0x80;
 1858              		.loc 1 3400 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 97


 1859 0220 0123     		movs	r3, #1
 1860 0222 5B42     		rsbs	r3, r3, #0
 1861 0224 2361     		str	r3, [r4, #16]
 1862 0226 E360     		str	r3, [r4, #12]
3401:..\..\FatFS-master\source/ff.c **** #if (FF_FS_NOFSINFO & 3) != 3
 1863              		.loc 1 3401 0
 1864 0228 8133     		adds	r3, r3, #129
 1865 022a 2371     		strb	r3, [r4, #4]
3403:..\..\FatFS-master\source/ff.c **** 			&& ld_word(fs->win + BPB_FSInfo32) == 1
 1866              		.loc 1 3403 0
 1867 022c 4346     		mov	r3, r8
 1868 022e 032B     		cmp	r3, #3
 1869 0230 2FD1     		bne	.L127
3404:..\..\FatFS-master\source/ff.c **** 			&& move_window(fs, bsect + 1) == FR_OK)
 1870              		.loc 1 3404 0
 1871 0232 2000     		movs	r0, r4
 1872 0234 6030     		adds	r0, r0, #96
 1873 0236 FFF7FEFF 		bl	ld_word
 1874              	.LVL275:
 1875 023a 0128     		cmp	r0, #1
 1876 023c 29D1     		bne	.L127
3405:..\..\FatFS-master\source/ff.c **** 		{
 1877              		.loc 1 3405 0
 1878 023e 691C     		adds	r1, r5, #1
 1879 0240 2000     		movs	r0, r4
 1880 0242 FFF7FEFF 		bl	move_window
 1881              	.LVL276:
 1882 0246 0028     		cmp	r0, #0
 1883 0248 23D1     		bne	.L127
3407:..\..\FatFS-master\source/ff.c **** 			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
 1884              		.loc 1 3407 0
 1885 024a 0023     		movs	r3, #0
 1886 024c 2371     		strb	r3, [r4, #4]
3408:..\..\FatFS-master\source/ff.c **** 				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 1887              		.loc 1 3408 0
 1888 024e 334B     		ldr	r3, .L155+20
 1889 0250 E018     		adds	r0, r4, r3
 1890 0252 FFF7FEFF 		bl	ld_word
 1891              	.LVL277:
 1892 0256 324B     		ldr	r3, .L155+24
 1893 0258 9842     		cmp	r0, r3
 1894 025a 1AD1     		bne	.L127
3409:..\..\FatFS-master\source/ff.c **** 				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 1895              		.loc 1 3409 0
 1896 025c 2000     		movs	r0, r4
 1897 025e 3030     		adds	r0, r0, #48
 1898 0260 FFF7FEFF 		bl	ld_dword
 1899              	.LVL278:
 1900 0264 2F4B     		ldr	r3, .L155+28
 1901 0266 9842     		cmp	r0, r3
 1902 0268 13D1     		bne	.L127
3410:..\..\FatFS-master\source/ff.c **** 			{
 1903              		.loc 1 3410 0
 1904 026a 8523     		movs	r3, #133
 1905 026c 9B00     		lsls	r3, r3, #2
 1906 026e E018     		adds	r0, r4, r3
 1907 0270 FFF7FEFF 		bl	ld_dword
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 98


 1908              	.LVL279:
 1909 0274 2C4B     		ldr	r3, .L155+32
 1910 0276 9842     		cmp	r0, r3
 1911 0278 0BD1     		bne	.L127
3413:..\..\FatFS-master\source/ff.c **** #endif
 1912              		.loc 1 3413 0
 1913 027a 8623     		movs	r3, #134
 1914 027c 9B00     		lsls	r3, r3, #2
 1915 027e E018     		adds	r0, r4, r3
 1916 0280 FFF7FEFF 		bl	ld_dword
 1917              	.LVL280:
 1918 0284 2061     		str	r0, [r4, #16]
3416:..\..\FatFS-master\source/ff.c **** #endif
 1919              		.loc 1 3416 0
 1920 0286 8723     		movs	r3, #135
 1921 0288 9B00     		lsls	r3, r3, #2
 1922 028a E018     		adds	r0, r4, r3
 1923 028c FFF7FEFF 		bl	ld_dword
 1924              	.LVL281:
 1925 0290 E060     		str	r0, [r4, #12]
 1926              	.L127:
3424:..\..\FatFS-master\source/ff.c **** 	fs->id = ++Fsid;		/* Volume mount ID */
 1927              		.loc 1 3424 0
 1928 0292 4346     		mov	r3, r8
 1929 0294 2370     		strb	r3, [r4]
3425:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN == 1
 1930              		.loc 1 3425 0
 1931 0296 1C4A     		ldr	r2, .L155
 1932 0298 9388     		ldrh	r3, [r2, #4]
 1933 029a 0133     		adds	r3, r3, #1
 1934 029c 9BB2     		uxth	r3, r3
 1935 029e 9380     		strh	r3, [r2, #4]
 1936 02a0 E380     		strh	r3, [r4, #6]
3438:..\..\FatFS-master\source/ff.c **** }
 1937              		.loc 1 3438 0
 1938 02a2 0020     		movs	r0, #0
 1939 02a4 28E0     		b	.L110
 1940              	.LVL282:
 1941              	.L128:
3241:..\..\FatFS-master\source/ff.c **** 
 1942              		.loc 1 3241 0
 1943 02a6 0B20     		movs	r0, #11
 1944              	.LVL283:
 1945 02a8 26E0     		b	.L110
 1946              	.LVL284:
 1947              	.L129:
3245:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT
 1948              		.loc 1 3245 0
 1949 02aa 0C20     		movs	r0, #12
 1950              	.LVL285:
 1951 02ac 24E0     		b	.L110
 1952              	.LVL286:
 1953              	.L130:
3258:..\..\FatFS-master\source/ff.c **** 		}
 1954              		.loc 1 3258 0
 1955 02ae 0020     		movs	r0, #0
 1956              	.LVL287:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 99


 1957 02b0 22E0     		b	.L110
 1958              	.LVL288:
 1959              	.L131:
3256:..\..\FatFS-master\source/ff.c **** 			}
 1960              		.loc 1 3256 0
 1961 02b2 0A20     		movs	r0, #10
 1962              	.LVL289:
 1963 02b4 20E0     		b	.L110
 1964              	.LVL290:
 1965              	.L132:
3269:..\..\FatFS-master\source/ff.c **** 	}
 1966              		.loc 1 3269 0
 1967 02b6 0320     		movs	r0, #3
 1968              	.LVL291:
 1969 02b8 1EE0     		b	.L110
 1970              	.LVL292:
 1971              	.L133:
3272:..\..\FatFS-master\source/ff.c **** 	}
 1972              		.loc 1 3272 0
 1973 02ba 0A20     		movs	r0, #10
 1974              	.LVL293:
 1975 02bc 1CE0     		b	.L110
 1976              	.LVL294:
 1977              	.L137:
3294:..\..\FatFS-master\source/ff.c **** 	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 1978              		.loc 1 3294 0
 1979 02be 0120     		movs	r0, #1
 1980              	.LVL295:
 1981 02c0 1AE0     		b	.L110
 1982              	.LVL296:
 1983              	.L138:
3295:..\..\FatFS-master\source/ff.c **** 
 1984              		.loc 1 3295 0
 1985 02c2 0D20     		movs	r0, #13
 1986              	.LVL297:
 1987 02c4 18E0     		b	.L110
 1988              	.L139:
3347:..\..\FatFS-master\source/ff.c **** 
 1989              		.loc 1 3347 0
 1990 02c6 0D20     		movs	r0, #13
 1991 02c8 16E0     		b	.L110
 1992              	.LVL298:
 1993              	.L140:
3354:..\..\FatFS-master\source/ff.c **** 		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 1994              		.loc 1 3354 0
 1995 02ca 0D20     		movs	r0, #13
 1996 02cc 14E0     		b	.L110
 1997              	.LVL299:
 1998              	.L141:
3358:..\..\FatFS-master\source/ff.c **** 
 1999              		.loc 1 3358 0
 2000 02ce 0D20     		movs	r0, #13
 2001 02d0 12E0     		b	.L110
 2002              	.LVL300:
 2003              	.L142:
 2004 02d2 0D20     		movs	r0, #13
 2005 02d4 10E0     		b	.L110
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 100


 2006              	.LVL301:
 2007              	.L143:
3361:..\..\FatFS-master\source/ff.c **** 
 2008              		.loc 1 3361 0
 2009 02d6 0D20     		movs	r0, #13
 2010 02d8 0EE0     		b	.L110
 2011              	.LVL302:
 2012              	.L144:
3367:..\..\FatFS-master\source/ff.c **** 
 2013              		.loc 1 3367 0
 2014 02da 0D20     		movs	r0, #13
 2015              	.LVL303:
 2016 02dc 0CE0     		b	.L110
 2017              	.LVL304:
 2018              	.L145:
3371:..\..\FatFS-master\source/ff.c **** 		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 2019              		.loc 1 3371 0
 2020 02de 0D20     		movs	r0, #13
 2021              	.LVL305:
 2022 02e0 0AE0     		b	.L110
 2023              	.LVL306:
 2024              	.L146:
3373:..\..\FatFS-master\source/ff.c **** 		fmt = 0;
 2025              		.loc 1 3373 0
 2026 02e2 0D20     		movs	r0, #13
 2027              	.LVL307:
 2028 02e4 08E0     		b	.L110
 2029              	.LVL308:
 2030              	.L150:
3378:..\..\FatFS-master\source/ff.c **** 
 2031              		.loc 1 3378 0
 2032 02e6 0D20     		movs	r0, #13
 2033              	.LVL309:
 2034 02e8 06E0     		b	.L110
 2035              	.LVL310:
 2036              	.L151:
3386:..\..\FatFS-master\source/ff.c **** 			if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
 2037              		.loc 1 3386 0
 2038 02ea 0D20     		movs	r0, #13
 2039 02ec 04E0     		b	.L110
 2040              	.L152:
3387:..\..\FatFS-master\source/ff.c **** 			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 2041              		.loc 1 3387 0
 2042 02ee 0D20     		movs	r0, #13
 2043 02f0 02E0     		b	.L110
 2044              	.LVL311:
 2045              	.L153:
3391:..\..\FatFS-master\source/ff.c **** 			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 2046              		.loc 1 3391 0
 2047 02f2 0D20     		movs	r0, #13
 2048              	.LVL312:
 2049 02f4 00E0     		b	.L110
 2050              	.LVL313:
 2051              	.L154:
3396:..\..\FatFS-master\source/ff.c **** 
 2052              		.loc 1 3396 0
 2053 02f6 0D20     		movs	r0, #13
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 101


 2054              	.LVL314:
 2055              	.L110:
3439:..\..\FatFS-master\source/ff.c **** 
 2056              		.loc 1 3439 0
 2057 02f8 07B0     		add	sp, sp, #28
 2058              		@ sp needed
 2059 02fa 3CBC     		pop	{r2, r3, r4, r5}
 2060 02fc 9046     		mov	r8, r2
 2061 02fe 9946     		mov	r9, r3
 2062 0300 A246     		mov	r10, r4
 2063 0302 AB46     		mov	fp, r5
 2064 0304 F0BD     		pop	{r4, r5, r6, r7, pc}
 2065              	.L156:
 2066 0306 C046     		.align	2
 2067              	.L155:
 2068 0308 00000000 		.word	.LANCHOR0
 2069 030c F5FFFF0F 		.word	268435445
 2070 0310 F5FF0000 		.word	65525
 2071 0314 F50F0000 		.word	4085
 2072 0318 FF010000 		.word	511
 2073 031c 2E020000 		.word	558
 2074 0320 55AA0000 		.word	43605
 2075 0324 52526141 		.word	1096897106
 2076 0328 72724161 		.word	1631679090
 2077              		.cfi_endproc
 2078              	.LFE33:
 2079              		.size	find_volume, .-find_volume
 2080              		.section	.text.put_fat,"ax",%progbits
 2081              		.align	2
 2082              		.code	16
 2083              		.thumb_func
 2084              		.type	put_fat, %function
 2085              	put_fat:
 2086              	.LFB15:
1225:..\..\FatFS-master\source/ff.c **** 	UINT bc;
 2087              		.loc 1 1225 0
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 0
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091              	.LVL315:
 2092 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2093              		.cfi_def_cfa_offset 20
 2094              		.cfi_offset 4, -20
 2095              		.cfi_offset 5, -16
 2096              		.cfi_offset 6, -12
 2097              		.cfi_offset 7, -8
 2098              		.cfi_offset 14, -4
 2099 0002 5746     		mov	r7, r10
 2100 0004 4E46     		mov	r6, r9
 2101 0006 4546     		mov	r5, r8
 2102 0008 E0B4     		push	{r5, r6, r7}
 2103              		.cfi_def_cfa_offset 32
 2104              		.cfi_offset 8, -32
 2105              		.cfi_offset 9, -28
 2106              		.cfi_offset 10, -24
 2107 000a 0600     		movs	r6, r0
 2108 000c 0C00     		movs	r4, r1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 102


 2109 000e 1700     		movs	r7, r2
 2110              	.LVL316:
1231:..\..\FatFS-master\source/ff.c **** 		switch (fs->fs_type) {
 2111              		.loc 1 1231 0
 2112 0010 0129     		cmp	r1, #1
 2113 0012 00D8     		bhi	.LCB2168
 2114 0014 7EE0     		b	.L166	@long jump
 2115              	.LCB2168:
1231:..\..\FatFS-master\source/ff.c **** 		switch (fs->fs_type) {
 2116              		.loc 1 1231 0 is_stmt 0 discriminator 1
 2117 0016 4369     		ldr	r3, [r0, #20]
 2118 0018 9942     		cmp	r1, r3
 2119 001a 00D3     		bcc	.LCB2172
 2120 001c 7CE0     		b	.L167	@long jump
 2121              	.LCB2172:
1232:..\..\FatFS-master\source/ff.c **** 		case FS_FAT12 :
 2122              		.loc 1 1232 0 is_stmt 1
 2123 001e 0378     		ldrb	r3, [r0]
 2124 0020 022B     		cmp	r3, #2
 2125 0022 45D0     		beq	.L159
 2126 0024 032B     		cmp	r3, #3
 2127 0026 58D0     		beq	.L160
 2128 0028 012B     		cmp	r3, #1
 2129 002a 77D1     		bne	.L169
 2130              	.LVL317:
1234:..\..\FatFS-master\source/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2131              		.loc 1 1234 0
 2132 002c 4B08     		lsrs	r3, r1, #1
 2133 002e 9846     		mov	r8, r3
 2134 0030 8844     		add	r8, r8, r1
 2135              	.LVL318:
1235:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
 2136              		.loc 1 1235 0
 2137 0032 4346     		mov	r3, r8
 2138 0034 590A     		lsrs	r1, r3, #9
 2139              	.LVL319:
 2140 0036 036A     		ldr	r3, [r0, #32]
 2141 0038 9C46     		mov	ip, r3
 2142 003a 6144     		add	r1, r1, ip
 2143 003c FFF7FEFF 		bl	move_window
 2144              	.LVL320:
 2145 0040 051E     		subs	r5, r0, #0
 2146              	.LVL321:
1236:..\..\FatFS-master\source/ff.c **** 			p = fs->win + bc++ % SS(fs);
 2147              		.loc 1 1236 0
 2148 0042 6CD1     		bne	.L158
1237:..\..\FatFS-master\source/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Put 1st byte */
 2149              		.loc 1 1237 0
 2150 0044 3023     		movs	r3, #48
 2151 0046 9A46     		mov	r10, r3
 2152 0048 B244     		add	r10, r10, r6
 2153 004a 2F3B     		subs	r3, r3, #47
 2154 004c 4344     		add	r3, r3, r8
 2155 004e 9946     		mov	r9, r3
 2156              	.LVL322:
 2157 0050 4346     		mov	r3, r8
 2158              	.LVL323:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 103


 2159 0052 DB05     		lsls	r3, r3, #23
 2160 0054 DB0D     		lsrs	r3, r3, #23
 2161 0056 5344     		add	r3, r3, r10
 2162              	.LVL324:
1238:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2163              		.loc 1 1238 0
 2164 0058 0122     		movs	r2, #1
 2165 005a 1440     		ands	r4, r2
 2166              	.LVL325:
 2167 005c 06D0     		beq	.L162
1238:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2168              		.loc 1 1238 0 is_stmt 0 discriminator 1
 2169 005e 1A78     		ldrb	r2, [r3]
 2170 0060 0F21     		movs	r1, #15
 2171 0062 0A40     		ands	r2, r1
 2172 0064 3901     		lsls	r1, r7, #4
 2173 0066 0A43     		orrs	r2, r1
 2174 0068 D2B2     		uxtb	r2, r2
 2175 006a 00E0     		b	.L163
 2176              	.L162:
1238:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2177              		.loc 1 1238 0 discriminator 2
 2178 006c FAB2     		uxtb	r2, r7
 2179              	.L163:
1238:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2180              		.loc 1 1238 0 discriminator 4
 2181 006e 1A70     		strb	r2, [r3]
1239:..\..\FatFS-master\source/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2182              		.loc 1 1239 0 is_stmt 1 discriminator 4
 2183 0070 0123     		movs	r3, #1
 2184              	.LVL326:
 2185 0072 F370     		strb	r3, [r6, #3]
1240:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
 2186              		.loc 1 1240 0 discriminator 4
 2187 0074 4B46     		mov	r3, r9
 2188 0076 590A     		lsrs	r1, r3, #9
 2189 0078 336A     		ldr	r3, [r6, #32]
 2190 007a 9C46     		mov	ip, r3
 2191 007c 6144     		add	r1, r1, ip
 2192 007e 3000     		movs	r0, r6
 2193              	.LVL327:
 2194 0080 FFF7FEFF 		bl	move_window
 2195              	.LVL328:
 2196 0084 051E     		subs	r5, r0, #0
 2197              	.LVL329:
1241:..\..\FatFS-master\source/ff.c **** 			p = fs->win + bc % SS(fs);
 2198              		.loc 1 1241 0 discriminator 4
 2199 0086 4AD1     		bne	.L158
1242:..\..\FatFS-master\source/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte 
 2200              		.loc 1 1242 0
 2201 0088 4B46     		mov	r3, r9
 2202 008a DB05     		lsls	r3, r3, #23
 2203 008c DB0D     		lsrs	r3, r3, #23
 2204 008e 5344     		add	r3, r3, r10
 2205              	.LVL330:
1243:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2206              		.loc 1 1243 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 104


 2207 0090 002C     		cmp	r4, #0
 2208 0092 02D0     		beq	.L164
1243:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2209              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2210 0094 3F09     		lsrs	r7, r7, #4
 2211              	.LVL331:
 2212 0096 FFB2     		uxtb	r7, r7
 2213 0098 06E0     		b	.L165
 2214              	.LVL332:
 2215              	.L164:
1243:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2216              		.loc 1 1243 0 discriminator 2
 2217 009a 1978     		ldrb	r1, [r3]
 2218 009c 3A0A     		lsrs	r2, r7, #8
 2219 009e 0F20     		movs	r0, #15
 2220              	.LVL333:
 2221 00a0 8143     		bics	r1, r0
 2222 00a2 0F27     		movs	r7, #15
 2223              	.LVL334:
 2224 00a4 1740     		ands	r7, r2
 2225 00a6 0F43     		orrs	r7, r1
 2226              	.L165:
1243:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2227              		.loc 1 1243 0 discriminator 4
 2228 00a8 1F70     		strb	r7, [r3]
1244:..\..\FatFS-master\source/ff.c **** 			break;
 2229              		.loc 1 1244 0 is_stmt 1 discriminator 4
 2230 00aa 0123     		movs	r3, #1
 2231              	.LVL335:
 2232 00ac F370     		strb	r3, [r6, #3]
1245:..\..\FatFS-master\source/ff.c **** 
 2233              		.loc 1 1245 0 discriminator 4
 2234 00ae 36E0     		b	.L158
 2235              	.LVL336:
 2236              	.L159:
1248:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
 2237              		.loc 1 1248 0
 2238 00b0 090A     		lsrs	r1, r1, #8
 2239              	.LVL337:
 2240 00b2 036A     		ldr	r3, [r0, #32]
 2241 00b4 9C46     		mov	ip, r3
 2242 00b6 6144     		add	r1, r1, ip
 2243 00b8 FFF7FEFF 		bl	move_window
 2244              	.LVL338:
 2245 00bc 051E     		subs	r5, r0, #0
 2246              	.LVL339:
1249:..\..\FatFS-master\source/ff.c **** 			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
 2247              		.loc 1 1249 0
 2248 00be 2ED1     		bne	.L158
1250:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2249              		.loc 1 1250 0
 2250 00c0 3200     		movs	r2, r6
 2251 00c2 3032     		adds	r2, r2, #48
 2252 00c4 6400     		lsls	r4, r4, #1
 2253              	.LVL340:
 2254 00c6 B9B2     		uxth	r1, r7
 2255 00c8 FF23     		movs	r3, #255
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 105


 2256 00ca 5B00     		lsls	r3, r3, #1
 2257 00cc 1C40     		ands	r4, r3
 2258 00ce 1019     		adds	r0, r2, r4
 2259              	.LVL341:
 2260 00d0 FFF7FEFF 		bl	st_word
 2261              	.LVL342:
1251:..\..\FatFS-master\source/ff.c **** 			break;
 2262              		.loc 1 1251 0
 2263 00d4 0123     		movs	r3, #1
 2264 00d6 F370     		strb	r3, [r6, #3]
1252:..\..\FatFS-master\source/ff.c **** 
 2265              		.loc 1 1252 0
 2266 00d8 21E0     		b	.L158
 2267              	.LVL343:
 2268              	.L160:
1258:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
 2269              		.loc 1 1258 0
 2270 00da C909     		lsrs	r1, r1, #7
 2271              	.LVL344:
 2272 00dc 036A     		ldr	r3, [r0, #32]
 2273 00de 9C46     		mov	ip, r3
 2274 00e0 6144     		add	r1, r1, ip
 2275 00e2 FFF7FEFF 		bl	move_window
 2276              	.LVL345:
 2277 00e6 051E     		subs	r5, r0, #0
 2278              	.LVL346:
1259:..\..\FatFS-master\source/ff.c **** 			if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 2279              		.loc 1 1259 0
 2280 00e8 19D1     		bne	.L158
1261:..\..\FatFS-master\source/ff.c **** 			}
 2281              		.loc 1 1261 0
 2282 00ea 3F01     		lsls	r7, r7, #4
 2283              	.LVL347:
 2284 00ec 3F09     		lsrs	r7, r7, #4
 2285 00ee 3200     		movs	r2, r6
 2286 00f0 3032     		adds	r2, r2, #48
 2287 00f2 A400     		lsls	r4, r4, #2
 2288              	.LVL348:
 2289 00f4 FE23     		movs	r3, #254
 2290 00f6 5B00     		lsls	r3, r3, #1
 2291 00f8 1C40     		ands	r4, r3
 2292 00fa 1419     		adds	r4, r2, r4
 2293 00fc 2000     		movs	r0, r4
 2294              	.LVL349:
 2295 00fe FFF7FEFF 		bl	ld_dword
 2296              	.LVL350:
 2297 0102 010F     		lsrs	r1, r0, #28
 2298 0104 0907     		lsls	r1, r1, #28
 2299 0106 3943     		orrs	r1, r7
 2300              	.LVL351:
1263:..\..\FatFS-master\source/ff.c **** 			fs->wflag = 1;
 2301              		.loc 1 1263 0
 2302 0108 2000     		movs	r0, r4
 2303 010a FFF7FEFF 		bl	st_dword
 2304              	.LVL352:
1264:..\..\FatFS-master\source/ff.c **** 			break;
 2305              		.loc 1 1264 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 106


 2306 010e 0123     		movs	r3, #1
 2307 0110 F370     		strb	r3, [r6, #3]
1265:..\..\FatFS-master\source/ff.c **** 		}
 2308              		.loc 1 1265 0
 2309 0112 04E0     		b	.L158
 2310              	.LVL353:
 2311              	.L166:
1228:..\..\FatFS-master\source/ff.c **** 
 2312              		.loc 1 1228 0
 2313 0114 0225     		movs	r5, #2
 2314 0116 02E0     		b	.L158
 2315              	.L167:
 2316 0118 0225     		movs	r5, #2
 2317 011a 00E0     		b	.L158
 2318              	.L169:
 2319 011c 0225     		movs	r5, #2
 2320              	.LVL354:
 2321              	.L158:
1269:..\..\FatFS-master\source/ff.c **** 
 2322              		.loc 1 1269 0
 2323 011e 2800     		movs	r0, r5
 2324              		@ sp needed
 2325              	.LVL355:
 2326              	.LVL356:
 2327 0120 1CBC     		pop	{r2, r3, r4}
 2328 0122 9046     		mov	r8, r2
 2329 0124 9946     		mov	r9, r3
 2330 0126 A246     		mov	r10, r4
 2331 0128 F0BD     		pop	{r4, r5, r6, r7, pc}
 2332              		.cfi_endproc
 2333              	.LFE15:
 2334              		.size	put_fat, .-put_fat
 2335 012a C046     		.section	.text.get_fat,"ax",%progbits
 2336              		.align	2
 2337              		.code	16
 2338              		.thumb_func
 2339              		.type	get_fat, %function
 2340              	get_fat:
 2341              	.LFB14:
1146:..\..\FatFS-master\source/ff.c **** 	UINT wc, bc;
 2342              		.loc 1 1146 0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 2346              	.LVL357:
 2347 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2348              		.cfi_def_cfa_offset 24
 2349              		.cfi_offset 3, -24
 2350              		.cfi_offset 4, -20
 2351              		.cfi_offset 5, -16
 2352              		.cfi_offset 6, -12
 2353              		.cfi_offset 7, -8
 2354              		.cfi_offset 14, -4
 2355 0002 0C00     		movs	r4, r1
1149:..\..\FatFS-master\source/ff.c **** 
 2356              		.loc 1 1149 0
 2357 0004 0568     		ldr	r5, [r0]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 107


 2358              	.LVL358:
1152:..\..\FatFS-master\source/ff.c **** 		val = 1;	/* Internal error */
 2359              		.loc 1 1152 0
 2360 0006 0129     		cmp	r1, #1
 2361 0008 57D9     		bls	.L176
1152:..\..\FatFS-master\source/ff.c **** 		val = 1;	/* Internal error */
 2362              		.loc 1 1152 0 is_stmt 0 discriminator 1
 2363 000a 6B69     		ldr	r3, [r5, #20]
 2364 000c 9942     		cmp	r1, r3
 2365 000e 56D2     		bcs	.L177
 2366              	.LVL359:
1158:..\..\FatFS-master\source/ff.c **** 		case FS_FAT12 :
 2367              		.loc 1 1158 0 is_stmt 1
 2368 0010 2B78     		ldrb	r3, [r5]
 2369 0012 022B     		cmp	r3, #2
 2370 0014 2BD0     		beq	.L172
 2371 0016 032B     		cmp	r3, #3
 2372 0018 3BD0     		beq	.L173
 2373 001a 012B     		cmp	r3, #1
 2374 001c 51D1     		bne	.L183
 2375              	.LVL360:
1160:..\..\FatFS-master\source/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2376              		.loc 1 1160 0
 2377 001e 4E08     		lsrs	r6, r1, #1
 2378 0020 8E19     		adds	r6, r1, r6
 2379              	.LVL361:
1161:..\..\FatFS-master\source/ff.c **** 			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
 2380              		.loc 1 1161 0
 2381 0022 710A     		lsrs	r1, r6, #9
 2382              	.LVL362:
 2383 0024 2B6A     		ldr	r3, [r5, #32]
 2384 0026 9C46     		mov	ip, r3
 2385 0028 6144     		add	r1, r1, ip
 2386 002a 2800     		movs	r0, r5
 2387              	.LVL363:
 2388 002c FFF7FEFF 		bl	move_window
 2389              	.LVL364:
 2390 0030 0028     		cmp	r0, #0
 2391 0032 48D1     		bne	.L179
1162:..\..\FatFS-master\source/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2392              		.loc 1 1162 0
 2393 0034 771C     		adds	r7, r6, #1
 2394              	.LVL365:
 2395 0036 F305     		lsls	r3, r6, #23
 2396 0038 DB0D     		lsrs	r3, r3, #23
 2397 003a EB18     		adds	r3, r5, r3
 2398 003c 3033     		adds	r3, r3, #48
 2399 003e 1E78     		ldrb	r6, [r3]
 2400              	.LVL366:
1163:..\..\FatFS-master\source/ff.c **** 			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
 2401              		.loc 1 1163 0
 2402 0040 790A     		lsrs	r1, r7, #9
 2403 0042 2B6A     		ldr	r3, [r5, #32]
 2404 0044 9C46     		mov	ip, r3
 2405 0046 6144     		add	r1, r1, ip
 2406 0048 2800     		movs	r0, r5
 2407 004a FFF7FEFF 		bl	move_window
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 108


 2408              	.LVL367:
 2409 004e 0028     		cmp	r0, #0
 2410 0050 3CD1     		bne	.L180
1164:..\..\FatFS-master\source/ff.c **** 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
 2411              		.loc 1 1164 0
 2412 0052 FF05     		lsls	r7, r7, #23
 2413              	.LVL368:
 2414 0054 FF0D     		lsrs	r7, r7, #23
 2415 0056 ED19     		adds	r5, r5, r7
 2416              	.LVL369:
 2417 0058 3035     		adds	r5, r5, #48
 2418 005a 2878     		ldrb	r0, [r5]
 2419 005c 0002     		lsls	r0, r0, #8
 2420 005e 3043     		orrs	r0, r6
 2421              	.LVL370:
1165:..\..\FatFS-master\source/ff.c **** 			break;
 2422              		.loc 1 1165 0
 2423 0060 E307     		lsls	r3, r4, #31
 2424 0062 01D5     		bpl	.L175
1165:..\..\FatFS-master\source/ff.c **** 			break;
 2425              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2426 0064 0009     		lsrs	r0, r0, #4
 2427              	.LVL371:
 2428 0066 39E0     		b	.L171
 2429              	.LVL372:
 2430              	.L175:
1165:..\..\FatFS-master\source/ff.c **** 			break;
 2431              		.loc 1 1165 0 discriminator 2
 2432 0068 0005     		lsls	r0, r0, #20
 2433              	.LVL373:
 2434 006a 000D     		lsrs	r0, r0, #20
 2435 006c 36E0     		b	.L171
 2436              	.LVL374:
 2437              	.L172:
1169:..\..\FatFS-master\source/ff.c **** 			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
 2438              		.loc 1 1169 0 is_stmt 1
 2439 006e 090A     		lsrs	r1, r1, #8
 2440              	.LVL375:
 2441 0070 2B6A     		ldr	r3, [r5, #32]
 2442 0072 9C46     		mov	ip, r3
 2443 0074 6144     		add	r1, r1, ip
 2444 0076 2800     		movs	r0, r5
 2445              	.LVL376:
 2446 0078 FFF7FEFF 		bl	move_window
 2447              	.LVL377:
 2448 007c 0028     		cmp	r0, #0
 2449 007e 28D1     		bne	.L181
1170:..\..\FatFS-master\source/ff.c **** 			break;
 2450              		.loc 1 1170 0
 2451 0080 3035     		adds	r5, r5, #48
 2452              	.LVL378:
 2453 0082 6400     		lsls	r4, r4, #1
 2454              	.LVL379:
 2455 0084 FF23     		movs	r3, #255
 2456 0086 5B00     		lsls	r3, r3, #1
 2457 0088 1C40     		ands	r4, r3
 2458 008a 2819     		adds	r0, r5, r4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 109


 2459 008c FFF7FEFF 		bl	ld_word
 2460              	.LVL380:
1171:..\..\FatFS-master\source/ff.c **** 
 2461              		.loc 1 1171 0
 2462 0090 24E0     		b	.L171
 2463              	.LVL381:
 2464              	.L173:
1174:..\..\FatFS-master\source/ff.c **** 			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upp
 2465              		.loc 1 1174 0
 2466 0092 C909     		lsrs	r1, r1, #7
 2467              	.LVL382:
 2468 0094 2B6A     		ldr	r3, [r5, #32]
 2469 0096 9C46     		mov	ip, r3
 2470 0098 6144     		add	r1, r1, ip
 2471 009a 2800     		movs	r0, r5
 2472              	.LVL383:
 2473 009c FFF7FEFF 		bl	move_window
 2474              	.LVL384:
 2475 00a0 0028     		cmp	r0, #0
 2476 00a2 19D1     		bne	.L182
1175:..\..\FatFS-master\source/ff.c **** 			break;
 2477              		.loc 1 1175 0
 2478 00a4 3035     		adds	r5, r5, #48
 2479              	.LVL385:
 2480 00a6 A400     		lsls	r4, r4, #2
 2481              	.LVL386:
 2482 00a8 FD30     		adds	r0, r0, #253
 2483 00aa FF30     		adds	r0, r0, #255
 2484 00ac 0440     		ands	r4, r0
 2485 00ae 2819     		adds	r0, r5, r4
 2486 00b0 FFF7FEFF 		bl	ld_dword
 2487              	.LVL387:
 2488 00b4 0001     		lsls	r0, r0, #4
 2489 00b6 0009     		lsrs	r0, r0, #4
 2490              	.LVL388:
1176:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
 2491              		.loc 1 1176 0
 2492 00b8 10E0     		b	.L171
 2493              	.LVL389:
 2494              	.L176:
1153:..\..\FatFS-master\source/ff.c **** 
 2495              		.loc 1 1153 0
 2496 00ba 0120     		movs	r0, #1
 2497              	.LVL390:
 2498 00bc 0EE0     		b	.L171
 2499              	.LVL391:
 2500              	.L177:
 2501 00be 0120     		movs	r0, #1
 2502              	.LVL392:
 2503 00c0 0CE0     		b	.L171
 2504              	.LVL393:
 2505              	.L183:
1204:..\..\FatFS-master\source/ff.c **** 		}
 2506              		.loc 1 1204 0
 2507 00c2 0120     		movs	r0, #1
 2508              	.LVL394:
 2509 00c4 0AE0     		b	.L171
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 110


 2510              	.LVL395:
 2511              	.L179:
1156:..\..\FatFS-master\source/ff.c **** 
 2512              		.loc 1 1156 0
 2513 00c6 0120     		movs	r0, #1
 2514 00c8 4042     		rsbs	r0, r0, #0
 2515 00ca 07E0     		b	.L171
 2516              	.LVL396:
 2517              	.L180:
 2518 00cc 0120     		movs	r0, #1
 2519 00ce 4042     		rsbs	r0, r0, #0
 2520 00d0 04E0     		b	.L171
 2521              	.LVL397:
 2522              	.L181:
 2523 00d2 0120     		movs	r0, #1
 2524 00d4 4042     		rsbs	r0, r0, #0
 2525 00d6 01E0     		b	.L171
 2526              	.L182:
 2527 00d8 0120     		movs	r0, #1
 2528 00da 4042     		rsbs	r0, r0, #0
 2529              	.LVL398:
 2530              	.L171:
1209:..\..\FatFS-master\source/ff.c **** 
 2531              		.loc 1 1209 0
 2532              		@ sp needed
 2533 00dc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2534              		.cfi_endproc
 2535              	.LFE14:
 2536              		.size	get_fat, .-get_fat
 2537 00de C046     		.section	.text.dir_sdi,"ax",%progbits
 2538              		.align	2
 2539              		.code	16
 2540              		.thumb_func
 2541              		.type	dir_sdi, %function
 2542              	dir_sdi:
 2543              	.LFB19:
1688:..\..\FatFS-master\source/ff.c **** 	DWORD csz, clst;
 2544              		.loc 1 1688 0
 2545              		.cfi_startproc
 2546              		@ args = 0, pretend = 0, frame = 0
 2547              		@ frame_needed = 0, uses_anonymous_args = 0
 2548              	.LVL399:
 2549 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2550              		.cfi_def_cfa_offset 20
 2551              		.cfi_offset 4, -20
 2552              		.cfi_offset 5, -16
 2553              		.cfi_offset 6, -12
 2554              		.cfi_offset 7, -8
 2555              		.cfi_offset 14, -4
 2556 0002 4746     		mov	r7, r8
 2557 0004 80B4     		push	{r7}
 2558              		.cfi_def_cfa_offset 24
 2559              		.cfi_offset 8, -24
 2560 0006 0600     		movs	r6, r0
 2561 0008 0C00     		movs	r4, r1
1690:..\..\FatFS-master\source/ff.c **** 
 2562              		.loc 1 1690 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 111


 2563 000a 0768     		ldr	r7, [r0]
 2564              	.LVL400:
1693:..\..\FatFS-master\source/ff.c **** 		return FR_INT_ERR;
 2565              		.loc 1 1693 0
 2566 000c 264B     		ldr	r3, .L198
 2567 000e 9942     		cmp	r1, r3
 2568 0010 39D8     		bhi	.L191
1693:..\..\FatFS-master\source/ff.c **** 		return FR_INT_ERR;
 2569              		.loc 1 1693 0 is_stmt 0 discriminator 1
 2570 0012 CB06     		lsls	r3, r1, #27
 2571 0014 39D1     		bne	.L192
1696:..\..\FatFS-master\source/ff.c **** 	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 2572              		.loc 1 1696 0 is_stmt 1
 2573 0016 3161     		str	r1, [r6, #16]
1697:..\..\FatFS-master\source/ff.c **** 	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 2574              		.loc 1 1697 0
 2575 0018 8568     		ldr	r5, [r0, #8]
 2576              	.LVL401:
1698:..\..\FatFS-master\source/ff.c **** 		clst = fs->dirbase;
 2577              		.loc 1 1698 0
 2578 001a 002D     		cmp	r5, #0
 2579 001c 03D1     		bne	.L186
1698:..\..\FatFS-master\source/ff.c **** 		clst = fs->dirbase;
 2580              		.loc 1 1698 0 is_stmt 0 discriminator 1
 2581 001e 3B78     		ldrb	r3, [r7]
 2582 0020 022B     		cmp	r3, #2
 2583 0022 00D9     		bls	.L186
1699:..\..\FatFS-master\source/ff.c **** 		if (FF_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
 2584              		.loc 1 1699 0 is_stmt 1
 2585 0024 7D6A     		ldr	r5, [r7, #36]
 2586              	.LVL402:
 2587              	.L186:
1703:..\..\FatFS-master\source/ff.c **** 		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
 2588              		.loc 1 1703 0
 2589 0026 002D     		cmp	r5, #0
 2590 0028 06D1     		bne	.L187
1704:..\..\FatFS-master\source/ff.c **** 		dp->sect = fs->dirbase;
 2591              		.loc 1 1704 0
 2592 002a 6309     		lsrs	r3, r4, #5
 2593 002c 3A89     		ldrh	r2, [r7, #8]
 2594 002e 9342     		cmp	r3, r2
 2595 0030 2DD2     		bcs	.L193
1705:..\..\FatFS-master\source/ff.c **** 
 2596              		.loc 1 1705 0
 2597 0032 7B6A     		ldr	r3, [r7, #36]
 2598 0034 B361     		str	r3, [r6, #24]
 2599 0036 18E0     		b	.L188
 2600              	.L187:
1708:..\..\FatFS-master\source/ff.c **** 		while (ofs >= csz) {				/* Follow cluster chain */
 2601              		.loc 1 1708 0
 2602 0038 7B89     		ldrh	r3, [r7, #10]
 2603 003a 5B02     		lsls	r3, r3, #9
 2604 003c 9846     		mov	r8, r3
 2605              	.LVL403:
1709:..\..\FatFS-master\source/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2606              		.loc 1 1709 0
 2607 003e 0DE0     		b	.L189
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 112


 2608              	.LVL404:
 2609              	.L190:
1710:..\..\FatFS-master\source/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2610              		.loc 1 1710 0
 2611 0040 2900     		movs	r1, r5
 2612 0042 3000     		movs	r0, r6
 2613 0044 FFF7FEFF 		bl	get_fat
 2614              	.LVL405:
 2615 0048 0500     		movs	r5, r0
 2616              	.LVL406:
1711:..\..\FatFS-master\source/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2617              		.loc 1 1711 0
 2618 004a 431C     		adds	r3, r0, #1
 2619 004c 21D0     		beq	.L194
1712:..\..\FatFS-master\source/ff.c **** 			ofs -= csz;
 2620              		.loc 1 1712 0
 2621 004e 0128     		cmp	r0, #1
 2622 0050 21D9     		bls	.L195
1712:..\..\FatFS-master\source/ff.c **** 			ofs -= csz;
 2623              		.loc 1 1712 0 is_stmt 0 discriminator 2
 2624 0052 7B69     		ldr	r3, [r7, #20]
 2625 0054 9842     		cmp	r0, r3
 2626 0056 20D2     		bcs	.L196
1713:..\..\FatFS-master\source/ff.c **** 		}
 2627              		.loc 1 1713 0 is_stmt 1
 2628 0058 4346     		mov	r3, r8
 2629 005a E41A     		subs	r4, r4, r3
 2630              	.LVL407:
 2631              	.L189:
1709:..\..\FatFS-master\source/ff.c **** 			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 2632              		.loc 1 1709 0
 2633 005c 4445     		cmp	r4, r8
 2634 005e EFD2     		bcs	.L190
1715:..\..\FatFS-master\source/ff.c **** 	}
 2635              		.loc 1 1715 0
 2636 0060 2900     		movs	r1, r5
 2637 0062 3800     		movs	r0, r7
 2638 0064 FFF7FEFF 		bl	clst2sect
 2639              	.LVL408:
 2640 0068 B061     		str	r0, [r6, #24]
 2641              	.LVL409:
 2642              	.L188:
1717:..\..\FatFS-master\source/ff.c **** 	if (dp->sect == 0) return FR_INT_ERR;
 2643              		.loc 1 1717 0
 2644 006a 7561     		str	r5, [r6, #20]
1718:..\..\FatFS-master\source/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2645              		.loc 1 1718 0
 2646 006c B369     		ldr	r3, [r6, #24]
 2647 006e 002B     		cmp	r3, #0
 2648 0070 15D0     		beq	.L197
1719:..\..\FatFS-master\source/ff.c **** 	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 2649              		.loc 1 1719 0
 2650 0072 620A     		lsrs	r2, r4, #9
 2651 0074 9B18     		adds	r3, r3, r2
 2652 0076 B361     		str	r3, [r6, #24]
1720:..\..\FatFS-master\source/ff.c **** 
 2653              		.loc 1 1720 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 113


 2654 0078 3037     		adds	r7, r7, #48
 2655              	.LVL410:
 2656 007a E405     		lsls	r4, r4, #23
 2657              	.LVL411:
 2658 007c E40D     		lsrs	r4, r4, #23
 2659 007e 3C19     		adds	r4, r7, r4
 2660 0080 F461     		str	r4, [r6, #28]
1722:..\..\FatFS-master\source/ff.c **** }
 2661              		.loc 1 1722 0
 2662 0082 0020     		movs	r0, #0
 2663 0084 0CE0     		b	.L185
 2664              	.LVL412:
 2665              	.L191:
1694:..\..\FatFS-master\source/ff.c **** 	}
 2666              		.loc 1 1694 0
 2667 0086 0220     		movs	r0, #2
 2668              	.LVL413:
 2669 0088 0AE0     		b	.L185
 2670              	.LVL414:
 2671              	.L192:
 2672 008a 0220     		movs	r0, #2
 2673              	.LVL415:
 2674 008c 08E0     		b	.L185
 2675              	.LVL416:
 2676              	.L193:
1704:..\..\FatFS-master\source/ff.c **** 		dp->sect = fs->dirbase;
 2677              		.loc 1 1704 0
 2678 008e 0220     		movs	r0, #2
 2679              	.LVL417:
 2680 0090 06E0     		b	.L185
 2681              	.LVL418:
 2682              	.L194:
1711:..\..\FatFS-master\source/ff.c **** 			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal 
 2683              		.loc 1 1711 0
 2684 0092 0120     		movs	r0, #1
 2685              	.LVL419:
 2686 0094 04E0     		b	.L185
 2687              	.LVL420:
 2688              	.L195:
1712:..\..\FatFS-master\source/ff.c **** 			ofs -= csz;
 2689              		.loc 1 1712 0
 2690 0096 0220     		movs	r0, #2
 2691              	.LVL421:
 2692 0098 02E0     		b	.L185
 2693              	.LVL422:
 2694              	.L196:
 2695 009a 0220     		movs	r0, #2
 2696              	.LVL423:
 2697 009c 00E0     		b	.L185
 2698              	.LVL424:
 2699              	.L197:
1718:..\..\FatFS-master\source/ff.c **** 	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 2700              		.loc 1 1718 0
 2701 009e 0220     		movs	r0, #2
 2702              	.LVL425:
 2703              	.L185:
1723:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 114


 2704              		.loc 1 1723 0
 2705              		@ sp needed
 2706              	.LVL426:
 2707 00a0 04BC     		pop	{r2}
 2708 00a2 9046     		mov	r8, r2
 2709 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 2710              	.L199:
 2711 00a6 C046     		.align	2
 2712              	.L198:
 2713 00a8 FFFF1F00 		.word	2097151
 2714              		.cfi_endproc
 2715              	.LFE19:
 2716              		.size	dir_sdi, .-dir_sdi
 2717              		.section	.text.create_chain,"ax",%progbits
 2718              		.align	2
 2719              		.code	16
 2720              		.thumb_func
 2721              		.type	create_chain, %function
 2722              	create_chain:
 2723              	.LFB17:
1513:..\..\FatFS-master\source/ff.c **** 	DWORD cs, ncl, scl;
 2724              		.loc 1 1513 0
 2725              		.cfi_startproc
 2726              		@ args = 0, pretend = 0, frame = 0
 2727              		@ frame_needed = 0, uses_anonymous_args = 0
 2728              	.LVL427:
 2729 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2730              		.cfi_def_cfa_offset 20
 2731              		.cfi_offset 4, -20
 2732              		.cfi_offset 5, -16
 2733              		.cfi_offset 6, -12
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 4746     		mov	r7, r8
 2737 0004 80B4     		push	{r7}
 2738              		.cfi_def_cfa_offset 24
 2739              		.cfi_offset 8, -24
 2740 0006 0500     		movs	r5, r0
 2741 0008 8846     		mov	r8, r1
1516:..\..\FatFS-master\source/ff.c **** 
 2742              		.loc 1 1516 0
 2743 000a 0768     		ldr	r7, [r0]
 2744              	.LVL428:
1519:..\..\FatFS-master\source/ff.c **** 		scl = fs->last_clst;				/* Suggested cluster to start to find */
 2745              		.loc 1 1519 0
 2746 000c 0029     		cmp	r1, #0
 2747 000e 06D1     		bne	.L201
1520:..\..\FatFS-master\source/ff.c **** 		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 2748              		.loc 1 1520 0
 2749 0010 FE68     		ldr	r6, [r7, #12]
 2750              	.LVL429:
1521:..\..\FatFS-master\source/ff.c **** 	}
 2751              		.loc 1 1521 0
 2752 0012 002E     		cmp	r6, #0
 2753 0014 0ED0     		beq	.L212
1521:..\..\FatFS-master\source/ff.c **** 	}
 2754              		.loc 1 1521 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 115


 2755 0016 7B69     		ldr	r3, [r7, #20]
 2756 0018 9E42     		cmp	r6, r3
 2757 001a 0DD2     		bcs	.L213
 2758 001c 0DE0     		b	.L202
 2759              	.LVL430:
 2760              	.L201:
1524:..\..\FatFS-master\source/ff.c **** 		if (cs < 2) return 1;				/* Test for insanity */
 2761              		.loc 1 1524 0 is_stmt 1
 2762 001e FFF7FEFF 		bl	get_fat
 2763              	.LVL431:
1525:..\..\FatFS-master\source/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
 2764              		.loc 1 1525 0
 2765 0022 0128     		cmp	r0, #1
 2766 0024 66D9     		bls	.L214
1526:..\..\FatFS-master\source/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2767              		.loc 1 1526 0
 2768 0026 431C     		adds	r3, r0, #1
 2769 0028 6BD0     		beq	.L203
1527:..\..\FatFS-master\source/ff.c **** 		scl = clst;							/* Cluster to start to find */
 2770              		.loc 1 1527 0
 2771 002a 7B69     		ldr	r3, [r7, #20]
 2772 002c 9842     		cmp	r0, r3
 2773 002e 68D3     		bcc	.L203
1528:..\..\FatFS-master\source/ff.c **** 	}
 2774              		.loc 1 1528 0
 2775 0030 4646     		mov	r6, r8
 2776 0032 02E0     		b	.L202
 2777              	.LVL432:
 2778              	.L212:
1521:..\..\FatFS-master\source/ff.c **** 	}
 2779              		.loc 1 1521 0
 2780 0034 0126     		movs	r6, #1
 2781              	.LVL433:
 2782 0036 00E0     		b	.L202
 2783              	.LVL434:
 2784              	.L213:
 2785 0038 0126     		movs	r6, #1
 2786              	.LVL435:
 2787              	.L202:
1530:..\..\FatFS-master\source/ff.c **** 
 2788              		.loc 1 1530 0
 2789 003a 3869     		ldr	r0, [r7, #16]
 2790 003c 0028     		cmp	r0, #0
 2791 003e 60D0     		beq	.L203
 2792              	.LVL436:
1560:..\..\FatFS-master\source/ff.c **** 			ncl = scl + 1;						/* Test if next cluster is free */
 2793              		.loc 1 1560 0
 2794 0040 4645     		cmp	r6, r8
 2795 0042 16D1     		bne	.L217
1561:..\..\FatFS-master\source/ff.c **** 			if (ncl >= fs->n_fatent) ncl = 2;
 2796              		.loc 1 1561 0
 2797 0044 741C     		adds	r4, r6, #1
 2798              	.LVL437:
1562:..\..\FatFS-master\source/ff.c **** 			cs = get_fat(obj, ncl);				/* Get next cluster status */
 2799              		.loc 1 1562 0
 2800 0046 7B69     		ldr	r3, [r7, #20]
 2801 0048 9C42     		cmp	r4, r3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 116


 2802 004a 00D3     		bcc	.L205
 2803 004c 0224     		movs	r4, #2
 2804              	.LVL438:
 2805              	.L205:
1563:..\..\FatFS-master\source/ff.c **** 			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
 2806              		.loc 1 1563 0
 2807 004e 2100     		movs	r1, r4
 2808 0050 2800     		movs	r0, r5
 2809 0052 FFF7FEFF 		bl	get_fat
 2810              	.LVL439:
1564:..\..\FatFS-master\source/ff.c **** 			if (cs != 0) {						/* Not free? */
 2811              		.loc 1 1564 0
 2812 0056 0128     		cmp	r0, #1
 2813 0058 53D0     		beq	.L203
1564:..\..\FatFS-master\source/ff.c **** 			if (cs != 0) {						/* Not free? */
 2814              		.loc 1 1564 0 is_stmt 0 discriminator 2
 2815 005a 431C     		adds	r3, r0, #1
 2816 005c 51D0     		beq	.L203
1565:..\..\FatFS-master\source/ff.c **** 				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
 2817              		.loc 1 1565 0 is_stmt 1
 2818 005e 0028     		cmp	r0, #0
 2819 0060 0DD0     		beq	.L204
1566:..\..\FatFS-master\source/ff.c **** 				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 2820              		.loc 1 1566 0
 2821 0062 FB68     		ldr	r3, [r7, #12]
 2822              	.LVL440:
1567:..\..\FatFS-master\source/ff.c **** 				ncl = 0;
 2823              		.loc 1 1567 0
 2824 0064 012B     		cmp	r3, #1
 2825 0066 06D9     		bls	.L221
1567:..\..\FatFS-master\source/ff.c **** 				ncl = 0;
 2826              		.loc 1 1567 0 is_stmt 0 discriminator 1
 2827 0068 7A69     		ldr	r2, [r7, #20]
 2828 006a 9342     		cmp	r3, r2
 2829 006c 05D3     		bcc	.L222
1568:..\..\FatFS-master\source/ff.c **** 			}
 2830              		.loc 1 1568 0 is_stmt 1
 2831 006e 0024     		movs	r4, #0
 2832              	.LVL441:
 2833 0070 05E0     		b	.L204
 2834              	.LVL442:
 2835              	.L217:
1559:..\..\FatFS-master\source/ff.c **** 		if (scl == clst) {						/* Stretching an existing chain? */
 2836              		.loc 1 1559 0
 2837 0072 0024     		movs	r4, #0
 2838 0074 03E0     		b	.L204
 2839              	.LVL443:
 2840              	.L221:
1568:..\..\FatFS-master\source/ff.c **** 			}
 2841              		.loc 1 1568 0
 2842 0076 0024     		movs	r4, #0
 2843              	.LVL444:
 2844 0078 01E0     		b	.L204
 2845              	.LVL445:
 2846              	.L222:
1567:..\..\FatFS-master\source/ff.c **** 				ncl = 0;
 2847              		.loc 1 1567 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 117


 2848 007a 1E00     		movs	r6, r3
 2849              	.LVL446:
1568:..\..\FatFS-master\source/ff.c **** 			}
 2850              		.loc 1 1568 0
 2851 007c 0024     		movs	r4, #0
 2852              	.LVL447:
 2853              	.L204:
1571:..\..\FatFS-master\source/ff.c **** 			ncl = scl;	/* Start cluster */
 2854              		.loc 1 1571 0
 2855 007e 002C     		cmp	r4, #0
 2856 0080 14D1     		bne	.L206
 2857 0082 3400     		movs	r4, r6
 2858              	.LVL448:
 2859              	.L208:
1574:..\..\FatFS-master\source/ff.c **** 				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 2860              		.loc 1 1574 0
 2861 0084 0134     		adds	r4, r4, #1
 2862              	.LVL449:
1575:..\..\FatFS-master\source/ff.c **** 					ncl = 2;
 2863              		.loc 1 1575 0
 2864 0086 7B69     		ldr	r3, [r7, #20]
 2865 0088 9C42     		cmp	r4, r3
 2866 008a 02D3     		bcc	.L207
 2867              	.LVL450:
1577:..\..\FatFS-master\source/ff.c **** 				}
 2868              		.loc 1 1577 0
 2869 008c 012E     		cmp	r6, #1
 2870 008e 33D9     		bls	.L223
1576:..\..\FatFS-master\source/ff.c **** 					if (ncl > scl) return 0;	/* No free cluster found? */
 2871              		.loc 1 1576 0
 2872 0090 0224     		movs	r4, #2
 2873              	.LVL451:
 2874              	.L207:
1579:..\..\FatFS-master\source/ff.c **** 				if (cs == 0) break;				/* Found a free cluster? */
 2875              		.loc 1 1579 0
 2876 0092 2100     		movs	r1, r4
 2877 0094 2800     		movs	r0, r5
 2878 0096 FFF7FEFF 		bl	get_fat
 2879              	.LVL452:
1580:..\..\FatFS-master\source/ff.c **** 				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
 2880              		.loc 1 1580 0
 2881 009a 0028     		cmp	r0, #0
 2882 009c 06D0     		beq	.L206
1581:..\..\FatFS-master\source/ff.c **** 				if (ncl == scl) return 0;		/* No free cluster found? */
 2883              		.loc 1 1581 0
 2884 009e 0128     		cmp	r0, #1
 2885 00a0 2FD0     		beq	.L203
1581:..\..\FatFS-master\source/ff.c **** 				if (ncl == scl) return 0;		/* No free cluster found? */
 2886              		.loc 1 1581 0 is_stmt 0 discriminator 2
 2887 00a2 431C     		adds	r3, r0, #1
 2888 00a4 2DD0     		beq	.L203
1582:..\..\FatFS-master\source/ff.c **** 			}
 2889              		.loc 1 1582 0 is_stmt 1
 2890 00a6 B442     		cmp	r4, r6
 2891 00a8 ECD1     		bne	.L208
 2892 00aa 27E0     		b	.L226
 2893              	.LVL453:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 118


 2894              	.L206:
1585:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK && clst != 0) {
 2895              		.loc 1 1585 0
 2896 00ac 0122     		movs	r2, #1
 2897 00ae 5242     		rsbs	r2, r2, #0
 2898 00b0 2100     		movs	r1, r4
 2899 00b2 3800     		movs	r0, r7
 2900 00b4 FFF7FEFF 		bl	put_fat
 2901              	.LVL454:
1586:..\..\FatFS-master\source/ff.c **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
 2902              		.loc 1 1586 0
 2903 00b8 0028     		cmp	r0, #0
 2904 00ba 07D1     		bne	.L209
1586:..\..\FatFS-master\source/ff.c **** 			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
 2905              		.loc 1 1586 0 is_stmt 0 discriminator 1
 2906 00bc 4346     		mov	r3, r8
 2907 00be 002B     		cmp	r3, #0
 2908 00c0 04D0     		beq	.L209
 2909              	.LVL455:
1587:..\..\FatFS-master\source/ff.c **** 		}
 2910              		.loc 1 1587 0 is_stmt 1
 2911 00c2 2200     		movs	r2, r4
 2912 00c4 4146     		mov	r1, r8
 2913 00c6 3800     		movs	r0, r7
 2914              	.LVL456:
 2915 00c8 FFF7FEFF 		bl	put_fat
 2916              	.LVL457:
 2917              	.L209:
1591:..\..\FatFS-master\source/ff.c **** 		fs->last_clst = ncl;
 2918              		.loc 1 1591 0
 2919 00cc 0028     		cmp	r0, #0
 2920 00ce 0DD1     		bne	.L210
1592:..\..\FatFS-master\source/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 2921              		.loc 1 1592 0
 2922 00d0 FC60     		str	r4, [r7, #12]
1593:..\..\FatFS-master\source/ff.c **** 		fs->fsi_flag |= 1;
 2923              		.loc 1 1593 0
 2924 00d2 3A69     		ldr	r2, [r7, #16]
 2925 00d4 7B69     		ldr	r3, [r7, #20]
 2926 00d6 023B     		subs	r3, r3, #2
 2927 00d8 9A42     		cmp	r2, r3
 2928 00da 01D8     		bhi	.L211
1593:..\..\FatFS-master\source/ff.c **** 		fs->fsi_flag |= 1;
 2929              		.loc 1 1593 0 is_stmt 0 discriminator 1
 2930 00dc 013A     		subs	r2, r2, #1
 2931 00de 3A61     		str	r2, [r7, #16]
 2932              	.L211:
1594:..\..\FatFS-master\source/ff.c **** 	} else {
 2933              		.loc 1 1594 0 is_stmt 1
 2934 00e0 3A79     		ldrb	r2, [r7, #4]
 2935 00e2 0123     		movs	r3, #1
 2936 00e4 1343     		orrs	r3, r2
 2937 00e6 3B71     		strb	r3, [r7, #4]
 2938 00e8 2000     		movs	r0, r4
 2939              	.LVL458:
 2940 00ea 0AE0     		b	.L203
 2941              	.LVL459:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 119


 2942              	.L210:
1596:..\..\FatFS-master\source/ff.c **** 	}
 2943              		.loc 1 1596 0
 2944 00ec 0128     		cmp	r0, #1
 2945 00ee 07D1     		bne	.L227
 2946 00f0 0238     		subs	r0, r0, #2
 2947              	.LVL460:
 2948 00f2 06E0     		b	.L203
 2949              	.LVL461:
 2950              	.L214:
1525:..\..\FatFS-master\source/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
 2951              		.loc 1 1525 0
 2952 00f4 0120     		movs	r0, #1
 2953              	.LVL462:
 2954 00f6 04E0     		b	.L203
 2955              	.LVL463:
 2956              	.L223:
1577:..\..\FatFS-master\source/ff.c **** 				}
 2957              		.loc 1 1577 0
 2958 00f8 0020     		movs	r0, #0
 2959 00fa 02E0     		b	.L203
 2960              	.LVL464:
 2961              	.L226:
1582:..\..\FatFS-master\source/ff.c **** 			}
 2962              		.loc 1 1582 0
 2963 00fc 0020     		movs	r0, #0
 2964              	.LVL465:
 2965 00fe 00E0     		b	.L203
 2966              	.LVL466:
 2967              	.L227:
1596:..\..\FatFS-master\source/ff.c **** 	}
 2968              		.loc 1 1596 0
 2969 0100 0120     		movs	r0, #1
 2970              	.LVL467:
 2971              	.L203:
1600:..\..\FatFS-master\source/ff.c **** 
 2972              		.loc 1 1600 0
 2973              		@ sp needed
 2974              	.LVL468:
 2975              	.LVL469:
 2976              	.LVL470:
 2977 0102 04BC     		pop	{r2}
 2978 0104 9046     		mov	r8, r2
 2979 0106 F0BD     		pop	{r4, r5, r6, r7, pc}
 2980              		.cfi_endproc
 2981              	.LFE17:
 2982              		.size	create_chain, .-create_chain
 2983              		.section	.text.remove_chain,"ax",%progbits
 2984              		.align	2
 2985              		.code	16
 2986              		.thumb_func
 2987              		.type	remove_chain, %function
 2988              	remove_chain:
 2989              	.LFB16:
1419:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_OK;
 2990              		.loc 1 1419 0
 2991              		.cfi_startproc
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 120


 2992              		@ args = 0, pretend = 0, frame = 0
 2993              		@ frame_needed = 0, uses_anonymous_args = 0
 2994              	.LVL471:
 2995 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2996              		.cfi_def_cfa_offset 24
 2997              		.cfi_offset 3, -24
 2998              		.cfi_offset 4, -20
 2999              		.cfi_offset 5, -16
 3000              		.cfi_offset 6, -12
 3001              		.cfi_offset 7, -8
 3002              		.cfi_offset 14, -4
 3003 0002 0700     		movs	r7, r0
 3004 0004 0C00     		movs	r4, r1
 3005 0006 1100     		movs	r1, r2
 3006              	.LVL472:
1422:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT || FF_USE_TRIM
 3007              		.loc 1 1422 0
 3008 0008 0568     		ldr	r5, [r0]
 3009              	.LVL473:
1430:..\..\FatFS-master\source/ff.c **** 
 3010              		.loc 1 1430 0
 3011 000a 012C     		cmp	r4, #1
 3012 000c 2CD9     		bls	.L233
1430:..\..\FatFS-master\source/ff.c **** 
 3013              		.loc 1 1430 0 is_stmt 0 discriminator 2
 3014 000e 6B69     		ldr	r3, [r5, #20]
 3015 0010 9C42     		cmp	r4, r3
 3016 0012 2BD2     		bcs	.L234
1433:..\..\FatFS-master\source/ff.c **** 		res = put_fat(fs, pclst, 0xFFFFFFFF);
 3017              		.loc 1 1433 0 is_stmt 1
 3018 0014 002A     		cmp	r2, #0
 3019 0016 06D0     		beq	.L232
1434:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) return res;
 3020              		.loc 1 1434 0
 3021 0018 0122     		movs	r2, #1
 3022              	.LVL474:
 3023 001a 5242     		rsbs	r2, r2, #0
 3024 001c 2800     		movs	r0, r5
 3025              	.LVL475:
 3026 001e FFF7FEFF 		bl	put_fat
 3027              	.LVL476:
1435:..\..\FatFS-master\source/ff.c **** 	}
 3028              		.loc 1 1435 0
 3029 0022 0028     		cmp	r0, #0
 3030 0024 29D1     		bne	.L229
 3031              	.LVL477:
 3032              	.L232:
1440:..\..\FatFS-master\source/ff.c **** 		if (nxt == 0) break;				/* Empty cluster? */
 3033              		.loc 1 1440 0
 3034 0026 2100     		movs	r1, r4
 3035 0028 3800     		movs	r0, r7
 3036 002a FFF7FEFF 		bl	get_fat
 3037              	.LVL478:
 3038 002e 061E     		subs	r6, r0, #0
 3039              	.LVL479:
1441:..\..\FatFS-master\source/ff.c **** 		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
 3040              		.loc 1 1441 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 121


 3041 0030 1ED0     		beq	.L236
1442:..\..\FatFS-master\source/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3042              		.loc 1 1442 0
 3043 0032 0128     		cmp	r0, #1
 3044 0034 1ED0     		beq	.L237
1443:..\..\FatFS-master\source/ff.c **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3045              		.loc 1 1443 0
 3046 0036 431C     		adds	r3, r0, #1
 3047 0038 1ED0     		beq	.L238
1445:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) return res;
 3048              		.loc 1 1445 0
 3049 003a 0022     		movs	r2, #0
 3050 003c 2100     		movs	r1, r4
 3051 003e 2800     		movs	r0, r5
 3052              	.LVL480:
 3053 0040 FFF7FEFF 		bl	put_fat
 3054              	.LVL481:
1446:..\..\FatFS-master\source/ff.c **** 		}
 3055              		.loc 1 1446 0
 3056 0044 0028     		cmp	r0, #0
 3057 0046 18D1     		bne	.L229
1448:..\..\FatFS-master\source/ff.c **** 			fs->free_clst++;
 3058              		.loc 1 1448 0
 3059 0048 2B69     		ldr	r3, [r5, #16]
 3060 004a 6A69     		ldr	r2, [r5, #20]
 3061 004c 911E     		subs	r1, r2, #2
 3062 004e 8B42     		cmp	r3, r1
 3063 0050 05D2     		bcs	.L231
1449:..\..\FatFS-master\source/ff.c **** 			fs->fsi_flag |= 1;
 3064              		.loc 1 1449 0
 3065 0052 0133     		adds	r3, r3, #1
 3066 0054 2B61     		str	r3, [r5, #16]
1450:..\..\FatFS-master\source/ff.c **** 		}
 3067              		.loc 1 1450 0
 3068 0056 2979     		ldrb	r1, [r5, #4]
 3069 0058 0123     		movs	r3, #1
 3070 005a 0B43     		orrs	r3, r1
 3071 005c 2B71     		strb	r3, [r5, #4]
 3072              	.L231:
 3073              	.LVL482:
1470:..\..\FatFS-master\source/ff.c **** 	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
 3074              		.loc 1 1470 0
 3075 005e 3400     		movs	r4, r6
1471:..\..\FatFS-master\source/ff.c **** 
 3076              		.loc 1 1471 0
 3077 0060 9642     		cmp	r6, r2
 3078 0062 E0D3     		bcc	.L232
 3079              	.LVL483:
1499:..\..\FatFS-master\source/ff.c **** }
 3080              		.loc 1 1499 0
 3081 0064 0020     		movs	r0, #0
 3082              	.LVL484:
 3083 0066 08E0     		b	.L229
 3084              	.LVL485:
 3085              	.L233:
1430:..\..\FatFS-master\source/ff.c **** 
 3086              		.loc 1 1430 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 122


 3087 0068 0220     		movs	r0, #2
 3088              	.LVL486:
 3089 006a 06E0     		b	.L229
 3090              	.LVL487:
 3091              	.L234:
 3092 006c 0220     		movs	r0, #2
 3093              	.LVL488:
 3094 006e 04E0     		b	.L229
 3095              	.LVL489:
 3096              	.L236:
1499:..\..\FatFS-master\source/ff.c **** }
 3097              		.loc 1 1499 0
 3098 0070 0020     		movs	r0, #0
 3099              	.LVL490:
 3100 0072 02E0     		b	.L229
 3101              	.LVL491:
 3102              	.L237:
1442:..\..\FatFS-master\source/ff.c **** 		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
 3103              		.loc 1 1442 0
 3104 0074 0220     		movs	r0, #2
 3105              	.LVL492:
 3106 0076 00E0     		b	.L229
 3107              	.LVL493:
 3108              	.L238:
1443:..\..\FatFS-master\source/ff.c **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
 3109              		.loc 1 1443 0
 3110 0078 0120     		movs	r0, #1
 3111              	.LVL494:
 3112              	.L229:
1500:..\..\FatFS-master\source/ff.c **** 
 3113              		.loc 1 1500 0
 3114              		@ sp needed
 3115              	.LVL495:
 3116              	.LVL496:
 3117              	.LVL497:
 3118 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3119              		.cfi_endproc
 3120              	.LFE16:
 3121              		.size	remove_chain, .-remove_chain
 3122              		.section	.text.dir_remove,"ax",%progbits
 3123              		.align	2
 3124              		.code	16
 3125              		.thumb_func
 3126              		.type	dir_remove, %function
 3127              	dir_remove:
 3128              	.LFB27:
2619:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
 3129              		.loc 1 2619 0
 3130              		.cfi_startproc
 3131              		@ args = 0, pretend = 0, frame = 0
 3132              		@ frame_needed = 0, uses_anonymous_args = 0
 3133              	.LVL498:
 3134 0000 70B5     		push	{r4, r5, r6, lr}
 3135              		.cfi_def_cfa_offset 16
 3136              		.cfi_offset 4, -16
 3137              		.cfi_offset 5, -12
 3138              		.cfi_offset 6, -8
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 123


 3139              		.cfi_offset 14, -4
 3140 0002 0400     		movs	r4, r0
2621:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3141              		.loc 1 2621 0
 3142 0004 0568     		ldr	r5, [r0]
 3143              	.LVL499:
2643:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 3144              		.loc 1 2643 0
 3145 0006 8169     		ldr	r1, [r0, #24]
 3146 0008 2800     		movs	r0, r5
 3147              	.LVL500:
 3148 000a FFF7FEFF 		bl	move_window
 3149              	.LVL501:
2644:..\..\FatFS-master\source/ff.c **** 		dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'.*/
 3150              		.loc 1 2644 0
 3151 000e 0028     		cmp	r0, #0
 3152 0010 04D1     		bne	.L241
2645:..\..\FatFS-master\source/ff.c **** 		fs->wflag = 1;
 3153              		.loc 1 2645 0
 3154 0012 E369     		ldr	r3, [r4, #28]
 3155 0014 E522     		movs	r2, #229
 3156 0016 1A70     		strb	r2, [r3]
2646:..\..\FatFS-master\source/ff.c **** 	}
 3157              		.loc 1 2646 0
 3158 0018 0123     		movs	r3, #1
 3159 001a EB70     		strb	r3, [r5, #3]
 3160              	.L241:
2651:..\..\FatFS-master\source/ff.c **** 
 3161              		.loc 1 2651 0
 3162              		@ sp needed
 3163              	.LVL502:
 3164              	.LVL503:
 3165 001c 70BD     		pop	{r4, r5, r6, pc}
 3166              		.cfi_endproc
 3167              	.LFE27:
 3168              		.size	dir_remove, .-dir_remove
 3169 001e C046     		.section	.text.dir_clear,"ax",%progbits
 3170              		.align	2
 3171              		.code	16
 3172              		.thumb_func
 3173              		.type	dir_clear, %function
 3174              	dir_clear:
 3175              	.LFB18:
1648:..\..\FatFS-master\source/ff.c **** 	DWORD sect;
 3176              		.loc 1 1648 0
 3177              		.cfi_startproc
 3178              		@ args = 0, pretend = 0, frame = 0
 3179              		@ frame_needed = 0, uses_anonymous_args = 0
 3180              	.LVL504:
 3181 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3182              		.cfi_def_cfa_offset 24
 3183              		.cfi_offset 3, -24
 3184              		.cfi_offset 4, -20
 3185              		.cfi_offset 5, -16
 3186              		.cfi_offset 6, -12
 3187              		.cfi_offset 7, -8
 3188              		.cfi_offset 14, -4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 124


 3189 0002 0600     		movs	r6, r0
 3190 0004 0C00     		movs	r4, r1
1654:..\..\FatFS-master\source/ff.c **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
 3191              		.loc 1 1654 0
 3192 0006 FFF7FEFF 		bl	sync_window
 3193              	.LVL505:
 3194 000a 0028     		cmp	r0, #0
 3195 000c 22D1     		bne	.L247
1655:..\..\FatFS-master\source/ff.c **** 	fs->winsect = sect;				/* Set window to top of the cluster */
 3196              		.loc 1 1655 0
 3197 000e 2100     		movs	r1, r4
 3198 0010 3000     		movs	r0, r6
 3199 0012 FFF7FEFF 		bl	clst2sect
 3200              	.LVL506:
 3201 0016 0700     		movs	r7, r0
 3202              	.LVL507:
1656:..\..\FatFS-master\source/ff.c **** 	mem_set(fs->win, 0, SS(fs));	/* Clear window buffer */
 3203              		.loc 1 1656 0
 3204 0018 F062     		str	r0, [r6, #44]
1657:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN == 3		/* Quick table clear by using multi-secter write */
 3205              		.loc 1 1657 0
 3206 001a 3500     		movs	r5, r6
 3207 001c 3035     		adds	r5, r5, #48
 3208 001e 8022     		movs	r2, #128
 3209 0020 9200     		lsls	r2, r2, #2
 3210 0022 0021     		movs	r1, #0
 3211 0024 2800     		movs	r0, r5
 3212              	.LVL508:
 3213 0026 FFF7FEFF 		bl	mem_set
 3214              	.LVL509:
1670:..\..\FatFS-master\source/ff.c **** 	}
 3215              		.loc 1 1670 0
 3216 002a 0024     		movs	r4, #0
 3217              	.LVL510:
 3218 002c 00E0     		b	.L244
 3219              	.LVL511:
 3220              	.L246:
1670:..\..\FatFS-master\source/ff.c **** 	}
 3221              		.loc 1 1670 0 is_stmt 0 discriminator 4
 3222 002e 0134     		adds	r4, r4, #1
 3223              	.LVL512:
 3224              	.L244:
1670:..\..\FatFS-master\source/ff.c **** 	}
 3225              		.loc 1 1670 0 discriminator 1
 3226 0030 7389     		ldrh	r3, [r6, #10]
 3227 0032 9C42     		cmp	r4, r3
 3228 0034 07D2     		bcs	.L245
1670:..\..\FatFS-master\source/ff.c **** 	}
 3229              		.loc 1 1670 0 discriminator 3
 3230 0036 E219     		adds	r2, r4, r7
 3231 0038 7078     		ldrb	r0, [r6, #1]
 3232 003a 0123     		movs	r3, #1
 3233 003c 2900     		movs	r1, r5
 3234 003e FFF7FEFF 		bl	disk_write
 3235              	.LVL513:
 3236 0042 0028     		cmp	r0, #0
 3237 0044 F3D0     		beq	.L246
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 125


 3238              	.L245:
1672:..\..\FatFS-master\source/ff.c **** }
 3239              		.loc 1 1672 0 is_stmt 1
 3240 0046 7089     		ldrh	r0, [r6, #10]
 3241 0048 001B     		subs	r0, r0, r4
 3242 004a 0400     		movs	r4, r0
 3243              	.LVL514:
 3244 004c 601E     		subs	r0, r4, #1
 3245 004e 8441     		sbcs	r4, r4, r0
 3246 0050 E0B2     		uxtb	r0, r4
 3247 0052 00E0     		b	.L243
 3248              	.LVL515:
 3249              	.L247:
1654:..\..\FatFS-master\source/ff.c **** 	sect = clst2sect(fs, clst);		/* Top of the cluster */
 3250              		.loc 1 1654 0
 3251 0054 0120     		movs	r0, #1
 3252              	.LVL516:
 3253              	.L243:
1673:..\..\FatFS-master\source/ff.c **** #endif	/* !FF_FS_READONLY */
 3254              		.loc 1 1673 0
 3255              		@ sp needed
 3256              	.LVL517:
 3257 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3258              		.cfi_endproc
 3259              	.LFE18:
 3260              		.size	dir_clear, .-dir_clear
 3261              		.section	.text.dir_next,"ax",%progbits
 3262              		.align	2
 3263              		.code	16
 3264              		.thumb_func
 3265              		.type	dir_next, %function
 3266              	dir_next:
 3267              	.LFB20:
1737:..\..\FatFS-master\source/ff.c **** 	DWORD ofs, clst;
 3268              		.loc 1 1737 0
 3269              		.cfi_startproc
 3270              		@ args = 0, pretend = 0, frame = 8
 3271              		@ frame_needed = 0, uses_anonymous_args = 0
 3272              	.LVL518:
 3273 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3274              		.cfi_def_cfa_offset 20
 3275              		.cfi_offset 4, -20
 3276              		.cfi_offset 5, -16
 3277              		.cfi_offset 6, -12
 3278              		.cfi_offset 7, -8
 3279              		.cfi_offset 14, -4
 3280 0002 4F46     		mov	r7, r9
 3281 0004 80B4     		push	{r7}
 3282              		.cfi_def_cfa_offset 24
 3283              		.cfi_offset 9, -24
 3284 0006 82B0     		sub	sp, sp, #8
 3285              		.cfi_def_cfa_offset 32
 3286 0008 0400     		movs	r4, r0
 3287 000a 0191     		str	r1, [sp, #4]
1739:..\..\FatFS-master\source/ff.c **** 
 3288              		.loc 1 1739 0
 3289 000c 0768     		ldr	r7, [r0]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 126


 3290              	.LVL519:
1742:..\..\FatFS-master\source/ff.c **** 	if (dp->sect == 0 || ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DI
 3291              		.loc 1 1742 0
 3292 000e 0569     		ldr	r5, [r0, #16]
 3293 0010 2035     		adds	r5, r5, #32
 3294              	.LVL520:
1743:..\..\FatFS-master\source/ff.c **** 
 3295              		.loc 1 1743 0
 3296 0012 8369     		ldr	r3, [r0, #24]
 3297 0014 002B     		cmp	r3, #0
 3298 0016 46D0     		beq	.L254
1743:..\..\FatFS-master\source/ff.c **** 
 3299              		.loc 1 1743 0 is_stmt 0 discriminator 2
 3300 0018 2C4A     		ldr	r2, .L262
 3301 001a 9542     		cmp	r5, r2
 3302 001c 45D8     		bhi	.L255
1745:..\..\FatFS-master\source/ff.c **** 		dp->sect++;				/* Next sector */
 3303              		.loc 1 1745 0 is_stmt 1
 3304 001e EA05     		lsls	r2, r5, #23
 3305 0020 D60D     		lsrs	r6, r2, #23
 3306 0022 3AD1     		bne	.L250
1746:..\..\FatFS-master\source/ff.c **** 
 3307              		.loc 1 1746 0
 3308 0024 0133     		adds	r3, r3, #1
 3309 0026 8361     		str	r3, [r0, #24]
1748:..\..\FatFS-master\source/ff.c **** 			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 3310              		.loc 1 1748 0
 3311 0028 4169     		ldr	r1, [r0, #20]
 3312              	.LVL521:
 3313 002a 0029     		cmp	r1, #0
 3314 002c 07D1     		bne	.L251
1749:..\..\FatFS-master\source/ff.c **** 				dp->sect = 0; return FR_NO_FILE;
 3315              		.loc 1 1749 0
 3316 002e 6B09     		lsrs	r3, r5, #5
 3317 0030 3A89     		ldrh	r2, [r7, #8]
 3318 0032 9342     		cmp	r3, r2
 3319 0034 31D3     		bcc	.L250
1750:..\..\FatFS-master\source/ff.c **** 			}
 3320              		.loc 1 1750 0
 3321 0036 0023     		movs	r3, #0
 3322 0038 8361     		str	r3, [r0, #24]
 3323 003a 0420     		movs	r0, #4
 3324              	.LVL522:
 3325 003c 42E0     		b	.L249
 3326              	.LVL523:
 3327              	.L251:
1754:..\..\FatFS-master\source/ff.c **** 				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
 3328              		.loc 1 1754 0
 3329 003e 6A0A     		lsrs	r2, r5, #9
 3330 0040 7B89     		ldrh	r3, [r7, #10]
 3331 0042 013B     		subs	r3, r3, #1
 3332 0044 1A42     		tst	r2, r3
 3333 0046 28D1     		bne	.L250
1755:..\..\FatFS-master\source/ff.c **** 				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
 3334              		.loc 1 1755 0
 3335 0048 FFF7FEFF 		bl	get_fat
 3336              	.LVL524:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 127


 3337 004c 8146     		mov	r9, r0
 3338              	.LVL525:
1756:..\..\FatFS-master\source/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3339              		.loc 1 1756 0
 3340 004e 0300     		movs	r3, r0
 3341 0050 0128     		cmp	r0, #1
 3342 0052 2CD9     		bls	.L256
1757:..\..\FatFS-master\source/ff.c **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
 3343              		.loc 1 1757 0
 3344 0054 0133     		adds	r3, r3, #1
 3345 0056 2CD0     		beq	.L257
1758:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
 3346              		.loc 1 1758 0
 3347 0058 7B69     		ldr	r3, [r7, #20]
 3348 005a 9842     		cmp	r0, r3
 3349 005c 16D3     		bcc	.L252
1760:..\..\FatFS-master\source/ff.c **** 						dp->sect = 0; return FR_NO_FILE;
 3350              		.loc 1 1760 0
 3351 005e 019B     		ldr	r3, [sp, #4]
 3352 0060 002B     		cmp	r3, #0
 3353 0062 02D1     		bne	.L253
1761:..\..\FatFS-master\source/ff.c **** 					}
 3354              		.loc 1 1761 0
 3355 0064 A361     		str	r3, [r4, #24]
 3356 0066 0420     		movs	r0, #4
 3357              	.LVL526:
 3358 0068 2CE0     		b	.L249
 3359              	.LVL527:
 3360              	.L253:
1763:..\..\FatFS-master\source/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3361              		.loc 1 1763 0
 3362 006a 6169     		ldr	r1, [r4, #20]
 3363 006c 2000     		movs	r0, r4
 3364              	.LVL528:
 3365 006e FFF7FEFF 		bl	create_chain
 3366              	.LVL529:
 3367 0072 8146     		mov	r9, r0
 3368              	.LVL530:
1764:..\..\FatFS-master\source/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3369              		.loc 1 1764 0
 3370 0074 031E     		subs	r3, r0, #0
 3371 0076 1ED0     		beq	.L258
1765:..\..\FatFS-master\source/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3372              		.loc 1 1765 0
 3373 0078 0128     		cmp	r0, #1
 3374 007a 1ED0     		beq	.L259
1766:..\..\FatFS-master\source/ff.c **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
 3375              		.loc 1 1766 0
 3376 007c 0133     		adds	r3, r3, #1
 3377 007e 1ED0     		beq	.L260
1767:..\..\FatFS-master\source/ff.c **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
 3378              		.loc 1 1767 0
 3379 0080 0100     		movs	r1, r0
 3380 0082 3800     		movs	r0, r7
 3381              	.LVL531:
 3382 0084 FFF7FEFF 		bl	dir_clear
 3383              	.LVL532:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 128


 3384 0088 0028     		cmp	r0, #0
 3385 008a 1AD1     		bne	.L261
 3386              	.L252:
1774:..\..\FatFS-master\source/ff.c **** 				dp->sect = clst2sect(fs, clst);
 3387              		.loc 1 1774 0
 3388 008c 4B46     		mov	r3, r9
 3389 008e 6361     		str	r3, [r4, #20]
1775:..\..\FatFS-master\source/ff.c **** 			}
 3390              		.loc 1 1775 0
 3391 0090 4946     		mov	r1, r9
 3392 0092 3800     		movs	r0, r7
 3393 0094 FFF7FEFF 		bl	clst2sect
 3394              	.LVL533:
 3395 0098 A061     		str	r0, [r4, #24]
 3396              	.LVL534:
 3397              	.L250:
1779:..\..\FatFS-master\source/ff.c **** 	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 3398              		.loc 1 1779 0
 3399 009a 2561     		str	r5, [r4, #16]
1780:..\..\FatFS-master\source/ff.c **** 
 3400              		.loc 1 1780 0
 3401 009c 3037     		adds	r7, r7, #48
 3402              	.LVL535:
 3403 009e BF19     		adds	r7, r7, r6
 3404              	.LVL536:
 3405 00a0 E761     		str	r7, [r4, #28]
1782:..\..\FatFS-master\source/ff.c **** }
 3406              		.loc 1 1782 0
 3407 00a2 0020     		movs	r0, #0
 3408 00a4 0EE0     		b	.L249
 3409              	.LVL537:
 3410              	.L254:
1743:..\..\FatFS-master\source/ff.c **** 
 3411              		.loc 1 1743 0
 3412 00a6 0420     		movs	r0, #4
 3413              	.LVL538:
 3414 00a8 0CE0     		b	.L249
 3415              	.LVL539:
 3416              	.L255:
 3417 00aa 0420     		movs	r0, #4
 3418              	.LVL540:
 3419 00ac 0AE0     		b	.L249
 3420              	.LVL541:
 3421              	.L256:
1756:..\..\FatFS-master\source/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3422              		.loc 1 1756 0
 3423 00ae 0220     		movs	r0, #2
 3424              	.LVL542:
 3425 00b0 08E0     		b	.L249
 3426              	.LVL543:
 3427              	.L257:
1757:..\..\FatFS-master\source/ff.c **** 				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
 3428              		.loc 1 1757 0
 3429 00b2 0120     		movs	r0, #1
 3430              	.LVL544:
 3431 00b4 06E0     		b	.L249
 3432              	.LVL545:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 129


 3433              	.L258:
1764:..\..\FatFS-master\source/ff.c **** 					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 3434              		.loc 1 1764 0
 3435 00b6 0720     		movs	r0, #7
 3436              	.LVL546:
 3437 00b8 04E0     		b	.L249
 3438              	.LVL547:
 3439              	.L259:
1765:..\..\FatFS-master\source/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 3440              		.loc 1 1765 0
 3441 00ba 0220     		movs	r0, #2
 3442              	.LVL548:
 3443 00bc 02E0     		b	.L249
 3444              	.LVL549:
 3445              	.L260:
1766:..\..\FatFS-master\source/ff.c **** 					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
 3446              		.loc 1 1766 0
 3447 00be 0120     		movs	r0, #1
 3448              	.LVL550:
 3449 00c0 00E0     		b	.L249
 3450              	.L261:
1767:..\..\FatFS-master\source/ff.c **** 					if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
 3451              		.loc 1 1767 0
 3452 00c2 0120     		movs	r0, #1
 3453              	.LVL551:
 3454              	.L249:
1783:..\..\FatFS-master\source/ff.c **** 
 3455              		.loc 1 1783 0
 3456 00c4 02B0     		add	sp, sp, #8
 3457              		@ sp needed
 3458              	.LVL552:
 3459              	.LVL553:
 3460 00c6 04BC     		pop	{r2}
 3461 00c8 9146     		mov	r9, r2
 3462 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 3463              	.L263:
 3464              		.align	2
 3465              	.L262:
 3466 00cc FFFF1F00 		.word	2097151
 3467              		.cfi_endproc
 3468              	.LFE20:
 3469              		.size	dir_next, .-dir_next
 3470              		.section	.text.dir_find,"ax",%progbits
 3471              		.align	2
 3472              		.code	16
 3473              		.thumb_func
 3474              		.type	dir_find, %function
 3475              	dir_find:
 3476              	.LFB25:
2430:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
 3477              		.loc 1 2430 0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 0
 3480              		@ frame_needed = 0, uses_anonymous_args = 0
 3481              	.LVL554:
 3482 0000 70B5     		push	{r4, r5, r6, lr}
 3483              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 130


 3484              		.cfi_offset 4, -16
 3485              		.cfi_offset 5, -12
 3486              		.cfi_offset 6, -8
 3487              		.cfi_offset 14, -4
 3488 0002 0600     		movs	r6, r0
2432:..\..\FatFS-master\source/ff.c **** 	BYTE c;
 3489              		.loc 1 2432 0
 3490 0004 0568     		ldr	r5, [r0]
 3491              	.LVL555:
2438:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) return res;
 3492              		.loc 1 2438 0
 3493 0006 0021     		movs	r1, #0
 3494 0008 FFF7FEFF 		bl	dir_sdi
 3495              	.LVL556:
2439:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
 3496              		.loc 1 2439 0
 3497 000c 0028     		cmp	r0, #0
 3498 000e 22D1     		bne	.L265
 3499              	.LVL557:
 3500              	.L267:
2465:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) break;
 3501              		.loc 1 2465 0
 3502 0010 B169     		ldr	r1, [r6, #24]
 3503 0012 2800     		movs	r0, r5
 3504 0014 FFF7FEFF 		bl	move_window
 3505              	.LVL558:
 3506 0018 041E     		subs	r4, r0, #0
 3507              	.LVL559:
2466:..\..\FatFS-master\source/ff.c **** 		c = dp->dir[DIR_Name];
 3508              		.loc 1 2466 0
 3509 001a 18D1     		bne	.L269
2467:..\..\FatFS-master\source/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3510              		.loc 1 2467 0
 3511 001c F069     		ldr	r0, [r6, #28]
 3512              	.LVL560:
 3513 001e 0378     		ldrb	r3, [r0]
 3514              	.LVL561:
2468:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3515              		.loc 1 2468 0
 3516 0020 002B     		cmp	r3, #0
 3517 0022 15D0     		beq	.L270
2491:..\..\FatFS-master\source/ff.c **** 		if (!(dp->dir[DIR_Attr] & AM_VOL) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry
 3518              		.loc 1 2491 0
 3519 0024 C37A     		ldrb	r3, [r0, #11]
 3520              	.LVL562:
 3521 0026 3F22     		movs	r2, #63
 3522 0028 1340     		ands	r3, r2
 3523 002a B371     		strb	r3, [r6, #6]
 3524              	.LVL563:
2492:..\..\FatFS-master\source/ff.c **** #endif
 3525              		.loc 1 2492 0
 3526 002c C37A     		ldrb	r3, [r0, #11]
 3527 002e 1B07     		lsls	r3, r3, #28
 3528 0030 06D4     		bmi	.L266
2492:..\..\FatFS-master\source/ff.c **** #endif
 3529              		.loc 1 2492 0 is_stmt 0 discriminator 1
 3530 0032 3100     		movs	r1, r6
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 131


 3531 0034 2031     		adds	r1, r1, #32
 3532 0036 343A     		subs	r2, r2, #52
 3533 0038 FFF7FEFF 		bl	mem_cmp
 3534              	.LVL564:
 3535 003c 0028     		cmp	r0, #0
 3536 003e 09D0     		beq	.L271
 3537              	.L266:
2494:..\..\FatFS-master\source/ff.c **** 	} while (res == FR_OK);
 3538              		.loc 1 2494 0 is_stmt 1
 3539 0040 0021     		movs	r1, #0
 3540 0042 3000     		movs	r0, r6
 3541 0044 FFF7FEFF 		bl	dir_next
 3542              	.LVL565:
2495:..\..\FatFS-master\source/ff.c **** 
 3543              		.loc 1 2495 0
 3544 0048 0028     		cmp	r0, #0
 3545 004a E1D0     		beq	.L267
 3546 004c 03E0     		b	.L265
 3547              	.L269:
 3548 004e 02E0     		b	.L265
 3549              	.LVL566:
 3550              	.L270:
2468:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3551              		.loc 1 2468 0
 3552 0050 0420     		movs	r0, #4
 3553 0052 00E0     		b	.L265
 3554              	.LVL567:
 3555              	.L271:
2465:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) break;
 3556              		.loc 1 2465 0
 3557 0054 2000     		movs	r0, r4
 3558              	.LVL568:
 3559              	.L265:
2498:..\..\FatFS-master\source/ff.c **** 
 3560              		.loc 1 2498 0
 3561              		@ sp needed
 3562              	.LVL569:
 3563              	.LVL570:
 3564 0056 70BD     		pop	{r4, r5, r6, pc}
 3565              		.cfi_endproc
 3566              	.LFE25:
 3567              		.size	dir_find, .-dir_find
 3568              		.section	.text.follow_path,"ax",%progbits
 3569              		.align	2
 3570              		.code	16
 3571              		.thumb_func
 3572              		.type	follow_path, %function
 3573              	follow_path:
 3574              	.LFB30:
3050:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
 3575              		.loc 1 3050 0
 3576              		.cfi_startproc
 3577              		@ args = 0, pretend = 0, frame = 8
 3578              		@ frame_needed = 0, uses_anonymous_args = 0
 3579              	.LVL571:
 3580 0000 30B5     		push	{r4, r5, lr}
 3581              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 132


 3582              		.cfi_offset 4, -12
 3583              		.cfi_offset 5, -8
 3584              		.cfi_offset 14, -4
 3585 0002 83B0     		sub	sp, sp, #12
 3586              		.cfi_def_cfa_offset 24
 3587 0004 0400     		movs	r4, r0
 3588 0006 0191     		str	r1, [sp, #4]
3053:..\..\FatFS-master\source/ff.c **** 
 3589              		.loc 1 3053 0
 3590 0008 0568     		ldr	r5, [r0]
 3591              	.LVL572:
3062:..\..\FatFS-master\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3592              		.loc 1 3062 0
 3593 000a 01E0     		b	.L273
 3594              	.L274:
3062:..\..\FatFS-master\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3595              		.loc 1 3062 0 is_stmt 0 discriminator 4
 3596 000c 0133     		adds	r3, r3, #1
 3597 000e 0193     		str	r3, [sp, #4]
 3598              	.L273:
3062:..\..\FatFS-master\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3599              		.loc 1 3062 0 discriminator 1
 3600 0010 019B     		ldr	r3, [sp, #4]
 3601 0012 1A78     		ldrb	r2, [r3]
 3602 0014 2F2A     		cmp	r2, #47
 3603 0016 F9D0     		beq	.L274
3062:..\..\FatFS-master\source/ff.c **** 		dp->obj.sclust = 0;					/* Start from root directory */
 3604              		.loc 1 3062 0 discriminator 3
 3605 0018 5C2A     		cmp	r2, #92
 3606 001a F7D0     		beq	.L274
3063:..\..\FatFS-master\source/ff.c **** 	}
 3607              		.loc 1 3063 0 is_stmt 1
 3608 001c 0022     		movs	r2, #0
 3609 001e A260     		str	r2, [r4, #8]
3082:..\..\FatFS-master\source/ff.c **** 		dp->fn[NSFLAG] = NS_NONAME;
 3610              		.loc 1 3082 0
 3611 0020 1B78     		ldrb	r3, [r3]
 3612 0022 1F2B     		cmp	r3, #31
 3613 0024 07D8     		bhi	.L275
3083:..\..\FatFS-master\source/ff.c **** 		res = dir_sdi(dp, 0);
 3614              		.loc 1 3083 0
 3615 0026 8032     		adds	r2, r2, #128
 3616 0028 2B23     		movs	r3, #43
 3617 002a E254     		strb	r2, [r4, r3]
3084:..\..\FatFS-master\source/ff.c **** 
 3618              		.loc 1 3084 0
 3619 002c 0021     		movs	r1, #0
 3620              	.LVL573:
 3621 002e 2000     		movs	r0, r4
 3622              	.LVL574:
 3623 0030 FFF7FEFF 		bl	dir_sdi
 3624              	.LVL575:
 3625 0034 24E0     		b	.L276
 3626              	.LVL576:
 3627              	.L275:
3088:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
 3628              		.loc 1 3088 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 133


 3629 0036 01A9     		add	r1, sp, #4
 3630 0038 2000     		movs	r0, r4
 3631 003a FFF7FEFF 		bl	create_name
 3632              	.LVL577:
3089:..\..\FatFS-master\source/ff.c **** 			res = dir_find(dp);				/* Find an object with the segment name */
 3633              		.loc 1 3089 0
 3634 003e 0028     		cmp	r0, #0
 3635 0040 1ED1     		bne	.L276
3090:..\..\FatFS-master\source/ff.c **** 			ns = dp->fn[NSFLAG];
 3636              		.loc 1 3090 0
 3637 0042 2000     		movs	r0, r4
 3638              	.LVL578:
 3639 0044 FFF7FEFF 		bl	dir_find
 3640              	.LVL579:
3091:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3641              		.loc 1 3091 0
 3642 0048 2B23     		movs	r3, #43
 3643 004a E35C     		ldrb	r3, [r4, r3]
 3644              	.LVL580:
3092:..\..\FatFS-master\source/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3645              		.loc 1 3092 0
 3646 004c 0028     		cmp	r0, #0
 3647 004e 04D0     		beq	.L277
3093:..\..\FatFS-master\source/ff.c **** 					if (FF_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, stay there */
 3648              		.loc 1 3093 0
 3649 0050 0428     		cmp	r0, #4
 3650 0052 15D1     		bne	.L276
3099:..\..\FatFS-master\source/ff.c **** 					}
 3651              		.loc 1 3099 0
 3652 0054 5B07     		lsls	r3, r3, #29
 3653 0056 10D5     		bpl	.L278
 3654              	.LVL581:
 3655 0058 12E0     		b	.L276
 3656              	.LVL582:
 3657              	.L277:
3104:..\..\FatFS-master\source/ff.c **** 			/* Get into the sub-directory */
 3658              		.loc 1 3104 0
 3659 005a 5B07     		lsls	r3, r3, #29
 3660 005c 10D4     		bmi	.L276
 3661              	.LVL583:
3106:..\..\FatFS-master\source/ff.c **** 				res = FR_NO_PATH; break;
 3662              		.loc 1 3106 0
 3663 005e A379     		ldrb	r3, [r4, #6]
 3664 0060 DB06     		lsls	r3, r3, #27
 3665 0062 0CD5     		bpl	.L279
3118:..\..\FatFS-master\source/ff.c **** 			}
 3666              		.loc 1 3118 0
 3667 0064 2A00     		movs	r2, r5
 3668 0066 3032     		adds	r2, r2, #48
 3669 0068 2369     		ldr	r3, [r4, #16]
 3670 006a D905     		lsls	r1, r3, #23
 3671 006c CB0D     		lsrs	r3, r1, #23
 3672 006e D118     		adds	r1, r2, r3
 3673 0070 2800     		movs	r0, r5
 3674              	.LVL584:
 3675 0072 FFF7FEFF 		bl	ld_clust
 3676              	.LVL585:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 134


 3677 0076 A060     		str	r0, [r4, #8]
3120:..\..\FatFS-master\source/ff.c **** 	}
 3678              		.loc 1 3120 0
 3679 0078 DDE7     		b	.L275
 3680              	.LVL586:
 3681              	.L278:
3099:..\..\FatFS-master\source/ff.c **** 					}
 3682              		.loc 1 3099 0
 3683 007a 0520     		movs	r0, #5
 3684              	.LVL587:
 3685 007c 00E0     		b	.L276
 3686              	.LVL588:
 3687              	.L279:
3107:..\..\FatFS-master\source/ff.c **** 			}
 3688              		.loc 1 3107 0
 3689 007e 0520     		movs	r0, #5
 3690              	.LVL589:
 3691              	.L276:
3124:..\..\FatFS-master\source/ff.c **** 
 3692              		.loc 1 3124 0
 3693 0080 03B0     		add	sp, sp, #12
 3694              		@ sp needed
 3695              	.LVL590:
 3696              	.LVL591:
 3697 0082 30BD     		pop	{r4, r5, pc}
 3698              		.cfi_endproc
 3699              	.LFE30:
 3700              		.size	follow_path, .-follow_path
 3701              		.section	.text.dir_alloc,"ax",%progbits
 3702              		.align	2
 3703              		.code	16
 3704              		.thumb_func
 3705              		.type	dir_alloc, %function
 3706              	dir_alloc:
 3707              	.LFB21:
1798:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
 3708              		.loc 1 1798 0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 0
 3711              		@ frame_needed = 0, uses_anonymous_args = 0
 3712              	.LVL592:
 3713 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3714              		.cfi_def_cfa_offset 24
 3715              		.cfi_offset 3, -24
 3716              		.cfi_offset 4, -20
 3717              		.cfi_offset 5, -16
 3718              		.cfi_offset 6, -12
 3719              		.cfi_offset 7, -8
 3720              		.cfi_offset 14, -4
 3721 0002 0500     		movs	r5, r0
 3722 0004 0E00     		movs	r6, r1
1801:..\..\FatFS-master\source/ff.c **** 
 3723              		.loc 1 1801 0
 3724 0006 0468     		ldr	r4, [r0]
 3725              	.LVL593:
1804:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 3726              		.loc 1 1804 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 135


 3727 0008 0021     		movs	r1, #0
 3728              	.LVL594:
 3729 000a FFF7FEFF 		bl	dir_sdi
 3730              	.LVL595:
1805:..\..\FatFS-master\source/ff.c **** 		n = 0;
 3731              		.loc 1 1805 0
 3732 000e 0028     		cmp	r0, #0
 3733 0010 17D1     		bne	.L281
 3734 0012 0027     		movs	r7, #0
 3735              	.LVL596:
 3736              	.L284:
1808:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) break;
 3737              		.loc 1 1808 0
 3738 0014 A969     		ldr	r1, [r5, #24]
 3739 0016 2000     		movs	r0, r4
 3740 0018 FFF7FEFF 		bl	move_window
 3741              	.LVL597:
1809:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
 3742              		.loc 1 1809 0
 3743 001c 0028     		cmp	r0, #0
 3744 001e 10D1     		bne	.L281
1813:..\..\FatFS-master\source/ff.c **** #endif
 3745              		.loc 1 1813 0
 3746 0020 EB69     		ldr	r3, [r5, #28]
 3747 0022 1B78     		ldrb	r3, [r3]
 3748 0024 E52B     		cmp	r3, #229
 3749 0026 01D0     		beq	.L282
1813:..\..\FatFS-master\source/ff.c **** #endif
 3750              		.loc 1 1813 0 is_stmt 0 discriminator 1
 3751 0028 002B     		cmp	r3, #0
 3752 002a 03D1     		bne	.L286
 3753              	.L282:
1815:..\..\FatFS-master\source/ff.c **** 			} else {
 3754              		.loc 1 1815 0 is_stmt 1
 3755 002c 0137     		adds	r7, r7, #1
 3756              	.LVL598:
 3757 002e B742     		cmp	r7, r6
 3758 0030 01D1     		bne	.L283
 3759 0032 06E0     		b	.L281
 3760              	.L286:
1817:..\..\FatFS-master\source/ff.c **** 			}
 3761              		.loc 1 1817 0
 3762 0034 0027     		movs	r7, #0
 3763              	.LVL599:
 3764              	.L283:
1819:..\..\FatFS-master\source/ff.c **** 		} while (res == FR_OK);	/* Next entry with table stretch enabled */
 3765              		.loc 1 1819 0
 3766 0036 0121     		movs	r1, #1
 3767 0038 2800     		movs	r0, r5
 3768              	.LVL600:
 3769 003a FFF7FEFF 		bl	dir_next
 3770              	.LVL601:
1820:..\..\FatFS-master\source/ff.c **** 	}
 3771              		.loc 1 1820 0
 3772 003e 0028     		cmp	r0, #0
 3773 0040 E8D0     		beq	.L284
 3774              	.LVL602:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 136


 3775              	.L281:
1823:..\..\FatFS-master\source/ff.c **** 	return res;
 3776              		.loc 1 1823 0
 3777 0042 0428     		cmp	r0, #4
 3778 0044 00D1     		bne	.L285
 3779 0046 0330     		adds	r0, r0, #3
 3780              	.LVL603:
 3781              	.L285:
1825:..\..\FatFS-master\source/ff.c **** 
 3782              		.loc 1 1825 0
 3783              		@ sp needed
 3784              	.LVL604:
 3785              	.LVL605:
 3786              	.LVL606:
 3787 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3788              		.cfi_endproc
 3789              	.LFE21:
 3790              		.size	dir_alloc, .-dir_alloc
 3791 004a C046     		.section	.text.dir_register,"ax",%progbits
 3792              		.align	2
 3793              		.code	16
 3794              		.thumb_func
 3795              		.type	dir_register, %function
 3796              	dir_register:
 3797              	.LFB26:
2512:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
 3798              		.loc 1 2512 0
 3799              		.cfi_startproc
 3800              		@ args = 0, pretend = 0, frame = 0
 3801              		@ frame_needed = 0, uses_anonymous_args = 0
 3802              	.LVL607:
 3803 0000 70B5     		push	{r4, r5, r6, lr}
 3804              		.cfi_def_cfa_offset 16
 3805              		.cfi_offset 4, -16
 3806              		.cfi_offset 5, -12
 3807              		.cfi_offset 6, -8
 3808              		.cfi_offset 14, -4
 3809 0002 0500     		movs	r5, r0
2514:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3810              		.loc 1 2514 0
 3811 0004 0668     		ldr	r6, [r0]
 3812              	.LVL608:
2586:..\..\FatFS-master\source/ff.c **** 
 3813              		.loc 1 2586 0
 3814 0006 0121     		movs	r1, #1
 3815 0008 FFF7FEFF 		bl	dir_alloc
 3816              	.LVL609:
 3817 000c 041E     		subs	r4, r0, #0
 3818              	.LVL610:
2591:..\..\FatFS-master\source/ff.c **** 		res = move_window(fs, dp->sect);
 3819              		.loc 1 2591 0
 3820 000e 12D1     		bne	.L289
2592:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
 3821              		.loc 1 2592 0
 3822 0010 A969     		ldr	r1, [r5, #24]
 3823 0012 3000     		movs	r0, r6
 3824              	.LVL611:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 137


 3825 0014 FFF7FEFF 		bl	move_window
 3826              	.LVL612:
 3827 0018 041E     		subs	r4, r0, #0
 3828              	.LVL613:
2593:..\..\FatFS-master\source/ff.c **** 			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
 3829              		.loc 1 2593 0
 3830 001a 0CD1     		bne	.L289
2594:..\..\FatFS-master\source/ff.c **** 			mem_cpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
 3831              		.loc 1 2594 0
 3832 001c 2022     		movs	r2, #32
 3833 001e 0021     		movs	r1, #0
 3834 0020 E869     		ldr	r0, [r5, #28]
 3835              	.LVL614:
 3836 0022 FFF7FEFF 		bl	mem_set
 3837              	.LVL615:
2595:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN
 3838              		.loc 1 2595 0
 3839 0026 E869     		ldr	r0, [r5, #28]
 3840 0028 2900     		movs	r1, r5
 3841 002a 2031     		adds	r1, r1, #32
 3842 002c 0B22     		movs	r2, #11
 3843 002e FFF7FEFF 		bl	mem_cpy
 3844              	.LVL616:
2599:..\..\FatFS-master\source/ff.c **** 		}
 3845              		.loc 1 2599 0
 3846 0032 0123     		movs	r3, #1
 3847 0034 F370     		strb	r3, [r6, #3]
 3848              	.LVL617:
 3849              	.L289:
2604:..\..\FatFS-master\source/ff.c **** 
 3850              		.loc 1 2604 0
 3851 0036 2000     		movs	r0, r4
 3852              		@ sp needed
 3853              	.LVL618:
 3854              	.LVL619:
 3855              	.LVL620:
 3856 0038 70BD     		pop	{r4, r5, r6, pc}
 3857              		.cfi_endproc
 3858              	.LFE26:
 3859              		.size	dir_register, .-dir_register
 3860 003a C046     		.section	.text.dir_read,"ax",%progbits
 3861              		.align	2
 3862              		.code	16
 3863              		.thumb_func
 3864              		.type	dir_read, %function
 3865              	dir_read:
 3866              	.LFB24:
2352:..\..\FatFS-master\source/ff.c **** 	FRESULT res = FR_NO_FILE;
 3867              		.loc 1 2352 0
 3868              		.cfi_startproc
 3869              		@ args = 0, pretend = 0, frame = 0
 3870              		@ frame_needed = 0, uses_anonymous_args = 0
 3871              	.LVL621:
 3872 0000 70B5     		push	{r4, r5, r6, lr}
 3873              		.cfi_def_cfa_offset 16
 3874              		.cfi_offset 4, -16
 3875              		.cfi_offset 5, -12
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 138


 3876              		.cfi_offset 6, -8
 3877              		.cfi_offset 14, -4
 3878 0002 0500     		movs	r5, r0
 3879 0004 0E00     		movs	r6, r1
 3880              	.LVL622:
2354:..\..\FatFS-master\source/ff.c **** 	BYTE a, c;
 3881              		.loc 1 2354 0
 3882 0006 0468     		ldr	r4, [r0]
 3883              	.LVL623:
2353:..\..\FatFS-master\source/ff.c **** 	FATFS *fs = dp->obj.fs;
 3884              		.loc 1 2353 0
 3885 0008 0420     		movs	r0, #4
 3886              	.LVL624:
2360:..\..\FatFS-master\source/ff.c **** 		res = move_window(fs, dp->sect);
 3887              		.loc 1 2360 0
 3888 000a 1FE0     		b	.L291
 3889              	.LVL625:
 3890              	.L294:
2361:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) break;
 3891              		.loc 1 2361 0
 3892 000c 2000     		movs	r0, r4
 3893              	.LVL626:
 3894 000e FFF7FEFF 		bl	move_window
 3895              	.LVL627:
2362:..\..\FatFS-master\source/ff.c **** 		c = dp->dir[DIR_Name];	/* Test for the entry type */
 3896              		.loc 1 2362 0
 3897 0012 0028     		cmp	r0, #0
 3898 0014 1FD1     		bne	.L292
2363:..\..\FatFS-master\source/ff.c **** 		if (c == 0) {
 3899              		.loc 1 2363 0
 3900 0016 EB69     		ldr	r3, [r5, #28]
 3901 0018 1A78     		ldrb	r2, [r3]
 3902              	.LVL628:
2364:..\..\FatFS-master\source/ff.c **** 			res = FR_NO_FILE; break; /* Reached to end of the directory */
 3903              		.loc 1 2364 0
 3904 001a 002A     		cmp	r2, #0
 3905 001c 1AD0     		beq	.L296
2384:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN		/* LFN configuration */
 3906              		.loc 1 2384 0
 3907 001e DB7A     		ldrb	r3, [r3, #11]
 3908 0020 3F21     		movs	r1, #63
 3909 0022 0B40     		ands	r3, r1
 3910              	.LVL629:
 3911 0024 AB71     		strb	r3, [r5, #6]
2405:..\..\FatFS-master\source/ff.c **** 				break;
 3912              		.loc 1 2405 0
 3913 0026 E52A     		cmp	r2, #229
 3914 0028 0AD0     		beq	.L293
2405:..\..\FatFS-master\source/ff.c **** 				break;
 3915              		.loc 1 2405 0 is_stmt 0 discriminator 1
 3916 002a 2E2A     		cmp	r2, #46
 3917 002c 08D0     		beq	.L293
2405:..\..\FatFS-master\source/ff.c **** 				break;
 3918              		.loc 1 2405 0 discriminator 2
 3919 002e 0F2B     		cmp	r3, #15
 3920 0030 06D0     		beq	.L293
2405:..\..\FatFS-master\source/ff.c **** 				break;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 139


 3921              		.loc 1 2405 0 discriminator 3
 3922 0032 2022     		movs	r2, #32
 3923              	.LVL630:
 3924 0034 9343     		bics	r3, r2
 3925              	.LVL631:
 3926 0036 083B     		subs	r3, r3, #8
 3927 0038 5A42     		rsbs	r2, r3, #0
 3928 003a 5341     		adcs	r3, r3, r2
 3929 003c B342     		cmp	r3, r6
 3930 003e 0AD0     		beq	.L292
 3931              	.L293:
2410:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) break;
 3932              		.loc 1 2410 0 is_stmt 1
 3933 0040 0021     		movs	r1, #0
 3934 0042 2800     		movs	r0, r5
 3935              	.LVL632:
 3936 0044 FFF7FEFF 		bl	dir_next
 3937              	.LVL633:
2411:..\..\FatFS-master\source/ff.c **** 	}
 3938              		.loc 1 2411 0
 3939 0048 0028     		cmp	r0, #0
 3940 004a 04D1     		bne	.L292
 3941              	.LVL634:
 3942              	.L291:
2360:..\..\FatFS-master\source/ff.c **** 		res = move_window(fs, dp->sect);
 3943              		.loc 1 2360 0
 3944 004c A969     		ldr	r1, [r5, #24]
 3945 004e 0029     		cmp	r1, #0
 3946 0050 DCD1     		bne	.L294
 3947 0052 00E0     		b	.L292
 3948              	.LVL635:
 3949              	.L296:
2365:..\..\FatFS-master\source/ff.c **** 		}
 3950              		.loc 1 2365 0
 3951 0054 0420     		movs	r0, #4
 3952              	.LVL636:
 3953              	.L292:
2414:..\..\FatFS-master\source/ff.c **** 	return res;
 3954              		.loc 1 2414 0
 3955 0056 0028     		cmp	r0, #0
 3956 0058 01D0     		beq	.L295
2414:..\..\FatFS-master\source/ff.c **** 	return res;
 3957              		.loc 1 2414 0 is_stmt 0 discriminator 1
 3958 005a 0023     		movs	r3, #0
 3959 005c AB61     		str	r3, [r5, #24]
 3960              	.L295:
2416:..\..\FatFS-master\source/ff.c **** 
 3961              		.loc 1 2416 0 is_stmt 1
 3962              		@ sp needed
 3963              	.LVL637:
 3964              	.LVL638:
 3965              	.LVL639:
 3966 005e 70BD     		pop	{r4, r5, r6, pc}
 3967              		.cfi_endproc
 3968              	.LFE24:
 3969              		.size	dir_read, .-dir_read
 3970              		.section	.text.sync_fs,"ax",%progbits
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 140


 3971              		.align	2
 3972              		.code	16
 3973              		.thumb_func
 3974              		.type	sync_fs, %function
 3975              	sync_fs:
 3976              	.LFB12:
1089:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
 3977              		.loc 1 1089 0
 3978              		.cfi_startproc
 3979              		@ args = 0, pretend = 0, frame = 0
 3980              		@ frame_needed = 0, uses_anonymous_args = 0
 3981              	.LVL640:
 3982 0000 70B5     		push	{r4, r5, r6, lr}
 3983              		.cfi_def_cfa_offset 16
 3984              		.cfi_offset 4, -16
 3985              		.cfi_offset 5, -12
 3986              		.cfi_offset 6, -8
 3987              		.cfi_offset 14, -4
 3988 0002 0500     		movs	r5, r0
1093:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 3989              		.loc 1 1093 0
 3990 0004 FFF7FEFF 		bl	sync_window
 3991              	.LVL641:
 3992 0008 041E     		subs	r4, r0, #0
 3993              	.LVL642:
1094:..\..\FatFS-master\source/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
 3994              		.loc 1 1094 0
 3995 000a 3AD1     		bne	.L298
1095:..\..\FatFS-master\source/ff.c **** 			/* Create FSInfo structure */
 3996              		.loc 1 1095 0
 3997 000c 2B78     		ldrb	r3, [r5]
 3998 000e 032B     		cmp	r3, #3
 3999 0010 2FD1     		bne	.L299
1095:..\..\FatFS-master\source/ff.c **** 			/* Create FSInfo structure */
 4000              		.loc 1 1095 0 is_stmt 0 discriminator 1
 4001 0012 2B79     		ldrb	r3, [r5, #4]
 4002 0014 012B     		cmp	r3, #1
 4003 0016 2CD1     		bne	.L299
1097:..\..\FatFS-master\source/ff.c **** 			st_word(fs->win + BS_55AA, 0xAA55);
 4004              		.loc 1 1097 0 is_stmt 1
 4005 0018 2E00     		movs	r6, r5
 4006 001a 3036     		adds	r6, r6, #48
 4007 001c 8022     		movs	r2, #128
 4008 001e 9200     		lsls	r2, r2, #2
 4009 0020 0021     		movs	r1, #0
 4010 0022 3000     		movs	r0, r6
 4011              	.LVL643:
 4012 0024 FFF7FEFF 		bl	mem_set
 4013              	.LVL644:
1098:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + FSI_LeadSig, 0x41615252);
 4014              		.loc 1 1098 0
 4015 0028 1749     		ldr	r1, .L301
 4016 002a 184B     		ldr	r3, .L301+4
 4017 002c E818     		adds	r0, r5, r3
 4018 002e FFF7FEFF 		bl	st_word
 4019              	.LVL645:
1099:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + FSI_StrucSig, 0x61417272);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 141


 4020              		.loc 1 1099 0
 4021 0032 1749     		ldr	r1, .L301+8
 4022 0034 3000     		movs	r0, r6
 4023 0036 FFF7FEFF 		bl	st_dword
 4024              	.LVL646:
1100:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
 4025              		.loc 1 1100 0
 4026 003a 8523     		movs	r3, #133
 4027 003c 9B00     		lsls	r3, r3, #2
 4028 003e E818     		adds	r0, r5, r3
 4029 0040 1449     		ldr	r1, .L301+12
 4030 0042 FFF7FEFF 		bl	st_dword
 4031              	.LVL647:
1101:..\..\FatFS-master\source/ff.c **** 			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
 4032              		.loc 1 1101 0
 4033 0046 8623     		movs	r3, #134
 4034 0048 9B00     		lsls	r3, r3, #2
 4035 004a E818     		adds	r0, r5, r3
 4036 004c 2969     		ldr	r1, [r5, #16]
 4037 004e FFF7FEFF 		bl	st_dword
 4038              	.LVL648:
1102:..\..\FatFS-master\source/ff.c **** 			/* Write it into the FSInfo sector */
 4039              		.loc 1 1102 0
 4040 0052 8723     		movs	r3, #135
 4041 0054 9B00     		lsls	r3, r3, #2
 4042 0056 E818     		adds	r0, r5, r3
 4043 0058 E968     		ldr	r1, [r5, #12]
 4044 005a FFF7FEFF 		bl	st_dword
 4045              	.LVL649:
1104:..\..\FatFS-master\source/ff.c **** 			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 4046              		.loc 1 1104 0
 4047 005e EB69     		ldr	r3, [r5, #28]
 4048 0060 5A1C     		adds	r2, r3, #1
 4049 0062 EA62     		str	r2, [r5, #44]
1105:..\..\FatFS-master\source/ff.c **** 			fs->fsi_flag = 0;
 4050              		.loc 1 1105 0
 4051 0064 6878     		ldrb	r0, [r5, #1]
 4052 0066 0123     		movs	r3, #1
 4053 0068 3100     		movs	r1, r6
 4054 006a FFF7FEFF 		bl	disk_write
 4055              	.LVL650:
1106:..\..\FatFS-master\source/ff.c **** 		}
 4056              		.loc 1 1106 0
 4057 006e 0023     		movs	r3, #0
 4058 0070 2B71     		strb	r3, [r5, #4]
 4059              	.L299:
1109:..\..\FatFS-master\source/ff.c **** 	}
 4060              		.loc 1 1109 0
 4061 0072 6878     		ldrb	r0, [r5, #1]
 4062 0074 0022     		movs	r2, #0
 4063 0076 0021     		movs	r1, #0
 4064 0078 FFF7FEFF 		bl	disk_ioctl
 4065              	.LVL651:
 4066 007c 0028     		cmp	r0, #0
 4067 007e 00D0     		beq	.L298
 4068 0080 0124     		movs	r4, #1
 4069              	.LVL652:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 142


 4070              	.L298:
1113:..\..\FatFS-master\source/ff.c **** 
 4071              		.loc 1 1113 0
 4072 0082 2000     		movs	r0, r4
 4073              		@ sp needed
 4074              	.LVL653:
 4075              	.LVL654:
 4076 0084 70BD     		pop	{r4, r5, r6, pc}
 4077              	.L302:
 4078 0086 C046     		.align	2
 4079              	.L301:
 4080 0088 55AA0000 		.word	43605
 4081 008c 2E020000 		.word	558
 4082 0090 52526141 		.word	1096897106
 4083 0094 72724161 		.word	1631679090
 4084              		.cfi_endproc
 4085              	.LFE12:
 4086              		.size	sync_fs, .-sync_fs
 4087              		.section	.text.f_mount,"ax",%progbits
 4088              		.align	2
 4089              		.global	f_mount
 4090              		.code	16
 4091              		.thumb_func
 4092              		.type	f_mount, %function
 4093              	f_mount:
 4094              	.LFB35:
3477:..\..\FatFS-master\source/ff.c **** 
3478:..\..\FatFS-master\source/ff.c **** 
3479:..\..\FatFS-master\source/ff.c **** 
3480:..\..\FatFS-master\source/ff.c **** 
3481:..\..\FatFS-master\source/ff.c **** /*---------------------------------------------------------------------------
3482:..\..\FatFS-master\source/ff.c **** 
3483:..\..\FatFS-master\source/ff.c ****    Public Functions (FatFs API)
3484:..\..\FatFS-master\source/ff.c **** 
3485:..\..\FatFS-master\source/ff.c **** ----------------------------------------------------------------------------*/
3486:..\..\FatFS-master\source/ff.c **** 
3487:..\..\FatFS-master\source/ff.c **** 
3488:..\..\FatFS-master\source/ff.c **** 
3489:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3490:..\..\FatFS-master\source/ff.c **** /* Mount/Unmount a Logical Drive                                         */
3491:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3492:..\..\FatFS-master\source/ff.c **** 
3493:..\..\FatFS-master\source/ff.c **** FRESULT f_mount (
3494:..\..\FatFS-master\source/ff.c **** 	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
3495:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
3496:..\..\FatFS-master\source/ff.c **** 	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
3497:..\..\FatFS-master\source/ff.c **** )
3498:..\..\FatFS-master\source/ff.c **** {
 4095              		.loc 1 3498 0
 4096              		.cfi_startproc
 4097              		@ args = 0, pretend = 0, frame = 16
 4098              		@ frame_needed = 0, uses_anonymous_args = 0
 4099              	.LVL655:
 4100 0000 10B5     		push	{r4, lr}
 4101              		.cfi_def_cfa_offset 8
 4102              		.cfi_offset 4, -8
 4103              		.cfi_offset 14, -4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 143


 4104 0002 84B0     		sub	sp, sp, #16
 4105              		.cfi_def_cfa_offset 24
 4106 0004 0190     		str	r0, [sp, #4]
 4107 0006 0091     		str	r1, [sp]
 4108 0008 1400     		movs	r4, r2
3499:..\..\FatFS-master\source/ff.c **** 	FATFS *cfs;
3500:..\..\FatFS-master\source/ff.c **** 	int vol;
3501:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
3502:..\..\FatFS-master\source/ff.c **** 	const TCHAR *rp = path;
 4109              		.loc 1 3502 0
 4110 000a 0391     		str	r1, [sp, #12]
3503:..\..\FatFS-master\source/ff.c **** 
3504:..\..\FatFS-master\source/ff.c **** 
3505:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive number */
3506:..\..\FatFS-master\source/ff.c **** 	vol = get_ldnumber(&rp);
 4111              		.loc 1 3506 0
 4112 000c 03A8     		add	r0, sp, #12
 4113              	.LVL656:
 4114 000e FFF7FEFF 		bl	get_ldnumber
 4115              	.LVL657:
3507:..\..\FatFS-master\source/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 4116              		.loc 1 3507 0
 4117 0012 0028     		cmp	r0, #0
 4118 0014 17DB     		blt	.L307
3508:..\..\FatFS-master\source/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4119              		.loc 1 3508 0
 4120 0016 8300     		lsls	r3, r0, #2
 4121 0018 0D4A     		ldr	r2, .L309
 4122 001a 9B58     		ldr	r3, [r3, r2]
 4123              	.LVL658:
3509:..\..\FatFS-master\source/ff.c **** 
3510:..\..\FatFS-master\source/ff.c **** 	if (cfs) {
 4124              		.loc 1 3510 0
 4125 001c 002B     		cmp	r3, #0
 4126 001e 01D0     		beq	.L305
3511:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
3512:..\..\FatFS-master\source/ff.c **** 		clear_lock(cfs);
3513:..\..\FatFS-master\source/ff.c **** #endif
3514:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT						/* Discard sync object of the current volume */
3515:..\..\FatFS-master\source/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
3516:..\..\FatFS-master\source/ff.c **** #endif
3517:..\..\FatFS-master\source/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
 4127              		.loc 1 3517 0
 4128 0020 0022     		movs	r2, #0
 4129 0022 1A70     		strb	r2, [r3]
 4130              	.L305:
3518:..\..\FatFS-master\source/ff.c **** 	}
3519:..\..\FatFS-master\source/ff.c **** 
3520:..\..\FatFS-master\source/ff.c **** 	if (fs) {
 4131              		.loc 1 3520 0
 4132 0024 019B     		ldr	r3, [sp, #4]
 4133              	.LVL659:
 4134 0026 002B     		cmp	r3, #0
 4135 0028 01D0     		beq	.L306
3521:..\..\FatFS-master\source/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4136              		.loc 1 3521 0
 4137 002a 0022     		movs	r2, #0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 144


 4138 002c 1A70     		strb	r2, [r3]
 4139              	.L306:
3522:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT						/* Create sync object for the new volume */
3523:..\..\FatFS-master\source/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
3524:..\..\FatFS-master\source/ff.c **** #endif
3525:..\..\FatFS-master\source/ff.c **** 	}
3526:..\..\FatFS-master\source/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
 4140              		.loc 1 3526 0
 4141 002e 8000     		lsls	r0, r0, #2
 4142              	.LVL660:
 4143 0030 074B     		ldr	r3, .L309
 4144 0032 019A     		ldr	r2, [sp, #4]
 4145 0034 C250     		str	r2, [r0, r3]
3527:..\..\FatFS-master\source/ff.c **** 
3528:..\..\FatFS-master\source/ff.c **** 	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
 4146              		.loc 1 3528 0
 4147 0036 002C     		cmp	r4, #0
 4148 0038 07D0     		beq	.L308
3529:..\..\FatFS-master\source/ff.c **** 
3530:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
 4149              		.loc 1 3530 0
 4150 003a 0022     		movs	r2, #0
 4151 003c 01A9     		add	r1, sp, #4
 4152              	.LVL661:
 4153 003e 6846     		mov	r0, sp
 4154 0040 FFF7FEFF 		bl	find_volume
 4155              	.LVL662:
3531:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
 4156              		.loc 1 3531 0
 4157 0044 02E0     		b	.L304
 4158              	.LVL663:
 4159              	.L307:
3507:..\..\FatFS-master\source/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4160              		.loc 1 3507 0
 4161 0046 0B20     		movs	r0, #11
 4162              	.LVL664:
 4163 0048 00E0     		b	.L304
 4164              	.L308:
3528:..\..\FatFS-master\source/ff.c **** 
 4165              		.loc 1 3528 0
 4166 004a 0020     		movs	r0, #0
 4167              	.L304:
3532:..\..\FatFS-master\source/ff.c **** }
 4168              		.loc 1 3532 0
 4169 004c 04B0     		add	sp, sp, #16
 4170              	.LVL665:
 4171              		@ sp needed
 4172 004e 10BD     		pop	{r4, pc}
 4173              	.L310:
 4174              		.align	2
 4175              	.L309:
 4176 0050 00000000 		.word	.LANCHOR0
 4177              		.cfi_endproc
 4178              	.LFE35:
 4179              		.size	f_mount, .-f_mount
 4180              		.section	.text.f_open,"ax",%progbits
 4181              		.align	2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 145


 4182              		.global	f_open
 4183              		.code	16
 4184              		.thumb_func
 4185              		.type	f_open, %function
 4186              	f_open:
 4187              	.LFB36:
3533:..\..\FatFS-master\source/ff.c **** 
3534:..\..\FatFS-master\source/ff.c **** 
3535:..\..\FatFS-master\source/ff.c **** 
3536:..\..\FatFS-master\source/ff.c **** 
3537:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3538:..\..\FatFS-master\source/ff.c **** /* Open or Create a File                                                 */
3539:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3540:..\..\FatFS-master\source/ff.c **** 
3541:..\..\FatFS-master\source/ff.c **** FRESULT f_open (
3542:..\..\FatFS-master\source/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
3543:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
3544:..\..\FatFS-master\source/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
3545:..\..\FatFS-master\source/ff.c **** )
3546:..\..\FatFS-master\source/ff.c **** {
 4188              		.loc 1 3546 0
 4189              		.cfi_startproc
 4190              		@ args = 0, pretend = 0, frame = 56
 4191              		@ frame_needed = 0, uses_anonymous_args = 0
 4192              	.LVL666:
 4193 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4194              		.cfi_def_cfa_offset 20
 4195              		.cfi_offset 4, -20
 4196              		.cfi_offset 5, -16
 4197              		.cfi_offset 6, -12
 4198              		.cfi_offset 7, -8
 4199              		.cfi_offset 14, -4
 4200 0002 4F46     		mov	r7, r9
 4201 0004 4646     		mov	r6, r8
 4202 0006 C0B4     		push	{r6, r7}
 4203              		.cfi_def_cfa_offset 28
 4204              		.cfi_offset 8, -28
 4205              		.cfi_offset 9, -24
 4206 0008 8FB0     		sub	sp, sp, #60
 4207              		.cfi_def_cfa_offset 88
 4208 000a 0700     		movs	r7, r0
 4209 000c 0191     		str	r1, [sp, #4]
 4210 000e 1600     		movs	r6, r2
3547:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
3548:..\..\FatFS-master\source/ff.c **** 	DIR dj;
3549:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
3550:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
3551:..\..\FatFS-master\source/ff.c **** 	DWORD dw, cl, bcs, clst, sc;
3552:..\..\FatFS-master\source/ff.c **** 	FSIZE_t ofs;
3553:..\..\FatFS-master\source/ff.c **** #endif
3554:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
3555:..\..\FatFS-master\source/ff.c **** 
3556:..\..\FatFS-master\source/ff.c **** 
3557:..\..\FatFS-master\source/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
 4211              		.loc 1 3557 0
 4212 0010 0028     		cmp	r0, #0
 4213 0012 00D1     		bne	.LCB4464
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 146


 4214 0014 E2E0     		b	.L327	@long jump
 4215              	.LCB4464:
3558:..\..\FatFS-master\source/ff.c **** 
3559:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive */
3560:..\..\FatFS-master\source/ff.c **** 	mode &= FF_FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN
 4216              		.loc 1 3560 0
 4217 0016 3F25     		movs	r5, #63
 4218 0018 1540     		ands	r5, r2
 4219              	.LVL667:
3561:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path, &fs, mode);
 4220              		.loc 1 3561 0
 4221 001a 2A00     		movs	r2, r5
 4222 001c 02A9     		add	r1, sp, #8
 4223              	.LVL668:
 4224 001e 01A8     		add	r0, sp, #4
 4225              	.LVL669:
 4226 0020 FFF7FEFF 		bl	find_volume
 4227              	.LVL670:
 4228 0024 041E     		subs	r4, r0, #0
 4229              	.LVL671:
3562:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 4230              		.loc 1 3562 0
 4231 0026 00D0     		beq	.LCB4481
 4232 0028 D2E0     		b	.L313	@long jump
 4233              	.LCB4481:
3563:..\..\FatFS-master\source/ff.c **** 		dj.obj.fs = fs;
 4234              		.loc 1 3563 0
 4235 002a 029B     		ldr	r3, [sp, #8]
 4236 002c 0393     		str	r3, [sp, #12]
3564:..\..\FatFS-master\source/ff.c **** 		INIT_NAMBUF(fs);
3565:..\..\FatFS-master\source/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 4237              		.loc 1 3565 0
 4238 002e 0199     		ldr	r1, [sp, #4]
 4239 0030 03A8     		add	r0, sp, #12
 4240              	.LVL672:
 4241 0032 FFF7FEFF 		bl	follow_path
 4242              	.LVL673:
 4243 0036 041E     		subs	r4, r0, #0
 4244              	.LVL674:
3566:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY	/* Read/Write configuration */
3567:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
 4245              		.loc 1 3567 0
 4246 0038 05D1     		bne	.L314
3568:..\..\FatFS-master\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
 4247              		.loc 1 3568 0
 4248 003a 2B23     		movs	r3, #43
 4249 003c 03AA     		add	r2, sp, #12
 4250 003e D356     		ldrsb	r3, [r2, r3]
 4251 0040 002B     		cmp	r3, #0
 4252 0042 00DA     		bge	.L314
3569:..\..\FatFS-master\source/ff.c **** 				res = FR_INVALID_NAME;
 4253              		.loc 1 3569 0
 4254 0044 0634     		adds	r4, r4, #6
 4255              	.L314:
 4256              	.LVL675:
3570:..\..\FatFS-master\source/ff.c **** 			}
3571:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 147


3572:..\..\FatFS-master\source/ff.c **** 			else {
3573:..\..\FatFS-master\source/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);		/* Check if the file can be used */
3574:..\..\FatFS-master\source/ff.c **** 			}
3575:..\..\FatFS-master\source/ff.c **** #endif
3576:..\..\FatFS-master\source/ff.c **** 		}
3577:..\..\FatFS-master\source/ff.c **** 		/* Create or Open a file */
3578:..\..\FatFS-master\source/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 4257              		.loc 1 3578 0
 4258 0046 1C23     		movs	r3, #28
 4259 0048 3342     		tst	r3, r6
 4260 004a 51D0     		beq	.L315
3579:..\..\FatFS-master\source/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4261              		.loc 1 3579 0
 4262 004c 002C     		cmp	r4, #0
 4263 004e 09D0     		beq	.L316
3580:..\..\FatFS-master\source/ff.c **** 				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
 4264              		.loc 1 3580 0
 4265 0050 042C     		cmp	r4, #4
 4266 0052 03D1     		bne	.L317
3581:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
3582:..\..\FatFS-master\source/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
3583:..\..\FatFS-master\source/ff.c **** #else
3584:..\..\FatFS-master\source/ff.c **** 					res = dir_register(&dj);
 4267              		.loc 1 3584 0
 4268 0054 03A8     		add	r0, sp, #12
 4269 0056 FFF7FEFF 		bl	dir_register
 4270              	.LVL676:
 4271 005a 0400     		movs	r4, r0
 4272              	.LVL677:
 4273              	.L317:
3585:..\..\FatFS-master\source/ff.c **** #endif
3586:..\..\FatFS-master\source/ff.c **** 				}
3587:..\..\FatFS-master\source/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
 4274              		.loc 1 3587 0
 4275 005c 0823     		movs	r3, #8
 4276 005e 1D43     		orrs	r5, r3
 4277              	.LVL678:
 4278 0060 EDB2     		uxtb	r5, r5
 4279              	.LVL679:
 4280 0062 0AE0     		b	.L318
 4281              	.L316:
3588:..\..\FatFS-master\source/ff.c **** 			}
3589:..\..\FatFS-master\source/ff.c **** 			else {								/* Any object with the same name is already existing */
3590:..\..\FatFS-master\source/ff.c **** 				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 4282              		.loc 1 3590 0
 4283 0064 03AB     		add	r3, sp, #12
 4284 0066 9B79     		ldrb	r3, [r3, #6]
 4285 0068 1122     		movs	r2, #17
 4286 006a 1A42     		tst	r2, r3
 4287 006c 02D1     		bne	.L329
3591:..\..\FatFS-master\source/ff.c **** 					res = FR_DENIED;
3592:..\..\FatFS-master\source/ff.c **** 				} else {
3593:..\..\FatFS-master\source/ff.c **** 					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
 4288              		.loc 1 3593 0
 4289 006e 7307     		lsls	r3, r6, #29
 4290 0070 02D4     		bmi	.L330
 4291 0072 02E0     		b	.L318
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 148


 4292              	.L329:
3591:..\..\FatFS-master\source/ff.c **** 					res = FR_DENIED;
 4293              		.loc 1 3591 0
 4294 0074 0724     		movs	r4, #7
 4295              	.LVL680:
 4296 0076 00E0     		b	.L318
 4297              	.LVL681:
 4298              	.L330:
 4299              		.loc 1 3593 0
 4300 0078 0824     		movs	r4, #8
 4301              	.LVL682:
 4302              	.L318:
3594:..\..\FatFS-master\source/ff.c **** 				}
3595:..\..\FatFS-master\source/ff.c **** 			}
3596:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
 4303              		.loc 1 3596 0
 4304 007a 002C     		cmp	r4, #0
 4305 007c 46D1     		bne	.L319
 4306              		.loc 1 3596 0 is_stmt 0 discriminator 1
 4307 007e 2B07     		lsls	r3, r5, #28
 4308 0080 44D5     		bpl	.L319
3597:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
3598:..\..\FatFS-master\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
3599:..\..\FatFS-master\source/ff.c **** 					/* Get current allocation info */
3600:..\..\FatFS-master\source/ff.c **** 					fp->obj.fs = fs;
3601:..\..\FatFS-master\source/ff.c **** 					init_alloc_info(fs, &fp->obj);
3602:..\..\FatFS-master\source/ff.c **** 					/* Set directory entry block initial state */
3603:..\..\FatFS-master\source/ff.c **** 					mem_set(fs->dirbuf + 2, 0, 30);		/* Clear 85 entry except for NumSec */
3604:..\..\FatFS-master\source/ff.c **** 					mem_set(fs->dirbuf + 38, 0, 26);	/* Clear C0 entry except for NumName and NameHash */
3605:..\..\FatFS-master\source/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_ARC;
3606:..\..\FatFS-master\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_CrtTime, GET_FATTIME());
3607:..\..\FatFS-master\source/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 1;
3608:..\..\FatFS-master\source/ff.c **** 					res = store_xdir(&dj);
3609:..\..\FatFS-master\source/ff.c **** 					if (res == FR_OK && fp->obj.sclust != 0) {	/* Remove the cluster chain if exist */
3610:..\..\FatFS-master\source/ff.c **** 						res = remove_chain(&fp->obj, fp->obj.sclust, 0);
3611:..\..\FatFS-master\source/ff.c **** 						fs->last_clst = fp->obj.sclust - 1;		/* Reuse the cluster hole */
3612:..\..\FatFS-master\source/ff.c **** 					}
3613:..\..\FatFS-master\source/ff.c **** 				} else
3614:..\..\FatFS-master\source/ff.c **** #endif
3615:..\..\FatFS-master\source/ff.c **** 				{
3616:..\..\FatFS-master\source/ff.c **** 					/* Set directory entry initial state */
3617:..\..\FatFS-master\source/ff.c **** 					cl = ld_clust(fs, dj.dir);			/* Get current cluster chain */
 4309              		.loc 1 3617 0 is_stmt 1
 4310 0082 0A9E     		ldr	r6, [sp, #40]
 4311 0084 3100     		movs	r1, r6
 4312 0086 0298     		ldr	r0, [sp, #8]
 4313 0088 FFF7FEFF 		bl	ld_clust
 4314              	.LVL683:
 4315 008c 8046     		mov	r8, r0
 4316              	.LVL684:
3618:..\..\FatFS-master\source/ff.c **** 					st_dword(dj.dir + DIR_CrtTime, GET_FATTIME());	/* Set created time */
 4317              		.loc 1 3618 0
 4318 008e FFF7FEFF 		bl	get_fattime
 4319              	.LVL685:
 4320 0092 0100     		movs	r1, r0
 4321 0094 3000     		movs	r0, r6
 4322 0096 0E30     		adds	r0, r0, #14
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 149


 4323 0098 FFF7FEFF 		bl	st_dword
 4324              	.LVL686:
3619:..\..\FatFS-master\source/ff.c **** 					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
 4325              		.loc 1 3619 0
 4326 009c 0A9B     		ldr	r3, [sp, #40]
 4327 009e 0093     		str	r3, [sp]
 4328 00a0 2023     		movs	r3, #32
 4329 00a2 009A     		ldr	r2, [sp]
 4330 00a4 D372     		strb	r3, [r2, #11]
3620:..\..\FatFS-master\source/ff.c **** 					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
 4331              		.loc 1 3620 0
 4332 00a6 0A9B     		ldr	r3, [sp, #40]
 4333 00a8 0093     		str	r3, [sp]
 4334 00aa 0022     		movs	r2, #0
 4335 00ac 1900     		movs	r1, r3
 4336 00ae 0298     		ldr	r0, [sp, #8]
 4337 00b0 FFF7FEFF 		bl	st_clust
 4338              	.LVL687:
3621:..\..\FatFS-master\source/ff.c **** 					st_dword(dj.dir + DIR_FileSize, 0);
 4339              		.loc 1 3621 0
 4340 00b4 0A98     		ldr	r0, [sp, #40]
 4341 00b6 1C30     		adds	r0, r0, #28
 4342 00b8 0021     		movs	r1, #0
 4343 00ba FFF7FEFF 		bl	st_dword
 4344              	.LVL688:
3622:..\..\FatFS-master\source/ff.c **** 					fs->wflag = 1;
 4345              		.loc 1 3622 0
 4346 00be 0123     		movs	r3, #1
 4347 00c0 029A     		ldr	r2, [sp, #8]
 4348 00c2 D370     		strb	r3, [r2, #3]
3623:..\..\FatFS-master\source/ff.c **** 					if (cl != 0) {						/* Remove the cluster chain if exist */
 4349              		.loc 1 3623 0
 4350 00c4 4346     		mov	r3, r8
 4351 00c6 002B     		cmp	r3, #0
 4352 00c8 20D0     		beq	.L319
3624:..\..\FatFS-master\source/ff.c **** 						dw = fs->winsect;
 4353              		.loc 1 3624 0
 4354 00ca 029B     		ldr	r3, [sp, #8]
 4355 00cc DE6A     		ldr	r6, [r3, #44]
 4356              	.LVL689:
3625:..\..\FatFS-master\source/ff.c **** 						res = remove_chain(&dj.obj, cl, 0);
 4357              		.loc 1 3625 0
 4358 00ce 0022     		movs	r2, #0
 4359 00d0 4146     		mov	r1, r8
 4360 00d2 03A8     		add	r0, sp, #12
 4361 00d4 FFF7FEFF 		bl	remove_chain
 4362              	.LVL690:
 4363 00d8 041E     		subs	r4, r0, #0
 4364              	.LVL691:
3626:..\..\FatFS-master\source/ff.c **** 						if (res == FR_OK) {
 4365              		.loc 1 3626 0
 4366 00da 17D1     		bne	.L319
3627:..\..\FatFS-master\source/ff.c **** 							res = move_window(fs, dw);
 4367              		.loc 1 3627 0
 4368 00dc 3100     		movs	r1, r6
 4369 00de 0298     		ldr	r0, [sp, #8]
 4370              	.LVL692:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 150


 4371 00e0 FFF7FEFF 		bl	move_window
 4372              	.LVL693:
 4373 00e4 0400     		movs	r4, r0
 4374              	.LVL694:
3628:..\..\FatFS-master\source/ff.c **** 							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
 4375              		.loc 1 3628 0
 4376 00e6 4346     		mov	r3, r8
 4377 00e8 013B     		subs	r3, r3, #1
 4378 00ea 029A     		ldr	r2, [sp, #8]
 4379 00ec D360     		str	r3, [r2, #12]
 4380 00ee 0DE0     		b	.L319
 4381              	.LVL695:
 4382              	.L315:
3629:..\..\FatFS-master\source/ff.c **** 						}
3630:..\..\FatFS-master\source/ff.c **** 					}
3631:..\..\FatFS-master\source/ff.c **** 				}
3632:..\..\FatFS-master\source/ff.c **** 			}
3633:..\..\FatFS-master\source/ff.c **** 		}
3634:..\..\FatFS-master\source/ff.c **** 		else {	/* Open an existing file */
3635:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {					/* Is the object exsiting? */
 4383              		.loc 1 3635 0
 4384 00f0 002C     		cmp	r4, #0
 4385 00f2 0BD1     		bne	.L319
3636:..\..\FatFS-master\source/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* File open against a directory */
 4386              		.loc 1 3636 0
 4387 00f4 03AB     		add	r3, sp, #12
 4388 00f6 9B79     		ldrb	r3, [r3, #6]
 4389 00f8 DA06     		lsls	r2, r3, #27
 4390 00fa 04D4     		bmi	.L331
3637:..\..\FatFS-master\source/ff.c **** 					res = FR_NO_FILE;
3638:..\..\FatFS-master\source/ff.c **** 				} else {
3639:..\..\FatFS-master\source/ff.c **** 					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* Write mode open against R/O file */
 4391              		.loc 1 3639 0
 4392 00fc B207     		lsls	r2, r6, #30
 4393 00fe 05D5     		bpl	.L319
 4394              		.loc 1 3639 0 is_stmt 0 discriminator 1
 4395 0100 DB07     		lsls	r3, r3, #31
 4396 0102 02D4     		bmi	.L332
 4397 0104 02E0     		b	.L319
 4398              	.L331:
3637:..\..\FatFS-master\source/ff.c **** 					res = FR_NO_FILE;
 4399              		.loc 1 3637 0 is_stmt 1
 4400 0106 0424     		movs	r4, #4
 4401              	.LVL696:
 4402 0108 00E0     		b	.L319
 4403              	.LVL697:
 4404              	.L332:
3640:..\..\FatFS-master\source/ff.c **** 						res = FR_DENIED;
 4405              		.loc 1 3640 0
 4406 010a 0724     		movs	r4, #7
 4407              	.LVL698:
 4408              	.L319:
3641:..\..\FatFS-master\source/ff.c **** 					}
3642:..\..\FatFS-master\source/ff.c **** 				}
3643:..\..\FatFS-master\source/ff.c **** 			}
3644:..\..\FatFS-master\source/ff.c **** 		}
3645:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 151


 4409              		.loc 1 3645 0
 4410 010c 002C     		cmp	r4, #0
 4411 010e 09D1     		bne	.L320
3646:..\..\FatFS-master\source/ff.c **** 			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwrit
 4412              		.loc 1 3646 0
 4413 0110 2B07     		lsls	r3, r5, #28
 4414 0112 02D5     		bpl	.L321
 4415              		.loc 1 3646 0 is_stmt 0 discriminator 1
 4416 0114 4023     		movs	r3, #64
 4417 0116 1D43     		orrs	r5, r3
 4418              	.LVL699:
 4419 0118 EDB2     		uxtb	r5, r5
 4420              	.LVL700:
 4421              	.L321:
3647:..\..\FatFS-master\source/ff.c **** 			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
 4422              		.loc 1 3647 0 is_stmt 1
 4423 011a 029B     		ldr	r3, [sp, #8]
 4424 011c DB6A     		ldr	r3, [r3, #44]
 4425 011e 3B62     		str	r3, [r7, #32]
3648:..\..\FatFS-master\source/ff.c **** 			fp->dir_ptr = dj.dir;
 4426              		.loc 1 3648 0
 4427 0120 0A9B     		ldr	r3, [sp, #40]
 4428 0122 7B62     		str	r3, [r7, #36]
 4429              	.L320:
3649:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
3650:..\..\FatFS-master\source/ff.c **** 			fp->obj.lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);	/* Lock the file for this session */
3651:..\..\FatFS-master\source/ff.c **** 			if (fp->obj.lockid == 0) res = FR_INT_ERR;
3652:..\..\FatFS-master\source/ff.c **** #endif
3653:..\..\FatFS-master\source/ff.c **** 		}
3654:..\..\FatFS-master\source/ff.c **** #else		/* R/O configuration */
3655:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
3656:..\..\FatFS-master\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Is it origin directory itself? */
3657:..\..\FatFS-master\source/ff.c **** 				res = FR_INVALID_NAME;
3658:..\..\FatFS-master\source/ff.c **** 			} else {
3659:..\..\FatFS-master\source/ff.c **** 				if (dj.obj.attr & AM_DIR) {		/* Is it a directory? */
3660:..\..\FatFS-master\source/ff.c **** 					res = FR_NO_FILE;
3661:..\..\FatFS-master\source/ff.c **** 				}
3662:..\..\FatFS-master\source/ff.c **** 			}
3663:..\..\FatFS-master\source/ff.c **** 		}
3664:..\..\FatFS-master\source/ff.c **** #endif
3665:..\..\FatFS-master\source/ff.c **** 
3666:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
 4430              		.loc 1 3666 0
 4431 0124 002C     		cmp	r4, #0
 4432 0126 53D1     		bne	.L313
3667:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
3668:..\..\FatFS-master\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3669:..\..\FatFS-master\source/ff.c **** 				fp->obj.c_scl = dj.obj.sclust;							/* Get containing directory info */
3670:..\..\FatFS-master\source/ff.c **** 				fp->obj.c_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
3671:..\..\FatFS-master\source/ff.c **** 				fp->obj.c_ofs = dj.blk_ofs;
3672:..\..\FatFS-master\source/ff.c **** 				init_alloc_info(fs, &fp->obj);
3673:..\..\FatFS-master\source/ff.c **** 			} else
3674:..\..\FatFS-master\source/ff.c **** #endif
3675:..\..\FatFS-master\source/ff.c **** 			{
3676:..\..\FatFS-master\source/ff.c **** 				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
 4433              		.loc 1 3676 0
 4434 0128 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 152


 4435 012a 9846     		mov	r8, r3
 4436 012c 0A9E     		ldr	r6, [sp, #40]
 4437 012e 3100     		movs	r1, r6
 4438 0130 1800     		movs	r0, r3
 4439 0132 FFF7FEFF 		bl	ld_clust
 4440              	.LVL701:
 4441 0136 B860     		str	r0, [r7, #8]
3677:..\..\FatFS-master\source/ff.c **** 				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
 4442              		.loc 1 3677 0
 4443 0138 3000     		movs	r0, r6
 4444 013a 1C30     		adds	r0, r0, #28
 4445 013c FFF7FEFF 		bl	ld_dword
 4446              	.LVL702:
 4447 0140 F860     		str	r0, [r7, #12]
3678:..\..\FatFS-master\source/ff.c **** 			}
3679:..\..\FatFS-master\source/ff.c **** #if FF_USE_FASTSEEK
3680:..\..\FatFS-master\source/ff.c **** 			fp->cltbl = 0;			/* Disable fast seek mode */
3681:..\..\FatFS-master\source/ff.c **** #endif
3682:..\..\FatFS-master\source/ff.c **** 			fp->obj.fs = fs;	 	/* Validate the file object */
 4448              		.loc 1 3682 0
 4449 0142 4346     		mov	r3, r8
 4450 0144 3B60     		str	r3, [r7]
3683:..\..\FatFS-master\source/ff.c **** 			fp->obj.id = fs->id;
 4451              		.loc 1 3683 0
 4452 0146 DB88     		ldrh	r3, [r3, #6]
 4453 0148 BB80     		strh	r3, [r7, #4]
3684:..\..\FatFS-master\source/ff.c **** 			fp->flag = mode;		/* Set file access mode */
 4454              		.loc 1 3684 0
 4455 014a 3D74     		strb	r5, [r7, #16]
3685:..\..\FatFS-master\source/ff.c **** 			fp->err = 0;			/* Clear error flag */
 4456              		.loc 1 3685 0
 4457 014c 0023     		movs	r3, #0
 4458 014e 7B74     		strb	r3, [r7, #17]
3686:..\..\FatFS-master\source/ff.c **** 			fp->sect = 0;			/* Invalidate current data sector */
 4459              		.loc 1 3686 0
 4460 0150 FB61     		str	r3, [r7, #28]
3687:..\..\FatFS-master\source/ff.c **** 			fp->fptr = 0;			/* Set file pointer top of the file */
 4461              		.loc 1 3687 0
 4462 0152 7B61     		str	r3, [r7, #20]
3688:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
3689:..\..\FatFS-master\source/ff.c **** #if !FF_FS_TINY
3690:..\..\FatFS-master\source/ff.c **** 			mem_set(fp->buf, 0, FF_MAX_SS);	/* Clear sector buffer */
 4463              		.loc 1 3690 0
 4464 0154 2833     		adds	r3, r3, #40
 4465 0156 9946     		mov	r9, r3
 4466 0158 B944     		add	r9, r9, r7
 4467 015a 8022     		movs	r2, #128
 4468 015c 9200     		lsls	r2, r2, #2
 4469 015e 0021     		movs	r1, #0
 4470 0160 4846     		mov	r0, r9
 4471 0162 FFF7FEFF 		bl	mem_set
 4472              	.LVL703:
3691:..\..\FatFS-master\source/ff.c **** #endif
3692:..\..\FatFS-master\source/ff.c **** 			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is sp
 4473              		.loc 1 3692 0
 4474 0166 AB06     		lsls	r3, r5, #26
 4475 0168 32D5     		bpl	.L313
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 153


 4476              		.loc 1 3692 0 is_stmt 0 discriminator 1
 4477 016a FD68     		ldr	r5, [r7, #12]
 4478              	.LVL704:
 4479 016c 002D     		cmp	r5, #0
 4480 016e 2FD0     		beq	.L313
3693:..\..\FatFS-master\source/ff.c **** 				fp->fptr = fp->obj.objsize;			/* Offset to seek */
 4481              		.loc 1 3693 0 is_stmt 1
 4482 0170 7D61     		str	r5, [r7, #20]
3694:..\..\FatFS-master\source/ff.c **** 				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
 4483              		.loc 1 3694 0
 4484 0172 029B     		ldr	r3, [sp, #8]
 4485 0174 5B89     		ldrh	r3, [r3, #10]
 4486 0176 5E02     		lsls	r6, r3, #9
 4487              	.LVL705:
3695:..\..\FatFS-master\source/ff.c **** 				clst = fp->obj.sclust;				/* Follow the cluster chain */
 4488              		.loc 1 3695 0
 4489 0178 B968     		ldr	r1, [r7, #8]
 4490              	.LVL706:
3696:..\..\FatFS-master\source/ff.c **** 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
 4491              		.loc 1 3696 0
 4492 017a 0AE0     		b	.L322
 4493              	.L326:
3697:..\..\FatFS-master\source/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4494              		.loc 1 3697 0
 4495 017c 3800     		movs	r0, r7
 4496 017e FFF7FEFF 		bl	get_fat
 4497              	.LVL707:
 4498 0182 0100     		movs	r1, r0
 4499              	.LVL708:
3698:..\..\FatFS-master\source/ff.c **** 					if (clst <= 1) res = FR_INT_ERR;
 4500              		.loc 1 3698 0
 4501 0184 0128     		cmp	r0, #1
 4502 0186 00D8     		bhi	.L323
 4503 0188 0224     		movs	r4, #2
 4504              	.LVL709:
 4505              	.L323:
3699:..\..\FatFS-master\source/ff.c **** 					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 4506              		.loc 1 3699 0
 4507 018a 4B1C     		adds	r3, r1, #1
 4508 018c 00D1     		bne	.L324
 4509 018e 0124     		movs	r4, #1
 4510              	.LVL710:
 4511              	.L324:
3696:..\..\FatFS-master\source/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4512              		.loc 1 3696 0 discriminator 2
 4513 0190 AD1B     		subs	r5, r5, r6
 4514              	.LVL711:
 4515              	.L322:
3696:..\..\FatFS-master\source/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4516              		.loc 1 3696 0 is_stmt 0 discriminator 1
 4517 0192 002C     		cmp	r4, #0
 4518 0194 01D1     		bne	.L325
3696:..\..\FatFS-master\source/ff.c **** 					clst = get_fat(&fp->obj, clst);
 4519              		.loc 1 3696 0 discriminator 3
 4520 0196 B542     		cmp	r5, r6
 4521 0198 F0D8     		bhi	.L326
 4522              	.L325:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 154


3700:..\..\FatFS-master\source/ff.c **** 				}
3701:..\..\FatFS-master\source/ff.c **** 				fp->clust = clst;
 4523              		.loc 1 3701 0 is_stmt 1
 4524 019a B961     		str	r1, [r7, #24]
3702:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
 4525              		.loc 1 3702 0
 4526 019c 002C     		cmp	r4, #0
 4527 019e 17D1     		bne	.L313
 4528              		.loc 1 3702 0 is_stmt 0 discriminator 1
 4529 01a0 EB05     		lsls	r3, r5, #23
 4530 01a2 15D0     		beq	.L313
3703:..\..\FatFS-master\source/ff.c **** 					if ((sc = clst2sect(fs, clst)) == 0) {
 4531              		.loc 1 3703 0 is_stmt 1
 4532 01a4 029B     		ldr	r3, [sp, #8]
 4533 01a6 9846     		mov	r8, r3
 4534 01a8 1800     		movs	r0, r3
 4535 01aa FFF7FEFF 		bl	clst2sect
 4536              	.LVL712:
 4537 01ae 0028     		cmp	r0, #0
 4538 01b0 0BD0     		beq	.L335
3704:..\..\FatFS-master\source/ff.c **** 						res = FR_INT_ERR;
3705:..\..\FatFS-master\source/ff.c **** 					} else {
3706:..\..\FatFS-master\source/ff.c **** 						fp->sect = sc + (DWORD)(ofs / SS(fs));
 4539              		.loc 1 3706 0
 4540 01b2 6D0A     		lsrs	r5, r5, #9
 4541              	.LVL713:
 4542 01b4 4219     		adds	r2, r0, r5
 4543 01b6 FA61     		str	r2, [r7, #28]
3707:..\..\FatFS-master\source/ff.c **** #if !FF_FS_TINY
3708:..\..\FatFS-master\source/ff.c **** 						if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
 4544              		.loc 1 3708 0
 4545 01b8 4346     		mov	r3, r8
 4546 01ba 5878     		ldrb	r0, [r3, #1]
 4547              	.LVL714:
 4548 01bc 0123     		movs	r3, #1
 4549 01be 4946     		mov	r1, r9
 4550 01c0 FFF7FEFF 		bl	disk_read
 4551              	.LVL715:
 4552 01c4 0028     		cmp	r0, #0
 4553 01c6 02D1     		bne	.L336
 4554 01c8 02E0     		b	.L313
 4555              	.LVL716:
 4556              	.L335:
3704:..\..\FatFS-master\source/ff.c **** 						res = FR_INT_ERR;
 4557              		.loc 1 3704 0
 4558 01ca 0224     		movs	r4, #2
 4559              	.LVL717:
 4560 01cc 00E0     		b	.L313
 4561              	.LVL718:
 4562              	.L336:
 4563              		.loc 1 3708 0
 4564 01ce 0124     		movs	r4, #1
 4565              	.LVL719:
 4566              	.L313:
3709:..\..\FatFS-master\source/ff.c **** #endif
3710:..\..\FatFS-master\source/ff.c **** 					}
3711:..\..\FatFS-master\source/ff.c **** 				}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 155


3712:..\..\FatFS-master\source/ff.c **** 			}
3713:..\..\FatFS-master\source/ff.c **** #endif
3714:..\..\FatFS-master\source/ff.c **** 		}
3715:..\..\FatFS-master\source/ff.c **** 
3716:..\..\FatFS-master\source/ff.c **** 		FREE_NAMBUF();
3717:..\..\FatFS-master\source/ff.c **** 	}
3718:..\..\FatFS-master\source/ff.c **** 
3719:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
 4567              		.loc 1 3719 0
 4568 01d0 002C     		cmp	r4, #0
 4569 01d2 05D0     		beq	.L337
 4570              		.loc 1 3719 0 is_stmt 0 discriminator 1
 4571 01d4 0023     		movs	r3, #0
 4572 01d6 3B60     		str	r3, [r7]
3720:..\..\FatFS-master\source/ff.c **** 
3721:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
 4573              		.loc 1 3721 0 is_stmt 1 discriminator 1
 4574 01d8 2000     		movs	r0, r4
 4575 01da 02E0     		b	.L312
 4576              	.LVL720:
 4577              	.L327:
3557:..\..\FatFS-master\source/ff.c **** 
 4578              		.loc 1 3557 0
 4579 01dc 0920     		movs	r0, #9
 4580              	.LVL721:
 4581 01de 00E0     		b	.L312
 4582              	.LVL722:
 4583              	.L337:
 4584              		.loc 1 3721 0
 4585 01e0 2000     		movs	r0, r4
 4586              	.LVL723:
 4587              	.L312:
3722:..\..\FatFS-master\source/ff.c **** }
 4588              		.loc 1 3722 0
 4589 01e2 0FB0     		add	sp, sp, #60
 4590              		@ sp needed
 4591              	.LVL724:
 4592 01e4 0CBC     		pop	{r2, r3}
 4593 01e6 9046     		mov	r8, r2
 4594 01e8 9946     		mov	r9, r3
 4595 01ea F0BD     		pop	{r4, r5, r6, r7, pc}
 4596              		.cfi_endproc
 4597              	.LFE36:
 4598              		.size	f_open, .-f_open
 4599              		.section	.text.f_read,"ax",%progbits
 4600              		.align	2
 4601              		.global	f_read
 4602              		.code	16
 4603              		.thumb_func
 4604              		.type	f_read, %function
 4605              	f_read:
 4606              	.LFB37:
3723:..\..\FatFS-master\source/ff.c **** 
3724:..\..\FatFS-master\source/ff.c **** 
3725:..\..\FatFS-master\source/ff.c **** 
3726:..\..\FatFS-master\source/ff.c **** 
3727:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 156


3728:..\..\FatFS-master\source/ff.c **** /* Read File                                                             */
3729:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3730:..\..\FatFS-master\source/ff.c **** 
3731:..\..\FatFS-master\source/ff.c **** FRESULT f_read (
3732:..\..\FatFS-master\source/ff.c **** 	FIL* fp, 	/* Pointer to the file object */
3733:..\..\FatFS-master\source/ff.c **** 	void* buff,	/* Pointer to data buffer */
3734:..\..\FatFS-master\source/ff.c **** 	UINT btr,	/* Number of bytes to read */
3735:..\..\FatFS-master\source/ff.c **** 	UINT* br	/* Pointer to number of bytes read */
3736:..\..\FatFS-master\source/ff.c **** )
3737:..\..\FatFS-master\source/ff.c **** {
 4607              		.loc 1 3737 0
 4608              		.cfi_startproc
 4609              		@ args = 0, pretend = 0, frame = 16
 4610              		@ frame_needed = 0, uses_anonymous_args = 0
 4611              	.LVL725:
 4612 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4613              		.cfi_def_cfa_offset 20
 4614              		.cfi_offset 4, -20
 4615              		.cfi_offset 5, -16
 4616              		.cfi_offset 6, -12
 4617              		.cfi_offset 7, -8
 4618              		.cfi_offset 14, -4
 4619 0002 5F46     		mov	r7, fp
 4620 0004 5646     		mov	r6, r10
 4621 0006 4D46     		mov	r5, r9
 4622 0008 4446     		mov	r4, r8
 4623 000a F0B4     		push	{r4, r5, r6, r7}
 4624              		.cfi_def_cfa_offset 36
 4625              		.cfi_offset 8, -36
 4626              		.cfi_offset 9, -32
 4627              		.cfi_offset 10, -28
 4628              		.cfi_offset 11, -24
 4629 000c 85B0     		sub	sp, sp, #20
 4630              		.cfi_def_cfa_offset 56
 4631 000e 0400     		movs	r4, r0
 4632 0010 8846     		mov	r8, r1
 4633 0012 1500     		movs	r5, r2
 4634 0014 1F00     		movs	r7, r3
 4635              	.LVL726:
3738:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
3739:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
3740:..\..\FatFS-master\source/ff.c **** 	DWORD clst, sect;
3741:..\..\FatFS-master\source/ff.c **** 	FSIZE_t remain;
3742:..\..\FatFS-master\source/ff.c **** 	UINT rcnt, cc, csect;
3743:..\..\FatFS-master\source/ff.c **** 	BYTE *rbuff = (BYTE*)buff;
3744:..\..\FatFS-master\source/ff.c **** 
3745:..\..\FatFS-master\source/ff.c **** 
3746:..\..\FatFS-master\source/ff.c **** 	*br = 0;	/* Clear read byte counter */
 4636              		.loc 1 3746 0
 4637 0016 0023     		movs	r3, #0
 4638              	.LVL727:
 4639 0018 3B60     		str	r3, [r7]
3747:..\..\FatFS-master\source/ff.c **** 	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
 4640              		.loc 1 3747 0
 4641 001a 0190     		str	r0, [sp, #4]
 4642 001c 03A9     		add	r1, sp, #12
 4643              	.LVL728:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 157


 4644 001e FFF7FEFF 		bl	validate
 4645              	.LVL729:
3748:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4646              		.loc 1 3748 0
 4647 0022 0028     		cmp	r0, #0
 4648 0024 00D0     		beq	.LCB4960
 4649 0026 ADE0     		b	.L339	@long jump
 4650              	.LCB4960:
 4651              		.loc 1 3748 0 is_stmt 0 discriminator 2
 4652 0028 607C     		ldrb	r0, [r4, #17]
 4653              	.LVL730:
 4654 002a 0028     		cmp	r0, #0
 4655 002c 00D0     		beq	.LCB4965
 4656 002e A9E0     		b	.L339	@long jump
 4657              	.LCB4965:
3749:..\..\FatFS-master\source/ff.c **** 	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
 4658              		.loc 1 3749 0 is_stmt 1
 4659 0030 237C     		ldrb	r3, [r4, #16]
 4660 0032 DB07     		lsls	r3, r3, #31
 4661 0034 00D4     		bmi	.LCB4971
 4662 0036 A4E0     		b	.L361	@long jump
 4663              	.LCB4971:
3750:..\..\FatFS-master\source/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4664              		.loc 1 3750 0
 4665 0038 E368     		ldr	r3, [r4, #12]
 4666 003a 6269     		ldr	r2, [r4, #20]
 4667 003c 9E1A     		subs	r6, r3, r2
 4668              	.LVL731:
3751:..\..\FatFS-master\source/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4669              		.loc 1 3751 0
 4670 003e AE42     		cmp	r6, r5
 4671 0040 00D2     		bcs	.LCB4979
 4672 0042 99E0     		b	.L341	@long jump
 4673              	.LCB4979:
 4674 0044 2E00     		movs	r6, r5
 4675              	.LVL732:
 4676 0046 97E0     		b	.L341
 4677              	.LVL733:
 4678              	.L358:
3752:..\..\FatFS-master\source/ff.c **** 
3753:..\..\FatFS-master\source/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
3754:..\..\FatFS-master\source/ff.c **** 		btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {
3755:..\..\FatFS-master\source/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4679              		.loc 1 3755 0
 4680 0048 6369     		ldr	r3, [r4, #20]
 4681 004a DA05     		lsls	r2, r3, #23
 4682 004c 00D0     		beq	.LCB4995
 4683 004e 7AE0     		b	.L342	@long jump
 4684              	.LCB4995:
3756:..\..\FatFS-master\source/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
 4685              		.loc 1 3756 0
 4686 0050 5A0A     		lsrs	r2, r3, #9
 4687 0052 0399     		ldr	r1, [sp, #12]
 4688 0054 4989     		ldrh	r1, [r1, #10]
 4689 0056 0139     		subs	r1, r1, #1
 4690 0058 1140     		ands	r1, r2
 4691 005a 8946     		mov	r9, r1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 158


 4692              	.LVL734:
3757:..\..\FatFS-master\source/ff.c **** 			if (csect == 0) {					/* On the cluster boundary? */
 4693              		.loc 1 3757 0
 4694 005c 14D1     		bne	.L343
3758:..\..\FatFS-master\source/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4695              		.loc 1 3758 0
 4696 005e 002B     		cmp	r3, #0
 4697 0060 01D1     		bne	.L344
3759:..\..\FatFS-master\source/ff.c **** 					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
 4698              		.loc 1 3759 0
 4699 0062 A068     		ldr	r0, [r4, #8]
 4700              	.LVL735:
 4701 0064 03E0     		b	.L345
 4702              	.LVL736:
 4703              	.L344:
3760:..\..\FatFS-master\source/ff.c **** 				} else {						/* Middle or end of the file */
3761:..\..\FatFS-master\source/ff.c **** #if FF_USE_FASTSEEK
3762:..\..\FatFS-master\source/ff.c **** 					if (fp->cltbl) {
3763:..\..\FatFS-master\source/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3764:..\..\FatFS-master\source/ff.c **** 					} else
3765:..\..\FatFS-master\source/ff.c **** #endif
3766:..\..\FatFS-master\source/ff.c **** 					{
3767:..\..\FatFS-master\source/ff.c **** 						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
 4704              		.loc 1 3767 0
 4705 0066 A169     		ldr	r1, [r4, #24]
 4706              	.LVL737:
 4707 0068 0198     		ldr	r0, [sp, #4]
 4708 006a FFF7FEFF 		bl	get_fat
 4709              	.LVL738:
 4710              	.L345:
3768:..\..\FatFS-master\source/ff.c **** 					}
3769:..\..\FatFS-master\source/ff.c **** 				}
3770:..\..\FatFS-master\source/ff.c **** 				if (clst < 2) ABORT(fs, FR_INT_ERR);
 4711              		.loc 1 3770 0
 4712 006e 0128     		cmp	r0, #1
 4713 0070 03D8     		bhi	.L346
 4714              		.loc 1 3770 0 is_stmt 0 discriminator 1
 4715 0072 0223     		movs	r3, #2
 4716 0074 6374     		strb	r3, [r4, #17]
 4717 0076 0220     		movs	r0, #2
 4718              	.LVL739:
 4719 0078 84E0     		b	.L339
 4720              	.LVL740:
 4721              	.L346:
3771:..\..\FatFS-master\source/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 4722              		.loc 1 3771 0 is_stmt 1
 4723 007a 431C     		adds	r3, r0, #1
 4724 007c 03D1     		bne	.L347
 4725              		.loc 1 3771 0 is_stmt 0 discriminator 1
 4726 007e 0123     		movs	r3, #1
 4727 0080 6374     		strb	r3, [r4, #17]
 4728 0082 0230     		adds	r0, r0, #2
 4729              	.LVL741:
 4730 0084 7EE0     		b	.L339
 4731              	.LVL742:
 4732              	.L347:
3772:..\..\FatFS-master\source/ff.c **** 				fp->clust = clst;				/* Update current cluster */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 159


 4733              		.loc 1 3772 0 is_stmt 1
 4734 0086 A061     		str	r0, [r4, #24]
 4735              	.LVL743:
 4736              	.L343:
3773:..\..\FatFS-master\source/ff.c **** 			}
3774:..\..\FatFS-master\source/ff.c **** 			sect = clst2sect(fs, fp->clust);	/* Get current sector */
 4737              		.loc 1 3774 0
 4738 0088 039B     		ldr	r3, [sp, #12]
 4739 008a 9B46     		mov	fp, r3
 4740 008c A169     		ldr	r1, [r4, #24]
 4741 008e 1800     		movs	r0, r3
 4742 0090 FFF7FEFF 		bl	clst2sect
 4743              	.LVL744:
3775:..\..\FatFS-master\source/ff.c **** 			if (sect == 0) ABORT(fs, FR_INT_ERR);
 4744              		.loc 1 3775 0
 4745 0094 0028     		cmp	r0, #0
 4746 0096 03D1     		bne	.L348
 4747              		.loc 1 3775 0 is_stmt 0 discriminator 1
 4748 0098 0223     		movs	r3, #2
 4749 009a 6374     		strb	r3, [r4, #17]
 4750 009c 0230     		adds	r0, r0, #2
 4751              	.LVL745:
 4752 009e 71E0     		b	.L339
 4753              	.LVL746:
 4754              	.L348:
3776:..\..\FatFS-master\source/ff.c **** 			sect += csect;
 4755              		.loc 1 3776 0 is_stmt 1
 4756 00a0 4844     		add	r0, r0, r9
 4757              	.LVL747:
 4758 00a2 8246     		mov	r10, r0
 4759              	.LVL748:
3777:..\..\FatFS-master\source/ff.c **** 			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
 4760              		.loc 1 3777 0
 4761 00a4 750A     		lsrs	r5, r6, #9
 4762              	.LVL749:
3778:..\..\FatFS-master\source/ff.c **** 			if (cc > 0) {						/* Read maximum contiguous sectors directly */
 4763              		.loc 1 3778 0
 4764 00a6 27D0     		beq	.L349
3779:..\..\FatFS-master\source/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 4765              		.loc 1 3779 0
 4766 00a8 4B46     		mov	r3, r9
 4767 00aa 5B19     		adds	r3, r3, r5
 4768 00ac 5A46     		mov	r2, fp
 4769 00ae 5289     		ldrh	r2, [r2, #10]
 4770 00b0 9342     		cmp	r3, r2
 4771 00b2 01D9     		bls	.L350
3780:..\..\FatFS-master\source/ff.c **** 					cc = fs->csize - csect;
 4772              		.loc 1 3780 0
 4773 00b4 4B46     		mov	r3, r9
 4774 00b6 D51A     		subs	r5, r2, r3
 4775              	.LVL750:
 4776              	.L350:
3781:..\..\FatFS-master\source/ff.c **** 				}
3782:..\..\FatFS-master\source/ff.c **** 				if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4777              		.loc 1 3782 0
 4778 00b8 5B46     		mov	r3, fp
 4779 00ba 5878     		ldrb	r0, [r3, #1]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 160


 4780              	.LVL751:
 4781 00bc 2B00     		movs	r3, r5
 4782 00be 5246     		mov	r2, r10
 4783 00c0 4146     		mov	r1, r8
 4784 00c2 FFF7FEFF 		bl	disk_read
 4785              	.LVL752:
 4786 00c6 0028     		cmp	r0, #0
 4787 00c8 03D0     		beq	.L351
 4788              		.loc 1 3782 0 is_stmt 0 discriminator 1
 4789 00ca 0123     		movs	r3, #1
 4790 00cc 6374     		strb	r3, [r4, #17]
 4791 00ce 0120     		movs	r0, #1
 4792 00d0 58E0     		b	.L339
 4793              	.L351:
3783:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY && FF_FS_MINIMIZE <= 2		/* Replace one of the read sectors with cached data if 
3784:..\..\FatFS-master\source/ff.c **** #if FF_FS_TINY
3785:..\..\FatFS-master\source/ff.c **** 				if (fs->wflag && fs->winsect - sect < cc) {
3786:..\..\FatFS-master\source/ff.c **** 					mem_cpy(rbuff + ((fs->winsect - sect) * SS(fs)), fs->win, SS(fs));
3787:..\..\FatFS-master\source/ff.c **** 				}
3788:..\..\FatFS-master\source/ff.c **** #else
3789:..\..\FatFS-master\source/ff.c **** 				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
 4794              		.loc 1 3789 0 is_stmt 1
 4795 00d2 1023     		movs	r3, #16
 4796 00d4 E356     		ldrsb	r3, [r4, r3]
 4797 00d6 002B     		cmp	r3, #0
 4798 00d8 0CDA     		bge	.L352
 4799              		.loc 1 3789 0 is_stmt 0 discriminator 1
 4800 00da E369     		ldr	r3, [r4, #28]
 4801 00dc 5246     		mov	r2, r10
 4802 00de 981A     		subs	r0, r3, r2
 4803 00e0 8542     		cmp	r5, r0
 4804 00e2 07D9     		bls	.L352
 4805              	.LVL753:
3790:..\..\FatFS-master\source/ff.c **** 					mem_cpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
 4806              		.loc 1 3790 0 is_stmt 1
 4807 00e4 4002     		lsls	r0, r0, #9
 4808 00e6 2100     		movs	r1, r4
 4809 00e8 2831     		adds	r1, r1, #40
 4810 00ea 4044     		add	r0, r0, r8
 4811 00ec 8022     		movs	r2, #128
 4812              	.LVL754:
 4813 00ee 9200     		lsls	r2, r2, #2
 4814 00f0 FFF7FEFF 		bl	mem_cpy
 4815              	.LVL755:
 4816              	.L352:
3791:..\..\FatFS-master\source/ff.c **** 				}
3792:..\..\FatFS-master\source/ff.c **** #endif
3793:..\..\FatFS-master\source/ff.c **** #endif
3794:..\..\FatFS-master\source/ff.c **** 				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
 4817              		.loc 1 3794 0
 4818 00f4 6D02     		lsls	r5, r5, #9
 4819              	.LVL756:
3795:..\..\FatFS-master\source/ff.c **** 				continue;
 4820              		.loc 1 3795 0
 4821 00f6 36E0     		b	.L353
 4822              	.LVL757:
 4823              	.L349:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 161


3796:..\..\FatFS-master\source/ff.c **** 			}
3797:..\..\FatFS-master\source/ff.c **** #if !FF_FS_TINY
3798:..\..\FatFS-master\source/ff.c **** 			if (fp->sect != sect) {			/* Load data sector if not in cache */
 4824              		.loc 1 3798 0
 4825 00f8 E269     		ldr	r2, [r4, #28]
 4826 00fa 9042     		cmp	r0, r2
 4827 00fc 21D0     		beq	.L354
3799:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
3800:..\..\FatFS-master\source/ff.c **** 				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
 4828              		.loc 1 3800 0
 4829 00fe 1023     		movs	r3, #16
 4830 0100 E356     		ldrsb	r3, [r4, r3]
 4831 0102 002B     		cmp	r3, #0
 4832 0104 0FDA     		bge	.L355
3801:..\..\FatFS-master\source/ff.c **** 					if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 4833              		.loc 1 3801 0
 4834 0106 2100     		movs	r1, r4
 4835 0108 2831     		adds	r1, r1, #40
 4836 010a 5B46     		mov	r3, fp
 4837 010c 5878     		ldrb	r0, [r3, #1]
 4838              	.LVL758:
 4839 010e 0123     		movs	r3, #1
 4840 0110 FFF7FEFF 		bl	disk_write
 4841              	.LVL759:
 4842 0114 0028     		cmp	r0, #0
 4843 0116 02D0     		beq	.L356
 4844              		.loc 1 3801 0 is_stmt 0 discriminator 1
 4845 0118 0120     		movs	r0, #1
 4846 011a 6074     		strb	r0, [r4, #17]
 4847 011c 32E0     		b	.L339
 4848              	.L356:
3802:..\..\FatFS-master\source/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 4849              		.loc 1 3802 0 is_stmt 1
 4850 011e 237C     		ldrb	r3, [r4, #16]
 4851 0120 7F22     		movs	r2, #127
 4852 0122 1340     		ands	r3, r2
 4853 0124 2374     		strb	r3, [r4, #16]
 4854              	.L355:
3803:..\..\FatFS-master\source/ff.c **** 				}
3804:..\..\FatFS-master\source/ff.c **** #endif
3805:..\..\FatFS-master\source/ff.c **** 				if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cac
 4855              		.loc 1 3805 0
 4856 0126 2100     		movs	r1, r4
 4857 0128 2831     		adds	r1, r1, #40
 4858 012a 039B     		ldr	r3, [sp, #12]
 4859 012c 5878     		ldrb	r0, [r3, #1]
 4860 012e 0123     		movs	r3, #1
 4861 0130 5246     		mov	r2, r10
 4862 0132 FFF7FEFF 		bl	disk_read
 4863              	.LVL760:
 4864 0136 0028     		cmp	r0, #0
 4865 0138 03D0     		beq	.L354
 4866              		.loc 1 3805 0 is_stmt 0 discriminator 1
 4867 013a 0123     		movs	r3, #1
 4868 013c 6374     		strb	r3, [r4, #17]
 4869 013e 0120     		movs	r0, #1
 4870 0140 20E0     		b	.L339
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 162


 4871              	.L354:
3806:..\..\FatFS-master\source/ff.c **** 			}
3807:..\..\FatFS-master\source/ff.c **** #endif
3808:..\..\FatFS-master\source/ff.c **** 			fp->sect = sect;
 4872              		.loc 1 3808 0 is_stmt 1
 4873 0142 5346     		mov	r3, r10
 4874 0144 E361     		str	r3, [r4, #28]
 4875              	.LVL761:
 4876              	.L342:
3809:..\..\FatFS-master\source/ff.c **** 		}
3810:..\..\FatFS-master\source/ff.c **** 		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
 4877              		.loc 1 3810 0
 4878 0146 6369     		ldr	r3, [r4, #20]
 4879 0148 D905     		lsls	r1, r3, #23
 4880 014a C90D     		lsrs	r1, r1, #23
 4881 014c 8025     		movs	r5, #128
 4882 014e AD00     		lsls	r5, r5, #2
 4883 0150 6D1A     		subs	r5, r5, r1
 4884              	.LVL762:
3811:..\..\FatFS-master\source/ff.c **** 		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
 4885              		.loc 1 3811 0
 4886 0152 AE42     		cmp	r6, r5
 4887 0154 00D2     		bcs	.L357
 4888 0156 3500     		movs	r5, r6
 4889              	.LVL763:
 4890              	.L357:
3812:..\..\FatFS-master\source/ff.c **** #if FF_FS_TINY
3813:..\..\FatFS-master\source/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3814:..\..\FatFS-master\source/ff.c **** 		mem_cpy(rbuff, fs->win + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
3815:..\..\FatFS-master\source/ff.c **** #else
3816:..\..\FatFS-master\source/ff.c **** 		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
 4891              		.loc 1 3816 0
 4892 0158 2300     		movs	r3, r4
 4893 015a 2833     		adds	r3, r3, #40
 4894 015c 5918     		adds	r1, r3, r1
 4895 015e 2A00     		movs	r2, r5
 4896 0160 4046     		mov	r0, r8
 4897 0162 FFF7FEFF 		bl	mem_cpy
 4898              	.LVL764:
 4899              	.L353:
3754:..\..\FatFS-master\source/ff.c **** 		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
 4900              		.loc 1 3754 0
 4901 0166 761B     		subs	r6, r6, r5
 4902              	.LVL765:
 4903 0168 3B68     		ldr	r3, [r7]
 4904 016a 5B19     		adds	r3, r3, r5
 4905 016c 3B60     		str	r3, [r7]
 4906 016e A844     		add	r8, r8, r5
 4907              	.LVL766:
 4908 0170 6369     		ldr	r3, [r4, #20]
 4909 0172 9C46     		mov	ip, r3
 4910 0174 6544     		add	r5, r5, ip
 4911              	.LVL767:
 4912 0176 6561     		str	r5, [r4, #20]
 4913              	.LVL768:
 4914              	.L341:
3753:..\..\FatFS-master\source/ff.c **** 		btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 163


 4915              		.loc 1 3753 0
 4916 0178 002E     		cmp	r6, #0
 4917 017a 00D0     		beq	.LCB5274
 4918 017c 64E7     		b	.L358	@long jump
 4919              	.LCB5274:
3817:..\..\FatFS-master\source/ff.c **** #endif
3818:..\..\FatFS-master\source/ff.c **** 	}
3819:..\..\FatFS-master\source/ff.c **** 
3820:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, FR_OK);
 4920              		.loc 1 3820 0
 4921 017e 0020     		movs	r0, #0
 4922 0180 00E0     		b	.L339
 4923              	.LVL769:
 4924              	.L361:
3749:..\..\FatFS-master\source/ff.c **** 	remain = fp->obj.objsize - fp->fptr;
 4925              		.loc 1 3749 0
 4926 0182 0720     		movs	r0, #7
 4927              	.LVL770:
 4928              	.L339:
3821:..\..\FatFS-master\source/ff.c **** }
 4929              		.loc 1 3821 0
 4930 0184 05B0     		add	sp, sp, #20
 4931              		@ sp needed
 4932              	.LVL771:
 4933              	.LVL772:
 4934              	.LVL773:
 4935 0186 3CBC     		pop	{r2, r3, r4, r5}
 4936 0188 9046     		mov	r8, r2
 4937 018a 9946     		mov	r9, r3
 4938 018c A246     		mov	r10, r4
 4939 018e AB46     		mov	fp, r5
 4940 0190 F0BD     		pop	{r4, r5, r6, r7, pc}
 4941              		.cfi_endproc
 4942              	.LFE37:
 4943              		.size	f_read, .-f_read
 4944 0192 C046     		.section	.text.f_write,"ax",%progbits
 4945              		.align	2
 4946              		.global	f_write
 4947              		.code	16
 4948              		.thumb_func
 4949              		.type	f_write, %function
 4950              	f_write:
 4951              	.LFB38:
3822:..\..\FatFS-master\source/ff.c **** 
3823:..\..\FatFS-master\source/ff.c **** 
3824:..\..\FatFS-master\source/ff.c **** 
3825:..\..\FatFS-master\source/ff.c **** 
3826:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
3827:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3828:..\..\FatFS-master\source/ff.c **** /* Write File                                                            */
3829:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3830:..\..\FatFS-master\source/ff.c **** 
3831:..\..\FatFS-master\source/ff.c **** FRESULT f_write (
3832:..\..\FatFS-master\source/ff.c **** 	FIL* fp,			/* Pointer to the file object */
3833:..\..\FatFS-master\source/ff.c **** 	const void* buff,	/* Pointer to the data to be written */
3834:..\..\FatFS-master\source/ff.c **** 	UINT btw,			/* Number of bytes to write */
3835:..\..\FatFS-master\source/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 164


3836:..\..\FatFS-master\source/ff.c **** )
3837:..\..\FatFS-master\source/ff.c **** {
 4952              		.loc 1 3837 0
 4953              		.cfi_startproc
 4954              		@ args = 0, pretend = 0, frame = 16
 4955              		@ frame_needed = 0, uses_anonymous_args = 0
 4956              	.LVL774:
 4957 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4958              		.cfi_def_cfa_offset 20
 4959              		.cfi_offset 4, -20
 4960              		.cfi_offset 5, -16
 4961              		.cfi_offset 6, -12
 4962              		.cfi_offset 7, -8
 4963              		.cfi_offset 14, -4
 4964 0002 5F46     		mov	r7, fp
 4965 0004 5646     		mov	r6, r10
 4966 0006 4D46     		mov	r5, r9
 4967 0008 4446     		mov	r4, r8
 4968 000a F0B4     		push	{r4, r5, r6, r7}
 4969              		.cfi_def_cfa_offset 36
 4970              		.cfi_offset 8, -36
 4971              		.cfi_offset 9, -32
 4972              		.cfi_offset 10, -28
 4973              		.cfi_offset 11, -24
 4974 000c 85B0     		sub	sp, sp, #20
 4975              		.cfi_def_cfa_offset 56
 4976 000e 0400     		movs	r4, r0
 4977 0010 8846     		mov	r8, r1
 4978 0012 1600     		movs	r6, r2
 4979 0014 1F00     		movs	r7, r3
 4980              	.LVL775:
3838:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
3839:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
3840:..\..\FatFS-master\source/ff.c **** 	DWORD clst, sect;
3841:..\..\FatFS-master\source/ff.c **** 	UINT wcnt, cc, csect;
3842:..\..\FatFS-master\source/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
3843:..\..\FatFS-master\source/ff.c **** 
3844:..\..\FatFS-master\source/ff.c **** 
3845:..\..\FatFS-master\source/ff.c **** 	*bw = 0;	/* Clear write byte counter */
 4981              		.loc 1 3845 0
 4982 0016 0023     		movs	r3, #0
 4983              	.LVL776:
 4984 0018 3B60     		str	r3, [r7]
3846:..\..\FatFS-master\source/ff.c **** 	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
 4985              		.loc 1 3846 0
 4986 001a 0190     		str	r0, [sp, #4]
 4987 001c 03A9     		add	r1, sp, #12
 4988              	.LVL777:
 4989 001e FFF7FEFF 		bl	validate
 4990              	.LVL778:
3847:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
 4991              		.loc 1 3847 0
 4992 0022 0028     		cmp	r0, #0
 4993 0024 00D0     		beq	.LCB5359
 4994 0026 CCE0     		b	.L364	@long jump
 4995              	.LCB5359:
 4996              		.loc 1 3847 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 165


 4997 0028 607C     		ldrb	r0, [r4, #17]
 4998              	.LVL779:
 4999 002a 0028     		cmp	r0, #0
 5000 002c 00D0     		beq	.LCB5364
 5001 002e C8E0     		b	.L364	@long jump
 5002              	.LCB5364:
3848:..\..\FatFS-master\source/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 5003              		.loc 1 3848 0 is_stmt 1
 5004 0030 237C     		ldrb	r3, [r4, #16]
 5005 0032 9B07     		lsls	r3, r3, #30
 5006 0034 00D4     		bmi	.LCB5370
 5007 0036 C3E0     		b	.L388	@long jump
 5008              	.LCB5370:
3849:..\..\FatFS-master\source/ff.c **** 
3850:..\..\FatFS-master\source/ff.c **** 	/* Check fptr wrap-around (file size cannot reach 4 GiB at FAT volume) */
3851:..\..\FatFS-master\source/ff.c **** 	if ((!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
 5009              		.loc 1 3851 0
 5010 0038 6369     		ldr	r3, [r4, #20]
 5011 003a 9A19     		adds	r2, r3, r6
 5012 003c 9342     		cmp	r3, r2
 5013 003e 00D8     		bhi	.LCB5374
 5014 0040 B5E0     		b	.L366	@long jump
 5015              	.LCB5374:
3852:..\..\FatFS-master\source/ff.c **** 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 5016              		.loc 1 3852 0
 5017 0042 DE43     		mvns	r6, r3
 5018              	.LVL780:
 5019 0044 B3E0     		b	.L366
 5020              	.LVL781:
 5021              	.L385:
3853:..\..\FatFS-master\source/ff.c **** 	}
3854:..\..\FatFS-master\source/ff.c **** 
3855:..\..\FatFS-master\source/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
3856:..\..\FatFS-master\source/ff.c **** 		btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.
3857:..\..\FatFS-master\source/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5022              		.loc 1 3857 0
 5023 0046 6369     		ldr	r3, [r4, #20]
 5024 0048 DA05     		lsls	r2, r3, #23
 5025 004a 00D0     		beq	.LCB5390
 5026 004c 8CE0     		b	.L367	@long jump
 5027              	.LCB5390:
3858:..\..\FatFS-master\source/ff.c **** 			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
 5028              		.loc 1 3858 0
 5029 004e 5A0A     		lsrs	r2, r3, #9
 5030 0050 0399     		ldr	r1, [sp, #12]
 5031 0052 4989     		ldrh	r1, [r1, #10]
 5032 0054 0139     		subs	r1, r1, #1
 5033 0056 1140     		ands	r1, r2
 5034 0058 8946     		mov	r9, r1
 5035              	.LVL782:
3859:..\..\FatFS-master\source/ff.c **** 			if (csect == 0) {				/* On the cluster boundary? */
 5036              		.loc 1 3859 0
 5037 005a 21D1     		bne	.L368
3860:..\..\FatFS-master\source/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5038              		.loc 1 3860 0
 5039 005c 002B     		cmp	r3, #0
 5040 005e 07D1     		bne	.L369
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 166


3861:..\..\FatFS-master\source/ff.c **** 					clst = fp->obj.sclust;	/* Follow from the origin */
 5041              		.loc 1 3861 0
 5042 0060 A068     		ldr	r0, [r4, #8]
 5043              	.LVL783:
3862:..\..\FatFS-master\source/ff.c **** 					if (clst == 0) {		/* If no cluster is allocated, */
 5044              		.loc 1 3862 0
 5045 0062 0028     		cmp	r0, #0
 5046 0064 08D1     		bne	.L370
3863:..\..\FatFS-master\source/ff.c **** 						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
 5047              		.loc 1 3863 0
 5048 0066 0021     		movs	r1, #0
 5049              	.LVL784:
 5050 0068 0198     		ldr	r0, [sp, #4]
 5051              	.LVL785:
 5052 006a FFF7FEFF 		bl	create_chain
 5053              	.LVL786:
 5054 006e 03E0     		b	.L370
 5055              	.LVL787:
 5056              	.L369:
3864:..\..\FatFS-master\source/ff.c **** 					}
3865:..\..\FatFS-master\source/ff.c **** 				} else {					/* On the middle or end of the file */
3866:..\..\FatFS-master\source/ff.c **** #if FF_USE_FASTSEEK
3867:..\..\FatFS-master\source/ff.c **** 					if (fp->cltbl) {
3868:..\..\FatFS-master\source/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
3869:..\..\FatFS-master\source/ff.c **** 					} else
3870:..\..\FatFS-master\source/ff.c **** #endif
3871:..\..\FatFS-master\source/ff.c **** 					{
3872:..\..\FatFS-master\source/ff.c **** 						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 5057              		.loc 1 3872 0
 5058 0070 A169     		ldr	r1, [r4, #24]
 5059              	.LVL788:
 5060 0072 0198     		ldr	r0, [sp, #4]
 5061 0074 FFF7FEFF 		bl	create_chain
 5062              	.LVL789:
 5063              	.L370:
3873:..\..\FatFS-master\source/ff.c **** 					}
3874:..\..\FatFS-master\source/ff.c **** 				}
3875:..\..\FatFS-master\source/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 5064              		.loc 1 3875 0
 5065 0078 0028     		cmp	r0, #0
 5066 007a 00D1     		bne	.LCB5434
 5067 007c 9AE0     		b	.L371	@long jump
 5068              	.LCB5434:
3876:..\..\FatFS-master\source/ff.c **** 				if (clst == 1) ABORT(fs, FR_INT_ERR);
 5069              		.loc 1 3876 0
 5070 007e 0128     		cmp	r0, #1
 5071 0080 03D1     		bne	.L372
 5072              		.loc 1 3876 0 is_stmt 0 discriminator 1
 5073 0082 0223     		movs	r3, #2
 5074 0084 6374     		strb	r3, [r4, #17]
 5075 0086 0130     		adds	r0, r0, #1
 5076              	.LVL790:
 5077 0088 9BE0     		b	.L364
 5078              	.LVL791:
 5079              	.L372:
3877:..\..\FatFS-master\source/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5080              		.loc 1 3877 0 is_stmt 1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 167


 5081 008a 431C     		adds	r3, r0, #1
 5082 008c 03D1     		bne	.L373
 5083              		.loc 1 3877 0 is_stmt 0 discriminator 1
 5084 008e 0123     		movs	r3, #1
 5085 0090 6374     		strb	r3, [r4, #17]
 5086 0092 0230     		adds	r0, r0, #2
 5087              	.LVL792:
 5088 0094 95E0     		b	.L364
 5089              	.LVL793:
 5090              	.L373:
3878:..\..\FatFS-master\source/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5091              		.loc 1 3878 0 is_stmt 1
 5092 0096 A061     		str	r0, [r4, #24]
3879:..\..\FatFS-master\source/ff.c **** 				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
 5093              		.loc 1 3879 0
 5094 0098 A368     		ldr	r3, [r4, #8]
 5095 009a 002B     		cmp	r3, #0
 5096 009c 00D1     		bne	.L368
 5097              		.loc 1 3879 0 is_stmt 0 discriminator 1
 5098 009e A060     		str	r0, [r4, #8]
 5099              	.LVL794:
 5100              	.L368:
3880:..\..\FatFS-master\source/ff.c **** 			}
3881:..\..\FatFS-master\source/ff.c **** #if FF_FS_TINY
3882:..\..\FatFS-master\source/ff.c **** 			if (fs->winsect == fp->sect && sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Write-back s
3883:..\..\FatFS-master\source/ff.c **** #else
3884:..\..\FatFS-master\source/ff.c **** 			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
 5101              		.loc 1 3884 0 is_stmt 1
 5102 00a0 1023     		movs	r3, #16
 5103 00a2 E356     		ldrsb	r3, [r4, r3]
 5104 00a4 002B     		cmp	r3, #0
 5105 00a6 11DA     		bge	.L374
3885:..\..\FatFS-master\source/ff.c **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5106              		.loc 1 3885 0
 5107 00a8 2100     		movs	r1, r4
 5108 00aa 2831     		adds	r1, r1, #40
 5109 00ac 039B     		ldr	r3, [sp, #12]
 5110 00ae 5878     		ldrb	r0, [r3, #1]
 5111 00b0 0123     		movs	r3, #1
 5112 00b2 E269     		ldr	r2, [r4, #28]
 5113 00b4 FFF7FEFF 		bl	disk_write
 5114              	.LVL795:
 5115 00b8 0028     		cmp	r0, #0
 5116 00ba 03D0     		beq	.L375
 5117              		.loc 1 3885 0 is_stmt 0 discriminator 1
 5118 00bc 0123     		movs	r3, #1
 5119 00be 6374     		strb	r3, [r4, #17]
 5120 00c0 0120     		movs	r0, #1
 5121 00c2 7EE0     		b	.L364
 5122              	.L375:
3886:..\..\FatFS-master\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5123              		.loc 1 3886 0 is_stmt 1
 5124 00c4 237C     		ldrb	r3, [r4, #16]
 5125 00c6 7F22     		movs	r2, #127
 5126 00c8 1340     		ands	r3, r2
 5127 00ca 2374     		strb	r3, [r4, #16]
 5128              	.L374:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 168


3887:..\..\FatFS-master\source/ff.c **** 			}
3888:..\..\FatFS-master\source/ff.c **** #endif
3889:..\..\FatFS-master\source/ff.c **** 			sect = clst2sect(fs, fp->clust);	/* Get current sector */
 5129              		.loc 1 3889 0
 5130 00cc 039B     		ldr	r3, [sp, #12]
 5131 00ce 9B46     		mov	fp, r3
 5132 00d0 A169     		ldr	r1, [r4, #24]
 5133 00d2 1800     		movs	r0, r3
 5134 00d4 FFF7FEFF 		bl	clst2sect
 5135              	.LVL796:
3890:..\..\FatFS-master\source/ff.c **** 			if (sect == 0) ABORT(fs, FR_INT_ERR);
 5136              		.loc 1 3890 0
 5137 00d8 0028     		cmp	r0, #0
 5138 00da 03D1     		bne	.L376
 5139              		.loc 1 3890 0 is_stmt 0 discriminator 1
 5140 00dc 0223     		movs	r3, #2
 5141 00de 6374     		strb	r3, [r4, #17]
 5142 00e0 0230     		adds	r0, r0, #2
 5143              	.LVL797:
 5144 00e2 6EE0     		b	.L364
 5145              	.LVL798:
 5146              	.L376:
3891:..\..\FatFS-master\source/ff.c **** 			sect += csect;
 5147              		.loc 1 3891 0 is_stmt 1
 5148 00e4 4844     		add	r0, r0, r9
 5149              	.LVL799:
 5150 00e6 8246     		mov	r10, r0
 5151              	.LVL800:
3892:..\..\FatFS-master\source/ff.c **** 			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
 5152              		.loc 1 3892 0
 5153 00e8 750A     		lsrs	r5, r6, #9
 5154              	.LVL801:
3893:..\..\FatFS-master\source/ff.c **** 			if (cc > 0) {					/* Write maximum contiguous sectors directly */
 5155              		.loc 1 3893 0
 5156 00ea 27D0     		beq	.L377
3894:..\..\FatFS-master\source/ff.c **** 				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
 5157              		.loc 1 3894 0
 5158 00ec 4B46     		mov	r3, r9
 5159 00ee 5B19     		adds	r3, r3, r5
 5160 00f0 5A46     		mov	r2, fp
 5161 00f2 5289     		ldrh	r2, [r2, #10]
 5162 00f4 9342     		cmp	r3, r2
 5163 00f6 01D9     		bls	.L378
3895:..\..\FatFS-master\source/ff.c **** 					cc = fs->csize - csect;
 5164              		.loc 1 3895 0
 5165 00f8 4B46     		mov	r3, r9
 5166 00fa D51A     		subs	r5, r2, r3
 5167              	.LVL802:
 5168              	.L378:
3896:..\..\FatFS-master\source/ff.c **** 				}
3897:..\..\FatFS-master\source/ff.c **** 				if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5169              		.loc 1 3897 0
 5170 00fc 5B46     		mov	r3, fp
 5171 00fe 5878     		ldrb	r0, [r3, #1]
 5172              	.LVL803:
 5173 0100 2B00     		movs	r3, r5
 5174 0102 5246     		mov	r2, r10
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 169


 5175 0104 4146     		mov	r1, r8
 5176 0106 FFF7FEFF 		bl	disk_write
 5177              	.LVL804:
 5178 010a 0028     		cmp	r0, #0
 5179 010c 03D0     		beq	.L379
 5180              		.loc 1 3897 0 is_stmt 0 discriminator 1
 5181 010e 0123     		movs	r3, #1
 5182 0110 6374     		strb	r3, [r4, #17]
 5183 0112 0120     		movs	r0, #1
 5184 0114 55E0     		b	.L364
 5185              	.L379:
3898:..\..\FatFS-master\source/ff.c **** #if FF_FS_MINIMIZE <= 2
3899:..\..\FatFS-master\source/ff.c **** #if FF_FS_TINY
3900:..\..\FatFS-master\source/ff.c **** 				if (fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct writ
3901:..\..\FatFS-master\source/ff.c **** 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) * SS(fs)), SS(fs));
3902:..\..\FatFS-master\source/ff.c **** 					fs->wflag = 0;
3903:..\..\FatFS-master\source/ff.c **** 				}
3904:..\..\FatFS-master\source/ff.c **** #else
3905:..\..\FatFS-master\source/ff.c **** 				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write *
 5186              		.loc 1 3905 0 is_stmt 1
 5187 0116 E369     		ldr	r3, [r4, #28]
 5188 0118 5246     		mov	r2, r10
 5189 011a 991A     		subs	r1, r3, r2
 5190 011c 8D42     		cmp	r5, r1
 5191 011e 0BD9     		bls	.L380
 5192              	.LVL805:
3906:..\..\FatFS-master\source/ff.c **** 					mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
 5193              		.loc 1 3906 0
 5194 0120 2000     		movs	r0, r4
 5195 0122 2830     		adds	r0, r0, #40
 5196 0124 4902     		lsls	r1, r1, #9
 5197 0126 4144     		add	r1, r1, r8
 5198 0128 8022     		movs	r2, #128
 5199              	.LVL806:
 5200 012a 9200     		lsls	r2, r2, #2
 5201 012c FFF7FEFF 		bl	mem_cpy
 5202              	.LVL807:
3907:..\..\FatFS-master\source/ff.c **** 					fp->flag &= (BYTE)~FA_DIRTY;
 5203              		.loc 1 3907 0
 5204 0130 237C     		ldrb	r3, [r4, #16]
 5205 0132 7F22     		movs	r2, #127
 5206 0134 1340     		ands	r3, r2
 5207 0136 2374     		strb	r3, [r4, #16]
 5208              	.L380:
3908:..\..\FatFS-master\source/ff.c **** 				}
3909:..\..\FatFS-master\source/ff.c **** #endif
3910:..\..\FatFS-master\source/ff.c **** #endif
3911:..\..\FatFS-master\source/ff.c **** 				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
 5209              		.loc 1 3911 0
 5210 0138 6D02     		lsls	r5, r5, #9
 5211              	.LVL808:
3912:..\..\FatFS-master\source/ff.c **** 				continue;
 5212              		.loc 1 3912 0
 5213 013a 2AE0     		b	.L381
 5214              	.LVL809:
 5215              	.L377:
3913:..\..\FatFS-master\source/ff.c **** 			}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 170


3914:..\..\FatFS-master\source/ff.c **** #if FF_FS_TINY
3915:..\..\FatFS-master\source/ff.c **** 			if (fp->fptr >= fp->obj.objsize) {	/* Avoid silly cache filling on the growing edge */
3916:..\..\FatFS-master\source/ff.c **** 				if (sync_window(fs) != FR_OK) ABORT(fs, FR_DISK_ERR);
3917:..\..\FatFS-master\source/ff.c **** 				fs->winsect = sect;
3918:..\..\FatFS-master\source/ff.c **** 			}
3919:..\..\FatFS-master\source/ff.c **** #else
3920:..\..\FatFS-master\source/ff.c **** 			if (fp->sect != sect && 		/* Fill sector cache with file data */
 5216              		.loc 1 3920 0
 5217 013c E369     		ldr	r3, [r4, #28]
 5218 013e 9842     		cmp	r0, r3
 5219 0140 10D0     		beq	.L382
 5220              		.loc 1 3920 0 is_stmt 0 discriminator 1
 5221 0142 6369     		ldr	r3, [r4, #20]
 5222 0144 E268     		ldr	r2, [r4, #12]
 5223 0146 9342     		cmp	r3, r2
 5224 0148 0CD2     		bcs	.L382
3921:..\..\FatFS-master\source/ff.c **** 				fp->fptr < fp->obj.objsize &&
3922:..\..\FatFS-master\source/ff.c **** 				disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
 5225              		.loc 1 3922 0 is_stmt 1
 5226 014a 2100     		movs	r1, r4
 5227 014c 2831     		adds	r1, r1, #40
 5228 014e 5B46     		mov	r3, fp
 5229 0150 5878     		ldrb	r0, [r3, #1]
 5230              	.LVL810:
 5231 0152 0123     		movs	r3, #1
 5232 0154 5246     		mov	r2, r10
 5233 0156 FFF7FEFF 		bl	disk_read
 5234              	.LVL811:
3921:..\..\FatFS-master\source/ff.c **** 				fp->fptr < fp->obj.objsize &&
 5235              		.loc 1 3921 0
 5236 015a 0028     		cmp	r0, #0
 5237 015c 02D0     		beq	.L382
3923:..\..\FatFS-master\source/ff.c **** 					ABORT(fs, FR_DISK_ERR);
 5238              		.loc 1 3923 0
 5239 015e 0120     		movs	r0, #1
 5240 0160 6074     		strb	r0, [r4, #17]
 5241 0162 2EE0     		b	.L364
 5242              	.L382:
3924:..\..\FatFS-master\source/ff.c **** 			}
3925:..\..\FatFS-master\source/ff.c **** #endif
3926:..\..\FatFS-master\source/ff.c **** 			fp->sect = sect;
 5243              		.loc 1 3926 0
 5244 0164 5346     		mov	r3, r10
 5245 0166 E361     		str	r3, [r4, #28]
 5246              	.LVL812:
 5247              	.L367:
3927:..\..\FatFS-master\source/ff.c **** 		}
3928:..\..\FatFS-master\source/ff.c **** 		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
 5248              		.loc 1 3928 0
 5249 0168 6369     		ldr	r3, [r4, #20]
 5250 016a D805     		lsls	r0, r3, #23
 5251 016c C00D     		lsrs	r0, r0, #23
 5252 016e 8025     		movs	r5, #128
 5253 0170 AD00     		lsls	r5, r5, #2
 5254 0172 2D1A     		subs	r5, r5, r0
 5255              	.LVL813:
3929:..\..\FatFS-master\source/ff.c **** 		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 171


 5256              		.loc 1 3929 0
 5257 0174 AE42     		cmp	r6, r5
 5258 0176 00D2     		bcs	.L383
 5259 0178 3500     		movs	r5, r6
 5260              	.LVL814:
 5261              	.L383:
3930:..\..\FatFS-master\source/ff.c **** #if FF_FS_TINY
3931:..\..\FatFS-master\source/ff.c **** 		if (move_window(fs, fp->sect) != FR_OK) ABORT(fs, FR_DISK_ERR);	/* Move sector window */
3932:..\..\FatFS-master\source/ff.c **** 		mem_cpy(fs->win + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
3933:..\..\FatFS-master\source/ff.c **** 		fs->wflag = 1;
3934:..\..\FatFS-master\source/ff.c **** #else
3935:..\..\FatFS-master\source/ff.c **** 		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
 5262              		.loc 1 3935 0
 5263 017a 2300     		movs	r3, r4
 5264 017c 2833     		adds	r3, r3, #40
 5265 017e 1818     		adds	r0, r3, r0
 5266 0180 2A00     		movs	r2, r5
 5267 0182 4146     		mov	r1, r8
 5268 0184 FFF7FEFF 		bl	mem_cpy
 5269              	.LVL815:
3936:..\..\FatFS-master\source/ff.c **** 		fp->flag |= FA_DIRTY;
 5270              		.loc 1 3936 0
 5271 0188 237C     		ldrb	r3, [r4, #16]
 5272 018a 8022     		movs	r2, #128
 5273 018c 5242     		rsbs	r2, r2, #0
 5274 018e 1343     		orrs	r3, r2
 5275 0190 2374     		strb	r3, [r4, #16]
 5276              	.L381:
3856:..\..\FatFS-master\source/ff.c **** 		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
 5277              		.loc 1 3856 0
 5278 0192 761B     		subs	r6, r6, r5
 5279              	.LVL816:
 5280 0194 3B68     		ldr	r3, [r7]
 5281 0196 5B19     		adds	r3, r3, r5
 5282 0198 3B60     		str	r3, [r7]
 5283 019a A844     		add	r8, r8, r5
 5284              	.LVL817:
 5285 019c 6369     		ldr	r3, [r4, #20]
 5286 019e 9C46     		mov	ip, r3
 5287 01a0 6544     		add	r5, r5, ip
 5288              	.LVL818:
 5289 01a2 6561     		str	r5, [r4, #20]
 5290 01a4 E368     		ldr	r3, [r4, #12]
 5291 01a6 9D42     		cmp	r5, r3
 5292 01a8 00D2     		bcs	.L384
 5293 01aa 1D00     		movs	r5, r3
 5294              	.L384:
 5295 01ac E560     		str	r5, [r4, #12]
 5296              	.L366:
3855:..\..\FatFS-master\source/ff.c **** 		btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.
 5297              		.loc 1 3855 0
 5298 01ae 002E     		cmp	r6, #0
 5299 01b0 00D0     		beq	.LCB5706
 5300 01b2 48E7     		b	.L385	@long jump
 5301              	.LCB5706:
 5302              	.L371:
3937:..\..\FatFS-master\source/ff.c **** #endif
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 172


3938:..\..\FatFS-master\source/ff.c **** 	}
3939:..\..\FatFS-master\source/ff.c **** 
3940:..\..\FatFS-master\source/ff.c **** 	fp->flag |= FA_MODIFIED;				/* Set file change flag */
 5303              		.loc 1 3940 0
 5304 01b4 227C     		ldrb	r2, [r4, #16]
 5305 01b6 4023     		movs	r3, #64
 5306 01b8 1343     		orrs	r3, r2
 5307 01ba 2374     		strb	r3, [r4, #16]
3941:..\..\FatFS-master\source/ff.c **** 
3942:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, FR_OK);
 5308              		.loc 1 3942 0
 5309 01bc 0020     		movs	r0, #0
 5310 01be 00E0     		b	.L364
 5311              	.LVL819:
 5312              	.L388:
3848:..\..\FatFS-master\source/ff.c **** 
 5313              		.loc 1 3848 0
 5314 01c0 0720     		movs	r0, #7
 5315              	.LVL820:
 5316              	.L364:
3943:..\..\FatFS-master\source/ff.c **** }
 5317              		.loc 1 3943 0
 5318 01c2 05B0     		add	sp, sp, #20
 5319              		@ sp needed
 5320              	.LVL821:
 5321              	.LVL822:
 5322              	.LVL823:
 5323              	.LVL824:
 5324 01c4 3CBC     		pop	{r2, r3, r4, r5}
 5325 01c6 9046     		mov	r8, r2
 5326 01c8 9946     		mov	r9, r3
 5327 01ca A246     		mov	r10, r4
 5328 01cc AB46     		mov	fp, r5
 5329 01ce F0BD     		pop	{r4, r5, r6, r7, pc}
 5330              		.cfi_endproc
 5331              	.LFE38:
 5332              		.size	f_write, .-f_write
 5333              		.section	.text.f_sync,"ax",%progbits
 5334              		.align	2
 5335              		.global	f_sync
 5336              		.code	16
 5337              		.thumb_func
 5338              		.type	f_sync, %function
 5339              	f_sync:
 5340              	.LFB39:
3944:..\..\FatFS-master\source/ff.c **** 
3945:..\..\FatFS-master\source/ff.c **** 
3946:..\..\FatFS-master\source/ff.c **** 
3947:..\..\FatFS-master\source/ff.c **** 
3948:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3949:..\..\FatFS-master\source/ff.c **** /* Synchronize the File                                                  */
3950:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
3951:..\..\FatFS-master\source/ff.c **** 
3952:..\..\FatFS-master\source/ff.c **** FRESULT f_sync (
3953:..\..\FatFS-master\source/ff.c **** 	FIL* fp		/* Pointer to the file object */
3954:..\..\FatFS-master\source/ff.c **** )
3955:..\..\FatFS-master\source/ff.c **** {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 173


 5341              		.loc 1 3955 0
 5342              		.cfi_startproc
 5343              		@ args = 0, pretend = 0, frame = 8
 5344              		@ frame_needed = 0, uses_anonymous_args = 0
 5345              	.LVL825:
 5346 0000 70B5     		push	{r4, r5, r6, lr}
 5347              		.cfi_def_cfa_offset 16
 5348              		.cfi_offset 4, -16
 5349              		.cfi_offset 5, -12
 5350              		.cfi_offset 6, -8
 5351              		.cfi_offset 14, -4
 5352 0002 82B0     		sub	sp, sp, #8
 5353              		.cfi_def_cfa_offset 24
 5354 0004 0400     		movs	r4, r0
3956:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
3957:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
3958:..\..\FatFS-master\source/ff.c **** 	DWORD tm;
3959:..\..\FatFS-master\source/ff.c **** 	BYTE *dir;
3960:..\..\FatFS-master\source/ff.c **** 
3961:..\..\FatFS-master\source/ff.c **** 
3962:..\..\FatFS-master\source/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 5355              		.loc 1 3962 0
 5356 0006 01A9     		add	r1, sp, #4
 5357 0008 FFF7FEFF 		bl	validate
 5358              	.LVL826:
3963:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 5359              		.loc 1 3963 0
 5360 000c 0028     		cmp	r0, #0
 5361 000e 41D1     		bne	.L391
3964:..\..\FatFS-master\source/ff.c **** 		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
 5362              		.loc 1 3964 0
 5363 0010 237C     		ldrb	r3, [r4, #16]
 5364 0012 5A06     		lsls	r2, r3, #25
 5365 0014 3ED5     		bpl	.L391
3965:..\..\FatFS-master\source/ff.c **** #if !FF_FS_TINY
3966:..\..\FatFS-master\source/ff.c **** 			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
 5366              		.loc 1 3966 0
 5367 0016 5BB2     		sxtb	r3, r3
 5368 0018 002B     		cmp	r3, #0
 5369 001a 0DDA     		bge	.L392
3967:..\..\FatFS-master\source/ff.c **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
 5370              		.loc 1 3967 0
 5371 001c 2100     		movs	r1, r4
 5372 001e 2831     		adds	r1, r1, #40
 5373 0020 019B     		ldr	r3, [sp, #4]
 5374 0022 5878     		ldrb	r0, [r3, #1]
 5375              	.LVL827:
 5376 0024 0123     		movs	r3, #1
 5377 0026 E269     		ldr	r2, [r4, #28]
 5378 0028 FFF7FEFF 		bl	disk_write
 5379              	.LVL828:
 5380 002c 0028     		cmp	r0, #0
 5381 002e 30D1     		bne	.L395
3968:..\..\FatFS-master\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5382              		.loc 1 3968 0
 5383 0030 237C     		ldrb	r3, [r4, #16]
 5384 0032 7F22     		movs	r2, #127
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 174


 5385 0034 1340     		ands	r3, r2
 5386 0036 2374     		strb	r3, [r4, #16]
 5387              	.L392:
3969:..\..\FatFS-master\source/ff.c **** 			}
3970:..\..\FatFS-master\source/ff.c **** #endif
3971:..\..\FatFS-master\source/ff.c **** 			/* Update the directory entry */
3972:..\..\FatFS-master\source/ff.c **** 			tm = GET_FATTIME();				/* Modified time */
 5388              		.loc 1 3972 0
 5389 0038 FFF7FEFF 		bl	get_fattime
 5390              	.LVL829:
 5391 003c 0600     		movs	r6, r0
 5392              	.LVL830:
3973:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
3974:..\..\FatFS-master\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {
3975:..\..\FatFS-master\source/ff.c **** 				res = fill_first_frag(&fp->obj);	/* Fill first fragment on the FAT if needed */
3976:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) {
3977:..\..\FatFS-master\source/ff.c **** 					res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if nee
3978:..\..\FatFS-master\source/ff.c **** 				}
3979:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) {
3980:..\..\FatFS-master\source/ff.c **** 					DIR dj;
3981:..\..\FatFS-master\source/ff.c **** 					DEF_NAMBUF
3982:..\..\FatFS-master\source/ff.c **** 
3983:..\..\FatFS-master\source/ff.c **** 					INIT_NAMBUF(fs);
3984:..\..\FatFS-master\source/ff.c **** 					res = load_obj_xdir(&dj, &fp->obj);	/* Load directory entry block */
3985:..\..\FatFS-master\source/ff.c **** 					if (res == FR_OK) {
3986:..\..\FatFS-master\source/ff.c **** 						fs->dirbuf[XDIR_Attr] |= AM_ARC;				/* Set archive attribute to indicate that the file has be
3987:..\..\FatFS-master\source/ff.c **** 						fs->dirbuf[XDIR_GenFlags] = fp->obj.stat | 1;	/* Update file allocation information */
3988:..\..\FatFS-master\source/ff.c **** 						st_dword(fs->dirbuf + XDIR_FstClus, fp->obj.sclust);
3989:..\..\FatFS-master\source/ff.c **** 						st_qword(fs->dirbuf + XDIR_FileSize, fp->obj.objsize);
3990:..\..\FatFS-master\source/ff.c **** 						st_qword(fs->dirbuf + XDIR_ValidFileSize, fp->obj.objsize);
3991:..\..\FatFS-master\source/ff.c **** 						st_dword(fs->dirbuf + XDIR_ModTime, tm);		/* Update modified time */
3992:..\..\FatFS-master\source/ff.c **** 						fs->dirbuf[XDIR_ModTime10] = 0;
3993:..\..\FatFS-master\source/ff.c **** 						st_dword(fs->dirbuf + XDIR_AccTime, 0);
3994:..\..\FatFS-master\source/ff.c **** 						res = store_xdir(&dj);	/* Restore it to the directory */
3995:..\..\FatFS-master\source/ff.c **** 						if (res == FR_OK) {
3996:..\..\FatFS-master\source/ff.c **** 							res = sync_fs(fs);
3997:..\..\FatFS-master\source/ff.c **** 							fp->flag &= (BYTE)~FA_MODIFIED;
3998:..\..\FatFS-master\source/ff.c **** 						}
3999:..\..\FatFS-master\source/ff.c **** 					}
4000:..\..\FatFS-master\source/ff.c **** 					FREE_NAMBUF();
4001:..\..\FatFS-master\source/ff.c **** 				}
4002:..\..\FatFS-master\source/ff.c **** 			} else
4003:..\..\FatFS-master\source/ff.c **** #endif
4004:..\..\FatFS-master\source/ff.c **** 			{
4005:..\..\FatFS-master\source/ff.c **** 				res = move_window(fs, fp->dir_sect);
 5393              		.loc 1 4005 0
 5394 003e 216A     		ldr	r1, [r4, #32]
 5395 0040 0198     		ldr	r0, [sp, #4]
 5396              	.LVL831:
 5397 0042 FFF7FEFF 		bl	move_window
 5398              	.LVL832:
4006:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) {
 5399              		.loc 1 4006 0
 5400 0046 0028     		cmp	r0, #0
 5401 0048 24D1     		bne	.L391
4007:..\..\FatFS-master\source/ff.c **** 					dir = fp->dir_ptr;
 5402              		.loc 1 4007 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 175


 5403 004a 656A     		ldr	r5, [r4, #36]
 5404              	.LVL833:
4008:..\..\FatFS-master\source/ff.c **** 					dir[DIR_Attr] |= AM_ARC;						/* Set archive attribute to indicate that the file has been chan
 5405              		.loc 1 4008 0
 5406 004c EA7A     		ldrb	r2, [r5, #11]
 5407 004e 2023     		movs	r3, #32
 5408 0050 1343     		orrs	r3, r2
 5409 0052 EB72     		strb	r3, [r5, #11]
4009:..\..\FatFS-master\source/ff.c **** 					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation information  */
 5410              		.loc 1 4009 0
 5411 0054 A268     		ldr	r2, [r4, #8]
 5412 0056 2900     		movs	r1, r5
 5413 0058 2068     		ldr	r0, [r4]
 5414              	.LVL834:
 5415 005a FFF7FEFF 		bl	st_clust
 5416              	.LVL835:
4010:..\..\FatFS-master\source/ff.c **** 					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
 5417              		.loc 1 4010 0
 5418 005e 2800     		movs	r0, r5
 5419 0060 1C30     		adds	r0, r0, #28
 5420 0062 E168     		ldr	r1, [r4, #12]
 5421 0064 FFF7FEFF 		bl	st_dword
 5422              	.LVL836:
4011:..\..\FatFS-master\source/ff.c **** 					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
 5423              		.loc 1 4011 0
 5424 0068 2800     		movs	r0, r5
 5425 006a 1630     		adds	r0, r0, #22
 5426 006c 3100     		movs	r1, r6
 5427 006e FFF7FEFF 		bl	st_dword
 5428              	.LVL837:
4012:..\..\FatFS-master\source/ff.c **** 					st_word(dir + DIR_LstAccDate, 0);
 5429              		.loc 1 4012 0
 5430 0072 2800     		movs	r0, r5
 5431 0074 1230     		adds	r0, r0, #18
 5432 0076 0021     		movs	r1, #0
 5433 0078 FFF7FEFF 		bl	st_word
 5434              	.LVL838:
4013:..\..\FatFS-master\source/ff.c **** 					fs->wflag = 1;
 5435              		.loc 1 4013 0
 5436 007c 0123     		movs	r3, #1
 5437 007e 019A     		ldr	r2, [sp, #4]
 5438 0080 D370     		strb	r3, [r2, #3]
4014:..\..\FatFS-master\source/ff.c **** 					res = sync_fs(fs);					/* Restore it to the directory */
 5439              		.loc 1 4014 0
 5440 0082 0198     		ldr	r0, [sp, #4]
 5441 0084 FFF7FEFF 		bl	sync_fs
 5442              	.LVL839:
4015:..\..\FatFS-master\source/ff.c **** 					fp->flag &= (BYTE)~FA_MODIFIED;
 5443              		.loc 1 4015 0
 5444 0088 237C     		ldrb	r3, [r4, #16]
 5445 008a 4022     		movs	r2, #64
 5446 008c 9343     		bics	r3, r2
 5447 008e 2374     		strb	r3, [r4, #16]
 5448 0090 00E0     		b	.L391
 5449              	.LVL840:
 5450              	.L395:
3967:..\..\FatFS-master\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 176


 5451              		.loc 1 3967 0
 5452 0092 0120     		movs	r0, #1
 5453              	.L391:
4016:..\..\FatFS-master\source/ff.c **** 				}
4017:..\..\FatFS-master\source/ff.c **** 			}
4018:..\..\FatFS-master\source/ff.c **** 		}
4019:..\..\FatFS-master\source/ff.c **** 	}
4020:..\..\FatFS-master\source/ff.c **** 
4021:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
4022:..\..\FatFS-master\source/ff.c **** }
 5454              		.loc 1 4022 0
 5455 0094 02B0     		add	sp, sp, #8
 5456              		@ sp needed
 5457              	.LVL841:
 5458 0096 70BD     		pop	{r4, r5, r6, pc}
 5459              		.cfi_endproc
 5460              	.LFE39:
 5461              		.size	f_sync, .-f_sync
 5462              		.section	.text.f_close,"ax",%progbits
 5463              		.align	2
 5464              		.global	f_close
 5465              		.code	16
 5466              		.thumb_func
 5467              		.type	f_close, %function
 5468              	f_close:
 5469              	.LFB40:
4023:..\..\FatFS-master\source/ff.c **** 
4024:..\..\FatFS-master\source/ff.c **** #endif /* !FF_FS_READONLY */
4025:..\..\FatFS-master\source/ff.c **** 
4026:..\..\FatFS-master\source/ff.c **** 
4027:..\..\FatFS-master\source/ff.c **** 
4028:..\..\FatFS-master\source/ff.c **** 
4029:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4030:..\..\FatFS-master\source/ff.c **** /* Close File                                                            */
4031:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4032:..\..\FatFS-master\source/ff.c **** 
4033:..\..\FatFS-master\source/ff.c **** FRESULT f_close (
4034:..\..\FatFS-master\source/ff.c **** 	FIL* fp		/* Pointer to the file object to be closed */
4035:..\..\FatFS-master\source/ff.c **** )
4036:..\..\FatFS-master\source/ff.c **** {
 5470              		.loc 1 4036 0
 5471              		.cfi_startproc
 5472              		@ args = 0, pretend = 0, frame = 8
 5473              		@ frame_needed = 0, uses_anonymous_args = 0
 5474              	.LVL842:
 5475 0000 10B5     		push	{r4, lr}
 5476              		.cfi_def_cfa_offset 8
 5477              		.cfi_offset 4, -8
 5478              		.cfi_offset 14, -4
 5479 0002 82B0     		sub	sp, sp, #8
 5480              		.cfi_def_cfa_offset 16
 5481 0004 0400     		movs	r4, r0
4037:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4038:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4039:..\..\FatFS-master\source/ff.c **** 
4040:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
4041:..\..\FatFS-master\source/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 177


 5482              		.loc 1 4041 0
 5483 0006 FFF7FEFF 		bl	f_sync
 5484              	.LVL843:
4042:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK)
 5485              		.loc 1 4042 0
 5486 000a 0028     		cmp	r0, #0
 5487 000c 07D1     		bne	.L398
4043:..\..\FatFS-master\source/ff.c **** #endif
4044:..\..\FatFS-master\source/ff.c **** 	{
4045:..\..\FatFS-master\source/ff.c **** 		res = validate(&fp->obj, &fs);	/* Lock volume */
 5488              		.loc 1 4045 0
 5489 000e 01A9     		add	r1, sp, #4
 5490 0010 2000     		movs	r0, r4
 5491              	.LVL844:
 5492 0012 FFF7FEFF 		bl	validate
 5493              	.LVL845:
4046:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
 5494              		.loc 1 4046 0
 5495 0016 0028     		cmp	r0, #0
 5496 0018 01D1     		bne	.L398
4047:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
4048:..\..\FatFS-master\source/ff.c **** 			res = dec_lock(fp->obj.lockid);		/* Decrement file open counter */
4049:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) fp->obj.fs = 0;	/* Invalidate file object */
4050:..\..\FatFS-master\source/ff.c **** #else
4051:..\..\FatFS-master\source/ff.c **** 			fp->obj.fs = 0;	/* Invalidate file object */
 5497              		.loc 1 4051 0
 5498 001a 0023     		movs	r3, #0
 5499 001c 2360     		str	r3, [r4]
 5500              	.LVL846:
 5501              	.L398:
4052:..\..\FatFS-master\source/ff.c **** #endif
4053:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT
4054:..\..\FatFS-master\source/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
4055:..\..\FatFS-master\source/ff.c **** #endif
4056:..\..\FatFS-master\source/ff.c **** 		}
4057:..\..\FatFS-master\source/ff.c **** 	}
4058:..\..\FatFS-master\source/ff.c **** 	return res;
4059:..\..\FatFS-master\source/ff.c **** }
 5502              		.loc 1 4059 0
 5503 001e 02B0     		add	sp, sp, #8
 5504              		@ sp needed
 5505              	.LVL847:
 5506 0020 10BD     		pop	{r4, pc}
 5507              		.cfi_endproc
 5508              	.LFE40:
 5509              		.size	f_close, .-f_close
 5510 0022 C046     		.section	.text.f_lseek,"ax",%progbits
 5511              		.align	2
 5512              		.global	f_lseek
 5513              		.code	16
 5514              		.thumb_func
 5515              		.type	f_lseek, %function
 5516              	f_lseek:
 5517              	.LFB41:
4060:..\..\FatFS-master\source/ff.c **** 
4061:..\..\FatFS-master\source/ff.c **** 
4062:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 178


4063:..\..\FatFS-master\source/ff.c **** 
4064:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH >= 1
4065:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4066:..\..\FatFS-master\source/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
4067:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4068:..\..\FatFS-master\source/ff.c **** 
4069:..\..\FatFS-master\source/ff.c **** #if FF_VOLUMES >= 2
4070:..\..\FatFS-master\source/ff.c **** FRESULT f_chdrive (
4071:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path		/* Drive number */
4072:..\..\FatFS-master\source/ff.c **** )
4073:..\..\FatFS-master\source/ff.c **** {
4074:..\..\FatFS-master\source/ff.c **** 	int vol;
4075:..\..\FatFS-master\source/ff.c **** 
4076:..\..\FatFS-master\source/ff.c **** 
4077:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive number */
4078:..\..\FatFS-master\source/ff.c **** 	vol = get_ldnumber(&path);
4079:..\..\FatFS-master\source/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
4080:..\..\FatFS-master\source/ff.c **** 
4081:..\..\FatFS-master\source/ff.c **** 	CurrVol = (BYTE)vol;	/* Set it as current volume */
4082:..\..\FatFS-master\source/ff.c **** 
4083:..\..\FatFS-master\source/ff.c **** 	return FR_OK;
4084:..\..\FatFS-master\source/ff.c **** }
4085:..\..\FatFS-master\source/ff.c **** #endif
4086:..\..\FatFS-master\source/ff.c **** 
4087:..\..\FatFS-master\source/ff.c **** 
4088:..\..\FatFS-master\source/ff.c **** FRESULT f_chdir (
4089:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4090:..\..\FatFS-master\source/ff.c **** )
4091:..\..\FatFS-master\source/ff.c **** {
4092:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4093:..\..\FatFS-master\source/ff.c **** 	DIR dj;
4094:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4095:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
4096:..\..\FatFS-master\source/ff.c **** 
4097:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive */
4098:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path, &fs, 0);
4099:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
4100:..\..\FatFS-master\source/ff.c **** 		dj.obj.fs = fs;
4101:..\..\FatFS-master\source/ff.c **** 		INIT_NAMBUF(fs);
4102:..\..\FatFS-master\source/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
4103:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
4104:..\..\FatFS-master\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
4105:..\..\FatFS-master\source/ff.c **** 				fs->cdir = dj.obj.sclust;	/* It is the start directory itself */
4106:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4107:..\..\FatFS-master\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4108:..\..\FatFS-master\source/ff.c **** 					fs->cdc_scl = dj.obj.c_scl;
4109:..\..\FatFS-master\source/ff.c **** 					fs->cdc_size = dj.obj.c_size;
4110:..\..\FatFS-master\source/ff.c **** 					fs->cdc_ofs = dj.obj.c_ofs;
4111:..\..\FatFS-master\source/ff.c **** 				}
4112:..\..\FatFS-master\source/ff.c **** #endif
4113:..\..\FatFS-master\source/ff.c **** 			} else {
4114:..\..\FatFS-master\source/ff.c **** 				if (dj.obj.attr & AM_DIR) {	/* It is a sub-directory */
4115:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4116:..\..\FatFS-master\source/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4117:..\..\FatFS-master\source/ff.c **** 						fs->cdir = ld_dword(fs->dirbuf + XDIR_FstClus);		/* Sub-directory cluster */
4118:..\..\FatFS-master\source/ff.c **** 						fs->cdc_scl = dj.obj.sclust;						/* Save containing directory information */
4119:..\..\FatFS-master\source/ff.c **** 						fs->cdc_size = ((DWORD)dj.obj.objsize & 0xFFFFFF00) | dj.obj.stat;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 179


4120:..\..\FatFS-master\source/ff.c **** 						fs->cdc_ofs = dj.blk_ofs;
4121:..\..\FatFS-master\source/ff.c **** 					} else
4122:..\..\FatFS-master\source/ff.c **** #endif
4123:..\..\FatFS-master\source/ff.c **** 					{
4124:..\..\FatFS-master\source/ff.c **** 						fs->cdir = ld_clust(fs, dj.dir);					/* Sub-directory cluster */
4125:..\..\FatFS-master\source/ff.c **** 					}
4126:..\..\FatFS-master\source/ff.c **** 				} else {
4127:..\..\FatFS-master\source/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
4128:..\..\FatFS-master\source/ff.c **** 				}
4129:..\..\FatFS-master\source/ff.c **** 			}
4130:..\..\FatFS-master\source/ff.c **** 		}
4131:..\..\FatFS-master\source/ff.c **** 		FREE_NAMBUF();
4132:..\..\FatFS-master\source/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
4133:..\..\FatFS-master\source/ff.c **** 	}
4134:..\..\FatFS-master\source/ff.c **** 
4135:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
4136:..\..\FatFS-master\source/ff.c **** }
4137:..\..\FatFS-master\source/ff.c **** 
4138:..\..\FatFS-master\source/ff.c **** 
4139:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH >= 2
4140:..\..\FatFS-master\source/ff.c **** FRESULT f_getcwd (
4141:..\..\FatFS-master\source/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
4142:..\..\FatFS-master\source/ff.c **** 	UINT len		/* Size of path */
4143:..\..\FatFS-master\source/ff.c **** )
4144:..\..\FatFS-master\source/ff.c **** {
4145:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4146:..\..\FatFS-master\source/ff.c **** 	DIR dj;
4147:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4148:..\..\FatFS-master\source/ff.c **** 	UINT i, n;
4149:..\..\FatFS-master\source/ff.c **** 	DWORD ccl;
4150:..\..\FatFS-master\source/ff.c **** 	TCHAR *tp;
4151:..\..\FatFS-master\source/ff.c **** 	FILINFO fno;
4152:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
4153:..\..\FatFS-master\source/ff.c **** 
4154:..\..\FatFS-master\source/ff.c **** 
4155:..\..\FatFS-master\source/ff.c **** 	*buff = 0;
4156:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive */
4157:..\..\FatFS-master\source/ff.c **** 	res = find_volume((const TCHAR**)&buff, &fs, 0);	/* Get current volume */
4158:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
4159:..\..\FatFS-master\source/ff.c **** 		dj.obj.fs = fs;
4160:..\..\FatFS-master\source/ff.c **** 		INIT_NAMBUF(fs);
4161:..\..\FatFS-master\source/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
4162:..\..\FatFS-master\source/ff.c **** 		if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {	/* (Cannot do getcwd on exFAT and returns root pat
4163:..\..\FatFS-master\source/ff.c **** 			dj.obj.sclust = fs->cdir;				/* Start to follow upper directory from current directory */
4164:..\..\FatFS-master\source/ff.c **** 			while ((ccl = dj.obj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
4165:..\..\FatFS-master\source/ff.c **** 				res = dir_sdi(&dj, 1 * SZDIRE);	/* Get parent directory */
4166:..\..\FatFS-master\source/ff.c **** 				if (res != FR_OK) break;
4167:..\..\FatFS-master\source/ff.c **** 				res = move_window(fs, dj.sect);
4168:..\..\FatFS-master\source/ff.c **** 				if (res != FR_OK) break;
4169:..\..\FatFS-master\source/ff.c **** 				dj.obj.sclust = ld_clust(fs, dj.dir);	/* Goto parent directory */
4170:..\..\FatFS-master\source/ff.c **** 				res = dir_sdi(&dj, 0);
4171:..\..\FatFS-master\source/ff.c **** 				if (res != FR_OK) break;
4172:..\..\FatFS-master\source/ff.c **** 				do {							/* Find the entry links to the child directory */
4173:..\..\FatFS-master\source/ff.c **** 					res = dir_read_file(&dj);
4174:..\..\FatFS-master\source/ff.c **** 					if (res != FR_OK) break;
4175:..\..\FatFS-master\source/ff.c **** 					if (ccl == ld_clust(fs, dj.dir)) break;	/* Found the entry */
4176:..\..\FatFS-master\source/ff.c **** 					res = dir_next(&dj, 0);
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 180


4177:..\..\FatFS-master\source/ff.c **** 				} while (res == FR_OK);
4178:..\..\FatFS-master\source/ff.c **** 				if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
4179:..\..\FatFS-master\source/ff.c **** 				if (res != FR_OK) break;
4180:..\..\FatFS-master\source/ff.c **** 				get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
4181:..\..\FatFS-master\source/ff.c **** 				for (n = 0; fno.fname[n]; n++) ;
4182:..\..\FatFS-master\source/ff.c **** 				if (i < n + 3) {
4183:..\..\FatFS-master\source/ff.c **** 					res = FR_NOT_ENOUGH_CORE; break;
4184:..\..\FatFS-master\source/ff.c **** 				}
4185:..\..\FatFS-master\source/ff.c **** 				while (n) buff[--i] = fno.fname[--n];
4186:..\..\FatFS-master\source/ff.c **** 				buff[--i] = '/';
4187:..\..\FatFS-master\source/ff.c **** 			}
4188:..\..\FatFS-master\source/ff.c **** 		}
4189:..\..\FatFS-master\source/ff.c **** 		tp = buff;
4190:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
4191:..\..\FatFS-master\source/ff.c **** #if FF_VOLUMES >= 2
4192:..\..\FatFS-master\source/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
4193:..\..\FatFS-master\source/ff.c **** 			*tp++ = ':';
4194:..\..\FatFS-master\source/ff.c **** #endif
4195:..\..\FatFS-master\source/ff.c **** 			if (i == len) {					/* Root-directory */
4196:..\..\FatFS-master\source/ff.c **** 				*tp++ = '/';
4197:..\..\FatFS-master\source/ff.c **** 			} else {						/* Sub-directroy */
4198:..\..\FatFS-master\source/ff.c **** 				do		/* Add stacked path str */
4199:..\..\FatFS-master\source/ff.c **** 					*tp++ = buff[i++];
4200:..\..\FatFS-master\source/ff.c **** 				while (i < len);
4201:..\..\FatFS-master\source/ff.c **** 			}
4202:..\..\FatFS-master\source/ff.c **** 		}
4203:..\..\FatFS-master\source/ff.c **** 		*tp = 0;
4204:..\..\FatFS-master\source/ff.c **** 		FREE_NAMBUF();
4205:..\..\FatFS-master\source/ff.c **** 	}
4206:..\..\FatFS-master\source/ff.c **** 
4207:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
4208:..\..\FatFS-master\source/ff.c **** }
4209:..\..\FatFS-master\source/ff.c **** 
4210:..\..\FatFS-master\source/ff.c **** #endif /* FF_FS_RPATH >= 2 */
4211:..\..\FatFS-master\source/ff.c **** #endif /* FF_FS_RPATH >= 1 */
4212:..\..\FatFS-master\source/ff.c **** 
4213:..\..\FatFS-master\source/ff.c **** 
4214:..\..\FatFS-master\source/ff.c **** 
4215:..\..\FatFS-master\source/ff.c **** #if FF_FS_MINIMIZE <= 2
4216:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4217:..\..\FatFS-master\source/ff.c **** /* Seek File Read/Write Pointer                                          */
4218:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4219:..\..\FatFS-master\source/ff.c **** 
4220:..\..\FatFS-master\source/ff.c **** FRESULT f_lseek (
4221:..\..\FatFS-master\source/ff.c **** 	FIL* fp,		/* Pointer to the file object */
4222:..\..\FatFS-master\source/ff.c **** 	FSIZE_t ofs		/* File pointer from top of file */
4223:..\..\FatFS-master\source/ff.c **** )
4224:..\..\FatFS-master\source/ff.c **** {
 5518              		.loc 1 4224 0
 5519              		.cfi_startproc
 5520              		@ args = 0, pretend = 0, frame = 16
 5521              		@ frame_needed = 0, uses_anonymous_args = 0
 5522              	.LVL848:
 5523 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5524              		.cfi_def_cfa_offset 20
 5525              		.cfi_offset 4, -20
 5526              		.cfi_offset 5, -16
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 181


 5527              		.cfi_offset 6, -12
 5528              		.cfi_offset 7, -8
 5529              		.cfi_offset 14, -4
 5530 0002 5746     		mov	r7, r10
 5531 0004 4E46     		mov	r6, r9
 5532 0006 C0B4     		push	{r6, r7}
 5533              		.cfi_def_cfa_offset 28
 5534              		.cfi_offset 9, -28
 5535              		.cfi_offset 10, -24
 5536 0008 85B0     		sub	sp, sp, #20
 5537              		.cfi_def_cfa_offset 48
 5538 000a 0400     		movs	r4, r0
 5539 000c 0D00     		movs	r5, r1
4225:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4226:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4227:..\..\FatFS-master\source/ff.c **** 	DWORD clst, bcs, nsect;
4228:..\..\FatFS-master\source/ff.c **** 	FSIZE_t ifptr;
4229:..\..\FatFS-master\source/ff.c **** #if FF_USE_FASTSEEK
4230:..\..\FatFS-master\source/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
4231:..\..\FatFS-master\source/ff.c **** #endif
4232:..\..\FatFS-master\source/ff.c **** 
4233:..\..\FatFS-master\source/ff.c **** 	res = validate(&fp->obj, &fs);		/* Check validity of the file object */
 5540              		.loc 1 4233 0
 5541 000e 0190     		str	r0, [sp, #4]
 5542 0010 03A9     		add	r1, sp, #12
 5543              	.LVL849:
 5544 0012 FFF7FEFF 		bl	validate
 5545              	.LVL850:
 5546 0016 071E     		subs	r7, r0, #0
 5547              	.LVL851:
4234:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) res = (FRESULT)fp->err;
 5548              		.loc 1 4234 0
 5549 0018 00D1     		bne	.L400
 5550              		.loc 1 4234 0 is_stmt 0 discriminator 1
 5551 001a 677C     		ldrb	r7, [r4, #17]
 5552              	.LVL852:
 5553              	.L400:
4235:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT && !FF_FS_READONLY
4236:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK && fs->fs_type == FS_EXFAT) {
4237:..\..\FatFS-master\source/ff.c **** 		res = fill_last_frag(&fp->obj, fp->clust, 0xFFFFFFFF);	/* Fill last fragment on the FAT if needed
4238:..\..\FatFS-master\source/ff.c **** 	}
4239:..\..\FatFS-master\source/ff.c **** #endif
4240:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) LEAVE_FF(fs, res);
 5554              		.loc 1 4240 0 is_stmt 1
 5555 001c 002F     		cmp	r7, #0
 5556 001e 00D0     		beq	.LCB5964
 5557 0020 B1E0     		b	.L422	@long jump
 5558              	.LCB5964:
4241:..\..\FatFS-master\source/ff.c **** 
4242:..\..\FatFS-master\source/ff.c **** #if FF_USE_FASTSEEK
4243:..\..\FatFS-master\source/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
4244:..\..\FatFS-master\source/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
4245:..\..\FatFS-master\source/ff.c **** 			tbl = fp->cltbl;
4246:..\..\FatFS-master\source/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
4247:..\..\FatFS-master\source/ff.c **** 			cl = fp->obj.sclust;		/* Origin of the chain */
4248:..\..\FatFS-master\source/ff.c **** 			if (cl != 0) {
4249:..\..\FatFS-master\source/ff.c **** 				do {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 182


4250:..\..\FatFS-master\source/ff.c **** 					/* Get a fragment */
4251:..\..\FatFS-master\source/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
4252:..\..\FatFS-master\source/ff.c **** 					do {
4253:..\..\FatFS-master\source/ff.c **** 						pcl = cl; ncl++;
4254:..\..\FatFS-master\source/ff.c **** 						cl = get_fat(&fp->obj, cl);
4255:..\..\FatFS-master\source/ff.c **** 						if (cl <= 1) ABORT(fs, FR_INT_ERR);
4256:..\..\FatFS-master\source/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
4257:..\..\FatFS-master\source/ff.c **** 					} while (cl == pcl + 1);
4258:..\..\FatFS-master\source/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
4259:..\..\FatFS-master\source/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
4260:..\..\FatFS-master\source/ff.c **** 					}
4261:..\..\FatFS-master\source/ff.c **** 				} while (cl < fs->n_fatent);	/* Repeat until end of chain */
4262:..\..\FatFS-master\source/ff.c **** 			}
4263:..\..\FatFS-master\source/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
4264:..\..\FatFS-master\source/ff.c **** 			if (ulen <= tlen) {
4265:..\..\FatFS-master\source/ff.c **** 				*tbl = 0;		/* Terminate table */
4266:..\..\FatFS-master\source/ff.c **** 			} else {
4267:..\..\FatFS-master\source/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
4268:..\..\FatFS-master\source/ff.c **** 			}
4269:..\..\FatFS-master\source/ff.c **** 		} else {						/* Fast seek */
4270:..\..\FatFS-master\source/ff.c **** 			if (ofs > fp->obj.objsize) ofs = fp->obj.objsize;	/* Clip offset at the file size */
4271:..\..\FatFS-master\source/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
4272:..\..\FatFS-master\source/ff.c **** 			if (ofs > 0) {
4273:..\..\FatFS-master\source/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
4274:..\..\FatFS-master\source/ff.c **** 				dsc = clst2sect(fs, fp->clust);
4275:..\..\FatFS-master\source/ff.c **** 				if (dsc == 0) ABORT(fs, FR_INT_ERR);
4276:..\..\FatFS-master\source/ff.c **** 				dsc += (DWORD)((ofs - 1) / SS(fs)) & (fs->csize - 1);
4277:..\..\FatFS-master\source/ff.c **** 				if (fp->fptr % SS(fs) && dsc != fp->sect) {	/* Refill sector cache if needed */
4278:..\..\FatFS-master\source/ff.c **** #if !FF_FS_TINY
4279:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
4280:..\..\FatFS-master\source/ff.c **** 					if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
4281:..\..\FatFS-master\source/ff.c **** 						if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
4282:..\..\FatFS-master\source/ff.c **** 						fp->flag &= (BYTE)~FA_DIRTY;
4283:..\..\FatFS-master\source/ff.c **** 					}
4284:..\..\FatFS-master\source/ff.c **** #endif
4285:..\..\FatFS-master\source/ff.c **** 					if (disk_read(fs->pdrv, fp->buf, dsc, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Load current se
4286:..\..\FatFS-master\source/ff.c **** #endif
4287:..\..\FatFS-master\source/ff.c **** 					fp->sect = dsc;
4288:..\..\FatFS-master\source/ff.c **** 				}
4289:..\..\FatFS-master\source/ff.c **** 			}
4290:..\..\FatFS-master\source/ff.c **** 		}
4291:..\..\FatFS-master\source/ff.c **** 	} else
4292:..\..\FatFS-master\source/ff.c **** #endif
4293:..\..\FatFS-master\source/ff.c **** 
4294:..\..\FatFS-master\source/ff.c **** 	/* Normal Seek */
4295:..\..\FatFS-master\source/ff.c **** 	{
4296:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4297:..\..\FatFS-master\source/ff.c **** 		if (fs->fs_type != FS_EXFAT && ofs >= 0x100000000) ofs = 0xFFFFFFFF;	/* Clip at 4 GiB - 1 if at F
4298:..\..\FatFS-master\source/ff.c **** #endif
4299:..\..\FatFS-master\source/ff.c **** 		if (ofs > fp->obj.objsize && (FF_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, 
 5559              		.loc 1 4299 0
 5560 0022 E368     		ldr	r3, [r4, #12]
 5561 0024 AB42     		cmp	r3, r5
 5562 0026 03D2     		bcs	.L402
 5563              		.loc 1 4299 0 is_stmt 0 discriminator 1
 5564 0028 227C     		ldrb	r2, [r4, #16]
 5565 002a 9207     		lsls	r2, r2, #30
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 183


 5566 002c 00D4     		bmi	.L402
4300:..\..\FatFS-master\source/ff.c **** 			ofs = fp->obj.objsize;
 5567              		.loc 1 4300 0 is_stmt 1
 5568 002e 1D00     		movs	r5, r3
 5569              	.LVL853:
 5570              	.L402:
4301:..\..\FatFS-master\source/ff.c **** 		}
4302:..\..\FatFS-master\source/ff.c **** 		ifptr = fp->fptr;
 5571              		.loc 1 4302 0
 5572 0030 6369     		ldr	r3, [r4, #20]
 5573 0032 9946     		mov	r9, r3
 5574              	.LVL854:
4303:..\..\FatFS-master\source/ff.c **** 		fp->fptr = nsect = 0;
 5575              		.loc 1 4303 0
 5576 0034 0023     		movs	r3, #0
 5577              	.LVL855:
 5578 0036 6361     		str	r3, [r4, #20]
4304:..\..\FatFS-master\source/ff.c **** 		if (ofs > 0) {
 5579              		.loc 1 4304 0
 5580 0038 002D     		cmp	r5, #0
 5581 003a 6DD0     		beq	.L424
4305:..\..\FatFS-master\source/ff.c **** 			bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
 5582              		.loc 1 4305 0
 5583 003c 039B     		ldr	r3, [sp, #12]
 5584 003e 5B89     		ldrh	r3, [r3, #10]
 5585 0040 5E02     		lsls	r6, r3, #9
 5586              	.LVL856:
4306:..\..\FatFS-master\source/ff.c **** 			if (ifptr > 0 &&
 5587              		.loc 1 4306 0
 5588 0042 4B46     		mov	r3, r9
 5589 0044 002B     		cmp	r3, #0
 5590 0046 15D0     		beq	.L404
4307:..\..\FatFS-master\source/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5591              		.loc 1 4307 0 discriminator 1
 5592 0048 681E     		subs	r0, r5, #1
 5593 004a 3100     		movs	r1, r6
 5594 004c FFF7FEFF 		bl	__aeabi_uidiv
 5595              	.LVL857:
 5596 0050 8246     		mov	r10, r0
 5597 0052 0123     		movs	r3, #1
 5598 0054 5B42     		rsbs	r3, r3, #0
 5599 0056 9C46     		mov	ip, r3
 5600 0058 E144     		add	r9, r9, ip
 5601              	.LVL858:
 5602 005a 3100     		movs	r1, r6
 5603 005c 4846     		mov	r0, r9
 5604 005e FFF7FEFF 		bl	__aeabi_uidiv
 5605              	.LVL859:
4306:..\..\FatFS-master\source/ff.c **** 			if (ifptr > 0 &&
 5606              		.loc 1 4306 0 discriminator 1
 5607 0062 8245     		cmp	r10, r0
 5608 0064 06D3     		bcc	.L404
4308:..\..\FatFS-master\source/ff.c **** 				fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
 5609              		.loc 1 4308 0
 5610 0066 7342     		rsbs	r3, r6, #0
 5611 0068 4A46     		mov	r2, r9
 5612 006a 1340     		ands	r3, r2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 184


 5613 006c 6361     		str	r3, [r4, #20]
4309:..\..\FatFS-master\source/ff.c **** 				ofs -= fp->fptr;
 5614              		.loc 1 4309 0
 5615 006e ED1A     		subs	r5, r5, r3
 5616              	.LVL860:
4310:..\..\FatFS-master\source/ff.c **** 				clst = fp->clust;
 5617              		.loc 1 4310 0
 5618 0070 A069     		ldr	r0, [r4, #24]
 5619              	.LVL861:
 5620 0072 14E0     		b	.L405
 5621              	.LVL862:
 5622              	.L404:
4311:..\..\FatFS-master\source/ff.c **** 			} else {									/* When seek to back cluster, */
4312:..\..\FatFS-master\source/ff.c **** 				clst = fp->obj.sclust;					/* start from the first cluster */
 5623              		.loc 1 4312 0
 5624 0074 A068     		ldr	r0, [r4, #8]
 5625              	.LVL863:
4313:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
4314:..\..\FatFS-master\source/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
 5626              		.loc 1 4314 0
 5627 0076 0028     		cmp	r0, #0
 5628 0078 10D1     		bne	.L406
4315:..\..\FatFS-master\source/ff.c **** 					clst = create_chain(&fp->obj, 0);
 5629              		.loc 1 4315 0
 5630 007a 0021     		movs	r1, #0
 5631 007c 2000     		movs	r0, r4
 5632              	.LVL864:
 5633 007e FFF7FEFF 		bl	create_chain
 5634              	.LVL865:
4316:..\..\FatFS-master\source/ff.c **** 					if (clst == 1) ABORT(fs, FR_INT_ERR);
 5635              		.loc 1 4316 0
 5636 0082 0128     		cmp	r0, #1
 5637 0084 03D1     		bne	.L407
 5638              		.loc 1 4316 0 is_stmt 0 discriminator 1
 5639 0086 0223     		movs	r3, #2
 5640 0088 6374     		strb	r3, [r4, #17]
 5641 008a 0130     		adds	r0, r0, #1
 5642              	.LVL866:
 5643 008c 80E0     		b	.L401
 5644              	.LVL867:
 5645              	.L407:
4317:..\..\FatFS-master\source/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5646              		.loc 1 4317 0 is_stmt 1
 5647 008e 431C     		adds	r3, r0, #1
 5648 0090 03D1     		bne	.L408
 5649              		.loc 1 4317 0 is_stmt 0 discriminator 1
 5650 0092 0123     		movs	r3, #1
 5651 0094 6374     		strb	r3, [r4, #17]
 5652 0096 0230     		adds	r0, r0, #2
 5653              	.LVL868:
 5654 0098 7AE0     		b	.L401
 5655              	.LVL869:
 5656              	.L408:
4318:..\..\FatFS-master\source/ff.c **** 					fp->obj.sclust = clst;
 5657              		.loc 1 4318 0 is_stmt 1
 5658 009a A060     		str	r0, [r4, #8]
 5659              	.L406:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 185


4319:..\..\FatFS-master\source/ff.c **** 				}
4320:..\..\FatFS-master\source/ff.c **** #endif
4321:..\..\FatFS-master\source/ff.c **** 				fp->clust = clst;
 5660              		.loc 1 4321 0
 5661 009c A061     		str	r0, [r4, #24]
 5662              	.L405:
4322:..\..\FatFS-master\source/ff.c **** 			}
4323:..\..\FatFS-master\source/ff.c **** 			if (clst != 0) {
 5663              		.loc 1 4323 0
 5664 009e 0028     		cmp	r0, #0
 5665 00a0 24D1     		bne	.L409
4303:..\..\FatFS-master\source/ff.c **** 		if (ofs > 0) {
 5666              		.loc 1 4303 0
 5667 00a2 0025     		movs	r5, #0
 5668              	.LVL870:
 5669 00a4 3BE0     		b	.L403
 5670              	.LVL871:
 5671              	.L416:
4324:..\..\FatFS-master\source/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
4325:..\..\FatFS-master\source/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 5672              		.loc 1 4325 0
 5673 00a6 AD1B     		subs	r5, r5, r6
 5674              	.LVL872:
 5675 00a8 6369     		ldr	r3, [r4, #20]
 5676 00aa 9B19     		adds	r3, r3, r6
 5677 00ac 6361     		str	r3, [r4, #20]
4326:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
4327:..\..\FatFS-master\source/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
 5678              		.loc 1 4327 0
 5679 00ae 237C     		ldrb	r3, [r4, #16]
 5680 00b0 9B07     		lsls	r3, r3, #30
 5681 00b2 06D5     		bpl	.L410
4328:..\..\FatFS-master\source/ff.c **** 						if (FF_FS_EXFAT && fp->fptr > fp->obj.objsize) {	/* No FAT chain object needs correct objsize
4329:..\..\FatFS-master\source/ff.c **** 							fp->obj.objsize = fp->fptr;
4330:..\..\FatFS-master\source/ff.c **** 							fp->flag |= FA_MODIFIED;
4331:..\..\FatFS-master\source/ff.c **** 						}
4332:..\..\FatFS-master\source/ff.c **** 						clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
 5682              		.loc 1 4332 0
 5683 00b4 0100     		movs	r1, r0
 5684 00b6 0198     		ldr	r0, [sp, #4]
 5685              	.LVL873:
 5686 00b8 FFF7FEFF 		bl	create_chain
 5687              	.LVL874:
4333:..\..\FatFS-master\source/ff.c **** 						if (clst == 0) {				/* Clip file size in case of disk full */
 5688              		.loc 1 4333 0
 5689 00bc 0028     		cmp	r0, #0
 5690 00be 04D1     		bne	.L412
 5691 00c0 17E0     		b	.L425
 5692              	.L410:
4334:..\..\FatFS-master\source/ff.c **** 							ofs = 0; break;
4335:..\..\FatFS-master\source/ff.c **** 						}
4336:..\..\FatFS-master\source/ff.c **** 					} else
4337:..\..\FatFS-master\source/ff.c **** #endif
4338:..\..\FatFS-master\source/ff.c **** 					{
4339:..\..\FatFS-master\source/ff.c **** 						clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
 5693              		.loc 1 4339 0
 5694 00c2 0100     		movs	r1, r0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 186


 5695 00c4 0198     		ldr	r0, [sp, #4]
 5696              	.LVL875:
 5697 00c6 FFF7FEFF 		bl	get_fat
 5698              	.LVL876:
 5699              	.L412:
4340:..\..\FatFS-master\source/ff.c **** 					}
4341:..\..\FatFS-master\source/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
 5700              		.loc 1 4341 0
 5701 00ca 431C     		adds	r3, r0, #1
 5702 00cc 03D1     		bne	.L413
 5703              		.loc 1 4341 0 is_stmt 0 discriminator 1
 5704 00ce 0123     		movs	r3, #1
 5705 00d0 6374     		strb	r3, [r4, #17]
 5706 00d2 0230     		adds	r0, r0, #2
 5707              	.LVL877:
 5708 00d4 5CE0     		b	.L401
 5709              	.LVL878:
 5710              	.L413:
4342:..\..\FatFS-master\source/ff.c **** 					if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
 5711              		.loc 1 4342 0 is_stmt 1
 5712 00d6 0128     		cmp	r0, #1
 5713 00d8 03D9     		bls	.L414
 5714              		.loc 1 4342 0 is_stmt 0 discriminator 2
 5715 00da 039B     		ldr	r3, [sp, #12]
 5716 00dc 5B69     		ldr	r3, [r3, #20]
 5717 00de 9842     		cmp	r0, r3
 5718 00e0 03D3     		bcc	.L415
 5719              	.L414:
 5720              		.loc 1 4342 0 discriminator 3
 5721 00e2 0223     		movs	r3, #2
 5722 00e4 6374     		strb	r3, [r4, #17]
 5723 00e6 0220     		movs	r0, #2
 5724              	.LVL879:
 5725 00e8 52E0     		b	.L401
 5726              	.LVL880:
 5727              	.L415:
4343:..\..\FatFS-master\source/ff.c **** 					fp->clust = clst;
 5728              		.loc 1 4343 0 is_stmt 1
 5729 00ea A061     		str	r0, [r4, #24]
 5730              	.L409:
4324:..\..\FatFS-master\source/ff.c **** 					ofs -= bcs; fp->fptr += bcs;
 5731              		.loc 1 4324 0
 5732 00ec B542     		cmp	r5, r6
 5733 00ee DAD8     		bhi	.L416
 5734 00f0 00E0     		b	.L411
 5735              	.L425:
4334:..\..\FatFS-master\source/ff.c **** 						}
 5736              		.loc 1 4334 0
 5737 00f2 0025     		movs	r5, #0
 5738              	.LVL881:
 5739              	.L411:
4344:..\..\FatFS-master\source/ff.c **** 				}
4345:..\..\FatFS-master\source/ff.c **** 				fp->fptr += ofs;
 5740              		.loc 1 4345 0
 5741 00f4 6369     		ldr	r3, [r4, #20]
 5742 00f6 5B19     		adds	r3, r3, r5
 5743 00f8 6361     		str	r3, [r4, #20]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 187


4346:..\..\FatFS-master\source/ff.c **** 				if (ofs % SS(fs)) {
 5744              		.loc 1 4346 0
 5745 00fa EB05     		lsls	r3, r5, #23
 5746 00fc 0ED0     		beq	.L426
4347:..\..\FatFS-master\source/ff.c **** 					nsect = clst2sect(fs, clst);	/* Current sector */
 5747              		.loc 1 4347 0
 5748 00fe 0100     		movs	r1, r0
 5749 0100 0398     		ldr	r0, [sp, #12]
 5750              	.LVL882:
 5751 0102 FFF7FEFF 		bl	clst2sect
 5752              	.LVL883:
4348:..\..\FatFS-master\source/ff.c **** 					if (nsect == 0) ABORT(fs, FR_INT_ERR);
 5753              		.loc 1 4348 0
 5754 0106 0028     		cmp	r0, #0
 5755 0108 03D1     		bne	.L417
 5756              		.loc 1 4348 0 is_stmt 0 discriminator 1
 5757 010a 0223     		movs	r3, #2
 5758 010c 6374     		strb	r3, [r4, #17]
 5759 010e 0230     		adds	r0, r0, #2
 5760              	.LVL884:
 5761 0110 3EE0     		b	.L401
 5762              	.LVL885:
 5763              	.L417:
4349:..\..\FatFS-master\source/ff.c **** 					nsect += (DWORD)(ofs / SS(fs));
 5764              		.loc 1 4349 0 is_stmt 1
 5765 0112 6D0A     		lsrs	r5, r5, #9
 5766              	.LVL886:
 5767 0114 4519     		adds	r5, r0, r5
 5768              	.LVL887:
 5769 0116 02E0     		b	.L403
 5770              	.LVL888:
 5771              	.L424:
4303:..\..\FatFS-master\source/ff.c **** 		if (ofs > 0) {
 5772              		.loc 1 4303 0
 5773 0118 0025     		movs	r5, #0
 5774              	.LVL889:
 5775 011a 00E0     		b	.L403
 5776              	.LVL890:
 5777              	.L426:
 5778 011c 0025     		movs	r5, #0
 5779              	.LVL891:
 5780              	.L403:
4350:..\..\FatFS-master\source/ff.c **** 				}
4351:..\..\FatFS-master\source/ff.c **** 			}
4352:..\..\FatFS-master\source/ff.c **** 		}
4353:..\..\FatFS-master\source/ff.c **** 		if (!FF_FS_READONLY && fp->fptr > fp->obj.objsize) {	/* Set file change flag if the file size is 
 5781              		.loc 1 4353 0
 5782 011e 6369     		ldr	r3, [r4, #20]
 5783 0120 E268     		ldr	r2, [r4, #12]
 5784 0122 9342     		cmp	r3, r2
 5785 0124 04D9     		bls	.L418
4354:..\..\FatFS-master\source/ff.c **** 			fp->obj.objsize = fp->fptr;
 5786              		.loc 1 4354 0
 5787 0126 E360     		str	r3, [r4, #12]
4355:..\..\FatFS-master\source/ff.c **** 			fp->flag |= FA_MODIFIED;
 5788              		.loc 1 4355 0
 5789 0128 217C     		ldrb	r1, [r4, #16]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 188


 5790 012a 4022     		movs	r2, #64
 5791 012c 0A43     		orrs	r2, r1
 5792 012e 2274     		strb	r2, [r4, #16]
 5793              	.L418:
4356:..\..\FatFS-master\source/ff.c **** 		}
4357:..\..\FatFS-master\source/ff.c **** 		if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
 5794              		.loc 1 4357 0
 5795 0130 DB05     		lsls	r3, r3, #23
 5796 0132 2AD0     		beq	.L427
 5797              		.loc 1 4357 0 is_stmt 0 discriminator 1
 5798 0134 E269     		ldr	r2, [r4, #28]
 5799 0136 9542     		cmp	r5, r2
 5800 0138 29D0     		beq	.L428
4358:..\..\FatFS-master\source/ff.c **** #if !FF_FS_TINY
4359:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
4360:..\..\FatFS-master\source/ff.c **** 			if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
 5801              		.loc 1 4360 0 is_stmt 1
 5802 013a 1023     		movs	r3, #16
 5803 013c E356     		ldrsb	r3, [r4, r3]
 5804 013e 002B     		cmp	r3, #0
 5805 0140 10DA     		bge	.L419
4361:..\..\FatFS-master\source/ff.c **** 				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
 5806              		.loc 1 4361 0
 5807 0142 2100     		movs	r1, r4
 5808 0144 2831     		adds	r1, r1, #40
 5809 0146 039B     		ldr	r3, [sp, #12]
 5810 0148 5878     		ldrb	r0, [r3, #1]
 5811 014a 0123     		movs	r3, #1
 5812 014c FFF7FEFF 		bl	disk_write
 5813              	.LVL892:
 5814 0150 0028     		cmp	r0, #0
 5815 0152 03D0     		beq	.L420
 5816              		.loc 1 4361 0 is_stmt 0 discriminator 1
 5817 0154 0123     		movs	r3, #1
 5818 0156 6374     		strb	r3, [r4, #17]
 5819 0158 0120     		movs	r0, #1
 5820 015a 19E0     		b	.L401
 5821              	.L420:
4362:..\..\FatFS-master\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 5822              		.loc 1 4362 0 is_stmt 1
 5823 015c 237C     		ldrb	r3, [r4, #16]
 5824 015e 7F22     		movs	r2, #127
 5825 0160 1340     		ands	r3, r2
 5826 0162 2374     		strb	r3, [r4, #16]
 5827              	.L419:
4363:..\..\FatFS-master\source/ff.c **** 			}
4364:..\..\FatFS-master\source/ff.c **** #endif
4365:..\..\FatFS-master\source/ff.c **** 			if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cac
 5828              		.loc 1 4365 0
 5829 0164 2100     		movs	r1, r4
 5830 0166 2831     		adds	r1, r1, #40
 5831 0168 039B     		ldr	r3, [sp, #12]
 5832 016a 5878     		ldrb	r0, [r3, #1]
 5833 016c 0123     		movs	r3, #1
 5834 016e 2A00     		movs	r2, r5
 5835 0170 FFF7FEFF 		bl	disk_read
 5836              	.LVL893:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 189


 5837 0174 0028     		cmp	r0, #0
 5838 0176 03D0     		beq	.L421
 5839              		.loc 1 4365 0 is_stmt 0 discriminator 1
 5840 0178 0123     		movs	r3, #1
 5841 017a 6374     		strb	r3, [r4, #17]
 5842 017c 0120     		movs	r0, #1
 5843 017e 07E0     		b	.L401
 5844              	.L421:
4366:..\..\FatFS-master\source/ff.c **** #endif
4367:..\..\FatFS-master\source/ff.c **** 			fp->sect = nsect;
 5845              		.loc 1 4367 0 is_stmt 1
 5846 0180 E561     		str	r5, [r4, #28]
4368:..\..\FatFS-master\source/ff.c **** 		}
4369:..\..\FatFS-master\source/ff.c **** 	}
4370:..\..\FatFS-master\source/ff.c **** 
4371:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
 5847              		.loc 1 4371 0
 5848 0182 3800     		movs	r0, r7
 5849 0184 04E0     		b	.L401
 5850              	.LVL894:
 5851              	.L422:
4240:..\..\FatFS-master\source/ff.c **** 
 5852              		.loc 1 4240 0
 5853 0186 3800     		movs	r0, r7
 5854 0188 02E0     		b	.L401
 5855              	.LVL895:
 5856              	.L427:
 5857              		.loc 1 4371 0
 5858 018a 3800     		movs	r0, r7
 5859 018c 00E0     		b	.L401
 5860              	.L428:
 5861 018e 3800     		movs	r0, r7
 5862              	.LVL896:
 5863              	.L401:
4372:..\..\FatFS-master\source/ff.c **** }
 5864              		.loc 1 4372 0
 5865 0190 05B0     		add	sp, sp, #20
 5866              		@ sp needed
 5867              	.LVL897:
 5868              	.LVL898:
 5869 0192 0CBC     		pop	{r2, r3}
 5870 0194 9146     		mov	r9, r2
 5871 0196 9A46     		mov	r10, r3
 5872 0198 F0BD     		pop	{r4, r5, r6, r7, pc}
 5873              		.cfi_endproc
 5874              	.LFE41:
 5875              		.size	f_lseek, .-f_lseek
 5876 019a C046     		.section	.text.f_opendir,"ax",%progbits
 5877              		.align	2
 5878              		.global	f_opendir
 5879              		.code	16
 5880              		.thumb_func
 5881              		.type	f_opendir, %function
 5882              	f_opendir:
 5883              	.LFB42:
4373:..\..\FatFS-master\source/ff.c **** 
4374:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 190


4375:..\..\FatFS-master\source/ff.c **** 
4376:..\..\FatFS-master\source/ff.c **** #if FF_FS_MINIMIZE <= 1
4377:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4378:..\..\FatFS-master\source/ff.c **** /* Create a Directory Object                                             */
4379:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4380:..\..\FatFS-master\source/ff.c **** 
4381:..\..\FatFS-master\source/ff.c **** FRESULT f_opendir (
4382:..\..\FatFS-master\source/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
4383:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
4384:..\..\FatFS-master\source/ff.c **** )
4385:..\..\FatFS-master\source/ff.c **** {
 5884              		.loc 1 4385 0
 5885              		.cfi_startproc
 5886              		@ args = 0, pretend = 0, frame = 16
 5887              		@ frame_needed = 0, uses_anonymous_args = 0
 5888              	.LVL899:
 5889 0000 30B5     		push	{r4, r5, lr}
 5890              		.cfi_def_cfa_offset 12
 5891              		.cfi_offset 4, -12
 5892              		.cfi_offset 5, -8
 5893              		.cfi_offset 14, -4
 5894 0002 85B0     		sub	sp, sp, #20
 5895              		.cfi_def_cfa_offset 32
 5896 0004 051E     		subs	r5, r0, #0
 5897 0006 0191     		str	r1, [sp, #4]
4386:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4387:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4388:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
4389:..\..\FatFS-master\source/ff.c **** 
4390:..\..\FatFS-master\source/ff.c **** 
4391:..\..\FatFS-master\source/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
 5898              		.loc 1 4391 0
 5899 0008 2FD0     		beq	.L434
4392:..\..\FatFS-master\source/ff.c **** 
4393:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive */
4394:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path, &fs, 0);
 5900              		.loc 1 4394 0
 5901 000a 0022     		movs	r2, #0
 5902 000c 03A9     		add	r1, sp, #12
 5903              	.LVL900:
 5904 000e 01A8     		add	r0, sp, #4
 5905              	.LVL901:
 5906 0010 FFF7FEFF 		bl	find_volume
 5907              	.LVL902:
 5908 0014 041E     		subs	r4, r0, #0
 5909              	.LVL903:
4395:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 5910              		.loc 1 4395 0
 5911 0016 22D1     		bne	.L431
4396:..\..\FatFS-master\source/ff.c **** 		dp->obj.fs = fs;
 5912              		.loc 1 4396 0
 5913 0018 039B     		ldr	r3, [sp, #12]
 5914 001a 2B60     		str	r3, [r5]
4397:..\..\FatFS-master\source/ff.c **** 		INIT_NAMBUF(fs);
4398:..\..\FatFS-master\source/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 5915              		.loc 1 4398 0
 5916 001c 0199     		ldr	r1, [sp, #4]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 191


 5917 001e 2800     		movs	r0, r5
 5918              	.LVL904:
 5919 0020 FFF7FEFF 		bl	follow_path
 5920              	.LVL905:
 5921 0024 041E     		subs	r4, r0, #0
 5922              	.LVL906:
4399:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
 5923              		.loc 1 4399 0
 5924 0026 17D1     		bne	.L432
4400:..\..\FatFS-master\source/ff.c **** 			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 5925              		.loc 1 4400 0
 5926 0028 2B23     		movs	r3, #43
 5927 002a EB56     		ldrsb	r3, [r5, r3]
 5928 002c 002B     		cmp	r3, #0
 5929 002e 09DB     		blt	.L433
4401:..\..\FatFS-master\source/ff.c **** 				if (dp->obj.attr & AM_DIR) {		/* This object is a sub-directory */
 5930              		.loc 1 4401 0
 5931 0030 AB79     		ldrb	r3, [r5, #6]
 5932 0032 DB06     		lsls	r3, r3, #27
 5933 0034 05D5     		bpl	.L435
4402:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4403:..\..\FatFS-master\source/ff.c **** 					if (fs->fs_type == FS_EXFAT) {
4404:..\..\FatFS-master\source/ff.c **** 						dp->obj.c_scl = dp->obj.sclust;							/* Get containing directory inforamation */
4405:..\..\FatFS-master\source/ff.c **** 						dp->obj.c_size = ((DWORD)dp->obj.objsize & 0xFFFFFF00) | dp->obj.stat;
4406:..\..\FatFS-master\source/ff.c **** 						dp->obj.c_ofs = dp->blk_ofs;
4407:..\..\FatFS-master\source/ff.c **** 						init_alloc_info(fs, &dp->obj);	/* Get object allocation info */
4408:..\..\FatFS-master\source/ff.c **** 					} else
4409:..\..\FatFS-master\source/ff.c **** #endif
4410:..\..\FatFS-master\source/ff.c **** 					{
4411:..\..\FatFS-master\source/ff.c **** 						dp->obj.sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
 5934              		.loc 1 4411 0
 5935 0036 E969     		ldr	r1, [r5, #28]
 5936 0038 0398     		ldr	r0, [sp, #12]
 5937              	.LVL907:
 5938 003a FFF7FEFF 		bl	ld_clust
 5939              	.LVL908:
 5940 003e A860     		str	r0, [r5, #8]
 5941 0040 00E0     		b	.L433
 5942              	.LVL909:
 5943              	.L435:
4412:..\..\FatFS-master\source/ff.c **** 					}
4413:..\..\FatFS-master\source/ff.c **** 				} else {						/* This object is a file */
4414:..\..\FatFS-master\source/ff.c **** 					res = FR_NO_PATH;
 5944              		.loc 1 4414 0
 5945 0042 0524     		movs	r4, #5
 5946              	.LVL910:
 5947              	.L433:
4415:..\..\FatFS-master\source/ff.c **** 				}
4416:..\..\FatFS-master\source/ff.c **** 			}
4417:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {
 5948              		.loc 1 4417 0
 5949 0044 002C     		cmp	r4, #0
 5950 0046 07D1     		bne	.L432
4418:..\..\FatFS-master\source/ff.c **** 				dp->obj.id = fs->id;
 5951              		.loc 1 4418 0
 5952 0048 039B     		ldr	r3, [sp, #12]
 5953 004a DB88     		ldrh	r3, [r3, #6]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 192


 5954 004c AB80     		strh	r3, [r5, #4]
4419:..\..\FatFS-master\source/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 5955              		.loc 1 4419 0
 5956 004e 0021     		movs	r1, #0
 5957 0050 2800     		movs	r0, r5
 5958 0052 FFF7FEFF 		bl	dir_sdi
 5959              	.LVL911:
 5960 0056 0400     		movs	r4, r0
 5961              	.LVL912:
 5962              	.L432:
4420:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
4421:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) {
4422:..\..\FatFS-master\source/ff.c **** 					if (dp->obj.sclust != 0) {
4423:..\..\FatFS-master\source/ff.c **** 						dp->obj.lockid = inc_lock(dp, 0);	/* Lock the sub directory */
4424:..\..\FatFS-master\source/ff.c **** 						if (!dp->obj.lockid) res = FR_TOO_MANY_OPEN_FILES;
4425:..\..\FatFS-master\source/ff.c **** 					} else {
4426:..\..\FatFS-master\source/ff.c **** 						dp->obj.lockid = 0;	/* Root directory need not to be locked */
4427:..\..\FatFS-master\source/ff.c **** 					}
4428:..\..\FatFS-master\source/ff.c **** 				}
4429:..\..\FatFS-master\source/ff.c **** #endif
4430:..\..\FatFS-master\source/ff.c **** 			}
4431:..\..\FatFS-master\source/ff.c **** 		}
4432:..\..\FatFS-master\source/ff.c **** 		FREE_NAMBUF();
4433:..\..\FatFS-master\source/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 5963              		.loc 1 4433 0
 5964 0058 042C     		cmp	r4, #4
 5965 005a 00D1     		bne	.L431
 5966 005c 0134     		adds	r4, r4, #1
 5967              	.LVL913:
 5968              	.L431:
4434:..\..\FatFS-master\source/ff.c **** 	}
4435:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK) dp->obj.fs = 0;		/* Invalidate the directory object if function faild */
 5969              		.loc 1 4435 0
 5970 005e 002C     		cmp	r4, #0
 5971 0060 05D0     		beq	.L437
 5972              		.loc 1 4435 0 is_stmt 0 discriminator 1
 5973 0062 0023     		movs	r3, #0
 5974 0064 2B60     		str	r3, [r5]
4436:..\..\FatFS-master\source/ff.c **** 
4437:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
 5975              		.loc 1 4437 0 is_stmt 1 discriminator 1
 5976 0066 2000     		movs	r0, r4
 5977 0068 02E0     		b	.L430
 5978              	.LVL914:
 5979              	.L434:
4391:..\..\FatFS-master\source/ff.c **** 
 5980              		.loc 1 4391 0
 5981 006a 0920     		movs	r0, #9
 5982              	.LVL915:
 5983 006c 00E0     		b	.L430
 5984              	.LVL916:
 5985              	.L437:
 5986              		.loc 1 4437 0
 5987 006e 2000     		movs	r0, r4
 5988              	.LVL917:
 5989              	.L430:
4438:..\..\FatFS-master\source/ff.c **** }
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 193


 5990              		.loc 1 4438 0
 5991 0070 05B0     		add	sp, sp, #20
 5992              		@ sp needed
 5993              	.LVL918:
 5994 0072 30BD     		pop	{r4, r5, pc}
 5995              		.cfi_endproc
 5996              	.LFE42:
 5997              		.size	f_opendir, .-f_opendir
 5998              		.section	.text.f_closedir,"ax",%progbits
 5999              		.align	2
 6000              		.global	f_closedir
 6001              		.code	16
 6002              		.thumb_func
 6003              		.type	f_closedir, %function
 6004              	f_closedir:
 6005              	.LFB43:
4439:..\..\FatFS-master\source/ff.c **** 
4440:..\..\FatFS-master\source/ff.c **** 
4441:..\..\FatFS-master\source/ff.c **** 
4442:..\..\FatFS-master\source/ff.c **** 
4443:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4444:..\..\FatFS-master\source/ff.c **** /* Close Directory                                                       */
4445:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4446:..\..\FatFS-master\source/ff.c **** 
4447:..\..\FatFS-master\source/ff.c **** FRESULT f_closedir (
4448:..\..\FatFS-master\source/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
4449:..\..\FatFS-master\source/ff.c **** )
4450:..\..\FatFS-master\source/ff.c **** {
 6006              		.loc 1 4450 0
 6007              		.cfi_startproc
 6008              		@ args = 0, pretend = 0, frame = 8
 6009              		@ frame_needed = 0, uses_anonymous_args = 0
 6010              	.LVL919:
 6011 0000 10B5     		push	{r4, lr}
 6012              		.cfi_def_cfa_offset 8
 6013              		.cfi_offset 4, -8
 6014              		.cfi_offset 14, -4
 6015 0002 82B0     		sub	sp, sp, #8
 6016              		.cfi_def_cfa_offset 16
 6017 0004 0400     		movs	r4, r0
4451:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4452:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4453:..\..\FatFS-master\source/ff.c **** 
4454:..\..\FatFS-master\source/ff.c **** 
4455:..\..\FatFS-master\source/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the file object */
 6018              		.loc 1 4455 0
 6019 0006 01A9     		add	r1, sp, #4
 6020 0008 FFF7FEFF 		bl	validate
 6021              	.LVL920:
4456:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 6022              		.loc 1 4456 0
 6023 000c 0028     		cmp	r0, #0
 6024 000e 01D1     		bne	.L439
4457:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
4458:..\..\FatFS-master\source/ff.c **** 		if (dp->obj.lockid) res = dec_lock(dp->obj.lockid);	/* Decrement sub-directory open counter */
4459:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) dp->obj.fs = 0;	/* Invalidate directory object */
4460:..\..\FatFS-master\source/ff.c **** #else
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 194


4461:..\..\FatFS-master\source/ff.c **** 		dp->obj.fs = 0;	/* Invalidate directory object */
 6025              		.loc 1 4461 0
 6026 0010 0023     		movs	r3, #0
 6027 0012 2360     		str	r3, [r4]
 6028              	.L439:
4462:..\..\FatFS-master\source/ff.c **** #endif
4463:..\..\FatFS-master\source/ff.c **** #if FF_FS_REENTRANT
4464:..\..\FatFS-master\source/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
4465:..\..\FatFS-master\source/ff.c **** #endif
4466:..\..\FatFS-master\source/ff.c **** 	}
4467:..\..\FatFS-master\source/ff.c **** 	return res;
4468:..\..\FatFS-master\source/ff.c **** }
 6029              		.loc 1 4468 0
 6030 0014 02B0     		add	sp, sp, #8
 6031              		@ sp needed
 6032              	.LVL921:
 6033 0016 10BD     		pop	{r4, pc}
 6034              		.cfi_endproc
 6035              	.LFE43:
 6036              		.size	f_closedir, .-f_closedir
 6037              		.section	.text.f_readdir,"ax",%progbits
 6038              		.align	2
 6039              		.global	f_readdir
 6040              		.code	16
 6041              		.thumb_func
 6042              		.type	f_readdir, %function
 6043              	f_readdir:
 6044              	.LFB44:
4469:..\..\FatFS-master\source/ff.c **** 
4470:..\..\FatFS-master\source/ff.c **** 
4471:..\..\FatFS-master\source/ff.c **** 
4472:..\..\FatFS-master\source/ff.c **** 
4473:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4474:..\..\FatFS-master\source/ff.c **** /* Read Directory Entries in Sequence                                    */
4475:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4476:..\..\FatFS-master\source/ff.c **** 
4477:..\..\FatFS-master\source/ff.c **** FRESULT f_readdir (
4478:..\..\FatFS-master\source/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
4479:..\..\FatFS-master\source/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4480:..\..\FatFS-master\source/ff.c **** )
4481:..\..\FatFS-master\source/ff.c **** {
 6045              		.loc 1 4481 0
 6046              		.cfi_startproc
 6047              		@ args = 0, pretend = 0, frame = 8
 6048              		@ frame_needed = 0, uses_anonymous_args = 0
 6049              	.LVL922:
 6050 0000 70B5     		push	{r4, r5, r6, lr}
 6051              		.cfi_def_cfa_offset 16
 6052              		.cfi_offset 4, -16
 6053              		.cfi_offset 5, -12
 6054              		.cfi_offset 6, -8
 6055              		.cfi_offset 14, -4
 6056 0002 82B0     		sub	sp, sp, #8
 6057              		.cfi_def_cfa_offset 24
 6058 0004 0500     		movs	r5, r0
 6059 0006 0E00     		movs	r6, r1
4482:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 195


4483:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4484:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
4485:..\..\FatFS-master\source/ff.c **** 
4486:..\..\FatFS-master\source/ff.c **** 
4487:..\..\FatFS-master\source/ff.c **** 	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
 6060              		.loc 1 4487 0
 6061 0008 01A9     		add	r1, sp, #4
 6062              	.LVL923:
 6063 000a FFF7FEFF 		bl	validate
 6064              	.LVL924:
 6065 000e 041E     		subs	r4, r0, #0
 6066              	.LVL925:
4488:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 6067              		.loc 1 4488 0
 6068 0010 1BD1     		bne	.L441
4489:..\..\FatFS-master\source/ff.c **** 		if (!fno) {
 6069              		.loc 1 4489 0
 6070 0012 002E     		cmp	r6, #0
 6071 0014 05D1     		bne	.L442
4490:..\..\FatFS-master\source/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6072              		.loc 1 4490 0
 6073 0016 0021     		movs	r1, #0
 6074 0018 2800     		movs	r0, r5
 6075              	.LVL926:
 6076 001a FFF7FEFF 		bl	dir_sdi
 6077              	.LVL927:
 6078 001e 0400     		movs	r4, r0
 6079              	.LVL928:
 6080 0020 13E0     		b	.L441
 6081              	.L442:
4491:..\..\FatFS-master\source/ff.c **** 		} else {
4492:..\..\FatFS-master\source/ff.c **** 			INIT_NAMBUF(fs);
4493:..\..\FatFS-master\source/ff.c **** 			res = dir_read_file(dp);		/* Read an item */
 6082              		.loc 1 4493 0
 6083 0022 0021     		movs	r1, #0
 6084 0024 2800     		movs	r0, r5
 6085              	.LVL929:
 6086 0026 FFF7FEFF 		bl	dir_read
 6087              	.LVL930:
4494:..\..\FatFS-master\source/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6088              		.loc 1 4494 0
 6089 002a 0428     		cmp	r0, #4
 6090 002c 00D0     		beq	.L443
4493:..\..\FatFS-master\source/ff.c **** 			if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
 6091              		.loc 1 4493 0
 6092 002e 0400     		movs	r4, r0
 6093              	.L443:
 6094              	.LVL931:
4495:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
 6095              		.loc 1 4495 0
 6096 0030 002C     		cmp	r4, #0
 6097 0032 0AD1     		bne	.L441
4496:..\..\FatFS-master\source/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6098              		.loc 1 4496 0
 6099 0034 3100     		movs	r1, r6
 6100 0036 2800     		movs	r0, r5
 6101 0038 FFF7FEFF 		bl	get_fileinfo
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 196


 6102              	.LVL932:
4497:..\..\FatFS-master\source/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6103              		.loc 1 4497 0
 6104 003c 0021     		movs	r1, #0
 6105 003e 2800     		movs	r0, r5
 6106 0040 FFF7FEFF 		bl	dir_next
 6107              	.LVL933:
4498:..\..\FatFS-master\source/ff.c **** 				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 6108              		.loc 1 4498 0
 6109 0044 0428     		cmp	r0, #4
 6110 0046 00D0     		beq	.L441
4497:..\..\FatFS-master\source/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6111              		.loc 1 4497 0
 6112 0048 0400     		movs	r4, r0
 6113              	.LVL934:
 6114              	.L441:
4499:..\..\FatFS-master\source/ff.c **** 			}
4500:..\..\FatFS-master\source/ff.c **** 			FREE_NAMBUF();
4501:..\..\FatFS-master\source/ff.c **** 		}
4502:..\..\FatFS-master\source/ff.c **** 	}
4503:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
4504:..\..\FatFS-master\source/ff.c **** }
 6115              		.loc 1 4504 0
 6116 004a 2000     		movs	r0, r4
 6117 004c 02B0     		add	sp, sp, #8
 6118              		@ sp needed
 6119              	.LVL935:
 6120              	.LVL936:
 6121              	.LVL937:
 6122 004e 70BD     		pop	{r4, r5, r6, pc}
 6123              		.cfi_endproc
 6124              	.LFE44:
 6125              		.size	f_readdir, .-f_readdir
 6126              		.section	.text.f_stat,"ax",%progbits
 6127              		.align	2
 6128              		.global	f_stat
 6129              		.code	16
 6130              		.thumb_func
 6131              		.type	f_stat, %function
 6132              	f_stat:
 6133              	.LFB45:
4505:..\..\FatFS-master\source/ff.c **** 
4506:..\..\FatFS-master\source/ff.c **** 
4507:..\..\FatFS-master\source/ff.c **** 
4508:..\..\FatFS-master\source/ff.c **** #if FF_USE_FIND
4509:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4510:..\..\FatFS-master\source/ff.c **** /* Find Next File                                                        */
4511:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4512:..\..\FatFS-master\source/ff.c **** 
4513:..\..\FatFS-master\source/ff.c **** FRESULT f_findnext (
4514:..\..\FatFS-master\source/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
4515:..\..\FatFS-master\source/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
4516:..\..\FatFS-master\source/ff.c **** )
4517:..\..\FatFS-master\source/ff.c **** {
4518:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4519:..\..\FatFS-master\source/ff.c **** 
4520:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 197


4521:..\..\FatFS-master\source/ff.c **** 	for (;;) {
4522:..\..\FatFS-master\source/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
4523:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
4524:..\..\FatFS-master\source/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;		/* Test for the file name */
4525:..\..\FatFS-master\source/ff.c **** #if FF_USE_LFN && FF_USE_FIND == 2
4526:..\..\FatFS-master\source/ff.c **** 		if (pattern_matching(dp->pat, fno->altname, 0, 0)) break;	/* Test for alternative name if exist *
4527:..\..\FatFS-master\source/ff.c **** #endif
4528:..\..\FatFS-master\source/ff.c **** 	}
4529:..\..\FatFS-master\source/ff.c **** 	return res;
4530:..\..\FatFS-master\source/ff.c **** }
4531:..\..\FatFS-master\source/ff.c **** 
4532:..\..\FatFS-master\source/ff.c **** 
4533:..\..\FatFS-master\source/ff.c **** 
4534:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4535:..\..\FatFS-master\source/ff.c **** /* Find First File                                                       */
4536:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4537:..\..\FatFS-master\source/ff.c **** 
4538:..\..\FatFS-master\source/ff.c **** FRESULT f_findfirst (
4539:..\..\FatFS-master\source/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
4540:..\..\FatFS-master\source/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
4541:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
4542:..\..\FatFS-master\source/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
4543:..\..\FatFS-master\source/ff.c **** )
4544:..\..\FatFS-master\source/ff.c **** {
4545:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4546:..\..\FatFS-master\source/ff.c **** 
4547:..\..\FatFS-master\source/ff.c **** 
4548:..\..\FatFS-master\source/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
4549:..\..\FatFS-master\source/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
4550:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
4551:..\..\FatFS-master\source/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
4552:..\..\FatFS-master\source/ff.c **** 	}
4553:..\..\FatFS-master\source/ff.c **** 	return res;
4554:..\..\FatFS-master\source/ff.c **** }
4555:..\..\FatFS-master\source/ff.c **** 
4556:..\..\FatFS-master\source/ff.c **** #endif	/* FF_USE_FIND */
4557:..\..\FatFS-master\source/ff.c **** 
4558:..\..\FatFS-master\source/ff.c **** 
4559:..\..\FatFS-master\source/ff.c **** 
4560:..\..\FatFS-master\source/ff.c **** #if FF_FS_MINIMIZE == 0
4561:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4562:..\..\FatFS-master\source/ff.c **** /* Get File Status                                                       */
4563:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4564:..\..\FatFS-master\source/ff.c **** 
4565:..\..\FatFS-master\source/ff.c **** FRESULT f_stat (
4566:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
4567:..\..\FatFS-master\source/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
4568:..\..\FatFS-master\source/ff.c **** )
4569:..\..\FatFS-master\source/ff.c **** {
 6134              		.loc 1 4569 0
 6135              		.cfi_startproc
 6136              		@ args = 0, pretend = 0, frame = 56
 6137              		@ frame_needed = 0, uses_anonymous_args = 0
 6138              	.LVL938:
 6139 0000 30B5     		push	{r4, r5, lr}
 6140              		.cfi_def_cfa_offset 12
 6141              		.cfi_offset 4, -12
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 198


 6142              		.cfi_offset 5, -8
 6143              		.cfi_offset 14, -4
 6144 0002 8FB0     		sub	sp, sp, #60
 6145              		.cfi_def_cfa_offset 72
 6146 0004 0190     		str	r0, [sp, #4]
 6147 0006 0D00     		movs	r5, r1
4570:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4571:..\..\FatFS-master\source/ff.c **** 	DIR dj;
4572:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
4573:..\..\FatFS-master\source/ff.c **** 
4574:..\..\FatFS-master\source/ff.c **** 
4575:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive */
4576:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path, &dj.obj.fs, 0);
 6148              		.loc 1 4576 0
 6149 0008 0022     		movs	r2, #0
 6150 000a 03A9     		add	r1, sp, #12
 6151              	.LVL939:
 6152 000c 01A8     		add	r0, sp, #4
 6153              	.LVL940:
 6154 000e FFF7FEFF 		bl	find_volume
 6155              	.LVL941:
 6156 0012 041E     		subs	r4, r0, #0
 6157              	.LVL942:
4577:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 6158              		.loc 1 4577 0
 6159 0014 12D1     		bne	.L445
4578:..\..\FatFS-master\source/ff.c **** 		INIT_NAMBUF(dj.obj.fs);
4579:..\..\FatFS-master\source/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6160              		.loc 1 4579 0
 6161 0016 0199     		ldr	r1, [sp, #4]
 6162 0018 03A8     		add	r0, sp, #12
 6163              	.LVL943:
 6164 001a FFF7FEFF 		bl	follow_path
 6165              	.LVL944:
 6166 001e 041E     		subs	r4, r0, #0
 6167              	.LVL945:
4580:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6168              		.loc 1 4580 0
 6169 0020 0CD1     		bne	.L445
4581:..\..\FatFS-master\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
 6170              		.loc 1 4581 0
 6171 0022 2B23     		movs	r3, #43
 6172 0024 03AA     		add	r2, sp, #12
 6173 0026 D356     		ldrsb	r3, [r2, r3]
 6174 0028 002B     		cmp	r3, #0
 6175 002a 06DB     		blt	.L446
4582:..\..\FatFS-master\source/ff.c **** 				res = FR_INVALID_NAME;
4583:..\..\FatFS-master\source/ff.c **** 			} else {							/* Found an object */
4584:..\..\FatFS-master\source/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
 6176              		.loc 1 4584 0
 6177 002c 002D     		cmp	r5, #0
 6178 002e 05D0     		beq	.L445
 6179              		.loc 1 4584 0 is_stmt 0 discriminator 1
 6180 0030 2900     		movs	r1, r5
 6181 0032 1000     		movs	r0, r2
 6182              	.LVL946:
 6183 0034 FFF7FEFF 		bl	get_fileinfo
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 199


 6184              	.LVL947:
 6185 0038 00E0     		b	.L445
 6186              	.LVL948:
 6187              	.L446:
4582:..\..\FatFS-master\source/ff.c **** 				res = FR_INVALID_NAME;
 6188              		.loc 1 4582 0 is_stmt 1
 6189 003a 0624     		movs	r4, #6
 6190              	.LVL949:
 6191              	.L445:
4585:..\..\FatFS-master\source/ff.c **** 			}
4586:..\..\FatFS-master\source/ff.c **** 		}
4587:..\..\FatFS-master\source/ff.c **** 		FREE_NAMBUF();
4588:..\..\FatFS-master\source/ff.c **** 	}
4589:..\..\FatFS-master\source/ff.c **** 
4590:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(dj.obj.fs, res);
4591:..\..\FatFS-master\source/ff.c **** }
 6192              		.loc 1 4591 0
 6193 003c 2000     		movs	r0, r4
 6194 003e 0FB0     		add	sp, sp, #60
 6195              		@ sp needed
 6196              	.LVL950:
 6197              	.LVL951:
 6198 0040 30BD     		pop	{r4, r5, pc}
 6199              		.cfi_endproc
 6200              	.LFE45:
 6201              		.size	f_stat, .-f_stat
 6202 0042 C046     		.section	.text.f_getfree,"ax",%progbits
 6203              		.align	2
 6204              		.global	f_getfree
 6205              		.code	16
 6206              		.thumb_func
 6207              		.type	f_getfree, %function
 6208              	f_getfree:
 6209              	.LFB46:
4592:..\..\FatFS-master\source/ff.c **** 
4593:..\..\FatFS-master\source/ff.c **** 
4594:..\..\FatFS-master\source/ff.c **** 
4595:..\..\FatFS-master\source/ff.c **** #if !FF_FS_READONLY
4596:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4597:..\..\FatFS-master\source/ff.c **** /* Get Number of Free Clusters                                           */
4598:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4599:..\..\FatFS-master\source/ff.c **** 
4600:..\..\FatFS-master\source/ff.c **** FRESULT f_getfree (
4601:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path,	/* Logical drive number */
4602:..\..\FatFS-master\source/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
4603:..\..\FatFS-master\source/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding filesystem object */
4604:..\..\FatFS-master\source/ff.c **** )
4605:..\..\FatFS-master\source/ff.c **** {
 6210              		.loc 1 4605 0
 6211              		.cfi_startproc
 6212              		@ args = 0, pretend = 0, frame = 32
 6213              		@ frame_needed = 0, uses_anonymous_args = 0
 6214              	.LVL952:
 6215 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6216              		.cfi_def_cfa_offset 20
 6217              		.cfi_offset 4, -20
 6218              		.cfi_offset 5, -16
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 200


 6219              		.cfi_offset 6, -12
 6220              		.cfi_offset 7, -8
 6221              		.cfi_offset 14, -4
 6222 0002 5746     		mov	r7, r10
 6223 0004 4E46     		mov	r6, r9
 6224 0006 C0B4     		push	{r6, r7}
 6225              		.cfi_def_cfa_offset 28
 6226              		.cfi_offset 9, -28
 6227              		.cfi_offset 10, -24
 6228 0008 89B0     		sub	sp, sp, #36
 6229              		.cfi_def_cfa_offset 64
 6230 000a 0190     		str	r0, [sp, #4]
 6231 000c 8946     		mov	r9, r1
 6232 000e 1400     		movs	r4, r2
4606:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4607:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4608:..\..\FatFS-master\source/ff.c **** 	DWORD nfree, clst, sect, stat;
4609:..\..\FatFS-master\source/ff.c **** 	UINT i;
4610:..\..\FatFS-master\source/ff.c **** 	FFOBJID obj;
4611:..\..\FatFS-master\source/ff.c **** 
4612:..\..\FatFS-master\source/ff.c **** 
4613:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive */
4614:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path, &fs, 0);
 6233              		.loc 1 4614 0
 6234 0010 0022     		movs	r2, #0
 6235              	.LVL953:
 6236 0012 07A9     		add	r1, sp, #28
 6237              	.LVL954:
 6238 0014 01A8     		add	r0, sp, #4
 6239              	.LVL955:
 6240 0016 FFF7FEFF 		bl	find_volume
 6241              	.LVL956:
 6242 001a 051E     		subs	r5, r0, #0
 6243              	.LVL957:
4615:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 6244              		.loc 1 4615 0
 6245 001c 57D1     		bne	.L448
4616:..\..\FatFS-master\source/ff.c **** 		*fatfs = fs;				/* Return ptr to the fs object */
 6246              		.loc 1 4616 0
 6247 001e 079B     		ldr	r3, [sp, #28]
 6248 0020 2360     		str	r3, [r4]
4617:..\..\FatFS-master\source/ff.c **** 		/* If free_clst is valid, return it without full FAT scan */
4618:..\..\FatFS-master\source/ff.c **** 		if (fs->free_clst <= fs->n_fatent - 2) {
 6249              		.loc 1 4618 0
 6250 0022 1A69     		ldr	r2, [r3, #16]
 6251 0024 5F69     		ldr	r7, [r3, #20]
 6252 0026 B91E     		subs	r1, r7, #2
 6253 0028 8A42     		cmp	r2, r1
 6254 002a 02D8     		bhi	.L449
4619:..\..\FatFS-master\source/ff.c **** 			*nclst = fs->free_clst;
 6255              		.loc 1 4619 0
 6256 002c 4B46     		mov	r3, r9
 6257 002e 1A60     		str	r2, [r3]
 6258 0030 4DE0     		b	.L448
 6259              	.L449:
 6260              	.LVL958:
4620:..\..\FatFS-master\source/ff.c **** 		} else {
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 201


4621:..\..\FatFS-master\source/ff.c **** 			/* Scan FAT to obtain number of free clusters */
4622:..\..\FatFS-master\source/ff.c **** 			nfree = 0;
4623:..\..\FatFS-master\source/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 6261              		.loc 1 4623 0
 6262 0032 1A78     		ldrb	r2, [r3]
 6263 0034 012A     		cmp	r2, #1
 6264 0036 13D1     		bne	.L450
 6265              	.LVL959:
4624:..\..\FatFS-master\source/ff.c **** 				clst = 2; obj.fs = fs;
 6266              		.loc 1 4624 0
 6267 0038 0393     		str	r3, [sp, #12]
 6268 003a 0224     		movs	r4, #2
 6269              	.LVL960:
4622:..\..\FatFS-master\source/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 6270              		.loc 1 4622 0
 6271 003c 0026     		movs	r6, #0
 6272              	.LVL961:
 6273              	.L453:
4625:..\..\FatFS-master\source/ff.c **** 				do {
4626:..\..\FatFS-master\source/ff.c **** 					stat = get_fat(&obj, clst);
 6274              		.loc 1 4626 0
 6275 003e 2100     		movs	r1, r4
 6276 0040 03A8     		add	r0, sp, #12
 6277 0042 FFF7FEFF 		bl	get_fat
 6278              	.LVL962:
4627:..\..\FatFS-master\source/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6279              		.loc 1 4627 0
 6280 0046 431C     		adds	r3, r0, #1
 6281 0048 36D0     		beq	.L460
4628:..\..\FatFS-master\source/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6282              		.loc 1 4628 0
 6283 004a 0128     		cmp	r0, #1
 6284 004c 36D0     		beq	.L461
4629:..\..\FatFS-master\source/ff.c **** 					if (stat == 0) nfree++;
 6285              		.loc 1 4629 0
 6286 004e 0028     		cmp	r0, #0
 6287 0050 00D1     		bne	.L452
 6288              		.loc 1 4629 0 is_stmt 0 discriminator 1
 6289 0052 0136     		adds	r6, r6, #1
 6290              	.LVL963:
 6291              	.L452:
4630:..\..\FatFS-master\source/ff.c **** 				} while (++clst < fs->n_fatent);
 6292              		.loc 1 4630 0 is_stmt 1
 6293 0054 0134     		adds	r4, r4, #1
 6294              	.LVL964:
 6295 0056 079B     		ldr	r3, [sp, #28]
 6296 0058 5B69     		ldr	r3, [r3, #20]
 6297 005a 9C42     		cmp	r4, r3
 6298 005c EFD3     		bcc	.L453
 6299 005e 2EE0     		b	.L451
 6300              	.LVL965:
 6301              	.L450:
4631:..\..\FatFS-master\source/ff.c **** 			} else {
4632:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4633:..\..\FatFS-master\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* exFAT: Scan allocation bitmap */
4634:..\..\FatFS-master\source/ff.c **** 					BYTE bm;
4635:..\..\FatFS-master\source/ff.c **** 					UINT b;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 202


4636:..\..\FatFS-master\source/ff.c **** 
4637:..\..\FatFS-master\source/ff.c **** 					clst = fs->n_fatent - 2;	/* Number of clusters */
4638:..\..\FatFS-master\source/ff.c **** 					sect = fs->database;		/* Assuming bitmap starts at cluster 2 */
4639:..\..\FatFS-master\source/ff.c **** 					i = 0;						/* Offset in the sector */
4640:..\..\FatFS-master\source/ff.c **** 					do {	/* Counts numbuer of bits with zero in the bitmap */
4641:..\..\FatFS-master\source/ff.c **** 						if (i == 0) {
4642:..\..\FatFS-master\source/ff.c **** 							res = move_window(fs, sect++);
4643:..\..\FatFS-master\source/ff.c **** 							if (res != FR_OK) break;
4644:..\..\FatFS-master\source/ff.c **** 						}
4645:..\..\FatFS-master\source/ff.c **** 						for (b = 8, bm = fs->win[i]; b && clst; b--, clst--) {
4646:..\..\FatFS-master\source/ff.c **** 							if (!(bm & 1)) nfree++;
4647:..\..\FatFS-master\source/ff.c **** 							bm >>= 1;
4648:..\..\FatFS-master\source/ff.c **** 						}
4649:..\..\FatFS-master\source/ff.c **** 						i = (i + 1) % SS(fs);
4650:..\..\FatFS-master\source/ff.c **** 					} while (clst);
4651:..\..\FatFS-master\source/ff.c **** 				} else
4652:..\..\FatFS-master\source/ff.c **** #endif
4653:..\..\FatFS-master\source/ff.c **** 				{	/* FAT16/32: Scan WORD/DWORD FAT entries */
4654:..\..\FatFS-master\source/ff.c **** 					clst = fs->n_fatent;	/* Number of entries */
4655:..\..\FatFS-master\source/ff.c **** 					sect = fs->fatbase;		/* Top of the FAT */
 6302              		.loc 1 4655 0
 6303 0060 1B6A     		ldr	r3, [r3, #32]
 6304 0062 0093     		str	r3, [sp]
 6305              	.LVL966:
4656:..\..\FatFS-master\source/ff.c **** 					i = 0;					/* Offset in the sector */
 6306              		.loc 1 4656 0
 6307 0064 0024     		movs	r4, #0
 6308              	.LVL967:
4622:..\..\FatFS-master\source/ff.c **** 			if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
 6309              		.loc 1 4622 0
 6310 0066 0026     		movs	r6, #0
 6311              	.LVL968:
 6312              	.L459:
4657:..\..\FatFS-master\source/ff.c **** 					do {	/* Counts numbuer of entries with zero in the FAT */
4658:..\..\FatFS-master\source/ff.c **** 						if (i == 0) {
 6313              		.loc 1 4658 0
 6314 0068 002C     		cmp	r4, #0
 6315 006a 0AD1     		bne	.L454
4659:..\..\FatFS-master\source/ff.c **** 							res = move_window(fs, sect++);
 6316              		.loc 1 4659 0
 6317 006c 009B     		ldr	r3, [sp]
 6318 006e 5A1C     		adds	r2, r3, #1
 6319 0070 9246     		mov	r10, r2
 6320              	.LVL969:
 6321 0072 1900     		movs	r1, r3
 6322 0074 0798     		ldr	r0, [sp, #28]
 6323 0076 FFF7FEFF 		bl	move_window
 6324              	.LVL970:
 6325 007a 051E     		subs	r5, r0, #0
 6326              	.LVL971:
4660:..\..\FatFS-master\source/ff.c **** 							if (res != FR_OK) break;
 6327              		.loc 1 4660 0
 6328 007c 1FD1     		bne	.L451
4659:..\..\FatFS-master\source/ff.c **** 							res = move_window(fs, sect++);
 6329              		.loc 1 4659 0
 6330 007e 5346     		mov	r3, r10
 6331 0080 0093     		str	r3, [sp]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 203


 6332              	.LVL972:
 6333              	.L454:
4661:..\..\FatFS-master\source/ff.c **** 						}
4662:..\..\FatFS-master\source/ff.c **** 						if (fs->fs_type == FS_FAT16) {
 6334              		.loc 1 4662 0
 6335 0082 0798     		ldr	r0, [sp, #28]
 6336 0084 0378     		ldrb	r3, [r0]
 6337 0086 022B     		cmp	r3, #2
 6338 0088 08D1     		bne	.L455
4663:..\..\FatFS-master\source/ff.c **** 							if (ld_word(fs->win + i) == 0) nfree++;
 6339              		.loc 1 4663 0
 6340 008a 3030     		adds	r0, r0, #48
 6341 008c 0019     		adds	r0, r0, r4
 6342 008e FFF7FEFF 		bl	ld_word
 6343              	.LVL973:
 6344 0092 0028     		cmp	r0, #0
 6345 0094 00D1     		bne	.L456
 6346              		.loc 1 4663 0 is_stmt 0 discriminator 1
 6347 0096 0136     		adds	r6, r6, #1
 6348              	.LVL974:
 6349              	.L456:
4664:..\..\FatFS-master\source/ff.c **** 							i += 2;
 6350              		.loc 1 4664 0 is_stmt 1
 6351 0098 0234     		adds	r4, r4, #2
 6352              	.LVL975:
 6353 009a 07E0     		b	.L457
 6354              	.L455:
4665:..\..\FatFS-master\source/ff.c **** 						} else {
4666:..\..\FatFS-master\source/ff.c **** 							if ((ld_dword(fs->win + i) & 0x0FFFFFFF) == 0) nfree++;
 6355              		.loc 1 4666 0
 6356 009c 3030     		adds	r0, r0, #48
 6357 009e 0019     		adds	r0, r0, r4
 6358 00a0 FFF7FEFF 		bl	ld_dword
 6359              	.LVL976:
 6360 00a4 0001     		lsls	r0, r0, #4
 6361 00a6 00D1     		bne	.L458
 6362              		.loc 1 4666 0 is_stmt 0 discriminator 1
 6363 00a8 0136     		adds	r6, r6, #1
 6364              	.LVL977:
 6365              	.L458:
4667:..\..\FatFS-master\source/ff.c **** 							i += 4;
 6366              		.loc 1 4667 0 is_stmt 1
 6367 00aa 0434     		adds	r4, r4, #4
 6368              	.LVL978:
 6369              	.L457:
4668:..\..\FatFS-master\source/ff.c **** 						}
4669:..\..\FatFS-master\source/ff.c **** 						i %= SS(fs);
 6370              		.loc 1 4669 0
 6371 00ac E405     		lsls	r4, r4, #23
 6372              	.LVL979:
 6373 00ae E40D     		lsrs	r4, r4, #23
 6374              	.LVL980:
4670:..\..\FatFS-master\source/ff.c **** 					} while (--clst);
 6375              		.loc 1 4670 0
 6376 00b0 013F     		subs	r7, r7, #1
 6377              	.LVL981:
 6378 00b2 002F     		cmp	r7, #0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 204


 6379 00b4 D8D1     		bne	.L459
 6380 00b6 02E0     		b	.L451
 6381              	.LVL982:
 6382              	.L460:
4627:..\..\FatFS-master\source/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6383              		.loc 1 4627 0
 6384 00b8 0125     		movs	r5, #1
 6385              	.LVL983:
 6386 00ba 00E0     		b	.L451
 6387              	.LVL984:
 6388              	.L461:
4628:..\..\FatFS-master\source/ff.c **** 					if (stat == 0) nfree++;
 6389              		.loc 1 4628 0
 6390 00bc 0225     		movs	r5, #2
 6391              	.LVL985:
 6392              	.L451:
4671:..\..\FatFS-master\source/ff.c **** 				}
4672:..\..\FatFS-master\source/ff.c **** 			}
4673:..\..\FatFS-master\source/ff.c **** 			*nclst = nfree;			/* Return the free clusters */
 6393              		.loc 1 4673 0
 6394 00be 4B46     		mov	r3, r9
 6395 00c0 1E60     		str	r6, [r3]
4674:..\..\FatFS-master\source/ff.c **** 			fs->free_clst = nfree;	/* Now free_clst is valid */
 6396              		.loc 1 4674 0
 6397 00c2 079B     		ldr	r3, [sp, #28]
 6398 00c4 1E61     		str	r6, [r3, #16]
4675:..\..\FatFS-master\source/ff.c **** 			fs->fsi_flag |= 1;		/* FAT32: FSInfo is to be updated */
 6399              		.loc 1 4675 0
 6400 00c6 1979     		ldrb	r1, [r3, #4]
 6401 00c8 0122     		movs	r2, #1
 6402 00ca 0A43     		orrs	r2, r1
 6403 00cc 1A71     		strb	r2, [r3, #4]
 6404              	.LVL986:
 6405              	.L448:
4676:..\..\FatFS-master\source/ff.c **** 		}
4677:..\..\FatFS-master\source/ff.c **** 	}
4678:..\..\FatFS-master\source/ff.c **** 
4679:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
4680:..\..\FatFS-master\source/ff.c **** }
 6406              		.loc 1 4680 0
 6407 00ce 2800     		movs	r0, r5
 6408 00d0 09B0     		add	sp, sp, #36
 6409              		@ sp needed
 6410              	.LVL987:
 6411              	.LVL988:
 6412 00d2 0CBC     		pop	{r2, r3}
 6413 00d4 9146     		mov	r9, r2
 6414 00d6 9A46     		mov	r10, r3
 6415 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 6416              		.cfi_endproc
 6417              	.LFE46:
 6418              		.size	f_getfree, .-f_getfree
 6419 00da C046     		.section	.text.f_truncate,"ax",%progbits
 6420              		.align	2
 6421              		.global	f_truncate
 6422              		.code	16
 6423              		.thumb_func
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 205


 6424              		.type	f_truncate, %function
 6425              	f_truncate:
 6426              	.LFB47:
4681:..\..\FatFS-master\source/ff.c **** 
4682:..\..\FatFS-master\source/ff.c **** 
4683:..\..\FatFS-master\source/ff.c **** 
4684:..\..\FatFS-master\source/ff.c **** 
4685:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4686:..\..\FatFS-master\source/ff.c **** /* Truncate File                                                         */
4687:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4688:..\..\FatFS-master\source/ff.c **** 
4689:..\..\FatFS-master\source/ff.c **** FRESULT f_truncate (
4690:..\..\FatFS-master\source/ff.c **** 	FIL* fp		/* Pointer to the file object */
4691:..\..\FatFS-master\source/ff.c **** )
4692:..\..\FatFS-master\source/ff.c **** {
 6427              		.loc 1 4692 0
 6428              		.cfi_startproc
 6429              		@ args = 0, pretend = 0, frame = 8
 6430              		@ frame_needed = 0, uses_anonymous_args = 0
 6431              	.LVL989:
 6432 0000 30B5     		push	{r4, r5, lr}
 6433              		.cfi_def_cfa_offset 12
 6434              		.cfi_offset 4, -12
 6435              		.cfi_offset 5, -8
 6436              		.cfi_offset 14, -4
 6437 0002 83B0     		sub	sp, sp, #12
 6438              		.cfi_def_cfa_offset 24
 6439 0004 0500     		movs	r5, r0
4693:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4694:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4695:..\..\FatFS-master\source/ff.c **** 	DWORD ncl;
4696:..\..\FatFS-master\source/ff.c **** 
4697:..\..\FatFS-master\source/ff.c **** 
4698:..\..\FatFS-master\source/ff.c **** 	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
 6440              		.loc 1 4698 0
 6441 0006 01A9     		add	r1, sp, #4
 6442 0008 FFF7FEFF 		bl	validate
 6443              	.LVL990:
4699:..\..\FatFS-master\source/ff.c **** 	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
 6444              		.loc 1 4699 0
 6445 000c 0028     		cmp	r0, #0
 6446 000e 52D1     		bne	.L463
 6447              		.loc 1 4699 0 is_stmt 0 discriminator 2
 6448 0010 6C7C     		ldrb	r4, [r5, #17]
 6449              	.LVL991:
 6450 0012 002C     		cmp	r4, #0
 6451 0014 48D1     		bne	.L470
4700:..\..\FatFS-master\source/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6452              		.loc 1 4700 0 is_stmt 1
 6453 0016 2B7C     		ldrb	r3, [r5, #16]
 6454 0018 9B07     		lsls	r3, r3, #30
 6455 001a 47D5     		bpl	.L471
4701:..\..\FatFS-master\source/ff.c **** 
4702:..\..\FatFS-master\source/ff.c **** 	if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
 6456              		.loc 1 4702 0
 6457 001c 6B69     		ldr	r3, [r5, #20]
 6458 001e EA68     		ldr	r2, [r5, #12]
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 206


 6459 0020 9342     		cmp	r3, r2
 6460 0022 45D2     		bcs	.L472
4703:..\..\FatFS-master\source/ff.c **** 		if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 6461              		.loc 1 4703 0
 6462 0024 002B     		cmp	r3, #0
 6463 0026 08D1     		bne	.L464
4704:..\..\FatFS-master\source/ff.c **** 			res = remove_chain(&fp->obj, fp->obj.sclust, 0);
 6464              		.loc 1 4704 0
 6465 0028 0022     		movs	r2, #0
 6466 002a A968     		ldr	r1, [r5, #8]
 6467 002c 2800     		movs	r0, r5
 6468 002e FFF7FEFF 		bl	remove_chain
 6469              	.LVL992:
 6470 0032 0400     		movs	r4, r0
 6471              	.LVL993:
4705:..\..\FatFS-master\source/ff.c **** 			fp->obj.sclust = 0;
 6472              		.loc 1 4705 0
 6473 0034 0023     		movs	r3, #0
 6474 0036 AB60     		str	r3, [r5, #8]
 6475 0038 15E0     		b	.L465
 6476              	.LVL994:
 6477              	.L464:
4706:..\..\FatFS-master\source/ff.c **** 		} else {				/* When truncate a part of the file, remove remaining clusters */
4707:..\..\FatFS-master\source/ff.c **** 			ncl = get_fat(&fp->obj, fp->clust);
 6478              		.loc 1 4707 0
 6479 003a A969     		ldr	r1, [r5, #24]
 6480 003c 2800     		movs	r0, r5
 6481 003e FFF7FEFF 		bl	get_fat
 6482              	.LVL995:
4708:..\..\FatFS-master\source/ff.c **** 			res = FR_OK;
4709:..\..\FatFS-master\source/ff.c **** 			if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
 6483              		.loc 1 4709 0
 6484 0042 431C     		adds	r3, r0, #1
 6485 0044 00D1     		bne	.L466
 6486 0046 0124     		movs	r4, #1
 6487              	.L466:
 6488              	.LVL996:
4710:..\..\FatFS-master\source/ff.c **** 			if (ncl == 1) res = FR_INT_ERR;
 6489              		.loc 1 4710 0
 6490 0048 0128     		cmp	r0, #1
 6491 004a 00D1     		bne	.L467
 6492 004c 0224     		movs	r4, #2
 6493              	.LVL997:
 6494              	.L467:
4711:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK && ncl < fs->n_fatent) {
 6495              		.loc 1 4711 0
 6496 004e 002C     		cmp	r4, #0
 6497 0050 09D1     		bne	.L465
 6498              		.loc 1 4711 0 is_stmt 0 discriminator 1
 6499 0052 019B     		ldr	r3, [sp, #4]
 6500 0054 5B69     		ldr	r3, [r3, #20]
 6501 0056 9842     		cmp	r0, r3
 6502 0058 05D2     		bcs	.L465
4712:..\..\FatFS-master\source/ff.c **** 				res = remove_chain(&fp->obj, ncl, fp->clust);
 6503              		.loc 1 4712 0 is_stmt 1
 6504 005a AA69     		ldr	r2, [r5, #24]
 6505 005c 0100     		movs	r1, r0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 207


 6506 005e 2800     		movs	r0, r5
 6507              	.LVL998:
 6508 0060 FFF7FEFF 		bl	remove_chain
 6509              	.LVL999:
 6510 0064 0400     		movs	r4, r0
 6511              	.LVL1000:
 6512              	.L465:
4713:..\..\FatFS-master\source/ff.c **** 			}
4714:..\..\FatFS-master\source/ff.c **** 		}
4715:..\..\FatFS-master\source/ff.c **** 		fp->obj.objsize = fp->fptr;	/* Set file size to current read/write point */
 6513              		.loc 1 4715 0
 6514 0066 6B69     		ldr	r3, [r5, #20]
 6515 0068 EB60     		str	r3, [r5, #12]
4716:..\..\FatFS-master\source/ff.c **** 		fp->flag |= FA_MODIFIED;
 6516              		.loc 1 4716 0
 6517 006a 2A7C     		ldrb	r2, [r5, #16]
 6518 006c 4023     		movs	r3, #64
 6519 006e 1343     		orrs	r3, r2
 6520 0070 DBB2     		uxtb	r3, r3
 6521 0072 2B74     		strb	r3, [r5, #16]
4717:..\..\FatFS-master\source/ff.c **** #if !FF_FS_TINY
4718:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK && (fp->flag & FA_DIRTY)) {
 6522              		.loc 1 4718 0
 6523 0074 002C     		cmp	r4, #0
 6524 0076 12D1     		bne	.L468
 6525              		.loc 1 4718 0 is_stmt 0 discriminator 1
 6526 0078 5BB2     		sxtb	r3, r3
 6527 007a 002B     		cmp	r3, #0
 6528 007c 0FDA     		bge	.L468
4719:..\..\FatFS-master\source/ff.c **** 			if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) {
 6529              		.loc 1 4719 0 is_stmt 1
 6530 007e 2900     		movs	r1, r5
 6531 0080 2831     		adds	r1, r1, #40
 6532 0082 019B     		ldr	r3, [sp, #4]
 6533 0084 5878     		ldrb	r0, [r3, #1]
 6534 0086 0123     		movs	r3, #1
 6535 0088 EA69     		ldr	r2, [r5, #28]
 6536 008a FFF7FEFF 		bl	disk_write
 6537              	.LVL1001:
 6538 008e 0028     		cmp	r0, #0
 6539 0090 04D1     		bne	.L475
4720:..\..\FatFS-master\source/ff.c **** 				res = FR_DISK_ERR;
4721:..\..\FatFS-master\source/ff.c **** 			} else {
4722:..\..\FatFS-master\source/ff.c **** 				fp->flag &= (BYTE)~FA_DIRTY;
 6540              		.loc 1 4722 0
 6541 0092 2B7C     		ldrb	r3, [r5, #16]
 6542 0094 7F22     		movs	r2, #127
 6543 0096 1340     		ands	r3, r2
 6544 0098 2B74     		strb	r3, [r5, #16]
 6545 009a 00E0     		b	.L468
 6546              	.L475:
4720:..\..\FatFS-master\source/ff.c **** 				res = FR_DISK_ERR;
 6547              		.loc 1 4720 0
 6548 009c 0124     		movs	r4, #1
 6549              	.LVL1002:
 6550              	.L468:
4723:..\..\FatFS-master\source/ff.c **** 			}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 208


4724:..\..\FatFS-master\source/ff.c **** 		}
4725:..\..\FatFS-master\source/ff.c **** #endif
4726:..\..\FatFS-master\source/ff.c **** 		if (res != FR_OK) ABORT(fs, res);
 6551              		.loc 1 4726 0
 6552 009e 002C     		cmp	r4, #0
 6553 00a0 08D0     		beq	.L476
 6554              		.loc 1 4726 0 is_stmt 0 discriminator 1
 6555 00a2 6C74     		strb	r4, [r5, #17]
 6556 00a4 2000     		movs	r0, r4
 6557 00a6 06E0     		b	.L463
 6558              	.L470:
4699:..\..\FatFS-master\source/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6559              		.loc 1 4699 0 is_stmt 1
 6560 00a8 2000     		movs	r0, r4
 6561 00aa 04E0     		b	.L463
 6562              	.L471:
4700:..\..\FatFS-master\source/ff.c **** 
 6563              		.loc 1 4700 0
 6564 00ac 0720     		movs	r0, #7
 6565 00ae 02E0     		b	.L463
 6566              	.L472:
4699:..\..\FatFS-master\source/ff.c **** 	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
 6567              		.loc 1 4699 0
 6568 00b0 2000     		movs	r0, r4
 6569 00b2 00E0     		b	.L463
 6570              	.L476:
 6571 00b4 2000     		movs	r0, r4
 6572              	.LVL1003:
 6573              	.L463:
4727:..\..\FatFS-master\source/ff.c **** 	}
4728:..\..\FatFS-master\source/ff.c **** 
4729:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
4730:..\..\FatFS-master\source/ff.c **** }
 6574              		.loc 1 4730 0
 6575 00b6 03B0     		add	sp, sp, #12
 6576              		@ sp needed
 6577              	.LVL1004:
 6578 00b8 30BD     		pop	{r4, r5, pc}
 6579              		.cfi_endproc
 6580              	.LFE47:
 6581              		.size	f_truncate, .-f_truncate
 6582 00ba C046     		.section	.text.f_unlink,"ax",%progbits
 6583              		.align	2
 6584              		.global	f_unlink
 6585              		.code	16
 6586              		.thumb_func
 6587              		.type	f_unlink, %function
 6588              	f_unlink:
 6589              	.LFB48:
4731:..\..\FatFS-master\source/ff.c **** 
4732:..\..\FatFS-master\source/ff.c **** 
4733:..\..\FatFS-master\source/ff.c **** 
4734:..\..\FatFS-master\source/ff.c **** 
4735:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4736:..\..\FatFS-master\source/ff.c **** /* Delete a File/Directory                                               */
4737:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4738:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 209


4739:..\..\FatFS-master\source/ff.c **** FRESULT f_unlink (
4740:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
4741:..\..\FatFS-master\source/ff.c **** )
4742:..\..\FatFS-master\source/ff.c **** {
 6590              		.loc 1 4742 0
 6591              		.cfi_startproc
 6592              		@ args = 0, pretend = 0, frame = 104
 6593              		@ frame_needed = 0, uses_anonymous_args = 0
 6594              	.LVL1005:
 6595 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6596              		.cfi_def_cfa_offset 20
 6597              		.cfi_offset 4, -20
 6598              		.cfi_offset 5, -16
 6599              		.cfi_offset 6, -12
 6600              		.cfi_offset 7, -8
 6601              		.cfi_offset 14, -4
 6602 0002 9BB0     		sub	sp, sp, #108
 6603              		.cfi_def_cfa_offset 128
 6604 0004 0190     		str	r0, [sp, #4]
 6605              	.LVL1006:
4743:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4744:..\..\FatFS-master\source/ff.c **** 	DIR dj, sdj;
4745:..\..\FatFS-master\source/ff.c **** 	DWORD dclst = 0;
4746:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4747:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4748:..\..\FatFS-master\source/ff.c **** 	FFOBJID obj;
4749:..\..\FatFS-master\source/ff.c **** #endif
4750:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
4751:..\..\FatFS-master\source/ff.c **** 
4752:..\..\FatFS-master\source/ff.c **** 
4753:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive */
4754:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
 6606              		.loc 1 4754 0
 6607 0006 0222     		movs	r2, #2
 6608 0008 03A9     		add	r1, sp, #12
 6609 000a 01A8     		add	r0, sp, #4
 6610              	.LVL1007:
 6611 000c FFF7FEFF 		bl	find_volume
 6612              	.LVL1008:
 6613 0010 041E     		subs	r4, r0, #0
 6614              	.LVL1009:
4755:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 6615              		.loc 1 4755 0
 6616 0012 48D1     		bne	.L478
4756:..\..\FatFS-master\source/ff.c **** 		dj.obj.fs = fs;
 6617              		.loc 1 4756 0
 6618 0014 039B     		ldr	r3, [sp, #12]
 6619 0016 0F93     		str	r3, [sp, #60]
4757:..\..\FatFS-master\source/ff.c **** 		INIT_NAMBUF(fs);
4758:..\..\FatFS-master\source/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 6620              		.loc 1 4758 0
 6621 0018 0199     		ldr	r1, [sp, #4]
 6622 001a 0FA8     		add	r0, sp, #60
 6623              	.LVL1010:
 6624 001c FFF7FEFF 		bl	follow_path
 6625              	.LVL1011:
 6626 0020 041E     		subs	r4, r0, #0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 210


 6627              	.LVL1012:
4759:..\..\FatFS-master\source/ff.c **** 		if (FF_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT)) {
4760:..\..\FatFS-master\source/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
4761:..\..\FatFS-master\source/ff.c **** 		}
4762:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
4763:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Check if it is an open object */
4764:..\..\FatFS-master\source/ff.c **** #endif
4765:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
 6628              		.loc 1 4765 0
 6629 0022 40D1     		bne	.L478
4766:..\..\FatFS-master\source/ff.c **** 			if (dj.fn[NSFLAG] & NS_NONAME) {
 6630              		.loc 1 4766 0
 6631 0024 2B23     		movs	r3, #43
 6632 0026 0FAA     		add	r2, sp, #60
 6633 0028 D356     		ldrsb	r3, [r2, r3]
 6634 002a 002B     		cmp	r3, #0
 6635 002c 03DB     		blt	.L483
4767:..\..\FatFS-master\source/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
4768:..\..\FatFS-master\source/ff.c **** 			} else {
4769:..\..\FatFS-master\source/ff.c **** 				if (dj.obj.attr & AM_RDO) {
 6636              		.loc 1 4769 0
 6637 002e 9379     		ldrb	r3, [r2, #6]
 6638 0030 DB07     		lsls	r3, r3, #31
 6639 0032 02D4     		bmi	.L484
 6640 0034 02E0     		b	.L479
 6641              	.L483:
4767:..\..\FatFS-master\source/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 6642              		.loc 1 4767 0
 6643 0036 0624     		movs	r4, #6
 6644 0038 00E0     		b	.L479
 6645              	.L484:
4770:..\..\FatFS-master\source/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 6646              		.loc 1 4770 0
 6647 003a 0724     		movs	r4, #7
 6648              	.L479:
 6649              	.LVL1013:
4771:..\..\FatFS-master\source/ff.c **** 				}
4772:..\..\FatFS-master\source/ff.c **** 			}
4773:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {
 6650              		.loc 1 4773 0
 6651 003c 002C     		cmp	r4, #0
 6652 003e 1CD1     		bne	.L485
4774:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4775:..\..\FatFS-master\source/ff.c **** 				obj.fs = fs;
4776:..\..\FatFS-master\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {
4777:..\..\FatFS-master\source/ff.c **** 					init_alloc_info(fs, &obj);
4778:..\..\FatFS-master\source/ff.c **** 					dclst = obj.sclust;
4779:..\..\FatFS-master\source/ff.c **** 				} else
4780:..\..\FatFS-master\source/ff.c **** #endif
4781:..\..\FatFS-master\source/ff.c **** 				{
4782:..\..\FatFS-master\source/ff.c **** 					dclst = ld_clust(fs, dj.dir);
 6653              		.loc 1 4782 0
 6654 0040 039F     		ldr	r7, [sp, #12]
 6655 0042 0FAD     		add	r5, sp, #60
 6656 0044 1699     		ldr	r1, [sp, #88]
 6657 0046 3800     		movs	r0, r7
 6658 0048 FFF7FEFF 		bl	ld_clust
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 211


 6659              	.LVL1014:
 6660 004c 0600     		movs	r6, r0
 6661              	.LVL1015:
4783:..\..\FatFS-master\source/ff.c **** 				}
4784:..\..\FatFS-master\source/ff.c **** 				if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
 6662              		.loc 1 4784 0
 6663 004e AB79     		ldrb	r3, [r5, #6]
 6664 0050 DB06     		lsls	r3, r3, #27
 6665 0052 13D5     		bpl	.L480
4785:..\..\FatFS-master\source/ff.c **** #if FF_FS_RPATH != 0
4786:..\..\FatFS-master\source/ff.c **** 					if (dclst == fs->cdir) {		 	/* Is it the current directory? */
4787:..\..\FatFS-master\source/ff.c **** 						res = FR_DENIED;
4788:..\..\FatFS-master\source/ff.c **** 					} else
4789:..\..\FatFS-master\source/ff.c **** #endif
4790:..\..\FatFS-master\source/ff.c **** 					{
4791:..\..\FatFS-master\source/ff.c **** 						sdj.obj.fs = fs;				/* Open the sub-directory */
 6666              		.loc 1 4791 0
 6667 0054 0497     		str	r7, [sp, #16]
4792:..\..\FatFS-master\source/ff.c **** 						sdj.obj.sclust = dclst;
 6668              		.loc 1 4792 0
 6669 0056 0690     		str	r0, [sp, #24]
4793:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4794:..\..\FatFS-master\source/ff.c **** 						if (fs->fs_type == FS_EXFAT) {
4795:..\..\FatFS-master\source/ff.c **** 							sdj.obj.objsize = obj.objsize;
4796:..\..\FatFS-master\source/ff.c **** 							sdj.obj.stat = obj.stat;
4797:..\..\FatFS-master\source/ff.c **** 						}
4798:..\..\FatFS-master\source/ff.c **** #endif
4799:..\..\FatFS-master\source/ff.c **** 						res = dir_sdi(&sdj, 0);
 6670              		.loc 1 4799 0
 6671 0058 0021     		movs	r1, #0
 6672 005a 04A8     		add	r0, sp, #16
 6673              	.LVL1016:
 6674 005c FFF7FEFF 		bl	dir_sdi
 6675              	.LVL1017:
 6676 0060 041E     		subs	r4, r0, #0
 6677              	.LVL1018:
4800:..\..\FatFS-master\source/ff.c **** 						if (res == FR_OK) {
 6678              		.loc 1 4800 0
 6679 0062 0BD1     		bne	.L480
4801:..\..\FatFS-master\source/ff.c **** 							res = dir_read_file(&sdj);			/* Test if the directory is empty */
 6680              		.loc 1 4801 0
 6681 0064 0021     		movs	r1, #0
 6682 0066 04A8     		add	r0, sp, #16
 6683              	.LVL1019:
 6684 0068 FFF7FEFF 		bl	dir_read
 6685              	.LVL1020:
4802:..\..\FatFS-master\source/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
 6686              		.loc 1 4802 0
 6687 006c 0028     		cmp	r0, #0
 6688 006e 00D1     		bne	.L481
 6689 0070 0730     		adds	r0, r0, #7
 6690              	.LVL1021:
 6691              	.L481:
4803:..\..\FatFS-master\source/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
 6692              		.loc 1 4803 0
 6693 0072 0428     		cmp	r0, #4
 6694 0074 02D0     		beq	.L480
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 212


 6695 0076 0400     		movs	r4, r0
 6696 0078 00E0     		b	.L480
 6697              	.LVL1022:
 6698              	.L485:
4745:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
 6699              		.loc 1 4745 0
 6700 007a 0026     		movs	r6, #0
 6701              	.LVL1023:
 6702              	.L480:
4804:..\..\FatFS-master\source/ff.c **** 						}
4805:..\..\FatFS-master\source/ff.c **** 					}
4806:..\..\FatFS-master\source/ff.c **** 				}
4807:..\..\FatFS-master\source/ff.c **** 			}
4808:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {
 6703              		.loc 1 4808 0
 6704 007c 002C     		cmp	r4, #0
 6705 007e 12D1     		bne	.L478
4809:..\..\FatFS-master\source/ff.c **** 				res = dir_remove(&dj);			/* Remove the directory entry */
 6706              		.loc 1 4809 0
 6707 0080 0FA8     		add	r0, sp, #60
 6708 0082 FFF7FEFF 		bl	dir_remove
 6709              	.LVL1024:
 6710 0086 041E     		subs	r4, r0, #0
 6711              	.LVL1025:
4810:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK && dclst != 0) {	/* Remove the cluster chain if exist */
 6712              		.loc 1 4810 0
 6713 0088 07D1     		bne	.L482
 6714              		.loc 1 4810 0 is_stmt 0 discriminator 1
 6715 008a 002E     		cmp	r6, #0
 6716 008c 05D0     		beq	.L482
4811:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4812:..\..\FatFS-master\source/ff.c **** 					res = remove_chain(&obj, dclst, 0);
4813:..\..\FatFS-master\source/ff.c **** #else
4814:..\..\FatFS-master\source/ff.c **** 					res = remove_chain(&dj.obj, dclst, 0);
 6717              		.loc 1 4814 0 is_stmt 1
 6718 008e 0022     		movs	r2, #0
 6719 0090 3100     		movs	r1, r6
 6720 0092 0FA8     		add	r0, sp, #60
 6721              	.LVL1026:
 6722 0094 FFF7FEFF 		bl	remove_chain
 6723              	.LVL1027:
 6724 0098 0400     		movs	r4, r0
 6725              	.LVL1028:
 6726              	.L482:
4815:..\..\FatFS-master\source/ff.c **** #endif
4816:..\..\FatFS-master\source/ff.c **** 				}
4817:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) res = sync_fs(fs);
 6727              		.loc 1 4817 0
 6728 009a 002C     		cmp	r4, #0
 6729 009c 03D1     		bne	.L478
 6730              		.loc 1 4817 0 is_stmt 0 discriminator 1
 6731 009e 0398     		ldr	r0, [sp, #12]
 6732 00a0 FFF7FEFF 		bl	sync_fs
 6733              	.LVL1029:
 6734 00a4 0400     		movs	r4, r0
 6735              	.LVL1030:
 6736              	.L478:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 213


4818:..\..\FatFS-master\source/ff.c **** 			}
4819:..\..\FatFS-master\source/ff.c **** 		}
4820:..\..\FatFS-master\source/ff.c **** 		FREE_NAMBUF();
4821:..\..\FatFS-master\source/ff.c **** 	}
4822:..\..\FatFS-master\source/ff.c **** 
4823:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
4824:..\..\FatFS-master\source/ff.c **** }
 6737              		.loc 1 4824 0 is_stmt 1
 6738 00a6 2000     		movs	r0, r4
 6739 00a8 1BB0     		add	sp, sp, #108
 6740              		@ sp needed
 6741              	.LVL1031:
 6742 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 6743              		.cfi_endproc
 6744              	.LFE48:
 6745              		.size	f_unlink, .-f_unlink
 6746              		.section	.text.f_mkdir,"ax",%progbits
 6747              		.align	2
 6748              		.global	f_mkdir
 6749              		.code	16
 6750              		.thumb_func
 6751              		.type	f_mkdir, %function
 6752              	f_mkdir:
 6753              	.LFB49:
4825:..\..\FatFS-master\source/ff.c **** 
4826:..\..\FatFS-master\source/ff.c **** 
4827:..\..\FatFS-master\source/ff.c **** 
4828:..\..\FatFS-master\source/ff.c **** 
4829:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4830:..\..\FatFS-master\source/ff.c **** /* Create a Directory                                                    */
4831:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4832:..\..\FatFS-master\source/ff.c **** 
4833:..\..\FatFS-master\source/ff.c **** FRESULT f_mkdir (
4834:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
4835:..\..\FatFS-master\source/ff.c **** )
4836:..\..\FatFS-master\source/ff.c **** {
 6754              		.loc 1 4836 0
 6755              		.cfi_startproc
 6756              		@ args = 0, pretend = 0, frame = 56
 6757              		@ frame_needed = 0, uses_anonymous_args = 0
 6758              	.LVL1032:
 6759 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6760              		.cfi_def_cfa_offset 20
 6761              		.cfi_offset 4, -20
 6762              		.cfi_offset 5, -16
 6763              		.cfi_offset 6, -12
 6764              		.cfi_offset 7, -8
 6765              		.cfi_offset 14, -4
 6766 0002 5746     		mov	r7, r10
 6767 0004 80B4     		push	{r7}
 6768              		.cfi_def_cfa_offset 24
 6769              		.cfi_offset 10, -24
 6770 0006 8EB0     		sub	sp, sp, #56
 6771              		.cfi_def_cfa_offset 80
 6772 0008 0190     		str	r0, [sp, #4]
4837:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4838:..\..\FatFS-master\source/ff.c **** 	DIR dj;
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 214


4839:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4840:..\..\FatFS-master\source/ff.c **** 	BYTE *dir;
4841:..\..\FatFS-master\source/ff.c **** 	DWORD dcl, pcl, tm;
4842:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
4843:..\..\FatFS-master\source/ff.c **** 
4844:..\..\FatFS-master\source/ff.c **** 
4845:..\..\FatFS-master\source/ff.c **** 	/* Get logical drive */
4846:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path, &fs, FA_WRITE);
 6773              		.loc 1 4846 0
 6774 000a 0222     		movs	r2, #2
 6775 000c 02A9     		add	r1, sp, #8
 6776 000e 01A8     		add	r0, sp, #4
 6777              	.LVL1033:
 6778 0010 FFF7FEFF 		bl	find_volume
 6779              	.LVL1034:
 6780 0014 041E     		subs	r4, r0, #0
 6781              	.LVL1035:
4847:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 6782              		.loc 1 4847 0
 6783 0016 00D0     		beq	.LCB7341
 6784 0018 82E0     		b	.L488	@long jump
 6785              	.LCB7341:
4848:..\..\FatFS-master\source/ff.c **** 		dj.obj.fs = fs;
 6786              		.loc 1 4848 0
 6787 001a 029B     		ldr	r3, [sp, #8]
 6788 001c 0393     		str	r3, [sp, #12]
4849:..\..\FatFS-master\source/ff.c **** 		INIT_NAMBUF(fs);
4850:..\..\FatFS-master\source/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 6789              		.loc 1 4850 0
 6790 001e 0199     		ldr	r1, [sp, #4]
 6791 0020 03A8     		add	r0, sp, #12
 6792              	.LVL1036:
 6793 0022 FFF7FEFF 		bl	follow_path
 6794              	.LVL1037:
4851:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 6795              		.loc 1 4851 0
 6796 0026 0028     		cmp	r0, #0
 6797 0028 00D1     		bne	.L489
 6798 002a 0830     		adds	r0, r0, #8
 6799              	.LVL1038:
 6800              	.L489:
4852:..\..\FatFS-master\source/ff.c **** 		if (FF_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT)) {
4853:..\..\FatFS-master\source/ff.c **** 			res = FR_INVALID_NAME;
4854:..\..\FatFS-master\source/ff.c **** 		}
4855:..\..\FatFS-master\source/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
 6801              		.loc 1 4855 0
 6802 002c 0428     		cmp	r0, #4
 6803 002e 76D1     		bne	.L498
4856:..\..\FatFS-master\source/ff.c **** 			dcl = create_chain(&dj.obj, 0);		/* Allocate a cluster for the new directory table */
 6804              		.loc 1 4856 0
 6805 0030 0021     		movs	r1, #0
 6806 0032 03A8     		add	r0, sp, #12
 6807              	.LVL1039:
 6808 0034 FFF7FEFF 		bl	create_chain
 6809              	.LVL1040:
 6810 0038 0700     		movs	r7, r0
 6811              	.LVL1041:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 215


4857:..\..\FatFS-master\source/ff.c **** 			dj.obj.objsize = (DWORD)fs->csize * SS(fs);
 6812              		.loc 1 4857 0
 6813 003a 0298     		ldr	r0, [sp, #8]
 6814              	.LVL1042:
 6815 003c 4389     		ldrh	r3, [r0, #10]
 6816 003e 5B02     		lsls	r3, r3, #9
 6817 0040 0693     		str	r3, [sp, #24]
 6818              	.LVL1043:
4858:..\..\FatFS-master\source/ff.c **** 			res = FR_OK;
4859:..\..\FatFS-master\source/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
 6819              		.loc 1 4859 0
 6820 0042 002F     		cmp	r7, #0
 6821 0044 00D1     		bne	.L490
 6822 0046 0724     		movs	r4, #7
 6823              	.L490:
 6824              	.LVL1044:
4860:..\..\FatFS-master\source/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 6825              		.loc 1 4860 0
 6826 0048 012F     		cmp	r7, #1
 6827 004a 00D1     		bne	.L491
 6828 004c 0224     		movs	r4, #2
 6829              	.LVL1045:
 6830              	.L491:
4861:..\..\FatFS-master\source/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 6831              		.loc 1 4861 0
 6832 004e 7B1C     		adds	r3, r7, #1
 6833 0050 00D1     		bne	.L492
 6834 0052 0124     		movs	r4, #1
 6835              	.LVL1046:
 6836              	.L492:
4862:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) res = sync_window(fs);	/* Flush FAT */
 6837              		.loc 1 4862 0
 6838 0054 002C     		cmp	r4, #0
 6839 0056 02D1     		bne	.L493
 6840              		.loc 1 4862 0 is_stmt 0 discriminator 1
 6841 0058 FFF7FEFF 		bl	sync_window
 6842              	.LVL1047:
 6843 005c 0400     		movs	r4, r0
 6844              	.LVL1048:
 6845              	.L493:
4863:..\..\FatFS-master\source/ff.c **** 			tm = GET_FATTIME();
 6846              		.loc 1 4863 0 is_stmt 1
 6847 005e FFF7FEFF 		bl	get_fattime
 6848              	.LVL1049:
 6849 0062 0500     		movs	r5, r0
 6850              	.LVL1050:
4864:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 6851              		.loc 1 4864 0
 6852 0064 002C     		cmp	r4, #0
 6853 0066 35D1     		bne	.L494
4865:..\..\FatFS-master\source/ff.c **** 				res = dir_clear(fs, dcl);		/* Clean up the new table */
 6854              		.loc 1 4865 0
 6855 0068 3900     		movs	r1, r7
 6856 006a 0298     		ldr	r0, [sp, #8]
 6857              	.LVL1051:
 6858 006c FFF7FEFF 		bl	dir_clear
 6859              	.LVL1052:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 216


 6860 0070 041E     		subs	r4, r0, #0
 6861              	.LVL1053:
4866:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT)) {	/* Create dot entries (FAT onl
 6862              		.loc 1 4866 0
 6863 0072 2FD1     		bne	.L494
4867:..\..\FatFS-master\source/ff.c **** 					dir = fs->win;
 6864              		.loc 1 4867 0
 6865 0074 029E     		ldr	r6, [sp, #8]
 6866 0076 3023     		movs	r3, #48
 6867 0078 9C46     		mov	ip, r3
 6868 007a B444     		add	ip, ip, r6
 6869 007c 6346     		mov	r3, ip
 6870              	.LVL1054:
4868:..\..\FatFS-master\source/ff.c **** 					mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
 6871              		.loc 1 4868 0
 6872 007e 0B22     		movs	r2, #11
 6873 0080 2021     		movs	r1, #32
 6874 0082 0093     		str	r3, [sp]
 6875 0084 6046     		mov	r0, ip
 6876              	.LVL1055:
 6877 0086 FFF7FEFF 		bl	mem_set
 6878              	.LVL1056:
4869:..\..\FatFS-master\source/ff.c **** 					dir[DIR_Name] = '.';
 6879              		.loc 1 4869 0
 6880 008a 2E22     		movs	r2, #46
 6881 008c 9246     		mov	r10, r2
 6882 008e 3023     		movs	r3, #48
 6883 0090 F254     		strb	r2, [r6, r3]
4870:..\..\FatFS-master\source/ff.c **** 					dir[DIR_Attr] = AM_DIR;
 6884              		.loc 1 4870 0
 6885 0092 1022     		movs	r2, #16
 6886 0094 0B33     		adds	r3, r3, #11
 6887 0096 F254     		strb	r2, [r6, r3]
4871:..\..\FatFS-master\source/ff.c **** 					st_dword(dir + DIR_ModTime, tm);
 6888              		.loc 1 4871 0
 6889 0098 3000     		movs	r0, r6
 6890 009a 4630     		adds	r0, r0, #70
 6891 009c 2900     		movs	r1, r5
 6892 009e FFF7FEFF 		bl	st_dword
 6893              	.LVL1057:
4872:..\..\FatFS-master\source/ff.c **** 					st_clust(fs, dir, dcl);
 6894              		.loc 1 4872 0
 6895 00a2 3A00     		movs	r2, r7
 6896 00a4 0099     		ldr	r1, [sp]
 6897 00a6 0298     		ldr	r0, [sp, #8]
 6898 00a8 FFF7FEFF 		bl	st_clust
 6899              	.LVL1058:
4873:..\..\FatFS-master\source/ff.c **** 					mem_cpy(dir + SZDIRE, dir, SZDIRE); /* Create ".." entry */
 6900              		.loc 1 4873 0
 6901 00ac 5022     		movs	r2, #80
 6902 00ae 9446     		mov	ip, r2
 6903 00b0 B444     		add	ip, ip, r6
 6904 00b2 6046     		mov	r0, ip
 6905 00b4 2022     		movs	r2, #32
 6906 00b6 0099     		ldr	r1, [sp]
 6907 00b8 0090     		str	r0, [sp]
 6908              	.LVL1059:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 217


 6909 00ba FFF7FEFF 		bl	mem_cpy
 6910              	.LVL1060:
4874:..\..\FatFS-master\source/ff.c **** 					dir[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
 6911              		.loc 1 4874 0
 6912 00be 5123     		movs	r3, #81
 6913 00c0 5246     		mov	r2, r10
 6914 00c2 F254     		strb	r2, [r6, r3]
 6915              	.LVL1061:
4875:..\..\FatFS-master\source/ff.c **** 					st_clust(fs, dir + SZDIRE, pcl);
 6916              		.loc 1 4875 0
 6917 00c4 059A     		ldr	r2, [sp, #20]
 6918 00c6 0099     		ldr	r1, [sp]
 6919 00c8 0298     		ldr	r0, [sp, #8]
 6920 00ca FFF7FEFF 		bl	st_clust
 6921              	.LVL1062:
4876:..\..\FatFS-master\source/ff.c **** 					fs->wflag = 1;
 6922              		.loc 1 4876 0
 6923 00ce 0123     		movs	r3, #1
 6924 00d0 029A     		ldr	r2, [sp, #8]
 6925 00d2 D370     		strb	r3, [r2, #3]
 6926              	.LVL1063:
 6927              	.L494:
4877:..\..\FatFS-master\source/ff.c **** 				}
4878:..\..\FatFS-master\source/ff.c **** 			}
4879:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {
 6928              		.loc 1 4879 0
 6929 00d4 002C     		cmp	r4, #0
 6930 00d6 03D1     		bne	.L495
4880:..\..\FatFS-master\source/ff.c **** 				res = dir_register(&dj);	/* Register the object to the directoy */
 6931              		.loc 1 4880 0
 6932 00d8 03A8     		add	r0, sp, #12
 6933 00da FFF7FEFF 		bl	dir_register
 6934              	.LVL1064:
 6935 00de 0400     		movs	r4, r0
 6936              	.LVL1065:
 6937              	.L495:
4881:..\..\FatFS-master\source/ff.c **** 			}
4882:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {
 6938              		.loc 1 4882 0
 6939 00e0 002C     		cmp	r4, #0
 6940 00e2 16D1     		bne	.L496
4883:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4884:..\..\FatFS-master\source/ff.c **** 				if (fs->fs_type == FS_EXFAT) {	/* Initialize directory entry block */
4885:..\..\FatFS-master\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_ModTime, tm);	/* Created time */
4886:..\..\FatFS-master\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_FstClus, dcl);	/* Table start cluster */
4887:..\..\FatFS-master\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_FileSize, (DWORD)dj.obj.objsize);	/* File size needs to be valid */
4888:..\..\FatFS-master\source/ff.c **** 					st_dword(fs->dirbuf + XDIR_ValidFileSize, (DWORD)dj.obj.objsize);
4889:..\..\FatFS-master\source/ff.c **** 					fs->dirbuf[XDIR_GenFlags] = 3;				/* Initialize the object flag */
4890:..\..\FatFS-master\source/ff.c **** 					fs->dirbuf[XDIR_Attr] = AM_DIR;				/* Attribute */
4891:..\..\FatFS-master\source/ff.c **** 					res = store_xdir(&dj);
4892:..\..\FatFS-master\source/ff.c **** 				} else
4893:..\..\FatFS-master\source/ff.c **** #endif
4894:..\..\FatFS-master\source/ff.c **** 				{
4895:..\..\FatFS-master\source/ff.c **** 					dir = dj.dir;
 6941              		.loc 1 4895 0
 6942 00e4 0A9E     		ldr	r6, [sp, #40]
 6943              	.LVL1066:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 218


4896:..\..\FatFS-master\source/ff.c **** 					st_dword(dir + DIR_ModTime, tm);	/* Created time */
 6944              		.loc 1 4896 0
 6945 00e6 3000     		movs	r0, r6
 6946 00e8 1630     		adds	r0, r0, #22
 6947 00ea 2900     		movs	r1, r5
 6948 00ec FFF7FEFF 		bl	st_dword
 6949              	.LVL1067:
4897:..\..\FatFS-master\source/ff.c **** 					st_clust(fs, dir, dcl);				/* Table start cluster */
 6950              		.loc 1 4897 0
 6951 00f0 3A00     		movs	r2, r7
 6952 00f2 3100     		movs	r1, r6
 6953 00f4 0298     		ldr	r0, [sp, #8]
 6954 00f6 FFF7FEFF 		bl	st_clust
 6955              	.LVL1068:
4898:..\..\FatFS-master\source/ff.c **** 					dir[DIR_Attr] = AM_DIR;				/* Attribute */
 6956              		.loc 1 4898 0
 6957 00fa 1023     		movs	r3, #16
 6958 00fc F372     		strb	r3, [r6, #11]
4899:..\..\FatFS-master\source/ff.c **** 					fs->wflag = 1;
 6959              		.loc 1 4899 0
 6960 00fe 0F3B     		subs	r3, r3, #15
 6961 0100 029A     		ldr	r2, [sp, #8]
 6962 0102 D370     		strb	r3, [r2, #3]
4900:..\..\FatFS-master\source/ff.c **** 				}
4901:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) {
 6963              		.loc 1 4901 0
 6964 0104 002C     		cmp	r4, #0
 6965 0106 0BD1     		bne	.L488
4902:..\..\FatFS-master\source/ff.c **** 					res = sync_fs(fs);
 6966              		.loc 1 4902 0
 6967 0108 0298     		ldr	r0, [sp, #8]
 6968 010a FFF7FEFF 		bl	sync_fs
 6969              	.LVL1069:
 6970 010e 0400     		movs	r4, r0
 6971              	.LVL1070:
 6972 0110 06E0     		b	.L488
 6973              	.LVL1071:
 6974              	.L496:
4903:..\..\FatFS-master\source/ff.c **** 				}
4904:..\..\FatFS-master\source/ff.c **** 			} else {
4905:..\..\FatFS-master\source/ff.c **** 				remove_chain(&dj.obj, dcl, 0);		/* Could not register, remove cluster chain */
 6975              		.loc 1 4905 0
 6976 0112 0022     		movs	r2, #0
 6977 0114 3900     		movs	r1, r7
 6978 0116 03A8     		add	r0, sp, #12
 6979 0118 FFF7FEFF 		bl	remove_chain
 6980              	.LVL1072:
 6981 011c 00E0     		b	.L488
 6982              	.LVL1073:
 6983              	.L498:
 6984 011e 0400     		movs	r4, r0
 6985              	.LVL1074:
 6986              	.L488:
4906:..\..\FatFS-master\source/ff.c **** 			}
4907:..\..\FatFS-master\source/ff.c **** 		}
4908:..\..\FatFS-master\source/ff.c **** 		FREE_NAMBUF();
4909:..\..\FatFS-master\source/ff.c **** 	}
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 219


4910:..\..\FatFS-master\source/ff.c **** 
4911:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
4912:..\..\FatFS-master\source/ff.c **** }
 6987              		.loc 1 4912 0
 6988 0120 2000     		movs	r0, r4
 6989 0122 0EB0     		add	sp, sp, #56
 6990              		@ sp needed
 6991              	.LVL1075:
 6992 0124 04BC     		pop	{r2}
 6993 0126 9246     		mov	r10, r2
 6994 0128 F0BD     		pop	{r4, r5, r6, r7, pc}
 6995              		.cfi_endproc
 6996              	.LFE49:
 6997              		.size	f_mkdir, .-f_mkdir
 6998 012a C046     		.section	.text.f_rename,"ax",%progbits
 6999              		.align	2
 7000              		.global	f_rename
 7001              		.code	16
 7002              		.thumb_func
 7003              		.type	f_rename, %function
 7004              	f_rename:
 7005              	.LFB50:
4913:..\..\FatFS-master\source/ff.c **** 
4914:..\..\FatFS-master\source/ff.c **** 
4915:..\..\FatFS-master\source/ff.c **** 
4916:..\..\FatFS-master\source/ff.c **** 
4917:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4918:..\..\FatFS-master\source/ff.c **** /* Rename a File/Directory                                               */
4919:..\..\FatFS-master\source/ff.c **** /*-----------------------------------------------------------------------*/
4920:..\..\FatFS-master\source/ff.c **** 
4921:..\..\FatFS-master\source/ff.c **** FRESULT f_rename (
4922:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object name to be renamed */
4923:..\..\FatFS-master\source/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
4924:..\..\FatFS-master\source/ff.c **** )
4925:..\..\FatFS-master\source/ff.c **** {
 7006              		.loc 1 4925 0
 7007              		.cfi_startproc
 7008              		@ args = 0, pretend = 0, frame = 144
 7009              		@ frame_needed = 0, uses_anonymous_args = 0
 7010              	.LVL1076:
 7011 0000 30B5     		push	{r4, r5, lr}
 7012              		.cfi_def_cfa_offset 12
 7013              		.cfi_offset 4, -12
 7014              		.cfi_offset 5, -8
 7015              		.cfi_offset 14, -4
 7016 0002 A5B0     		sub	sp, sp, #148
 7017              		.cfi_def_cfa_offset 160
 7018 0004 0390     		str	r0, [sp, #12]
 7019 0006 0291     		str	r1, [sp, #8]
4926:..\..\FatFS-master\source/ff.c **** 	FRESULT res;
4927:..\..\FatFS-master\source/ff.c **** 	DIR djo, djn;
4928:..\..\FatFS-master\source/ff.c **** 	FATFS *fs;
4929:..\..\FatFS-master\source/ff.c **** 	BYTE buf[FF_FS_EXFAT ? SZDIRE * 2 : SZDIRE], *dir;
4930:..\..\FatFS-master\source/ff.c **** 	DWORD dw;
4931:..\..\FatFS-master\source/ff.c **** 	DEF_NAMBUF
4932:..\..\FatFS-master\source/ff.c **** 
4933:..\..\FatFS-master\source/ff.c **** 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 220


4934:..\..\FatFS-master\source/ff.c **** 	get_ldnumber(&path_new);						/* Snip the drive number of new name off */
 7020              		.loc 1 4934 0
 7021 0008 02A8     		add	r0, sp, #8
 7022              	.LVL1077:
 7023 000a FFF7FEFF 		bl	get_ldnumber
 7024              	.LVL1078:
4935:..\..\FatFS-master\source/ff.c **** 	res = find_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
 7025              		.loc 1 4935 0
 7026 000e 0222     		movs	r2, #2
 7027 0010 0DA9     		add	r1, sp, #52
 7028 0012 03A8     		add	r0, sp, #12
 7029              	.LVL1079:
 7030 0014 FFF7FEFF 		bl	find_volume
 7031              	.LVL1080:
 7032 0018 041E     		subs	r4, r0, #0
 7033              	.LVL1081:
4936:..\..\FatFS-master\source/ff.c **** 	if (res == FR_OK) {
 7034              		.loc 1 4936 0
 7035 001a 00D0     		beq	.LCB7600
 7036 001c 7EE0     		b	.L503	@long jump
 7037              	.LCB7600:
4937:..\..\FatFS-master\source/ff.c **** 		djo.obj.fs = fs;
 7038              		.loc 1 4937 0
 7039 001e 0D9B     		ldr	r3, [sp, #52]
 7040 0020 1993     		str	r3, [sp, #100]
4938:..\..\FatFS-master\source/ff.c **** 		INIT_NAMBUF(fs);
4939:..\..\FatFS-master\source/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 7041              		.loc 1 4939 0
 7042 0022 0399     		ldr	r1, [sp, #12]
 7043 0024 19A8     		add	r0, sp, #100
 7044              	.LVL1082:
 7045 0026 FFF7FEFF 		bl	follow_path
 7046              	.LVL1083:
 7047 002a 041E     		subs	r4, r0, #0
 7048              	.LVL1084:
4940:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check vali
 7049              		.loc 1 4940 0
 7050 002c 06D1     		bne	.L504
 7051              		.loc 1 4940 0 is_stmt 0 discriminator 1
 7052 002e 2B23     		movs	r3, #43
 7053 0030 19AA     		add	r2, sp, #100
 7054 0032 D35C     		ldrb	r3, [r2, r3]
 7055 0034 5F22     		movs	r2, #95
 7056 0036 9343     		bics	r3, r2
 7057 0038 00D0     		beq	.L504
 7058              		.loc 1 4940 0
 7059 003a 0634     		adds	r4, r4, #6
 7060              	.L504:
 7061              	.LVL1085:
4941:..\..\FatFS-master\source/ff.c **** #if FF_FS_LOCK != 0
4942:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {
4943:..\..\FatFS-master\source/ff.c **** 			res = chk_lock(&djo, 2);
4944:..\..\FatFS-master\source/ff.c **** 		}
4945:..\..\FatFS-master\source/ff.c **** #endif
4946:..\..\FatFS-master\source/ff.c **** 		if (res == FR_OK) {						/* Object to be renamed is found */
 7062              		.loc 1 4946 0 is_stmt 1
 7063 003c 002C     		cmp	r4, #0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 221


 7064 003e 6DD1     		bne	.L503
4947:..\..\FatFS-master\source/ff.c **** #if FF_FS_EXFAT
4948:..\..\FatFS-master\source/ff.c **** 			if (fs->fs_type == FS_EXFAT) {	/* At exFAT volume */
4949:..\..\FatFS-master\source/ff.c **** 				BYTE nf, nn;
4950:..\..\FatFS-master\source/ff.c **** 				WORD nh;
4951:..\..\FatFS-master\source/ff.c **** 
4952:..\..\FatFS-master\source/ff.c **** 				mem_cpy(buf, fs->dirbuf, SZDIRE * 2);	/* Save 85+C0 entry of old object */
4953:..\..\FatFS-master\source/ff.c **** 				mem_cpy(&djn, &djo, sizeof djo);
4954:..\..\FatFS-master\source/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
4955:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
4956:..\..\FatFS-master\source/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
4957:..\..\FatFS-master\source/ff.c **** 				}
4958:..\..\FatFS-master\source/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
4959:..\..\FatFS-master\source/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
4960:..\..\FatFS-master\source/ff.c **** 					if (res == FR_OK) {
4961:..\..\FatFS-master\source/ff.c **** 						nf = fs->dirbuf[XDIR_NumSec]; nn = fs->dirbuf[XDIR_NumName];
4962:..\..\FatFS-master\source/ff.c **** 						nh = ld_word(fs->dirbuf + XDIR_NameHash);
4963:..\..\FatFS-master\source/ff.c **** 						mem_cpy(fs->dirbuf, buf, SZDIRE * 2);	/* Restore 85+C0 entry */
4964:..\..\FatFS-master\source/ff.c **** 						fs->dirbuf[XDIR_NumSec] = nf; fs->dirbuf[XDIR_NumName] = nn;
4965:..\..\FatFS-master\source/ff.c **** 						st_word(fs->dirbuf + XDIR_NameHash, nh);
4966:..\..\FatFS-master\source/ff.c **** 						if (!(fs->dirbuf[XDIR_Attr] & AM_DIR)) fs->dirbuf[XDIR_Attr] |= AM_ARC;	/* Set archive attrib
4967:..\..\FatFS-master\source/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4968:..\..\FatFS-master\source/ff.c **** 						res = store_xdir(&djn);
4969:..\..\FatFS-master\source/ff.c **** 					}
4970:..\..\FatFS-master\source/ff.c **** 				}
4971:..\..\FatFS-master\source/ff.c **** 			} else
4972:..\..\FatFS-master\source/ff.c **** #endif
4973:..\..\FatFS-master\source/ff.c **** 			{	/* At FAT/FAT32 volume */
4974:..\..\FatFS-master\source/ff.c **** 				mem_cpy(buf, djo.dir, SZDIRE);			/* Save directory entry of the object */
 7065              		.loc 1 4974 0
 7066 0040 209B     		ldr	r3, [sp, #128]
 7067 0042 0193     		str	r3, [sp, #4]
 7068 0044 2022     		movs	r2, #32
 7069 0046 1900     		movs	r1, r3
 7070 0048 05A8     		add	r0, sp, #20
 7071 004a FFF7FEFF 		bl	mem_cpy
 7072              	.LVL1086:
4975:..\..\FatFS-master\source/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7073              		.loc 1 4975 0
 7074 004e 2C22     		movs	r2, #44
 7075 0050 19A9     		add	r1, sp, #100
 7076 0052 0EA8     		add	r0, sp, #56
 7077 0054 FFF7FEFF 		bl	mem_cpy
 7078              	.LVL1087:
4976:..\..\FatFS-master\source/ff.c **** 				res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
 7079              		.loc 1 4976 0
 7080 0058 0299     		ldr	r1, [sp, #8]
 7081 005a 0EA8     		add	r0, sp, #56
 7082 005c FFF7FEFF 		bl	follow_path
 7083              	.LVL1088:
 7084 0060 041E     		subs	r4, r0, #0
 7085              	.LVL1089:
4977:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) {						/* Is new name already in use by any other object? */
 7086              		.loc 1 4977 0
 7087 0062 0CD1     		bne	.L505
4978:..\..\FatFS-master\source/ff.c **** 					res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
 7088              		.loc 1 4978 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 222


 7089 0064 109B     		ldr	r3, [sp, #64]
 7090 0066 1B9A     		ldr	r2, [sp, #108]
 7091 0068 9342     		cmp	r3, r2
 7092 006a 05D1     		bne	.L509
 7093              		.loc 1 4978 0 is_stmt 0 discriminator 1
 7094 006c 129B     		ldr	r3, [sp, #72]
 7095 006e 1D9A     		ldr	r2, [sp, #116]
 7096 0070 9342     		cmp	r3, r2
 7097 0072 03D0     		beq	.L510
 7098              		.loc 1 4978 0
 7099 0074 0834     		adds	r4, r4, #8
 7100 0076 02E0     		b	.L505
 7101              	.L509:
 7102 0078 0824     		movs	r4, #8
 7103 007a 00E0     		b	.L505
 7104              	.L510:
 7105 007c 0424     		movs	r4, #4
 7106              	.L505:
 7107              	.LVL1090:
4979:..\..\FatFS-master\source/ff.c **** 				}
4980:..\..\FatFS-master\source/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
 7108              		.loc 1 4980 0 is_stmt 1
 7109 007e 042C     		cmp	r4, #4
 7110 0080 41D1     		bne	.L506
4981:..\..\FatFS-master\source/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7111              		.loc 1 4981 0
 7112 0082 0EA8     		add	r0, sp, #56
 7113 0084 FFF7FEFF 		bl	dir_register
 7114              	.LVL1091:
 7115 0088 041E     		subs	r4, r0, #0
 7116              	.LVL1092:
4982:..\..\FatFS-master\source/ff.c **** 					if (res == FR_OK) {
 7117              		.loc 1 4982 0
 7118 008a 3CD1     		bne	.L506
4983:..\..\FatFS-master\source/ff.c **** 						dir = djn.dir;					/* Copy directory entry of the object except name */
 7119              		.loc 1 4983 0
 7120 008c 159D     		ldr	r5, [sp, #84]
 7121              	.LVL1093:
4984:..\..\FatFS-master\source/ff.c **** 						mem_cpy(dir + 13, buf + 13, SZDIRE - 13);
 7122              		.loc 1 4984 0
 7123 008e 2800     		movs	r0, r5
 7124              	.LVL1094:
 7125 0090 0D30     		adds	r0, r0, #13
 7126 0092 1322     		movs	r2, #19
 7127 0094 1921     		movs	r1, #25
 7128 0096 02AB     		add	r3, sp, #8
 7129              	.LVL1095:
 7130 0098 9C46     		mov	ip, r3
 7131 009a 6144     		add	r1, r1, ip
 7132 009c FFF7FEFF 		bl	mem_cpy
 7133              	.LVL1096:
4985:..\..\FatFS-master\source/ff.c **** 						dir[DIR_Attr] = buf[DIR_Attr];
 7134              		.loc 1 4985 0
 7135 00a0 05AB     		add	r3, sp, #20
 7136 00a2 DB7A     		ldrb	r3, [r3, #11]
 7137 00a4 EB72     		strb	r3, [r5, #11]
4986:..\..\FatFS-master\source/ff.c **** 						if (!(dir[DIR_Attr] & AM_DIR)) dir[DIR_Attr] |= AM_ARC;	/* Set archive attribute if it is a f
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 223


 7138              		.loc 1 4986 0
 7139 00a6 DA06     		lsls	r2, r3, #27
 7140 00a8 02D4     		bmi	.L507
 7141              		.loc 1 4986 0 is_stmt 0 discriminator 1
 7142 00aa 2022     		movs	r2, #32
 7143 00ac 1343     		orrs	r3, r2
 7144 00ae EB72     		strb	r3, [r5, #11]
 7145              	.L507:
4987:..\..\FatFS-master\source/ff.c **** 						fs->wflag = 1;
 7146              		.loc 1 4987 0 is_stmt 1
 7147 00b0 0123     		movs	r3, #1
 7148 00b2 0D9A     		ldr	r2, [sp, #52]
 7149 00b4 D370     		strb	r3, [r2, #3]
4988:..\..\FatFS-master\source/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the
 7150              		.loc 1 4988 0
 7151 00b6 EB7A     		ldrb	r3, [r5, #11]
 7152 00b8 DB06     		lsls	r3, r3, #27
 7153 00ba 24D5     		bpl	.L506
 7154              		.loc 1 4988 0 is_stmt 0 discriminator 1
 7155 00bc 1B9B     		ldr	r3, [sp, #108]
 7156 00be 109A     		ldr	r2, [sp, #64]
 7157 00c0 9342     		cmp	r3, r2
 7158 00c2 20D0     		beq	.L506
4989:..\..\FatFS-master\source/ff.c **** 							dw = clst2sect(fs, ld_clust(fs, dir));
 7159              		.loc 1 4989 0 is_stmt 1
 7160 00c4 0D9C     		ldr	r4, [sp, #52]
 7161              	.LVL1097:
 7162 00c6 2900     		movs	r1, r5
 7163 00c8 2000     		movs	r0, r4
 7164 00ca FFF7FEFF 		bl	ld_clust
 7165              	.LVL1098:
 7166 00ce 0100     		movs	r1, r0
 7167 00d0 2000     		movs	r0, r4
 7168 00d2 FFF7FEFF 		bl	clst2sect
 7169              	.LVL1099:
4990:..\..\FatFS-master\source/ff.c **** 							if (dw == 0) {
 7170              		.loc 1 4990 0
 7171 00d6 0028     		cmp	r0, #0
 7172 00d8 14D0     		beq	.L511
4991:..\..\FatFS-master\source/ff.c **** 								res = FR_INT_ERR;
4992:..\..\FatFS-master\source/ff.c **** 							} else {
4993:..\..\FatFS-master\source/ff.c **** /* Start of critical section where an interruption can cause a cross-link */
4994:..\..\FatFS-master\source/ff.c **** 								res = move_window(fs, dw);
 7173              		.loc 1 4994 0
 7174 00da 0100     		movs	r1, r0
 7175 00dc 2000     		movs	r0, r4
 7176              	.LVL1100:
 7177 00de FFF7FEFF 		bl	move_window
 7178              	.LVL1101:
 7179 00e2 0400     		movs	r4, r0
 7180              	.LVL1102:
4995:..\..\FatFS-master\source/ff.c **** 								dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
 7181              		.loc 1 4995 0
 7182 00e4 0D98     		ldr	r0, [sp, #52]
 7183              	.LVL1103:
 7184 00e6 0100     		movs	r1, r0
 7185 00e8 5031     		adds	r1, r1, #80
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 224


 7186              	.LVL1104:
4996:..\..\FatFS-master\source/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 7187              		.loc 1 4996 0
 7188 00ea 002C     		cmp	r4, #0
 7189 00ec 0BD1     		bne	.L506
 7190              		.loc 1 4996 0 is_stmt 0 discriminator 1
 7191 00ee 5123     		movs	r3, #81
 7192 00f0 C35C     		ldrb	r3, [r0, r3]
 7193 00f2 2E2B     		cmp	r3, #46
 7194 00f4 07D1     		bne	.L506
4997:..\..\FatFS-master\source/ff.c **** 									st_clust(fs, dir, djn.obj.sclust);
 7195              		.loc 1 4997 0 is_stmt 1
 7196 00f6 109A     		ldr	r2, [sp, #64]
 7197 00f8 FFF7FEFF 		bl	st_clust
 7198              	.LVL1105:
4998:..\..\FatFS-master\source/ff.c **** 									fs->wflag = 1;
 7199              		.loc 1 4998 0
 7200 00fc 0123     		movs	r3, #1
 7201 00fe 0D9A     		ldr	r2, [sp, #52]
 7202 0100 D370     		strb	r3, [r2, #3]
 7203 0102 00E0     		b	.L506
 7204              	.LVL1106:
 7205              	.L511:
4991:..\..\FatFS-master\source/ff.c **** 							} else {
 7206              		.loc 1 4991 0
 7207 0104 0224     		movs	r4, #2
 7208              	.LVL1107:
 7209              	.L506:
4999:..\..\FatFS-master\source/ff.c **** 								}
5000:..\..\FatFS-master\source/ff.c **** 							}
5001:..\..\FatFS-master\source/ff.c **** 						}
5002:..\..\FatFS-master\source/ff.c **** 					}
5003:..\..\FatFS-master\source/ff.c **** 				}
5004:..\..\FatFS-master\source/ff.c **** 			}
5005:..\..\FatFS-master\source/ff.c **** 			if (res == FR_OK) {
 7210              		.loc 1 5005 0
 7211 0106 002C     		cmp	r4, #0
 7212 0108 08D1     		bne	.L503
5006:..\..\FatFS-master\source/ff.c **** 				res = dir_remove(&djo);		/* Remove old entry */
 7213              		.loc 1 5006 0
 7214 010a 19A8     		add	r0, sp, #100
 7215 010c FFF7FEFF 		bl	dir_remove
 7216              	.LVL1108:
 7217 0110 041E     		subs	r4, r0, #0
 7218              	.LVL1109:
5007:..\..\FatFS-master\source/ff.c **** 				if (res == FR_OK) {
 7219              		.loc 1 5007 0
 7220 0112 03D1     		bne	.L503
5008:..\..\FatFS-master\source/ff.c **** 					res = sync_fs(fs);
 7221              		.loc 1 5008 0
 7222 0114 0D98     		ldr	r0, [sp, #52]
 7223              	.LVL1110:
 7224 0116 FFF7FEFF 		bl	sync_fs
 7225              	.LVL1111:
 7226 011a 0400     		movs	r4, r0
 7227              	.LVL1112:
 7228              	.L503:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 225


5009:..\..\FatFS-master\source/ff.c **** 				}
5010:..\..\FatFS-master\source/ff.c **** 			}
5011:..\..\FatFS-master\source/ff.c **** /* End of the critical section */
5012:..\..\FatFS-master\source/ff.c **** 		}
5013:..\..\FatFS-master\source/ff.c **** 		FREE_NAMBUF();
5014:..\..\FatFS-master\source/ff.c **** 	}
5015:..\..\FatFS-master\source/ff.c **** 
5016:..\..\FatFS-master\source/ff.c **** 	LEAVE_FF(fs, res);
5017:..\..\FatFS-master\source/ff.c **** }
 7229              		.loc 1 5017 0
 7230 011c 2000     		movs	r0, r4
 7231 011e 25B0     		add	sp, sp, #148
 7232              		@ sp needed
 7233              	.LVL1113:
 7234 0120 30BD     		pop	{r4, r5, pc}
 7235              		.cfi_endproc
 7236              	.LFE50:
 7237              		.size	f_rename, .-f_rename
 7238 0122 C046     		.section	.rodata.str1.4,"aMS",%progbits,1
 7239              		.align	2
 7240              	.LC0:
 7241 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 7241      3A3B3C3D 
 7241      3E3F5B5D 
 7241      7C7F00
 7242 000f 00       		.space	1
 7243              	.LC2:
 7244 0010 46415400 		.ascii	"FAT\000"
 7245              	.LC4:
 7246 0014 46415433 		.ascii	"FAT32\000"
 7246      3200
 7247              		.bss
 7248              		.align	2
 7249              		.set	.LANCHOR0,. + 0
 7250              		.type	FatFs, %object
 7251              		.size	FatFs, 4
 7252              	FatFs:
 7253 0000 00000000 		.space	4
 7254              		.type	Fsid, %object
 7255              		.size	Fsid, 2
 7256              	Fsid:
 7257 0004 0000     		.space	2
 7258              		.text
 7259              	.Letext0:
 7260              		.file 2 "..\\..\\FatFS-master\\source\\integer.h"
 7261              		.file 3 "..\\..\\FatFS-master\\source\\ff.h"
 7262              		.file 4 "..\\..\\FatFS-master\\source\\diskio.h"
 7263              		.section	.debug_info,"",%progbits
 7264              	.Ldebug_info0:
 7265 0000 162D0000 		.4byte	0x2d16
 7266 0004 0400     		.2byte	0x4
 7267 0006 00000000 		.4byte	.Ldebug_abbrev0
 7268 000a 04       		.byte	0x4
 7269 000b 01       		.uleb128 0x1
 7270 000c CF040000 		.4byte	.LASF165
 7271 0010 0C       		.byte	0xc
 7272 0011 F2010000 		.4byte	.LASF166
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 226


 7273 0015 3A020000 		.4byte	.LASF167
 7274 0019 00000000 		.4byte	.Ldebug_ranges0+0
 7275 001d 00000000 		.4byte	0
 7276 0021 00000000 		.4byte	.Ldebug_line0
 7277 0025 02       		.uleb128 0x2
 7278 0026 04       		.byte	0x4
 7279 0027 05       		.byte	0x5
 7280 0028 696E7400 		.ascii	"int\000"
 7281 002c 03       		.uleb128 0x3
 7282 002d 11020000 		.4byte	.LASF1
 7283 0031 02       		.byte	0x2
 7284 0032 13       		.byte	0x13
 7285 0033 37000000 		.4byte	0x37
 7286 0037 04       		.uleb128 0x4
 7287 0038 04       		.byte	0x4
 7288 0039 07       		.byte	0x7
 7289 003a E5010000 		.4byte	.LASF0
 7290 003e 03       		.uleb128 0x3
 7291 003f BC010000 		.4byte	.LASF2
 7292 0043 02       		.byte	0x2
 7293 0044 16       		.byte	0x16
 7294 0045 49000000 		.4byte	0x49
 7295 0049 04       		.uleb128 0x4
 7296 004a 01       		.byte	0x1
 7297 004b 08       		.byte	0x8
 7298 004c 20040000 		.4byte	.LASF3
 7299 0050 04       		.uleb128 0x4
 7300 0051 02       		.byte	0x2
 7301 0052 05       		.byte	0x5
 7302 0053 3D040000 		.4byte	.LASF4
 7303 0057 03       		.uleb128 0x3
 7304 0058 67030000 		.4byte	.LASF5
 7305 005c 02       		.byte	0x2
 7306 005d 1A       		.byte	0x1a
 7307 005e 62000000 		.4byte	0x62
 7308 0062 04       		.uleb128 0x4
 7309 0063 02       		.byte	0x2
 7310 0064 07       		.byte	0x7
 7311 0065 7E020000 		.4byte	.LASF6
 7312 0069 04       		.uleb128 0x4
 7313 006a 04       		.byte	0x4
 7314 006b 05       		.byte	0x5
 7315 006c 02010000 		.4byte	.LASF7
 7316 0070 03       		.uleb128 0x3
 7317 0071 66010000 		.4byte	.LASF8
 7318 0075 02       		.byte	0x2
 7319 0076 1F       		.byte	0x1f
 7320 0077 7B000000 		.4byte	0x7b
 7321 007b 04       		.uleb128 0x4
 7322 007c 04       		.byte	0x4
 7323 007d 07       		.byte	0x7
 7324 007e 1C020000 		.4byte	.LASF9
 7325 0082 04       		.uleb128 0x4
 7326 0083 08       		.byte	0x8
 7327 0084 07       		.byte	0x7
 7328 0085 7F000000 		.4byte	.LASF10
 7329 0089 03       		.uleb128 0x3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 227


 7330 008a 8B030000 		.4byte	.LASF11
 7331 008e 03       		.byte	0x3
 7332 008f 42       		.byte	0x42
 7333 0090 94000000 		.4byte	0x94
 7334 0094 04       		.uleb128 0x4
 7335 0095 01       		.byte	0x1
 7336 0096 08       		.byte	0x8
 7337 0097 6A050000 		.4byte	.LASF12
 7338 009b 03       		.uleb128 0x3
 7339 009c 74010000 		.4byte	.LASF13
 7340 00a0 03       		.byte	0x3
 7341 00a1 50       		.byte	0x50
 7342 00a2 70000000 		.4byte	0x70
 7343 00a6 05       		.uleb128 0x5
 7344 00a7 3002     		.2byte	0x230
 7345 00a9 03       		.byte	0x3
 7346 00aa 57       		.byte	0x57
 7347 00ab 87010000 		.4byte	0x187
 7348 00af 06       		.uleb128 0x6
 7349 00b0 29000000 		.4byte	.LASF14
 7350 00b4 03       		.byte	0x3
 7351 00b5 58       		.byte	0x58
 7352 00b6 3E000000 		.4byte	0x3e
 7353 00ba 00       		.byte	0
 7354 00bb 06       		.uleb128 0x6
 7355 00bc AD010000 		.4byte	.LASF15
 7356 00c0 03       		.byte	0x3
 7357 00c1 59       		.byte	0x59
 7358 00c2 3E000000 		.4byte	0x3e
 7359 00c6 01       		.byte	0x1
 7360 00c7 06       		.uleb128 0x6
 7361 00c8 21010000 		.4byte	.LASF16
 7362 00cc 03       		.byte	0x3
 7363 00cd 5A       		.byte	0x5a
 7364 00ce 3E000000 		.4byte	0x3e
 7365 00d2 02       		.byte	0x2
 7366 00d3 06       		.uleb128 0x6
 7367 00d4 C9040000 		.4byte	.LASF17
 7368 00d8 03       		.byte	0x3
 7369 00d9 5B       		.byte	0x5b
 7370 00da 3E000000 		.4byte	0x3e
 7371 00de 03       		.byte	0x3
 7372 00df 06       		.uleb128 0x6
 7373 00e0 FD050000 		.4byte	.LASF18
 7374 00e4 03       		.byte	0x3
 7375 00e5 5C       		.byte	0x5c
 7376 00e6 3E000000 		.4byte	0x3e
 7377 00ea 04       		.byte	0x4
 7378 00eb 07       		.uleb128 0x7
 7379 00ec 696400   		.ascii	"id\000"
 7380 00ef 03       		.byte	0x3
 7381 00f0 5D       		.byte	0x5d
 7382 00f1 57000000 		.4byte	0x57
 7383 00f5 06       		.byte	0x6
 7384 00f6 06       		.uleb128 0x6
 7385 00f7 5D000000 		.4byte	.LASF19
 7386 00fb 03       		.byte	0x3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 228


 7387 00fc 5E       		.byte	0x5e
 7388 00fd 57000000 		.4byte	0x57
 7389 0101 08       		.byte	0x8
 7390 0102 06       		.uleb128 0x6
 7391 0103 97010000 		.4byte	.LASF20
 7392 0107 03       		.byte	0x3
 7393 0108 5F       		.byte	0x5f
 7394 0109 57000000 		.4byte	0x57
 7395 010d 0A       		.byte	0xa
 7396 010e 06       		.uleb128 0x6
 7397 010f C7030000 		.4byte	.LASF21
 7398 0113 03       		.byte	0x3
 7399 0114 6D       		.byte	0x6d
 7400 0115 70000000 		.4byte	0x70
 7401 0119 0C       		.byte	0xc
 7402 011a 06       		.uleb128 0x6
 7403 011b B2010000 		.4byte	.LASF22
 7404 011f 03       		.byte	0x3
 7405 0120 6E       		.byte	0x6e
 7406 0121 70000000 		.4byte	0x70
 7407 0125 10       		.byte	0x10
 7408 0126 06       		.uleb128 0x6
 7409 0127 E7000000 		.4byte	.LASF23
 7410 012b 03       		.byte	0x3
 7411 012c 78       		.byte	0x78
 7412 012d 70000000 		.4byte	0x70
 7413 0131 14       		.byte	0x14
 7414 0132 06       		.uleb128 0x6
 7415 0133 E1000000 		.4byte	.LASF24
 7416 0137 03       		.byte	0x3
 7417 0138 79       		.byte	0x79
 7418 0139 70000000 		.4byte	0x70
 7419 013d 18       		.byte	0x18
 7420 013e 06       		.uleb128 0x6
 7421 013f B3050000 		.4byte	.LASF25
 7422 0143 03       		.byte	0x3
 7423 0144 7A       		.byte	0x7a
 7424 0145 70000000 		.4byte	0x70
 7425 0149 1C       		.byte	0x1c
 7426 014a 06       		.uleb128 0x6
 7427 014b 5E010000 		.4byte	.LASF26
 7428 014f 03       		.byte	0x3
 7429 0150 7B       		.byte	0x7b
 7430 0151 70000000 		.4byte	0x70
 7431 0155 20       		.byte	0x20
 7432 0156 06       		.uleb128 0x6
 7433 0157 B9000000 		.4byte	.LASF27
 7434 015b 03       		.byte	0x3
 7435 015c 7C       		.byte	0x7c
 7436 015d 70000000 		.4byte	0x70
 7437 0161 24       		.byte	0x24
 7438 0162 06       		.uleb128 0x6
 7439 0163 91020000 		.4byte	.LASF28
 7440 0167 03       		.byte	0x3
 7441 0168 7D       		.byte	0x7d
 7442 0169 70000000 		.4byte	0x70
 7443 016d 28       		.byte	0x28
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 229


 7444 016e 06       		.uleb128 0x6
 7445 016f C8020000 		.4byte	.LASF29
 7446 0173 03       		.byte	0x3
 7447 0174 7E       		.byte	0x7e
 7448 0175 70000000 		.4byte	0x70
 7449 0179 2C       		.byte	0x2c
 7450 017a 07       		.uleb128 0x7
 7451 017b 77696E00 		.ascii	"win\000"
 7452 017f 03       		.byte	0x3
 7453 0180 7F       		.byte	0x7f
 7454 0181 87010000 		.4byte	0x187
 7455 0185 30       		.byte	0x30
 7456 0186 00       		.byte	0
 7457 0187 08       		.uleb128 0x8
 7458 0188 3E000000 		.4byte	0x3e
 7459 018c 98010000 		.4byte	0x198
 7460 0190 09       		.uleb128 0x9
 7461 0191 98010000 		.4byte	0x198
 7462 0195 FF01     		.2byte	0x1ff
 7463 0197 00       		.byte	0
 7464 0198 04       		.uleb128 0x4
 7465 0199 04       		.byte	0x4
 7466 019a 07       		.byte	0x7
 7467 019b 40030000 		.4byte	.LASF30
 7468 019f 03       		.uleb128 0x3
 7469 01a0 1A030000 		.4byte	.LASF31
 7470 01a4 03       		.byte	0x3
 7471 01a5 80       		.byte	0x80
 7472 01a6 A6000000 		.4byte	0xa6
 7473 01aa 0A       		.uleb128 0xa
 7474 01ab 10       		.byte	0x10
 7475 01ac 03       		.byte	0x3
 7476 01ad 86       		.byte	0x86
 7477 01ae F9010000 		.4byte	0x1f9
 7478 01b2 07       		.uleb128 0x7
 7479 01b3 667300   		.ascii	"fs\000"
 7480 01b6 03       		.byte	0x3
 7481 01b7 87       		.byte	0x87
 7482 01b8 F9010000 		.4byte	0x1f9
 7483 01bc 00       		.byte	0
 7484 01bd 07       		.uleb128 0x7
 7485 01be 696400   		.ascii	"id\000"
 7486 01c1 03       		.byte	0x3
 7487 01c2 88       		.byte	0x88
 7488 01c3 57000000 		.4byte	0x57
 7489 01c7 04       		.byte	0x4
 7490 01c8 06       		.uleb128 0x6
 7491 01c9 C9010000 		.4byte	.LASF32
 7492 01cd 03       		.byte	0x3
 7493 01ce 89       		.byte	0x89
 7494 01cf 3E000000 		.4byte	0x3e
 7495 01d3 06       		.byte	0x6
 7496 01d4 06       		.uleb128 0x6
 7497 01d5 4C060000 		.4byte	.LASF33
 7498 01d9 03       		.byte	0x3
 7499 01da 8A       		.byte	0x8a
 7500 01db 3E000000 		.4byte	0x3e
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 230


 7501 01df 07       		.byte	0x7
 7502 01e0 06       		.uleb128 0x6
 7503 01e1 6C030000 		.4byte	.LASF34
 7504 01e5 03       		.byte	0x3
 7505 01e6 8B       		.byte	0x8b
 7506 01e7 70000000 		.4byte	0x70
 7507 01eb 08       		.byte	0x8
 7508 01ec 06       		.uleb128 0x6
 7509 01ed ED030000 		.4byte	.LASF35
 7510 01f1 03       		.byte	0x3
 7511 01f2 8C       		.byte	0x8c
 7512 01f3 9B000000 		.4byte	0x9b
 7513 01f7 0C       		.byte	0xc
 7514 01f8 00       		.byte	0
 7515 01f9 0B       		.uleb128 0xb
 7516 01fa 04       		.byte	0x4
 7517 01fb 9F010000 		.4byte	0x19f
 7518 01ff 03       		.uleb128 0x3
 7519 0200 96060000 		.4byte	.LASF36
 7520 0204 03       		.byte	0x3
 7521 0205 97       		.byte	0x97
 7522 0206 AA010000 		.4byte	0x1aa
 7523 020a 05       		.uleb128 0x5
 7524 020b 2802     		.2byte	0x228
 7525 020d 03       		.byte	0x3
 7526 020e 9D       		.byte	0x9d
 7527 020f 80020000 		.4byte	0x280
 7528 0213 07       		.uleb128 0x7
 7529 0214 6F626A00 		.ascii	"obj\000"
 7530 0218 03       		.byte	0x3
 7531 0219 9E       		.byte	0x9e
 7532 021a FF010000 		.4byte	0x1ff
 7533 021e 00       		.byte	0
 7534 021f 06       		.uleb128 0x6
 7535 0220 62040000 		.4byte	.LASF37
 7536 0224 03       		.byte	0x3
 7537 0225 9F       		.byte	0x9f
 7538 0226 3E000000 		.4byte	0x3e
 7539 022a 10       		.byte	0x10
 7540 022b 07       		.uleb128 0x7
 7541 022c 65727200 		.ascii	"err\000"
 7542 0230 03       		.byte	0x3
 7543 0231 A0       		.byte	0xa0
 7544 0232 3E000000 		.4byte	0x3e
 7545 0236 11       		.byte	0x11
 7546 0237 06       		.uleb128 0x6
 7547 0238 33030000 		.4byte	.LASF38
 7548 023c 03       		.byte	0x3
 7549 023d A1       		.byte	0xa1
 7550 023e 9B000000 		.4byte	0x9b
 7551 0242 14       		.byte	0x14
 7552 0243 06       		.uleb128 0x6
 7553 0244 AD060000 		.4byte	.LASF39
 7554 0248 03       		.byte	0x3
 7555 0249 A2       		.byte	0xa2
 7556 024a 70000000 		.4byte	0x70
 7557 024e 18       		.byte	0x18
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 231


 7558 024f 06       		.uleb128 0x6
 7559 0250 9F000000 		.4byte	.LASF40
 7560 0254 03       		.byte	0x3
 7561 0255 A3       		.byte	0xa3
 7562 0256 70000000 		.4byte	0x70
 7563 025a 1C       		.byte	0x1c
 7564 025b 06       		.uleb128 0x6
 7565 025c B0000000 		.4byte	.LASF41
 7566 0260 03       		.byte	0x3
 7567 0261 A5       		.byte	0xa5
 7568 0262 70000000 		.4byte	0x70
 7569 0266 20       		.byte	0x20
 7570 0267 06       		.uleb128 0x6
 7571 0268 C1010000 		.4byte	.LASF42
 7572 026c 03       		.byte	0x3
 7573 026d A6       		.byte	0xa6
 7574 026e 80020000 		.4byte	0x280
 7575 0272 24       		.byte	0x24
 7576 0273 07       		.uleb128 0x7
 7577 0274 62756600 		.ascii	"buf\000"
 7578 0278 03       		.byte	0x3
 7579 0279 AC       		.byte	0xac
 7580 027a 87010000 		.4byte	0x187
 7581 027e 28       		.byte	0x28
 7582 027f 00       		.byte	0
 7583 0280 0B       		.uleb128 0xb
 7584 0281 04       		.byte	0x4
 7585 0282 3E000000 		.4byte	0x3e
 7586 0286 0C       		.uleb128 0xc
 7587 0287 46494C00 		.ascii	"FIL\000"
 7588 028b 03       		.byte	0x3
 7589 028c AE       		.byte	0xae
 7590 028d 0A020000 		.4byte	0x20a
 7591 0291 0A       		.uleb128 0xa
 7592 0292 2C       		.byte	0x2c
 7593 0293 03       		.byte	0x3
 7594 0294 B4       		.byte	0xb4
 7595 0295 E1020000 		.4byte	0x2e1
 7596 0299 07       		.uleb128 0x7
 7597 029a 6F626A00 		.ascii	"obj\000"
 7598 029e 03       		.byte	0x3
 7599 029f B5       		.byte	0xb5
 7600 02a0 FF010000 		.4byte	0x1ff
 7601 02a4 00       		.byte	0
 7602 02a5 06       		.uleb128 0x6
 7603 02a6 A0040000 		.4byte	.LASF43
 7604 02aa 03       		.byte	0x3
 7605 02ab B6       		.byte	0xb6
 7606 02ac 70000000 		.4byte	0x70
 7607 02b0 10       		.byte	0x10
 7608 02b1 06       		.uleb128 0x6
 7609 02b2 AD060000 		.4byte	.LASF39
 7610 02b6 03       		.byte	0x3
 7611 02b7 B7       		.byte	0xb7
 7612 02b8 70000000 		.4byte	0x70
 7613 02bc 14       		.byte	0x14
 7614 02bd 06       		.uleb128 0x6
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 232


 7615 02be 9F000000 		.4byte	.LASF40
 7616 02c2 03       		.byte	0x3
 7617 02c3 B8       		.byte	0xb8
 7618 02c4 70000000 		.4byte	0x70
 7619 02c8 18       		.byte	0x18
 7620 02c9 07       		.uleb128 0x7
 7621 02ca 64697200 		.ascii	"dir\000"
 7622 02ce 03       		.byte	0x3
 7623 02cf B9       		.byte	0xb9
 7624 02d0 80020000 		.4byte	0x280
 7625 02d4 1C       		.byte	0x1c
 7626 02d5 07       		.uleb128 0x7
 7627 02d6 666E00   		.ascii	"fn\000"
 7628 02d9 03       		.byte	0x3
 7629 02da BA       		.byte	0xba
 7630 02db E1020000 		.4byte	0x2e1
 7631 02df 20       		.byte	0x20
 7632 02e0 00       		.byte	0
 7633 02e1 08       		.uleb128 0x8
 7634 02e2 3E000000 		.4byte	0x3e
 7635 02e6 F1020000 		.4byte	0x2f1
 7636 02ea 0D       		.uleb128 0xd
 7637 02eb 98010000 		.4byte	0x198
 7638 02ef 0B       		.byte	0xb
 7639 02f0 00       		.byte	0
 7640 02f1 0C       		.uleb128 0xc
 7641 02f2 44495200 		.ascii	"DIR\000"
 7642 02f6 03       		.byte	0x3
 7643 02f7 C1       		.byte	0xc1
 7644 02f8 91020000 		.4byte	0x291
 7645 02fc 0A       		.uleb128 0xa
 7646 02fd 18       		.byte	0x18
 7647 02fe 03       		.byte	0x3
 7648 02ff C7       		.byte	0xc7
 7649 0300 41030000 		.4byte	0x341
 7650 0304 06       		.uleb128 0x6
 7651 0305 E1000000 		.4byte	.LASF24
 7652 0309 03       		.byte	0x3
 7653 030a C8       		.byte	0xc8
 7654 030b 9B000000 		.4byte	0x9b
 7655 030f 00       		.byte	0
 7656 0310 06       		.uleb128 0x6
 7657 0311 28030000 		.4byte	.LASF44
 7658 0315 03       		.byte	0x3
 7659 0316 C9       		.byte	0xc9
 7660 0317 57000000 		.4byte	0x57
 7661 031b 04       		.byte	0x4
 7662 031c 06       		.uleb128 0x6
 7663 031d 16020000 		.4byte	.LASF45
 7664 0321 03       		.byte	0x3
 7665 0322 CA       		.byte	0xca
 7666 0323 57000000 		.4byte	0x57
 7667 0327 06       		.byte	0x6
 7668 0328 06       		.uleb128 0x6
 7669 0329 15060000 		.4byte	.LASF46
 7670 032d 03       		.byte	0x3
 7671 032e CB       		.byte	0xcb
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 233


 7672 032f 3E000000 		.4byte	0x3e
 7673 0333 08       		.byte	0x8
 7674 0334 06       		.uleb128 0x6
 7675 0335 F6020000 		.4byte	.LASF47
 7676 0339 03       		.byte	0x3
 7677 033a D0       		.byte	0xd0
 7678 033b 41030000 		.4byte	0x341
 7679 033f 09       		.byte	0x9
 7680 0340 00       		.byte	0
 7681 0341 08       		.uleb128 0x8
 7682 0342 89000000 		.4byte	0x89
 7683 0346 51030000 		.4byte	0x351
 7684 034a 0D       		.uleb128 0xd
 7685 034b 98010000 		.4byte	0x198
 7686 034f 0C       		.byte	0xc
 7687 0350 00       		.byte	0
 7688 0351 03       		.uleb128 0x3
 7689 0352 2E060000 		.4byte	.LASF48
 7690 0356 03       		.byte	0x3
 7691 0357 D2       		.byte	0xd2
 7692 0358 FC020000 		.4byte	0x2fc
 7693 035c 0E       		.uleb128 0xe
 7694 035d 01       		.byte	0x1
 7695 035e 49000000 		.4byte	0x49
 7696 0362 03       		.byte	0x3
 7697 0363 D8       		.byte	0xd8
 7698 0364 E1030000 		.4byte	0x3e1
 7699 0368 0F       		.uleb128 0xf
 7700 0369 7B050000 		.4byte	.LASF49
 7701 036d 00       		.byte	0
 7702 036e 0F       		.uleb128 0xf
 7703 036f BC020000 		.4byte	.LASF50
 7704 0373 01       		.byte	0x1
 7705 0374 0F       		.uleb128 0xf
 7706 0375 A8020000 		.4byte	.LASF51
 7707 0379 02       		.byte	0x2
 7708 037a 0F       		.uleb128 0xf
 7709 037b 89060000 		.4byte	.LASF52
 7710 037f 03       		.byte	0x3
 7711 0380 0F       		.uleb128 0xf
 7712 0381 7A030000 		.4byte	.LASF53
 7713 0385 04       		.byte	0x4
 7714 0386 0F       		.uleb128 0xf
 7715 0387 73060000 		.4byte	.LASF54
 7716 038b 05       		.byte	0x5
 7717 038c 0F       		.uleb128 0xf
 7718 038d CD050000 		.4byte	.LASF55
 7719 0391 06       		.byte	0x6
 7720 0392 0F       		.uleb128 0xf
 7721 0393 8D040000 		.4byte	.LASF56
 7722 0397 07       		.byte	0x7
 7723 0398 0F       		.uleb128 0xf
 7724 0399 55010000 		.4byte	.LASF57
 7725 039d 08       		.byte	0x8
 7726 039e 0F       		.uleb128 0xf
 7727 039f F0000000 		.4byte	.LASF58
 7728 03a3 09       		.byte	0x9
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 234


 7729 03a4 0F       		.uleb128 0xf
 7730 03a5 FC020000 		.4byte	.LASF59
 7731 03a9 0A       		.byte	0xa
 7732 03aa 0F       		.uleb128 0xf
 7733 03ab 7C040000 		.4byte	.LASF60
 7734 03af 0B       		.byte	0xb
 7735 03b0 0F       		.uleb128 0xf
 7736 03b1 AC030000 		.4byte	.LASF61
 7737 03b5 0C       		.byte	0xc
 7738 03b6 0F       		.uleb128 0xf
 7739 03b7 31010000 		.4byte	.LASF62
 7740 03bb 0D       		.byte	0xd
 7741 03bc 0F       		.uleb128 0xf
 7742 03bd A5040000 		.4byte	.LASF63
 7743 03c1 0E       		.byte	0xe
 7744 03c2 0F       		.uleb128 0xf
 7745 03c3 5C030000 		.4byte	.LASF64
 7746 03c7 0F       		.byte	0xf
 7747 03c8 0F       		.uleb128 0xf
 7748 03c9 BF040000 		.4byte	.LASF65
 7749 03cd 10       		.byte	0x10
 7750 03ce 0F       		.uleb128 0xf
 7751 03cf 42010000 		.4byte	.LASF66
 7752 03d3 11       		.byte	0x11
 7753 03d4 0F       		.uleb128 0xf
 7754 03d5 0A000000 		.4byte	.LASF67
 7755 03d9 12       		.byte	0x12
 7756 03da 0F       		.uleb128 0xf
 7757 03db CC000000 		.4byte	.LASF68
 7758 03df 13       		.byte	0x13
 7759 03e0 00       		.byte	0
 7760 03e1 03       		.uleb128 0x3
 7761 03e2 51060000 		.4byte	.LASF69
 7762 03e6 03       		.byte	0x3
 7763 03e7 ED       		.byte	0xed
 7764 03e8 5C030000 		.4byte	0x35c
 7765 03ec 03       		.uleb128 0x3
 7766 03ed 9E050000 		.4byte	.LASF70
 7767 03f1 04       		.byte	0x4
 7768 03f2 10       		.byte	0x10
 7769 03f3 3E000000 		.4byte	0x3e
 7770 03f7 0E       		.uleb128 0xe
 7771 03f8 01       		.byte	0x1
 7772 03f9 49000000 		.4byte	0x49
 7773 03fd 04       		.byte	0x4
 7774 03fe 13       		.byte	0x13
 7775 03ff 22040000 		.4byte	0x422
 7776 0403 0F       		.uleb128 0xf
 7777 0404 73030000 		.4byte	.LASF71
 7778 0408 00       		.byte	0
 7779 0409 0F       		.uleb128 0xf
 7780 040a 59060000 		.4byte	.LASF72
 7781 040e 01       		.byte	0x1
 7782 040f 0F       		.uleb128 0xf
 7783 0410 00000000 		.4byte	.LASF73
 7784 0414 02       		.byte	0x2
 7785 0415 0F       		.uleb128 0xf
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 235


 7786 0416 52000000 		.4byte	.LASF74
 7787 041a 03       		.byte	0x3
 7788 041b 0F       		.uleb128 0xf
 7789 041c 16010000 		.4byte	.LASF75
 7790 0420 04       		.byte	0x4
 7791 0421 00       		.byte	0
 7792 0422 10       		.uleb128 0x10
 7793 0423 BB050000 		.4byte	.LASF76
 7794 0427 01       		.byte	0x1
 7795 0428 3602     		.2byte	0x236
 7796 042a 57000000 		.4byte	0x57
 7797 042e 00000000 		.4byte	.LFB0
 7798 0432 0C000000 		.4byte	.LFE0-.LFB0
 7799 0436 01       		.uleb128 0x1
 7800 0437 9C       		.byte	0x9c
 7801 0438 5C040000 		.4byte	0x45c
 7802 043c 11       		.uleb128 0x11
 7803 043d 70747200 		.ascii	"ptr\000"
 7804 0441 01       		.byte	0x1
 7805 0442 3602     		.2byte	0x236
 7806 0444 5C040000 		.4byte	0x45c
 7807 0448 00000000 		.4byte	.LLST0
 7808 044c 12       		.uleb128 0x12
 7809 044d 727600   		.ascii	"rv\000"
 7810 0450 01       		.byte	0x1
 7811 0451 3802     		.2byte	0x238
 7812 0453 57000000 		.4byte	0x57
 7813 0457 21000000 		.4byte	.LLST1
 7814 045b 00       		.byte	0
 7815 045c 0B       		.uleb128 0xb
 7816 045d 04       		.byte	0x4
 7817 045e 62040000 		.4byte	0x462
 7818 0462 13       		.uleb128 0x13
 7819 0463 3E000000 		.4byte	0x3e
 7820 0467 10       		.uleb128 0x10
 7821 0468 F4050000 		.4byte	.LASF77
 7822 046c 01       		.byte	0x1
 7823 046d 4002     		.2byte	0x240
 7824 046f 70000000 		.4byte	0x70
 7825 0473 00000000 		.4byte	.LFB1
 7826 0477 16000000 		.4byte	.LFE1-.LFB1
 7827 047b 01       		.uleb128 0x1
 7828 047c 9C       		.byte	0x9c
 7829 047d A1040000 		.4byte	0x4a1
 7830 0481 11       		.uleb128 0x11
 7831 0482 70747200 		.ascii	"ptr\000"
 7832 0486 01       		.byte	0x1
 7833 0487 4002     		.2byte	0x240
 7834 0489 5C040000 		.4byte	0x45c
 7835 048d 56000000 		.4byte	.LLST2
 7836 0491 12       		.uleb128 0x12
 7837 0492 727600   		.ascii	"rv\000"
 7838 0495 01       		.byte	0x1
 7839 0496 4202     		.2byte	0x242
 7840 0498 70000000 		.4byte	0x70
 7841 049c 77000000 		.4byte	.LLST3
 7842 04a0 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 236


 7843 04a1 14       		.uleb128 0x14
 7844 04a2 26060000 		.4byte	.LASF78
 7845 04a6 01       		.byte	0x1
 7846 04a7 5F02     		.2byte	0x25f
 7847 04a9 00000000 		.4byte	.LFB2
 7848 04ad 08000000 		.4byte	.LFE2-.LFB2
 7849 04b1 01       		.uleb128 0x1
 7850 04b2 9C       		.byte	0x9c
 7851 04b3 D8040000 		.4byte	0x4d8
 7852 04b7 11       		.uleb128 0x11
 7853 04b8 70747200 		.ascii	"ptr\000"
 7854 04bc 01       		.byte	0x1
 7855 04bd 5F02     		.2byte	0x25f
 7856 04bf 80020000 		.4byte	0x280
 7857 04c3 38010000 		.4byte	.LLST4
 7858 04c7 11       		.uleb128 0x11
 7859 04c8 76616C00 		.ascii	"val\000"
 7860 04cc 01       		.byte	0x1
 7861 04cd 5F02     		.2byte	0x25f
 7862 04cf 57000000 		.4byte	0x57
 7863 04d3 65010000 		.4byte	.LLST5
 7864 04d7 00       		.byte	0
 7865 04d8 14       		.uleb128 0x14
 7866 04d9 9B030000 		.4byte	.LASF79
 7867 04dd 01       		.byte	0x1
 7868 04de 6602     		.2byte	0x266
 7869 04e0 00000000 		.4byte	.LFB3
 7870 04e4 10000000 		.4byte	.LFE3-.LFB3
 7871 04e8 01       		.uleb128 0x1
 7872 04e9 9C       		.byte	0x9c
 7873 04ea 0F050000 		.4byte	0x50f
 7874 04ee 11       		.uleb128 0x11
 7875 04ef 70747200 		.ascii	"ptr\000"
 7876 04f3 01       		.byte	0x1
 7877 04f4 6602     		.2byte	0x266
 7878 04f6 80020000 		.4byte	0x280
 7879 04fa 87010000 		.4byte	.LLST6
 7880 04fe 11       		.uleb128 0x11
 7881 04ff 76616C00 		.ascii	"val\000"
 7882 0503 01       		.byte	0x1
 7883 0504 6602     		.2byte	0x266
 7884 0506 70000000 		.4byte	0x70
 7885 050a CE010000 		.4byte	.LLST7
 7886 050e 00       		.byte	0
 7887 050f 14       		.uleb128 0x14
 7888 0510 06060000 		.4byte	.LASF80
 7889 0514 01       		.byte	0x1
 7890 0515 8602     		.2byte	0x286
 7891 0517 00000000 		.4byte	.LFB4
 7892 051b 14000000 		.4byte	.LFE4-.LFB4
 7893 051f 01       		.uleb128 0x1
 7894 0520 9C       		.byte	0x9c
 7895 0521 72050000 		.4byte	0x572
 7896 0525 11       		.uleb128 0x11
 7897 0526 64737400 		.ascii	"dst\000"
 7898 052a 01       		.byte	0x1
 7899 052b 8602     		.2byte	0x286
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 237


 7900 052d 72050000 		.4byte	0x572
 7901 0531 06020000 		.4byte	.LLST8
 7902 0535 11       		.uleb128 0x11
 7903 0536 73726300 		.ascii	"src\000"
 7904 053a 01       		.byte	0x1
 7905 053b 8602     		.2byte	0x286
 7906 053d 74050000 		.4byte	0x574
 7907 0541 27020000 		.4byte	.LLST9
 7908 0545 11       		.uleb128 0x11
 7909 0546 636E7400 		.ascii	"cnt\000"
 7910 054a 01       		.byte	0x1
 7911 054b 8602     		.2byte	0x286
 7912 054d 2C000000 		.4byte	0x2c
 7913 0551 48020000 		.4byte	.LLST10
 7914 0555 12       		.uleb128 0x12
 7915 0556 6400     		.ascii	"d\000"
 7916 0558 01       		.byte	0x1
 7917 0559 8802     		.2byte	0x288
 7918 055b 80020000 		.4byte	0x280
 7919 055f 66020000 		.4byte	.LLST11
 7920 0563 12       		.uleb128 0x12
 7921 0564 7300     		.ascii	"s\000"
 7922 0566 01       		.byte	0x1
 7923 0567 8902     		.2byte	0x289
 7924 0569 5C040000 		.4byte	0x45c
 7925 056d 91020000 		.4byte	.LLST12
 7926 0571 00       		.byte	0
 7927 0572 15       		.uleb128 0x15
 7928 0573 04       		.byte	0x4
 7929 0574 0B       		.uleb128 0xb
 7930 0575 04       		.byte	0x4
 7931 0576 7A050000 		.4byte	0x57a
 7932 057a 16       		.uleb128 0x16
 7933 057b 14       		.uleb128 0x14
 7934 057c 38030000 		.4byte	.LASF81
 7935 0580 01       		.byte	0x1
 7936 0581 9502     		.2byte	0x295
 7937 0583 00000000 		.4byte	.LFB5
 7938 0587 0C000000 		.4byte	.LFE5-.LFB5
 7939 058b 01       		.uleb128 0x1
 7940 058c 9C       		.byte	0x9c
 7941 058d CF050000 		.4byte	0x5cf
 7942 0591 17       		.uleb128 0x17
 7943 0592 64737400 		.ascii	"dst\000"
 7944 0596 01       		.byte	0x1
 7945 0597 9502     		.2byte	0x295
 7946 0599 72050000 		.4byte	0x572
 7947 059d 04       		.uleb128 0x4
 7948 059e F3       		.byte	0xf3
 7949 059f 01       		.uleb128 0x1
 7950 05a0 50       		.byte	0x50
 7951 05a1 9F       		.byte	0x9f
 7952 05a2 17       		.uleb128 0x17
 7953 05a3 76616C00 		.ascii	"val\000"
 7954 05a7 01       		.byte	0x1
 7955 05a8 9502     		.2byte	0x295
 7956 05aa 25000000 		.4byte	0x25
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 238


 7957 05ae 01       		.uleb128 0x1
 7958 05af 51       		.byte	0x51
 7959 05b0 11       		.uleb128 0x11
 7960 05b1 636E7400 		.ascii	"cnt\000"
 7961 05b5 01       		.byte	0x1
 7962 05b6 9502     		.2byte	0x295
 7963 05b8 2C000000 		.4byte	0x2c
 7964 05bc BC020000 		.4byte	.LLST13
 7965 05c0 12       		.uleb128 0x12
 7966 05c1 6400     		.ascii	"d\000"
 7967 05c3 01       		.byte	0x1
 7968 05c4 9702     		.2byte	0x297
 7969 05c6 80020000 		.4byte	0x280
 7970 05ca E8020000 		.4byte	.LLST14
 7971 05ce 00       		.byte	0
 7972 05cf 10       		.uleb128 0x10
 7973 05d0 D0020000 		.4byte	.LASF82
 7974 05d4 01       		.byte	0x1
 7975 05d5 A102     		.2byte	0x2a1
 7976 05d7 25000000 		.4byte	0x25
 7977 05db 00000000 		.4byte	.LFB6
 7978 05df 1E000000 		.4byte	.LFE6-.LFB6
 7979 05e3 01       		.uleb128 0x1
 7980 05e4 9C       		.byte	0x9c
 7981 05e5 44060000 		.4byte	0x644
 7982 05e9 11       		.uleb128 0x11
 7983 05ea 64737400 		.ascii	"dst\000"
 7984 05ee 01       		.byte	0x1
 7985 05ef A102     		.2byte	0x2a1
 7986 05f1 74050000 		.4byte	0x574
 7987 05f5 0B030000 		.4byte	.LLST15
 7988 05f9 11       		.uleb128 0x11
 7989 05fa 73726300 		.ascii	"src\000"
 7990 05fe 01       		.byte	0x1
 7991 05ff A102     		.2byte	0x2a1
 7992 0601 74050000 		.4byte	0x574
 7993 0605 2C030000 		.4byte	.LLST16
 7994 0609 11       		.uleb128 0x11
 7995 060a 636E7400 		.ascii	"cnt\000"
 7996 060e 01       		.byte	0x1
 7997 060f A102     		.2byte	0x2a1
 7998 0611 2C000000 		.4byte	0x2c
 7999 0615 4D030000 		.4byte	.LLST17
 8000 0619 12       		.uleb128 0x12
 8001 061a 6400     		.ascii	"d\000"
 8002 061c 01       		.byte	0x1
 8003 061d A302     		.2byte	0x2a3
 8004 061f 5C040000 		.4byte	0x45c
 8005 0623 6B030000 		.4byte	.LLST18
 8006 0627 12       		.uleb128 0x12
 8007 0628 7300     		.ascii	"s\000"
 8008 062a 01       		.byte	0x1
 8009 062b A302     		.2byte	0x2a3
 8010 062d 5C040000 		.4byte	0x45c
 8011 0631 89030000 		.4byte	.LLST19
 8012 0635 12       		.uleb128 0x12
 8013 0636 7200     		.ascii	"r\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 239


 8014 0638 01       		.byte	0x1
 8015 0639 A402     		.2byte	0x2a4
 8016 063b 25000000 		.4byte	0x25
 8017 063f A7030000 		.4byte	.LLST20
 8018 0643 00       		.byte	0
 8019 0644 10       		.uleb128 0x10
 8020 0645 37000000 		.4byte	.LASF83
 8021 0649 01       		.byte	0x1
 8022 064a B002     		.2byte	0x2b0
 8023 064c 25000000 		.4byte	0x25
 8024 0650 00000000 		.4byte	.LFB7
 8025 0654 12000000 		.4byte	.LFE7-.LFB7
 8026 0658 01       		.uleb128 0x1
 8027 0659 9C       		.byte	0x9c
 8028 065a 7D060000 		.4byte	0x67d
 8029 065e 11       		.uleb128 0x11
 8030 065f 73747200 		.ascii	"str\000"
 8031 0663 01       		.byte	0x1
 8032 0664 B002     		.2byte	0x2b0
 8033 0666 7D060000 		.4byte	0x67d
 8034 066a BA030000 		.4byte	.LLST21
 8035 066e 17       		.uleb128 0x17
 8036 066f 63687200 		.ascii	"chr\000"
 8037 0673 01       		.byte	0x1
 8038 0674 B002     		.2byte	0x2b0
 8039 0676 25000000 		.4byte	0x25
 8040 067a 01       		.uleb128 0x1
 8041 067b 51       		.byte	0x51
 8042 067c 00       		.byte	0
 8043 067d 0B       		.uleb128 0xb
 8044 067e 04       		.byte	0x4
 8045 067f 83060000 		.4byte	0x683
 8046 0683 13       		.uleb128 0x13
 8047 0684 94000000 		.4byte	0x94
 8048 0688 10       		.uleb128 0x10
 8049 0689 5A040000 		.4byte	.LASF84
 8050 068d 01       		.byte	0x1
 8051 068e B902     		.2byte	0x2b9
 8052 0690 25000000 		.4byte	0x25
 8053 0694 00000000 		.4byte	.LFB8
 8054 0698 24000000 		.4byte	.LFE8-.LFB8
 8055 069c 01       		.uleb128 0x1
 8056 069d 9C       		.byte	0x9c
 8057 069e B1060000 		.4byte	0x6b1
 8058 06a2 11       		.uleb128 0x11
 8059 06a3 6300     		.ascii	"c\000"
 8060 06a5 01       		.byte	0x1
 8061 06a6 B902     		.2byte	0x2b9
 8062 06a8 3E000000 		.4byte	0x3e
 8063 06ac D8030000 		.4byte	.LLST22
 8064 06b0 00       		.byte	0
 8065 06b1 10       		.uleb128 0x10
 8066 06b2 AB050000 		.4byte	.LASF85
 8067 06b6 01       		.byte	0x1
 8068 06b7 CE02     		.2byte	0x2ce
 8069 06b9 25000000 		.4byte	0x25
 8070 06bd 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 240


 8071 06c1 28000000 		.4byte	.LFE9-.LFB9
 8072 06c5 01       		.uleb128 0x1
 8073 06c6 9C       		.byte	0x9c
 8074 06c7 DA060000 		.4byte	0x6da
 8075 06cb 11       		.uleb128 0x11
 8076 06cc 6300     		.ascii	"c\000"
 8077 06ce 01       		.byte	0x1
 8078 06cf CE02     		.2byte	0x2ce
 8079 06d1 3E000000 		.4byte	0x3e
 8080 06d5 5D040000 		.4byte	.LLST23
 8081 06d9 00       		.byte	0
 8082 06da 10       		.uleb128 0x10
 8083 06db D3010000 		.4byte	.LASF86
 8084 06df 01       		.byte	0x1
 8085 06e0 6404     		.2byte	0x464
 8086 06e2 70000000 		.4byte	0x70
 8087 06e6 00000000 		.4byte	.LFB13
 8088 06ea 18000000 		.4byte	.LFE13-.LFB13
 8089 06ee 01       		.uleb128 0x1
 8090 06ef 9C       		.byte	0x9c
 8091 06f0 14070000 		.4byte	0x714
 8092 06f4 11       		.uleb128 0x11
 8093 06f5 667300   		.ascii	"fs\000"
 8094 06f8 01       		.byte	0x1
 8095 06f9 6504     		.2byte	0x465
 8096 06fb F9010000 		.4byte	0x1f9
 8097 06ff E2040000 		.4byte	.LLST24
 8098 0703 18       		.uleb128 0x18
 8099 0704 A3020000 		.4byte	.LASF87
 8100 0708 01       		.byte	0x1
 8101 0709 6604     		.2byte	0x466
 8102 070b 70000000 		.4byte	0x70
 8103 070f 1C050000 		.4byte	.LLST25
 8104 0713 00       		.byte	0
 8105 0714 10       		.uleb128 0x10
 8106 0715 61050000 		.4byte	.LASF88
 8107 0719 01       		.byte	0x1
 8108 071a 2D07     		.2byte	0x72d
 8109 071c 70000000 		.4byte	0x70
 8110 0720 00000000 		.4byte	.LFB22
 8111 0724 24000000 		.4byte	.LFE22-.LFB22
 8112 0728 01       		.uleb128 0x1
 8113 0729 9C       		.byte	0x9c
 8114 072a 81070000 		.4byte	0x781
 8115 072e 11       		.uleb128 0x11
 8116 072f 667300   		.ascii	"fs\000"
 8117 0732 01       		.byte	0x1
 8118 0733 2E07     		.2byte	0x72e
 8119 0735 F9010000 		.4byte	0x1f9
 8120 0739 65050000 		.4byte	.LLST26
 8121 073d 11       		.uleb128 0x11
 8122 073e 64697200 		.ascii	"dir\000"
 8123 0742 01       		.byte	0x1
 8124 0743 2F07     		.2byte	0x72f
 8125 0745 5C040000 		.4byte	0x45c
 8126 0749 91050000 		.4byte	.LLST27
 8127 074d 12       		.uleb128 0x12
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 241


 8128 074e 636C00   		.ascii	"cl\000"
 8129 0751 01       		.byte	0x1
 8130 0752 3207     		.2byte	0x732
 8131 0754 70000000 		.4byte	0x70
 8132 0758 BD050000 		.4byte	.LLST28
 8133 075c 19       		.uleb128 0x19
 8134 075d 0E000000 		.4byte	.LVL69
 8135 0761 22040000 		.4byte	0x422
 8136 0765 70070000 		.4byte	0x770
 8137 0769 1A       		.uleb128 0x1a
 8138 076a 01       		.uleb128 0x1
 8139 076b 50       		.byte	0x50
 8140 076c 02       		.uleb128 0x2
 8141 076d 75       		.byte	0x75
 8142 076e 1A       		.sleb128 26
 8143 076f 00       		.byte	0
 8144 0770 1B       		.uleb128 0x1b
 8145 0771 1E000000 		.4byte	.LVL72
 8146 0775 22040000 		.4byte	0x422
 8147 0779 1A       		.uleb128 0x1a
 8148 077a 01       		.uleb128 0x1
 8149 077b 50       		.byte	0x50
 8150 077c 02       		.uleb128 0x2
 8151 077d 75       		.byte	0x75
 8152 077e 14       		.sleb128 20
 8153 077f 00       		.byte	0
 8154 0780 00       		.byte	0
 8155 0781 14       		.uleb128 0x14
 8156 0782 28010000 		.4byte	.LASF89
 8157 0786 01       		.byte	0x1
 8158 0787 3F07     		.2byte	0x73f
 8159 0789 00000000 		.4byte	.LFB23
 8160 078d 24000000 		.4byte	.LFE23-.LFB23
 8161 0791 01       		.uleb128 0x1
 8162 0792 9C       		.byte	0x9c
 8163 0793 F8070000 		.4byte	0x7f8
 8164 0797 11       		.uleb128 0x11
 8165 0798 667300   		.ascii	"fs\000"
 8166 079b 01       		.byte	0x1
 8167 079c 4007     		.2byte	0x740
 8168 079e F9010000 		.4byte	0x1f9
 8169 07a2 E6050000 		.4byte	.LLST29
 8170 07a6 11       		.uleb128 0x11
 8171 07a7 64697200 		.ascii	"dir\000"
 8172 07ab 01       		.byte	0x1
 8173 07ac 4107     		.2byte	0x741
 8174 07ae 80020000 		.4byte	0x280
 8175 07b2 12060000 		.4byte	.LLST30
 8176 07b6 11       		.uleb128 0x11
 8177 07b7 636C00   		.ascii	"cl\000"
 8178 07ba 01       		.byte	0x1
 8179 07bb 4207     		.2byte	0x742
 8180 07bd 70000000 		.4byte	0x70
 8181 07c1 3E060000 		.4byte	.LLST31
 8182 07c5 19       		.uleb128 0x19
 8183 07c6 12000000 		.4byte	.LVL79
 8184 07ca A1040000 		.4byte	0x4a1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 242


 8185 07ce DF070000 		.4byte	0x7df
 8186 07d2 1A       		.uleb128 0x1a
 8187 07d3 01       		.uleb128 0x1
 8188 07d4 50       		.byte	0x50
 8189 07d5 02       		.uleb128 0x2
 8190 07d6 74       		.byte	0x74
 8191 07d7 1A       		.sleb128 26
 8192 07d8 1A       		.uleb128 0x1a
 8193 07d9 01       		.uleb128 0x1
 8194 07da 51       		.byte	0x51
 8195 07db 02       		.uleb128 0x2
 8196 07dc 75       		.byte	0x75
 8197 07dd 00       		.sleb128 0
 8198 07de 00       		.byte	0
 8199 07df 1B       		.uleb128 0x1b
 8200 07e0 22000000 		.4byte	.LVL80
 8201 07e4 A1040000 		.4byte	0x4a1
 8202 07e8 1A       		.uleb128 0x1a
 8203 07e9 01       		.uleb128 0x1
 8204 07ea 50       		.byte	0x50
 8205 07eb 02       		.uleb128 0x2
 8206 07ec 74       		.byte	0x74
 8207 07ed 14       		.sleb128 20
 8208 07ee 1A       		.uleb128 0x1a
 8209 07ef 01       		.uleb128 0x1
 8210 07f0 51       		.byte	0x51
 8211 07f1 04       		.uleb128 0x4
 8212 07f2 75       		.byte	0x75
 8213 07f3 00       		.sleb128 0
 8214 07f4 40       		.byte	0x40
 8215 07f5 25       		.byte	0x25
 8216 07f6 00       		.byte	0
 8217 07f7 00       		.byte	0
 8218 07f8 14       		.uleb128 0x14
 8219 07f9 49030000 		.4byte	.LASF90
 8220 07fd 01       		.byte	0x1
 8221 07fe 670A     		.2byte	0xa67
 8222 0800 00000000 		.4byte	.LFB28
 8223 0804 6A000000 		.4byte	.LFE28-.LFB28
 8224 0808 01       		.uleb128 0x1
 8225 0809 9C       		.byte	0x9c
 8226 080a 75080000 		.4byte	0x875
 8227 080e 11       		.uleb128 0x11
 8228 080f 647000   		.ascii	"dp\000"
 8229 0812 01       		.byte	0x1
 8230 0813 680A     		.2byte	0xa68
 8231 0815 75080000 		.4byte	0x875
 8232 0819 6A060000 		.4byte	.LLST32
 8233 081d 11       		.uleb128 0x11
 8234 081e 666E6F00 		.ascii	"fno\000"
 8235 0822 01       		.byte	0x1
 8236 0823 690A     		.2byte	0xa69
 8237 0825 7B080000 		.4byte	0x87b
 8238 0829 96060000 		.4byte	.LLST33
 8239 082d 12       		.uleb128 0x12
 8240 082e 736900   		.ascii	"si\000"
 8241 0831 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 243


 8242 0832 6C0A     		.2byte	0xa6c
 8243 0834 2C000000 		.4byte	0x2c
 8244 0838 C2060000 		.4byte	.LLST34
 8245 083c 12       		.uleb128 0x12
 8246 083d 646900   		.ascii	"di\000"
 8247 0840 01       		.byte	0x1
 8248 0841 6C0A     		.2byte	0xa6c
 8249 0843 2C000000 		.4byte	0x2c
 8250 0847 EB060000 		.4byte	.LLST35
 8251 084b 12       		.uleb128 0x12
 8252 084c 6300     		.ascii	"c\000"
 8253 084e 01       		.byte	0x1
 8254 084f 710A     		.2byte	0xa71
 8255 0851 89000000 		.4byte	0x89
 8256 0855 16070000 		.4byte	.LLST36
 8257 0859 1C       		.uleb128 0x1c
 8258 085a 52000000 		.4byte	.LVL96
 8259 085e 67040000 		.4byte	0x467
 8260 0862 1C       		.uleb128 0x1c
 8261 0863 5C000000 		.4byte	.LVL97
 8262 0867 22040000 		.4byte	0x422
 8263 086b 1C       		.uleb128 0x1c
 8264 086c 66000000 		.4byte	.LVL98
 8265 0870 22040000 		.4byte	0x422
 8266 0874 00       		.byte	0
 8267 0875 0B       		.uleb128 0xb
 8268 0876 04       		.byte	0x4
 8269 0877 F1020000 		.4byte	0x2f1
 8270 087b 0B       		.uleb128 0xb
 8271 087c 04       		.byte	0x4
 8272 087d 51030000 		.4byte	0x351
 8273 0881 10       		.uleb128 0x10
 8274 0882 6F050000 		.4byte	.LASF91
 8275 0886 01       		.byte	0x1
 8276 0887 200B     		.2byte	0xb20
 8277 0889 E1030000 		.4byte	0x3e1
 8278 088d 00000000 		.4byte	.LFB29
 8279 0891 1C010000 		.4byte	.LFE29-.LFB29
 8280 0895 01       		.uleb128 0x1
 8281 0896 9C       		.byte	0x9c
 8282 0897 81090000 		.4byte	0x981
 8283 089b 11       		.uleb128 0x11
 8284 089c 647000   		.ascii	"dp\000"
 8285 089f 01       		.byte	0x1
 8286 08a0 210B     		.2byte	0xb21
 8287 08a2 75080000 		.4byte	0x875
 8288 08a6 29070000 		.4byte	.LLST37
 8289 08aa 18       		.uleb128 0x18
 8290 08ab 67000000 		.4byte	.LASF92
 8291 08af 01       		.byte	0x1
 8292 08b0 220B     		.2byte	0xb22
 8293 08b2 81090000 		.4byte	0x981
 8294 08b6 48070000 		.4byte	.LLST38
 8295 08ba 12       		.uleb128 0x12
 8296 08bb 6300     		.ascii	"c\000"
 8297 08bd 01       		.byte	0x1
 8298 08be 9F0B     		.2byte	0xb9f
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 244


 8299 08c0 3E000000 		.4byte	0x3e
 8300 08c4 A0070000 		.4byte	.LLST39
 8301 08c8 12       		.uleb128 0x12
 8302 08c9 6400     		.ascii	"d\000"
 8303 08cb 01       		.byte	0x1
 8304 08cc 9F0B     		.2byte	0xb9f
 8305 08ce 3E000000 		.4byte	0x3e
 8306 08d2 CB070000 		.4byte	.LLST40
 8307 08d6 12       		.uleb128 0x12
 8308 08d7 73666E00 		.ascii	"sfn\000"
 8309 08db 01       		.byte	0x1
 8310 08dc 9F0B     		.2byte	0xb9f
 8311 08de 80020000 		.4byte	0x280
 8312 08e2 E9070000 		.4byte	.LLST41
 8313 08e6 12       		.uleb128 0x12
 8314 08e7 6E6900   		.ascii	"ni\000"
 8315 08ea 01       		.byte	0x1
 8316 08eb A00B     		.2byte	0xba0
 8317 08ed 2C000000 		.4byte	0x2c
 8318 08f1 17080000 		.4byte	.LLST42
 8319 08f5 12       		.uleb128 0x12
 8320 08f6 736900   		.ascii	"si\000"
 8321 08f9 01       		.byte	0x1
 8322 08fa A00B     		.2byte	0xba0
 8323 08fc 2C000000 		.4byte	0x2c
 8324 0900 6D080000 		.4byte	.LLST43
 8325 0904 12       		.uleb128 0x12
 8326 0905 6900     		.ascii	"i\000"
 8327 0907 01       		.byte	0x1
 8328 0908 A00B     		.2byte	0xba0
 8329 090a 2C000000 		.4byte	0x2c
 8330 090e CE080000 		.4byte	.LLST44
 8331 0912 12       		.uleb128 0x12
 8332 0913 7000     		.ascii	"p\000"
 8333 0915 01       		.byte	0x1
 8334 0916 A10B     		.2byte	0xba1
 8335 0918 7D060000 		.4byte	0x67d
 8336 091c 33090000 		.4byte	.LLST45
 8337 0920 19       		.uleb128 0x19
 8338 0921 2A000000 		.4byte	.LVL107
 8339 0925 7B050000 		.4byte	0x57b
 8340 0929 3F090000 		.4byte	0x93f
 8341 092d 1A       		.uleb128 0x1a
 8342 092e 01       		.uleb128 0x1
 8343 092f 50       		.byte	0x50
 8344 0930 02       		.uleb128 0x2
 8345 0931 7B       		.byte	0x7b
 8346 0932 00       		.sleb128 0
 8347 0933 1A       		.uleb128 0x1a
 8348 0934 01       		.uleb128 0x1
 8349 0935 51       		.byte	0x51
 8350 0936 02       		.uleb128 0x2
 8351 0937 08       		.byte	0x8
 8352 0938 20       		.byte	0x20
 8353 0939 1A       		.uleb128 0x1a
 8354 093a 01       		.uleb128 0x1
 8355 093b 52       		.byte	0x52
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 245


 8356 093c 01       		.uleb128 0x1
 8357 093d 3B       		.byte	0x3b
 8358 093e 00       		.byte	0
 8359 093f 19       		.uleb128 0x19
 8360 0940 78000000 		.4byte	.LVL121
 8361 0944 88060000 		.4byte	0x688
 8362 0948 53090000 		.4byte	0x953
 8363 094c 1A       		.uleb128 0x1a
 8364 094d 01       		.uleb128 0x1
 8365 094e 50       		.byte	0x50
 8366 094f 02       		.uleb128 0x2
 8367 0950 74       		.byte	0x74
 8368 0951 00       		.sleb128 0
 8369 0952 00       		.byte	0
 8370 0953 19       		.uleb128 0x19
 8371 0954 88000000 		.4byte	.LVL124
 8372 0958 B1060000 		.4byte	0x6b1
 8373 095c 67090000 		.4byte	0x967
 8374 0960 1A       		.uleb128 0x1a
 8375 0961 01       		.uleb128 0x1
 8376 0962 50       		.byte	0x50
 8377 0963 02       		.uleb128 0x2
 8378 0964 75       		.byte	0x75
 8379 0965 00       		.sleb128 0
 8380 0966 00       		.byte	0
 8381 0967 1B       		.uleb128 0x1b
 8382 0968 A8000000 		.4byte	.LVL129
 8383 096c 44060000 		.4byte	0x644
 8384 0970 1A       		.uleb128 0x1a
 8385 0971 01       		.uleb128 0x1
 8386 0972 50       		.byte	0x50
 8387 0973 05       		.uleb128 0x5
 8388 0974 03       		.byte	0x3
 8389 0975 00000000 		.4byte	.LC0
 8390 0979 1A       		.uleb128 0x1a
 8391 097a 01       		.uleb128 0x1
 8392 097b 51       		.byte	0x51
 8393 097c 02       		.uleb128 0x2
 8394 097d 74       		.byte	0x74
 8395 097e 00       		.sleb128 0
 8396 097f 00       		.byte	0
 8397 0980 00       		.byte	0
 8398 0981 0B       		.uleb128 0xb
 8399 0982 04       		.byte	0x4
 8400 0983 87090000 		.4byte	0x987
 8401 0987 0B       		.uleb128 0xb
 8402 0988 04       		.byte	0x4
 8403 0989 8D090000 		.4byte	0x98d
 8404 098d 13       		.uleb128 0x13
 8405 098e 89000000 		.4byte	0x89
 8406 0992 10       		.uleb128 0x10
 8407 0993 DB030000 		.4byte	.LASF93
 8408 0997 01       		.byte	0x1
 8409 0998 3E0C     		.2byte	0xc3e
 8410 099a 25000000 		.4byte	0x25
 8411 099e 00000000 		.4byte	.LFB31
 8412 09a2 52000000 		.4byte	.LFE31-.LFB31
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 246


 8413 09a6 01       		.uleb128 0x1
 8414 09a7 9C       		.byte	0x9c
 8415 09a8 F9090000 		.4byte	0x9f9
 8416 09ac 18       		.uleb128 0x18
 8417 09ad 67000000 		.4byte	.LASF92
 8418 09b1 01       		.byte	0x1
 8419 09b2 3F0C     		.2byte	0xc3f
 8420 09b4 81090000 		.4byte	0x981
 8421 09b8 93090000 		.4byte	.LLST46
 8422 09bc 12       		.uleb128 0x12
 8423 09bd 747000   		.ascii	"tp\000"
 8424 09c0 01       		.byte	0x1
 8425 09c1 420C     		.2byte	0xc42
 8426 09c3 87090000 		.4byte	0x987
 8427 09c7 B4090000 		.4byte	.LLST47
 8428 09cb 12       		.uleb128 0x12
 8429 09cc 747400   		.ascii	"tt\000"
 8430 09cf 01       		.byte	0x1
 8431 09d0 420C     		.2byte	0xc42
 8432 09d2 87090000 		.4byte	0x987
 8433 09d6 DD090000 		.4byte	.LLST48
 8434 09da 12       		.uleb128 0x12
 8435 09db 6900     		.ascii	"i\000"
 8436 09dd 01       		.byte	0x1
 8437 09de 430C     		.2byte	0xc43
 8438 09e0 2C000000 		.4byte	0x2c
 8439 09e4 130A0000 		.4byte	.LLST49
 8440 09e8 12       		.uleb128 0x12
 8441 09e9 766F6C00 		.ascii	"vol\000"
 8442 09ed 01       		.byte	0x1
 8443 09ee 440C     		.2byte	0xc44
 8444 09f0 25000000 		.4byte	0x25
 8445 09f4 7D0A0000 		.4byte	.LLST50
 8446 09f8 00       		.byte	0
 8447 09f9 10       		.uleb128 0x10
 8448 09fa 97040000 		.4byte	.LASF94
 8449 09fe 01       		.byte	0x1
 8450 09ff 790D     		.2byte	0xd79
 8451 0a01 E1030000 		.4byte	0x3e1
 8452 0a05 00000000 		.4byte	.LFB34
 8453 0a09 4C000000 		.4byte	.LFE34-.LFB34
 8454 0a0d 01       		.uleb128 0x1
 8455 0a0e 9C       		.byte	0x9c
 8456 0a0f 4D0A0000 		.4byte	0xa4d
 8457 0a13 11       		.uleb128 0x11
 8458 0a14 6F626A00 		.ascii	"obj\000"
 8459 0a18 01       		.byte	0x1
 8460 0a19 7A0D     		.2byte	0xd7a
 8461 0a1b 4D0A0000 		.4byte	0xa4d
 8462 0a1f B50A0000 		.4byte	.LLST51
 8463 0a23 11       		.uleb128 0x11
 8464 0a24 72667300 		.ascii	"rfs\000"
 8465 0a28 01       		.byte	0x1
 8466 0a29 7B0D     		.2byte	0xd7b
 8467 0a2b 530A0000 		.4byte	0xa53
 8468 0a2f 390B0000 		.4byte	.LLST52
 8469 0a33 12       		.uleb128 0x12
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 247


 8470 0a34 72657300 		.ascii	"res\000"
 8471 0a38 01       		.byte	0x1
 8472 0a39 7E0D     		.2byte	0xd7e
 8473 0a3b E1030000 		.4byte	0x3e1
 8474 0a3f 7B0B0000 		.4byte	.LLST53
 8475 0a43 1C       		.uleb128 0x1c
 8476 0a44 24000000 		.4byte	.LVL171
 8477 0a48 D62C0000 		.4byte	0x2cd6
 8478 0a4c 00       		.byte	0
 8479 0a4d 0B       		.uleb128 0xb
 8480 0a4e 04       		.byte	0x4
 8481 0a4f FF010000 		.4byte	0x1ff
 8482 0a53 0B       		.uleb128 0xb
 8483 0a54 04       		.byte	0x4
 8484 0a55 F9010000 		.4byte	0x1f9
 8485 0a59 10       		.uleb128 0x10
 8486 0a5a 83010000 		.4byte	.LASF95
 8487 0a5e 01       		.byte	0x1
 8488 0a5f 0704     		.2byte	0x407
 8489 0a61 E1030000 		.4byte	0x3e1
 8490 0a65 00000000 		.4byte	.LFB10
 8491 0a69 54000000 		.4byte	.LFE10-.LFB10
 8492 0a6d 01       		.uleb128 0x1
 8493 0a6e 9C       		.byte	0x9c
 8494 0a6f BC0A0000 		.4byte	0xabc
 8495 0a73 11       		.uleb128 0x11
 8496 0a74 667300   		.ascii	"fs\000"
 8497 0a77 01       		.byte	0x1
 8498 0a78 0804     		.2byte	0x408
 8499 0a7a F9010000 		.4byte	0x1f9
 8500 0a7e 9A0B0000 		.4byte	.LLST54
 8501 0a82 12       		.uleb128 0x12
 8502 0a83 72657300 		.ascii	"res\000"
 8503 0a87 01       		.byte	0x1
 8504 0a88 0B04     		.2byte	0x40b
 8505 0a8a E1030000 		.4byte	0x3e1
 8506 0a8e DC0B0000 		.4byte	.LLST55
 8507 0a92 19       		.uleb128 0x19
 8508 0a93 1A000000 		.4byte	.LVL186
 8509 0a97 E12C0000 		.4byte	0x2ce1
 8510 0a9b AB0A0000 		.4byte	0xaab
 8511 0a9f 1A       		.uleb128 0x1a
 8512 0aa0 01       		.uleb128 0x1
 8513 0aa1 51       		.byte	0x51
 8514 0aa2 02       		.uleb128 0x2
 8515 0aa3 75       		.byte	0x75
 8516 0aa4 00       		.sleb128 0
 8517 0aa5 1A       		.uleb128 0x1a
 8518 0aa6 01       		.uleb128 0x1
 8519 0aa7 53       		.byte	0x53
 8520 0aa8 01       		.uleb128 0x1
 8521 0aa9 31       		.byte	0x31
 8522 0aaa 00       		.byte	0
 8523 0aab 1B       		.uleb128 0x1b
 8524 0aac 40000000 		.4byte	.LVL187
 8525 0ab0 E12C0000 		.4byte	0x2ce1
 8526 0ab4 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 248


 8527 0ab5 01       		.uleb128 0x1
 8528 0ab6 51       		.byte	0x51
 8529 0ab7 02       		.uleb128 0x2
 8530 0ab8 75       		.byte	0x75
 8531 0ab9 00       		.sleb128 0
 8532 0aba 00       		.byte	0
 8533 0abb 00       		.byte	0
 8534 0abc 10       		.uleb128 0x10
 8535 0abd E8050000 		.4byte	.LASF96
 8536 0ac1 01       		.byte	0x1
 8537 0ac2 1E04     		.2byte	0x41e
 8538 0ac4 E1030000 		.4byte	0x3e1
 8539 0ac8 00000000 		.4byte	.LFB11
 8540 0acc 36000000 		.4byte	.LFE11-.LFB11
 8541 0ad0 01       		.uleb128 0x1
 8542 0ad1 9C       		.byte	0x9c
 8543 0ad2 350B0000 		.4byte	0xb35
 8544 0ad6 11       		.uleb128 0x11
 8545 0ad7 667300   		.ascii	"fs\000"
 8546 0ada 01       		.byte	0x1
 8547 0adb 1F04     		.2byte	0x41f
 8548 0add F9010000 		.4byte	0x1f9
 8549 0ae1 FB0B0000 		.4byte	.LLST56
 8550 0ae5 18       		.uleb128 0x18
 8551 0ae6 D8020000 		.4byte	.LASF97
 8552 0aea 01       		.byte	0x1
 8553 0aeb 2004     		.2byte	0x420
 8554 0aed 70000000 		.4byte	0x70
 8555 0af1 3D0C0000 		.4byte	.LLST57
 8556 0af5 12       		.uleb128 0x12
 8557 0af6 72657300 		.ascii	"res\000"
 8558 0afa 01       		.byte	0x1
 8559 0afb 2304     		.2byte	0x423
 8560 0afd E1030000 		.4byte	0x3e1
 8561 0b01 8A0C0000 		.4byte	.LLST58
 8562 0b05 19       		.uleb128 0x19
 8563 0b06 10000000 		.4byte	.LVL194
 8564 0b0a 590A0000 		.4byte	0xa59
 8565 0b0e 190B0000 		.4byte	0xb19
 8566 0b12 1A       		.uleb128 0x1a
 8567 0b13 01       		.uleb128 0x1
 8568 0b14 50       		.byte	0x50
 8569 0b15 02       		.uleb128 0x2
 8570 0b16 75       		.byte	0x75
 8571 0b17 00       		.sleb128 0
 8572 0b18 00       		.byte	0
 8573 0b19 1B       		.uleb128 0x1b
 8574 0b1a 22000000 		.4byte	.LVL197
 8575 0b1e EC2C0000 		.4byte	0x2cec
 8576 0b22 1A       		.uleb128 0x1a
 8577 0b23 01       		.uleb128 0x1
 8578 0b24 51       		.byte	0x51
 8579 0b25 02       		.uleb128 0x2
 8580 0b26 75       		.byte	0x75
 8581 0b27 30       		.sleb128 48
 8582 0b28 1A       		.uleb128 0x1a
 8583 0b29 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 249


 8584 0b2a 52       		.byte	0x52
 8585 0b2b 02       		.uleb128 0x2
 8586 0b2c 76       		.byte	0x76
 8587 0b2d 00       		.sleb128 0
 8588 0b2e 1A       		.uleb128 0x1a
 8589 0b2f 01       		.uleb128 0x1
 8590 0b30 53       		.byte	0x53
 8591 0b31 01       		.uleb128 0x1
 8592 0b32 31       		.byte	0x31
 8593 0b33 00       		.byte	0
 8594 0b34 00       		.byte	0
 8595 0b35 10       		.uleb128 0x10
 8596 0b36 73040000 		.4byte	.LASF98
 8597 0b3a 01       		.byte	0x1
 8598 0b3b 7B0C     		.2byte	0xc7b
 8599 0b3d 3E000000 		.4byte	0x3e
 8600 0b41 00000000 		.4byte	.LFB32
 8601 0b45 78000000 		.4byte	.LFE32-.LFB32
 8602 0b49 01       		.uleb128 0x1
 8603 0b4a 9C       		.byte	0x9c
 8604 0b4b E10B0000 		.4byte	0xbe1
 8605 0b4f 11       		.uleb128 0x11
 8606 0b50 667300   		.ascii	"fs\000"
 8607 0b53 01       		.byte	0x1
 8608 0b54 7C0C     		.2byte	0xc7c
 8609 0b56 F9010000 		.4byte	0x1f9
 8610 0b5a E30C0000 		.4byte	.LLST59
 8611 0b5e 18       		.uleb128 0x18
 8612 0b5f 9F000000 		.4byte	.LASF40
 8613 0b63 01       		.byte	0x1
 8614 0b64 7D0C     		.2byte	0xc7d
 8615 0b66 70000000 		.4byte	0x70
 8616 0b6a 0F0D0000 		.4byte	.LLST60
 8617 0b6e 19       		.uleb128 0x19
 8618 0b6f 10000000 		.4byte	.LVL207
 8619 0b73 BC0A0000 		.4byte	0xabc
 8620 0b77 890B0000 		.4byte	0xb89
 8621 0b7b 1A       		.uleb128 0x1a
 8622 0b7c 01       		.uleb128 0x1
 8623 0b7d 50       		.byte	0x50
 8624 0b7e 02       		.uleb128 0x2
 8625 0b7f 74       		.byte	0x74
 8626 0b80 00       		.sleb128 0
 8627 0b81 1A       		.uleb128 0x1a
 8628 0b82 01       		.uleb128 0x1
 8629 0b83 51       		.byte	0x51
 8630 0b84 03       		.uleb128 0x3
 8631 0b85 F3       		.byte	0xf3
 8632 0b86 01       		.uleb128 0x1
 8633 0b87 51       		.byte	0x51
 8634 0b88 00       		.byte	0
 8635 0b89 19       		.uleb128 0x19
 8636 0b8a 1C000000 		.4byte	.LVL208
 8637 0b8e 22040000 		.4byte	0x422
 8638 0b92 9E0B0000 		.4byte	0xb9e
 8639 0b96 1A       		.uleb128 0x1a
 8640 0b97 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 250


 8641 0b98 50       		.byte	0x50
 8642 0b99 03       		.uleb128 0x3
 8643 0b9a 74       		.byte	0x74
 8644 0b9b AE04     		.sleb128 558
 8645 0b9d 00       		.byte	0
 8646 0b9e 19       		.uleb128 0x19
 8647 0b9f 3E000000 		.4byte	.LVL209
 8648 0ba3 CF050000 		.4byte	0x5cf
 8649 0ba7 C10B0000 		.4byte	0xbc1
 8650 0bab 1A       		.uleb128 0x1a
 8651 0bac 01       		.uleb128 0x1
 8652 0bad 50       		.byte	0x50
 8653 0bae 03       		.uleb128 0x3
 8654 0baf 74       		.byte	0x74
 8655 0bb0 E600     		.sleb128 102
 8656 0bb2 1A       		.uleb128 0x1a
 8657 0bb3 01       		.uleb128 0x1
 8658 0bb4 51       		.byte	0x51
 8659 0bb5 05       		.uleb128 0x5
 8660 0bb6 03       		.byte	0x3
 8661 0bb7 10000000 		.4byte	.LC2
 8662 0bbb 1A       		.uleb128 0x1a
 8663 0bbc 01       		.uleb128 0x1
 8664 0bbd 52       		.byte	0x52
 8665 0bbe 01       		.uleb128 0x1
 8666 0bbf 33       		.byte	0x33
 8667 0bc0 00       		.byte	0
 8668 0bc1 1B       		.uleb128 0x1b
 8669 0bc2 4E000000 		.4byte	.LVL210
 8670 0bc6 CF050000 		.4byte	0x5cf
 8671 0bca 1A       		.uleb128 0x1a
 8672 0bcb 01       		.uleb128 0x1
 8673 0bcc 50       		.byte	0x50
 8674 0bcd 03       		.uleb128 0x3
 8675 0bce 74       		.byte	0x74
 8676 0bcf 8201     		.sleb128 130
 8677 0bd1 1A       		.uleb128 0x1a
 8678 0bd2 01       		.uleb128 0x1
 8679 0bd3 51       		.byte	0x51
 8680 0bd4 05       		.uleb128 0x5
 8681 0bd5 03       		.byte	0x3
 8682 0bd6 14000000 		.4byte	.LC4
 8683 0bda 1A       		.uleb128 0x1a
 8684 0bdb 01       		.uleb128 0x1
 8685 0bdc 52       		.byte	0x52
 8686 0bdd 01       		.uleb128 0x1
 8687 0bde 35       		.byte	0x35
 8688 0bdf 00       		.byte	0
 8689 0be0 00       		.byte	0
 8690 0be1 1D       		.uleb128 0x1d
 8691 0be2 4E040000 		.4byte	.LASF99
 8692 0be6 01       		.byte	0x1
 8693 0be7 970C     		.2byte	0xc97
 8694 0be9 E1030000 		.4byte	0x3e1
 8695 0bed 00000000 		.4byte	.LFB33
 8696 0bf1 2C030000 		.4byte	.LFE33-.LFB33
 8697 0bf5 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 251


 8698 0bf6 9C       		.byte	0x9c
 8699 0bf7 D50E0000 		.4byte	0xed5
 8700 0bfb 18       		.uleb128 0x18
 8701 0bfc 67000000 		.4byte	.LASF92
 8702 0c00 01       		.byte	0x1
 8703 0c01 980C     		.2byte	0xc98
 8704 0c03 81090000 		.4byte	0x981
 8705 0c07 300D0000 		.4byte	.LLST61
 8706 0c0b 11       		.uleb128 0x11
 8707 0c0c 72667300 		.ascii	"rfs\000"
 8708 0c10 01       		.byte	0x1
 8709 0c11 990C     		.2byte	0xc99
 8710 0c13 530A0000 		.4byte	0xa53
 8711 0c17 510D0000 		.4byte	.LLST62
 8712 0c1b 18       		.uleb128 0x18
 8713 0c1c CE010000 		.4byte	.LASF100
 8714 0c20 01       		.byte	0x1
 8715 0c21 9A0C     		.2byte	0xc9a
 8716 0c23 3E000000 		.4byte	0x3e
 8717 0c27 960D0000 		.4byte	.LLST63
 8718 0c2b 12       		.uleb128 0x12
 8719 0c2c 666D7400 		.ascii	"fmt\000"
 8720 0c30 01       		.byte	0x1
 8721 0c31 9D0C     		.2byte	0xc9d
 8722 0c33 3E000000 		.4byte	0x3e
 8723 0c37 DB0D0000 		.4byte	.LLST64
 8724 0c3b 12       		.uleb128 0x12
 8725 0c3c 707400   		.ascii	"pt\000"
 8726 0c3f 01       		.byte	0x1
 8727 0c40 9D0C     		.2byte	0xc9d
 8728 0c42 80020000 		.4byte	0x280
 8729 0c46 3C0E0000 		.4byte	.LLST65
 8730 0c4a 12       		.uleb128 0x12
 8731 0c4b 766F6C00 		.ascii	"vol\000"
 8732 0c4f 01       		.byte	0x1
 8733 0c50 9E0C     		.2byte	0xc9e
 8734 0c52 25000000 		.4byte	0x25
 8735 0c56 A60E0000 		.4byte	.LLST66
 8736 0c5a 1E       		.uleb128 0x1e
 8737 0c5b 4C060000 		.4byte	.LASF33
 8738 0c5f 01       		.byte	0x1
 8739 0c60 9F0C     		.2byte	0xc9f
 8740 0c62 EC030000 		.4byte	0x3ec
 8741 0c66 FB0E0000 		.4byte	.LLST67
 8742 0c6a 1E       		.uleb128 0x1e
 8743 0c6b 71020000 		.4byte	.LASF101
 8744 0c6f 01       		.byte	0x1
 8745 0c70 A00C     		.2byte	0xca0
 8746 0c72 70000000 		.4byte	0x70
 8747 0c76 450F0000 		.4byte	.LLST68
 8748 0c7a 1E       		.uleb128 0x1e
 8749 0c7b A4000000 		.4byte	.LASF102
 8750 0c7f 01       		.byte	0x1
 8751 0c80 A00C     		.2byte	0xca0
 8752 0c82 70000000 		.4byte	0x70
 8753 0c86 6F0F0000 		.4byte	.LLST69
 8754 0c8a 1E       		.uleb128 0x1e
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 252


 8755 0c8b B3060000 		.4byte	.LASF103
 8756 0c8f 01       		.byte	0x1
 8757 0c90 A00C     		.2byte	0xca0
 8758 0c92 70000000 		.4byte	0x70
 8759 0c96 C40F0000 		.4byte	.LLST70
 8760 0c9a 1E       		.uleb128 0x1e
 8761 0c9b 77020000 		.4byte	.LASF104
 8762 0c9f 01       		.byte	0x1
 8763 0ca0 A00C     		.2byte	0xca0
 8764 0ca2 70000000 		.4byte	0x70
 8765 0ca6 ED0F0000 		.4byte	.LLST71
 8766 0caa 1E       		.uleb128 0x1e
 8767 0cab 56030000 		.4byte	.LASF105
 8768 0caf 01       		.byte	0x1
 8769 0cb0 A00C     		.2byte	0xca0
 8770 0cb2 70000000 		.4byte	0x70
 8771 0cb6 3F100000 		.4byte	.LLST72
 8772 0cba 1E       		.uleb128 0x1e
 8773 0cbb DF020000 		.4byte	.LASF106
 8774 0cbf 01       		.byte	0x1
 8775 0cc0 A00C     		.2byte	0xca0
 8776 0cc2 70000000 		.4byte	0x70
 8777 0cc6 A5100000 		.4byte	.LLST73
 8778 0cca 1F       		.uleb128 0x1f
 8779 0ccb 627200   		.ascii	"br\000"
 8780 0cce 01       		.byte	0x1
 8781 0ccf A00C     		.2byte	0xca0
 8782 0cd1 D50E0000 		.4byte	0xed5
 8783 0cd5 02       		.uleb128 0x2
 8784 0cd6 91       		.byte	0x91
 8785 0cd7 48       		.sleb128 -56
 8786 0cd8 1E       		.uleb128 0x1e
 8787 0cd9 AB000000 		.4byte	.LASF107
 8788 0cdd 01       		.byte	0x1
 8789 0cde A10C     		.2byte	0xca1
 8790 0ce0 57000000 		.4byte	0x57
 8791 0ce4 D1100000 		.4byte	.LLST74
 8792 0ce8 12       		.uleb128 0x12
 8793 0ce9 667300   		.ascii	"fs\000"
 8794 0cec 01       		.byte	0x1
 8795 0ced A20C     		.2byte	0xca2
 8796 0cef F9010000 		.4byte	0x1f9
 8797 0cf3 FA100000 		.4byte	.LLST75
 8798 0cf7 12       		.uleb128 0x12
 8799 0cf8 6900     		.ascii	"i\000"
 8800 0cfa 01       		.byte	0x1
 8801 0cfb A30C     		.2byte	0xca3
 8802 0cfd 2C000000 		.4byte	0x2c
 8803 0d01 18110000 		.4byte	.LLST76
 8804 0d05 19       		.uleb128 0x19
 8805 0d06 1A000000 		.4byte	.LVL213
 8806 0d0a 92090000 		.4byte	0x992
 8807 0d0e 1A0D0000 		.4byte	0xd1a
 8808 0d12 1A       		.uleb128 0x1a
 8809 0d13 01       		.uleb128 0x1
 8810 0d14 50       		.byte	0x50
 8811 0d15 03       		.uleb128 0x3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 253


 8812 0d16 F3       		.byte	0xf3
 8813 0d17 01       		.uleb128 0x1
 8814 0d18 50       		.byte	0x50
 8815 0d19 00       		.byte	0
 8816 0d1a 1C       		.uleb128 0x1c
 8817 0d1b 3E000000 		.4byte	.LVL218
 8818 0d1f D62C0000 		.4byte	0x2cd6
 8819 0d23 19       		.uleb128 0x19
 8820 0d24 5E000000 		.4byte	.LVL220
 8821 0d28 F72C0000 		.4byte	0x2cf7
 8822 0d2c 370D0000 		.4byte	0xd37
 8823 0d30 1A       		.uleb128 0x1a
 8824 0d31 01       		.uleb128 0x1
 8825 0d32 50       		.byte	0x50
 8826 0d33 02       		.uleb128 0x2
 8827 0d34 75       		.byte	0x75
 8828 0d35 00       		.sleb128 0
 8829 0d36 00       		.byte	0
 8830 0d37 19       		.uleb128 0x19
 8831 0d38 76000000 		.4byte	.LVL223
 8832 0d3c 350B0000 		.4byte	0xb35
 8833 0d40 500D0000 		.4byte	0xd50
 8834 0d44 1A       		.uleb128 0x1a
 8835 0d45 01       		.uleb128 0x1
 8836 0d46 50       		.byte	0x50
 8837 0d47 02       		.uleb128 0x2
 8838 0d48 74       		.byte	0x74
 8839 0d49 00       		.sleb128 0
 8840 0d4a 1A       		.uleb128 0x1a
 8841 0d4b 01       		.uleb128 0x1
 8842 0d4c 51       		.byte	0x51
 8843 0d4d 01       		.uleb128 0x1
 8844 0d4e 30       		.byte	0x30
 8845 0d4f 00       		.byte	0
 8846 0d50 19       		.uleb128 0x19
 8847 0d51 98000000 		.4byte	.LVL228
 8848 0d55 67040000 		.4byte	0x467
 8849 0d59 6C0D0000 		.4byte	0xd6c
 8850 0d5d 1A       		.uleb128 0x1a
 8851 0d5e 01       		.uleb128 0x1
 8852 0d5f 50       		.byte	0x50
 8853 0d60 0A       		.uleb128 0xa
 8854 0d61 75       		.byte	0x75
 8855 0d62 00       		.sleb128 0
 8856 0d63 34       		.byte	0x34
 8857 0d64 24       		.byte	0x24
 8858 0d65 74       		.byte	0x74
 8859 0d66 00       		.sleb128 0
 8860 0d67 22       		.byte	0x22
 8861 0d68 23       		.byte	0x23
 8862 0d69 F603     		.uleb128 0x1f6
 8863 0d6b 00       		.byte	0
 8864 0d6c 19       		.uleb128 0x19
 8865 0d6d C0000000 		.4byte	.LVL236
 8866 0d71 350B0000 		.4byte	0xb35
 8867 0d75 860D0000 		.4byte	0xd86
 8868 0d79 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 254


 8869 0d7a 01       		.uleb128 0x1
 8870 0d7b 50       		.byte	0x50
 8871 0d7c 02       		.uleb128 0x2
 8872 0d7d 74       		.byte	0x74
 8873 0d7e 00       		.sleb128 0
 8874 0d7f 1A       		.uleb128 0x1a
 8875 0d80 01       		.uleb128 0x1
 8876 0d81 51       		.byte	0x51
 8877 0d82 02       		.uleb128 0x2
 8878 0d83 75       		.byte	0x75
 8879 0d84 00       		.sleb128 0
 8880 0d85 00       		.byte	0
 8881 0d86 19       		.uleb128 0x19
 8882 0d87 E2000000 		.4byte	.LVL241
 8883 0d8b 22040000 		.4byte	0x422
 8884 0d8f 9A0D0000 		.4byte	0xd9a
 8885 0d93 1A       		.uleb128 0x1a
 8886 0d94 01       		.uleb128 0x1
 8887 0d95 50       		.byte	0x50
 8888 0d96 02       		.uleb128 0x2
 8889 0d97 74       		.byte	0x74
 8890 0d98 3B       		.sleb128 59
 8891 0d99 00       		.byte	0
 8892 0d9a 19       		.uleb128 0x19
 8893 0d9b F4000000 		.4byte	.LVL242
 8894 0d9f 22040000 		.4byte	0x422
 8895 0da3 AF0D0000 		.4byte	0xdaf
 8896 0da7 1A       		.uleb128 0x1a
 8897 0da8 01       		.uleb128 0x1
 8898 0da9 50       		.byte	0x50
 8899 0daa 03       		.uleb128 0x3
 8900 0dab 74       		.byte	0x74
 8901 0dac C600     		.sleb128 70
 8902 0dae 00       		.byte	0
 8903 0daf 19       		.uleb128 0x19
 8904 0db0 02010000 		.4byte	.LVL245
 8905 0db4 67040000 		.4byte	0x467
 8906 0db8 C40D0000 		.4byte	0xdc4
 8907 0dbc 1A       		.uleb128 0x1a
 8908 0dbd 01       		.uleb128 0x1
 8909 0dbe 50       		.byte	0x50
 8910 0dbf 03       		.uleb128 0x3
 8911 0dc0 74       		.byte	0x74
 8912 0dc1 D400     		.sleb128 84
 8913 0dc3 00       		.byte	0
 8914 0dc4 19       		.uleb128 0x19
 8915 0dc5 3E010000 		.4byte	.LVL249
 8916 0dc9 22040000 		.4byte	0x422
 8917 0dcd D90D0000 		.4byte	0xdd9
 8918 0dd1 1A       		.uleb128 0x1a
 8919 0dd2 01       		.uleb128 0x1
 8920 0dd3 50       		.byte	0x50
 8921 0dd4 03       		.uleb128 0x3
 8922 0dd5 74       		.byte	0x74
 8923 0dd6 C100     		.sleb128 65
 8924 0dd8 00       		.byte	0
 8925 0dd9 19       		.uleb128 0x19
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 255


 8926 0dda 52010000 		.4byte	.LVL251
 8927 0dde 22040000 		.4byte	0x422
 8928 0de2 EE0D0000 		.4byte	0xdee
 8929 0de6 1A       		.uleb128 0x1a
 8930 0de7 01       		.uleb128 0x1
 8931 0de8 50       		.byte	0x50
 8932 0de9 03       		.uleb128 0x3
 8933 0dea 74       		.byte	0x74
 8934 0deb C300     		.sleb128 67
 8935 0ded 00       		.byte	0
 8936 0dee 19       		.uleb128 0x19
 8937 0def 5E010000 		.4byte	.LVL254
 8938 0df3 67040000 		.4byte	0x467
 8939 0df7 030E0000 		.4byte	0xe03
 8940 0dfb 1A       		.uleb128 0x1a
 8941 0dfc 01       		.uleb128 0x1
 8942 0dfd 50       		.byte	0x50
 8943 0dfe 03       		.uleb128 0x3
 8944 0dff 74       		.byte	0x74
 8945 0e00 D000     		.sleb128 80
 8946 0e02 00       		.byte	0
 8947 0e03 19       		.uleb128 0x19
 8948 0e04 68010000 		.4byte	.LVL256
 8949 0e08 22040000 		.4byte	0x422
 8950 0e0c 170E0000 		.4byte	0xe17
 8951 0e10 1A       		.uleb128 0x1a
 8952 0e11 01       		.uleb128 0x1
 8953 0e12 50       		.byte	0x50
 8954 0e13 02       		.uleb128 0x2
 8955 0e14 74       		.byte	0x74
 8956 0e15 3E       		.sleb128 62
 8957 0e16 00       		.byte	0
 8958 0e17 19       		.uleb128 0x19
 8959 0e18 D8010000 		.4byte	.LVL268
 8960 0e1c 22040000 		.4byte	0x422
 8961 0e20 2C0E0000 		.4byte	0xe2c
 8962 0e24 1A       		.uleb128 0x1a
 8963 0e25 01       		.uleb128 0x1
 8964 0e26 50       		.byte	0x50
 8965 0e27 03       		.uleb128 0x3
 8966 0e28 74       		.byte	0x74
 8967 0e29 DA00     		.sleb128 90
 8968 0e2b 00       		.byte	0
 8969 0e2c 19       		.uleb128 0x19
 8970 0e2d EE010000 		.4byte	.LVL269
 8971 0e31 67040000 		.4byte	0x467
 8972 0e35 410E0000 		.4byte	0xe41
 8973 0e39 1A       		.uleb128 0x1a
 8974 0e3a 01       		.uleb128 0x1
 8975 0e3b 50       		.byte	0x50
 8976 0e3c 03       		.uleb128 0x3
 8977 0e3d 74       		.byte	0x74
 8978 0e3e DC00     		.sleb128 92
 8979 0e40 00       		.byte	0
 8980 0e41 19       		.uleb128 0x19
 8981 0e42 3A020000 		.4byte	.LVL275
 8982 0e46 22040000 		.4byte	0x422
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 256


 8983 0e4a 560E0000 		.4byte	0xe56
 8984 0e4e 1A       		.uleb128 0x1a
 8985 0e4f 01       		.uleb128 0x1
 8986 0e50 50       		.byte	0x50
 8987 0e51 03       		.uleb128 0x3
 8988 0e52 74       		.byte	0x74
 8989 0e53 E000     		.sleb128 96
 8990 0e55 00       		.byte	0
 8991 0e56 19       		.uleb128 0x19
 8992 0e57 46020000 		.4byte	.LVL276
 8993 0e5b BC0A0000 		.4byte	0xabc
 8994 0e5f 700E0000 		.4byte	0xe70
 8995 0e63 1A       		.uleb128 0x1a
 8996 0e64 01       		.uleb128 0x1
 8997 0e65 50       		.byte	0x50
 8998 0e66 02       		.uleb128 0x2
 8999 0e67 74       		.byte	0x74
 9000 0e68 00       		.sleb128 0
 9001 0e69 1A       		.uleb128 0x1a
 9002 0e6a 01       		.uleb128 0x1
 9003 0e6b 51       		.byte	0x51
 9004 0e6c 02       		.uleb128 0x2
 9005 0e6d 75       		.byte	0x75
 9006 0e6e 01       		.sleb128 1
 9007 0e6f 00       		.byte	0
 9008 0e70 19       		.uleb128 0x19
 9009 0e71 56020000 		.4byte	.LVL277
 9010 0e75 22040000 		.4byte	0x422
 9011 0e79 850E0000 		.4byte	0xe85
 9012 0e7d 1A       		.uleb128 0x1a
 9013 0e7e 01       		.uleb128 0x1
 9014 0e7f 50       		.byte	0x50
 9015 0e80 03       		.uleb128 0x3
 9016 0e81 74       		.byte	0x74
 9017 0e82 AE04     		.sleb128 558
 9018 0e84 00       		.byte	0
 9019 0e85 19       		.uleb128 0x19
 9020 0e86 64020000 		.4byte	.LVL278
 9021 0e8a 67040000 		.4byte	0x467
 9022 0e8e 990E0000 		.4byte	0xe99
 9023 0e92 1A       		.uleb128 0x1a
 9024 0e93 01       		.uleb128 0x1
 9025 0e94 50       		.byte	0x50
 9026 0e95 02       		.uleb128 0x2
 9027 0e96 74       		.byte	0x74
 9028 0e97 30       		.sleb128 48
 9029 0e98 00       		.byte	0
 9030 0e99 19       		.uleb128 0x19
 9031 0e9a 74020000 		.4byte	.LVL279
 9032 0e9e 67040000 		.4byte	0x467
 9033 0ea2 AE0E0000 		.4byte	0xeae
 9034 0ea6 1A       		.uleb128 0x1a
 9035 0ea7 01       		.uleb128 0x1
 9036 0ea8 50       		.byte	0x50
 9037 0ea9 03       		.uleb128 0x3
 9038 0eaa 74       		.byte	0x74
 9039 0eab 9404     		.sleb128 532
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 257


 9040 0ead 00       		.byte	0
 9041 0eae 19       		.uleb128 0x19
 9042 0eaf 84020000 		.4byte	.LVL280
 9043 0eb3 67040000 		.4byte	0x467
 9044 0eb7 C30E0000 		.4byte	0xec3
 9045 0ebb 1A       		.uleb128 0x1a
 9046 0ebc 01       		.uleb128 0x1
 9047 0ebd 50       		.byte	0x50
 9048 0ebe 03       		.uleb128 0x3
 9049 0ebf 74       		.byte	0x74
 9050 0ec0 9804     		.sleb128 536
 9051 0ec2 00       		.byte	0
 9052 0ec3 1B       		.uleb128 0x1b
 9053 0ec4 90020000 		.4byte	.LVL281
 9054 0ec8 67040000 		.4byte	0x467
 9055 0ecc 1A       		.uleb128 0x1a
 9056 0ecd 01       		.uleb128 0x1
 9057 0ece 50       		.byte	0x50
 9058 0ecf 03       		.uleb128 0x3
 9059 0ed0 74       		.byte	0x74
 9060 0ed1 9C04     		.sleb128 540
 9061 0ed3 00       		.byte	0
 9062 0ed4 00       		.byte	0
 9063 0ed5 08       		.uleb128 0x8
 9064 0ed6 70000000 		.4byte	0x70
 9065 0eda E50E0000 		.4byte	0xee5
 9066 0ede 0D       		.uleb128 0xd
 9067 0edf 98010000 		.4byte	0x198
 9068 0ee3 03       		.byte	0x3
 9069 0ee4 00       		.byte	0
 9070 0ee5 10       		.uleb128 0x10
 9071 0ee6 21000000 		.4byte	.LASF108
 9072 0eea 01       		.byte	0x1
 9073 0eeb C404     		.2byte	0x4c4
 9074 0eed E1030000 		.4byte	0x3e1
 9075 0ef1 00000000 		.4byte	.LFB15
 9076 0ef5 2A010000 		.4byte	.LFE15-.LFB15
 9077 0ef9 01       		.uleb128 0x1
 9078 0efa 9C       		.byte	0x9c
 9079 0efb EF0F0000 		.4byte	0xfef
 9080 0eff 11       		.uleb128 0x11
 9081 0f00 667300   		.ascii	"fs\000"
 9082 0f03 01       		.byte	0x1
 9083 0f04 C504     		.2byte	0x4c5
 9084 0f06 F9010000 		.4byte	0x1f9
 9085 0f0a 41110000 		.4byte	.LLST77
 9086 0f0e 18       		.uleb128 0x18
 9087 0f0f A3020000 		.4byte	.LASF87
 9088 0f13 01       		.byte	0x1
 9089 0f14 C604     		.2byte	0x4c6
 9090 0f16 70000000 		.4byte	0x70
 9091 0f1a AF110000 		.4byte	.LLST78
 9092 0f1e 11       		.uleb128 0x11
 9093 0f1f 76616C00 		.ascii	"val\000"
 9094 0f23 01       		.byte	0x1
 9095 0f24 C704     		.2byte	0x4c7
 9096 0f26 70000000 		.4byte	0x70
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 258


 9097 0f2a 3C120000 		.4byte	.LLST79
 9098 0f2e 12       		.uleb128 0x12
 9099 0f2f 626300   		.ascii	"bc\000"
 9100 0f32 01       		.byte	0x1
 9101 0f33 CA04     		.2byte	0x4ca
 9102 0f35 2C000000 		.4byte	0x2c
 9103 0f39 D1120000 		.4byte	.LLST80
 9104 0f3d 12       		.uleb128 0x12
 9105 0f3e 7000     		.ascii	"p\000"
 9106 0f40 01       		.byte	0x1
 9107 0f41 CB04     		.2byte	0x4cb
 9108 0f43 80020000 		.4byte	0x280
 9109 0f47 05130000 		.4byte	.LLST81
 9110 0f4b 12       		.uleb128 0x12
 9111 0f4c 72657300 		.ascii	"res\000"
 9112 0f50 01       		.byte	0x1
 9113 0f51 CC04     		.2byte	0x4cc
 9114 0f53 E1030000 		.4byte	0x3e1
 9115 0f57 4B130000 		.4byte	.LLST82
 9116 0f5b 19       		.uleb128 0x19
 9117 0f5c 40000000 		.4byte	.LVL320
 9118 0f60 BC0A0000 		.4byte	0xabc
 9119 0f64 6F0F0000 		.4byte	0xf6f
 9120 0f68 1A       		.uleb128 0x1a
 9121 0f69 01       		.uleb128 0x1
 9122 0f6a 50       		.byte	0x50
 9123 0f6b 02       		.uleb128 0x2
 9124 0f6c 76       		.byte	0x76
 9125 0f6d 00       		.sleb128 0
 9126 0f6e 00       		.byte	0
 9127 0f6f 19       		.uleb128 0x19
 9128 0f70 84000000 		.4byte	.LVL328
 9129 0f74 BC0A0000 		.4byte	0xabc
 9130 0f78 830F0000 		.4byte	0xf83
 9131 0f7c 1A       		.uleb128 0x1a
 9132 0f7d 01       		.uleb128 0x1
 9133 0f7e 50       		.byte	0x50
 9134 0f7f 02       		.uleb128 0x2
 9135 0f80 76       		.byte	0x76
 9136 0f81 00       		.sleb128 0
 9137 0f82 00       		.byte	0
 9138 0f83 19       		.uleb128 0x19
 9139 0f84 BC000000 		.4byte	.LVL338
 9140 0f88 BC0A0000 		.4byte	0xabc
 9141 0f8c 970F0000 		.4byte	0xf97
 9142 0f90 1A       		.uleb128 0x1a
 9143 0f91 01       		.uleb128 0x1
 9144 0f92 50       		.byte	0x50
 9145 0f93 02       		.uleb128 0x2
 9146 0f94 76       		.byte	0x76
 9147 0f95 00       		.sleb128 0
 9148 0f96 00       		.byte	0
 9149 0f97 19       		.uleb128 0x19
 9150 0f98 D4000000 		.4byte	.LVL342
 9151 0f9c A1040000 		.4byte	0x4a1
 9152 0fa0 B60F0000 		.4byte	0xfb6
 9153 0fa4 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 259


 9154 0fa5 01       		.uleb128 0x1
 9155 0fa6 50       		.byte	0x50
 9156 0fa7 07       		.uleb128 0x7
 9157 0fa8 76       		.byte	0x76
 9158 0fa9 00       		.sleb128 0
 9159 0faa 74       		.byte	0x74
 9160 0fab 00       		.sleb128 0
 9161 0fac 22       		.byte	0x22
 9162 0fad 23       		.byte	0x23
 9163 0fae 30       		.uleb128 0x30
 9164 0faf 1A       		.uleb128 0x1a
 9165 0fb0 01       		.uleb128 0x1
 9166 0fb1 51       		.byte	0x51
 9167 0fb2 02       		.uleb128 0x2
 9168 0fb3 77       		.byte	0x77
 9169 0fb4 00       		.sleb128 0
 9170 0fb5 00       		.byte	0
 9171 0fb6 19       		.uleb128 0x19
 9172 0fb7 E6000000 		.4byte	.LVL345
 9173 0fbb BC0A0000 		.4byte	0xabc
 9174 0fbf CA0F0000 		.4byte	0xfca
 9175 0fc3 1A       		.uleb128 0x1a
 9176 0fc4 01       		.uleb128 0x1
 9177 0fc5 50       		.byte	0x50
 9178 0fc6 02       		.uleb128 0x2
 9179 0fc7 76       		.byte	0x76
 9180 0fc8 00       		.sleb128 0
 9181 0fc9 00       		.byte	0
 9182 0fca 19       		.uleb128 0x19
 9183 0fcb 02010000 		.4byte	.LVL350
 9184 0fcf 67040000 		.4byte	0x467
 9185 0fd3 DE0F0000 		.4byte	0xfde
 9186 0fd7 1A       		.uleb128 0x1a
 9187 0fd8 01       		.uleb128 0x1
 9188 0fd9 50       		.byte	0x50
 9189 0fda 02       		.uleb128 0x2
 9190 0fdb 74       		.byte	0x74
 9191 0fdc 00       		.sleb128 0
 9192 0fdd 00       		.byte	0
 9193 0fde 1B       		.uleb128 0x1b
 9194 0fdf 0E010000 		.4byte	.LVL352
 9195 0fe3 D8040000 		.4byte	0x4d8
 9196 0fe7 1A       		.uleb128 0x1a
 9197 0fe8 01       		.uleb128 0x1
 9198 0fe9 50       		.byte	0x50
 9199 0fea 02       		.uleb128 0x2
 9200 0feb 74       		.byte	0x74
 9201 0fec 00       		.sleb128 0
 9202 0fed 00       		.byte	0
 9203 0fee 00       		.byte	0
 9204 0fef 10       		.uleb128 0x10
 9205 0ff0 03040000 		.4byte	.LASF109
 9206 0ff4 01       		.byte	0x1
 9207 0ff5 7604     		.2byte	0x476
 9208 0ff7 70000000 		.4byte	0x70
 9209 0ffb 00000000 		.4byte	.LFB14
 9210 0fff DE000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 260


 9211 1003 01       		.uleb128 0x1
 9212 1004 9C       		.byte	0x9c
 9213 1005 E1100000 		.4byte	0x10e1
 9214 1009 11       		.uleb128 0x11
 9215 100a 6F626A00 		.ascii	"obj\000"
 9216 100e 01       		.byte	0x1
 9217 100f 7704     		.2byte	0x477
 9218 1011 4D0A0000 		.4byte	0xa4d
 9219 1015 E6130000 		.4byte	.LLST83
 9220 1019 18       		.uleb128 0x18
 9221 101a A3020000 		.4byte	.LASF87
 9222 101e 01       		.byte	0x1
 9223 101f 7804     		.2byte	0x478
 9224 1021 70000000 		.4byte	0x70
 9225 1025 84140000 		.4byte	.LLST84
 9226 1029 12       		.uleb128 0x12
 9227 102a 776300   		.ascii	"wc\000"
 9228 102d 01       		.byte	0x1
 9229 102e 7B04     		.2byte	0x47b
 9230 1030 2C000000 		.4byte	0x2c
 9231 1034 0E150000 		.4byte	.LLST85
 9232 1038 12       		.uleb128 0x12
 9233 1039 626300   		.ascii	"bc\000"
 9234 103c 01       		.byte	0x1
 9235 103d 7B04     		.2byte	0x47b
 9236 103f 2C000000 		.4byte	0x2c
 9237 1043 70150000 		.4byte	.LLST86
 9238 1047 12       		.uleb128 0x12
 9239 1048 76616C00 		.ascii	"val\000"
 9240 104c 01       		.byte	0x1
 9241 104d 7C04     		.2byte	0x47c
 9242 104f 70000000 		.4byte	0x70
 9243 1053 C3150000 		.4byte	.LLST87
 9244 1057 12       		.uleb128 0x12
 9245 1058 667300   		.ascii	"fs\000"
 9246 105b 01       		.byte	0x1
 9247 105c 7D04     		.2byte	0x47d
 9248 105e F9010000 		.4byte	0x1f9
 9249 1062 13160000 		.4byte	.LLST88
 9250 1066 19       		.uleb128 0x19
 9251 1067 30000000 		.4byte	.LVL364
 9252 106b BC0A0000 		.4byte	0xabc
 9253 106f 7A100000 		.4byte	0x107a
 9254 1073 1A       		.uleb128 0x1a
 9255 1074 01       		.uleb128 0x1
 9256 1075 50       		.byte	0x50
 9257 1076 02       		.uleb128 0x2
 9258 1077 75       		.byte	0x75
 9259 1078 00       		.sleb128 0
 9260 1079 00       		.byte	0
 9261 107a 19       		.uleb128 0x19
 9262 107b 4E000000 		.4byte	.LVL367
 9263 107f BC0A0000 		.4byte	0xabc
 9264 1083 8E100000 		.4byte	0x108e
 9265 1087 1A       		.uleb128 0x1a
 9266 1088 01       		.uleb128 0x1
 9267 1089 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 261


 9268 108a 02       		.uleb128 0x2
 9269 108b 75       		.byte	0x75
 9270 108c 00       		.sleb128 0
 9271 108d 00       		.byte	0
 9272 108e 19       		.uleb128 0x19
 9273 108f 7C000000 		.4byte	.LVL377
 9274 1093 BC0A0000 		.4byte	0xabc
 9275 1097 A2100000 		.4byte	0x10a2
 9276 109b 1A       		.uleb128 0x1a
 9277 109c 01       		.uleb128 0x1
 9278 109d 50       		.byte	0x50
 9279 109e 02       		.uleb128 0x2
 9280 109f 75       		.byte	0x75
 9281 10a0 00       		.sleb128 0
 9282 10a1 00       		.byte	0
 9283 10a2 19       		.uleb128 0x19
 9284 10a3 90000000 		.4byte	.LVL380
 9285 10a7 22040000 		.4byte	0x422
 9286 10ab B9100000 		.4byte	0x10b9
 9287 10af 1A       		.uleb128 0x1a
 9288 10b0 01       		.uleb128 0x1
 9289 10b1 50       		.byte	0x50
 9290 10b2 05       		.uleb128 0x5
 9291 10b3 75       		.byte	0x75
 9292 10b4 00       		.sleb128 0
 9293 10b5 74       		.byte	0x74
 9294 10b6 00       		.sleb128 0
 9295 10b7 22       		.byte	0x22
 9296 10b8 00       		.byte	0
 9297 10b9 19       		.uleb128 0x19
 9298 10ba A0000000 		.4byte	.LVL384
 9299 10be BC0A0000 		.4byte	0xabc
 9300 10c2 CD100000 		.4byte	0x10cd
 9301 10c6 1A       		.uleb128 0x1a
 9302 10c7 01       		.uleb128 0x1
 9303 10c8 50       		.byte	0x50
 9304 10c9 02       		.uleb128 0x2
 9305 10ca 75       		.byte	0x75
 9306 10cb 00       		.sleb128 0
 9307 10cc 00       		.byte	0
 9308 10cd 1B       		.uleb128 0x1b
 9309 10ce B4000000 		.4byte	.LVL387
 9310 10d2 67040000 		.4byte	0x467
 9311 10d6 1A       		.uleb128 0x1a
 9312 10d7 01       		.uleb128 0x1
 9313 10d8 50       		.byte	0x50
 9314 10d9 05       		.uleb128 0x5
 9315 10da 75       		.byte	0x75
 9316 10db 00       		.sleb128 0
 9317 10dc 74       		.byte	0x74
 9318 10dd 00       		.sleb128 0
 9319 10de 22       		.byte	0x22
 9320 10df 00       		.byte	0
 9321 10e0 00       		.byte	0
 9322 10e1 10       		.uleb128 0x10
 9323 10e2 DD010000 		.4byte	.LASF110
 9324 10e6 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 262


 9325 10e7 9406     		.2byte	0x694
 9326 10e9 E1030000 		.4byte	0x3e1
 9327 10ed 00000000 		.4byte	.LFB19
 9328 10f1 AC000000 		.4byte	.LFE19-.LFB19
 9329 10f5 01       		.uleb128 0x1
 9330 10f6 9C       		.byte	0x9c
 9331 10f7 7A110000 		.4byte	0x117a
 9332 10fb 11       		.uleb128 0x11
 9333 10fc 647000   		.ascii	"dp\000"
 9334 10ff 01       		.byte	0x1
 9335 1100 9506     		.2byte	0x695
 9336 1102 75080000 		.4byte	0x875
 9337 1106 61160000 		.4byte	.LLST89
 9338 110a 11       		.uleb128 0x11
 9339 110b 6F667300 		.ascii	"ofs\000"
 9340 110f 01       		.byte	0x1
 9341 1110 9606     		.2byte	0x696
 9342 1112 70000000 		.4byte	0x70
 9343 1116 CF160000 		.4byte	.LLST90
 9344 111a 12       		.uleb128 0x12
 9345 111b 63737A00 		.ascii	"csz\000"
 9346 111f 01       		.byte	0x1
 9347 1120 9906     		.2byte	0x699
 9348 1122 70000000 		.4byte	0x70
 9349 1126 03170000 		.4byte	.LLST91
 9350 112a 1E       		.uleb128 0x1e
 9351 112b A3020000 		.4byte	.LASF87
 9352 112f 01       		.byte	0x1
 9353 1130 9906     		.2byte	0x699
 9354 1132 70000000 		.4byte	0x70
 9355 1136 42170000 		.4byte	.LLST92
 9356 113a 12       		.uleb128 0x12
 9357 113b 667300   		.ascii	"fs\000"
 9358 113e 01       		.byte	0x1
 9359 113f 9A06     		.2byte	0x69a
 9360 1141 F9010000 		.4byte	0x1f9
 9361 1145 B8170000 		.4byte	.LLST93
 9362 1149 19       		.uleb128 0x19
 9363 114a 48000000 		.4byte	.LVL405
 9364 114e EF0F0000 		.4byte	0xfef
 9365 1152 63110000 		.4byte	0x1163
 9366 1156 1A       		.uleb128 0x1a
 9367 1157 01       		.uleb128 0x1
 9368 1158 50       		.byte	0x50
 9369 1159 02       		.uleb128 0x2
 9370 115a 76       		.byte	0x76
 9371 115b 00       		.sleb128 0
 9372 115c 1A       		.uleb128 0x1a
 9373 115d 01       		.uleb128 0x1
 9374 115e 51       		.byte	0x51
 9375 115f 02       		.uleb128 0x2
 9376 1160 75       		.byte	0x75
 9377 1161 00       		.sleb128 0
 9378 1162 00       		.byte	0
 9379 1163 1B       		.uleb128 0x1b
 9380 1164 68000000 		.4byte	.LVL408
 9381 1168 DA060000 		.4byte	0x6da
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 263


 9382 116c 1A       		.uleb128 0x1a
 9383 116d 01       		.uleb128 0x1
 9384 116e 50       		.byte	0x50
 9385 116f 02       		.uleb128 0x2
 9386 1170 77       		.byte	0x77
 9387 1171 00       		.sleb128 0
 9388 1172 1A       		.uleb128 0x1a
 9389 1173 01       		.uleb128 0x1
 9390 1174 51       		.byte	0x51
 9391 1175 02       		.uleb128 0x2
 9392 1176 75       		.byte	0x75
 9393 1177 00       		.sleb128 0
 9394 1178 00       		.byte	0
 9395 1179 00       		.byte	0
 9396 117a 10       		.uleb128 0x10
 9397 117b 0B040000 		.4byte	.LASF111
 9398 117f 01       		.byte	0x1
 9399 1180 E505     		.2byte	0x5e5
 9400 1182 70000000 		.4byte	0x70
 9401 1186 00000000 		.4byte	.LFB17
 9402 118a 08010000 		.4byte	.LFE17-.LFB17
 9403 118e 01       		.uleb128 0x1
 9404 118f 9C       		.byte	0x9c
 9405 1190 7C120000 		.4byte	0x127c
 9406 1194 11       		.uleb128 0x11
 9407 1195 6F626A00 		.ascii	"obj\000"
 9408 1199 01       		.byte	0x1
 9409 119a E605     		.2byte	0x5e6
 9410 119c 4D0A0000 		.4byte	0xa4d
 9411 11a0 E3170000 		.4byte	.LLST94
 9412 11a4 18       		.uleb128 0x18
 9413 11a5 A3020000 		.4byte	.LASF87
 9414 11a9 01       		.byte	0x1
 9415 11aa E705     		.2byte	0x5e7
 9416 11ac 70000000 		.4byte	0x70
 9417 11b0 25180000 		.4byte	.LLST95
 9418 11b4 12       		.uleb128 0x12
 9419 11b5 637300   		.ascii	"cs\000"
 9420 11b8 01       		.byte	0x1
 9421 11b9 EA05     		.2byte	0x5ea
 9422 11bb 70000000 		.4byte	0x70
 9423 11bf 7D180000 		.4byte	.LLST96
 9424 11c3 12       		.uleb128 0x12
 9425 11c4 6E636C00 		.ascii	"ncl\000"
 9426 11c8 01       		.byte	0x1
 9427 11c9 EA05     		.2byte	0x5ea
 9428 11cb 70000000 		.4byte	0x70
 9429 11cf D2180000 		.4byte	.LLST97
 9430 11d3 12       		.uleb128 0x12
 9431 11d4 73636C00 		.ascii	"scl\000"
 9432 11d8 01       		.byte	0x1
 9433 11d9 EA05     		.2byte	0x5ea
 9434 11db 70000000 		.4byte	0x70
 9435 11df 41190000 		.4byte	.LLST98
 9436 11e3 12       		.uleb128 0x12
 9437 11e4 72657300 		.ascii	"res\000"
 9438 11e8 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 264


 9439 11e9 EB05     		.2byte	0x5eb
 9440 11eb E1030000 		.4byte	0x3e1
 9441 11ef 8C190000 		.4byte	.LLST99
 9442 11f3 12       		.uleb128 0x12
 9443 11f4 667300   		.ascii	"fs\000"
 9444 11f7 01       		.byte	0x1
 9445 11f8 EC05     		.2byte	0x5ec
 9446 11fa F9010000 		.4byte	0x1f9
 9447 11fe C0190000 		.4byte	.LLST100
 9448 1202 1C       		.uleb128 0x1c
 9449 1203 22000000 		.4byte	.LVL431
 9450 1207 EF0F0000 		.4byte	0xfef
 9451 120b 19       		.uleb128 0x19
 9452 120c 56000000 		.4byte	.LVL439
 9453 1210 EF0F0000 		.4byte	0xfef
 9454 1214 25120000 		.4byte	0x1225
 9455 1218 1A       		.uleb128 0x1a
 9456 1219 01       		.uleb128 0x1
 9457 121a 50       		.byte	0x50
 9458 121b 02       		.uleb128 0x2
 9459 121c 75       		.byte	0x75
 9460 121d 00       		.sleb128 0
 9461 121e 1A       		.uleb128 0x1a
 9462 121f 01       		.uleb128 0x1
 9463 1220 51       		.byte	0x51
 9464 1221 02       		.uleb128 0x2
 9465 1222 74       		.byte	0x74
 9466 1223 00       		.sleb128 0
 9467 1224 00       		.byte	0
 9468 1225 19       		.uleb128 0x19
 9469 1226 9A000000 		.4byte	.LVL452
 9470 122a EF0F0000 		.4byte	0xfef
 9471 122e 3F120000 		.4byte	0x123f
 9472 1232 1A       		.uleb128 0x1a
 9473 1233 01       		.uleb128 0x1
 9474 1234 50       		.byte	0x50
 9475 1235 02       		.uleb128 0x2
 9476 1236 75       		.byte	0x75
 9477 1237 00       		.sleb128 0
 9478 1238 1A       		.uleb128 0x1a
 9479 1239 01       		.uleb128 0x1
 9480 123a 51       		.byte	0x51
 9481 123b 02       		.uleb128 0x2
 9482 123c 74       		.byte	0x74
 9483 123d 00       		.sleb128 0
 9484 123e 00       		.byte	0
 9485 123f 19       		.uleb128 0x19
 9486 1240 B8000000 		.4byte	.LVL454
 9487 1244 E50E0000 		.4byte	0xee5
 9488 1248 5F120000 		.4byte	0x125f
 9489 124c 1A       		.uleb128 0x1a
 9490 124d 01       		.uleb128 0x1
 9491 124e 50       		.byte	0x50
 9492 124f 02       		.uleb128 0x2
 9493 1250 77       		.byte	0x77
 9494 1251 00       		.sleb128 0
 9495 1252 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 265


 9496 1253 01       		.uleb128 0x1
 9497 1254 51       		.byte	0x51
 9498 1255 02       		.uleb128 0x2
 9499 1256 74       		.byte	0x74
 9500 1257 00       		.sleb128 0
 9501 1258 1A       		.uleb128 0x1a
 9502 1259 01       		.uleb128 0x1
 9503 125a 52       		.byte	0x52
 9504 125b 02       		.uleb128 0x2
 9505 125c 09       		.byte	0x9
 9506 125d FF       		.byte	0xff
 9507 125e 00       		.byte	0
 9508 125f 1B       		.uleb128 0x1b
 9509 1260 CC000000 		.4byte	.LVL457
 9510 1264 E50E0000 		.4byte	0xee5
 9511 1268 1A       		.uleb128 0x1a
 9512 1269 01       		.uleb128 0x1
 9513 126a 50       		.byte	0x50
 9514 126b 02       		.uleb128 0x2
 9515 126c 77       		.byte	0x77
 9516 126d 00       		.sleb128 0
 9517 126e 1A       		.uleb128 0x1a
 9518 126f 01       		.uleb128 0x1
 9519 1270 51       		.byte	0x51
 9520 1271 02       		.uleb128 0x2
 9521 1272 78       		.byte	0x78
 9522 1273 00       		.sleb128 0
 9523 1274 1A       		.uleb128 0x1a
 9524 1275 01       		.uleb128 0x1
 9525 1276 52       		.byte	0x52
 9526 1277 02       		.uleb128 0x2
 9527 1278 74       		.byte	0x74
 9528 1279 00       		.sleb128 0
 9529 127a 00       		.byte	0
 9530 127b 00       		.byte	0
 9531 127c 10       		.uleb128 0x10
 9532 127d 91050000 		.4byte	.LASF112
 9533 1281 01       		.byte	0x1
 9534 1282 8605     		.2byte	0x586
 9535 1284 E1030000 		.4byte	0x3e1
 9536 1288 00000000 		.4byte	.LFB16
 9537 128c 7C000000 		.4byte	.LFE16-.LFB16
 9538 1290 01       		.uleb128 0x1
 9539 1291 9C       		.byte	0x9c
 9540 1292 4C130000 		.4byte	0x134c
 9541 1296 11       		.uleb128 0x11
 9542 1297 6F626A00 		.ascii	"obj\000"
 9543 129b 01       		.byte	0x1
 9544 129c 8705     		.2byte	0x587
 9545 129e 4D0A0000 		.4byte	0xa4d
 9546 12a2 D3190000 		.4byte	.LLST101
 9547 12a6 18       		.uleb128 0x18
 9548 12a7 A3020000 		.4byte	.LASF87
 9549 12ab 01       		.byte	0x1
 9550 12ac 8805     		.2byte	0x588
 9551 12ae 70000000 		.4byte	0x70
 9552 12b2 2B1A0000 		.4byte	.LLST102
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 266


 9553 12b6 18       		.uleb128 0x18
 9554 12b7 81050000 		.4byte	.LASF113
 9555 12bb 01       		.byte	0x1
 9556 12bc 8905     		.2byte	0x589
 9557 12be 70000000 		.4byte	0x70
 9558 12c2 5F1A0000 		.4byte	.LLST103
 9559 12c6 12       		.uleb128 0x12
 9560 12c7 72657300 		.ascii	"res\000"
 9561 12cb 01       		.byte	0x1
 9562 12cc 8C05     		.2byte	0x58c
 9563 12ce E1030000 		.4byte	0x3e1
 9564 12d2 A41A0000 		.4byte	.LLST104
 9565 12d6 12       		.uleb128 0x12
 9566 12d7 6E787400 		.ascii	"nxt\000"
 9567 12db 01       		.byte	0x1
 9568 12dc 8D05     		.2byte	0x58d
 9569 12de 70000000 		.4byte	0x70
 9570 12e2 DA1A0000 		.4byte	.LLST105
 9571 12e6 12       		.uleb128 0x12
 9572 12e7 667300   		.ascii	"fs\000"
 9573 12ea 01       		.byte	0x1
 9574 12eb 8E05     		.2byte	0x58e
 9575 12ed F9010000 		.4byte	0x1f9
 9576 12f1 3A1B0000 		.4byte	.LLST106
 9577 12f5 19       		.uleb128 0x19
 9578 12f6 22000000 		.4byte	.LVL476
 9579 12fa E50E0000 		.4byte	0xee5
 9580 12fe 16130000 		.4byte	0x1316
 9581 1302 1A       		.uleb128 0x1a
 9582 1303 01       		.uleb128 0x1
 9583 1304 50       		.byte	0x50
 9584 1305 02       		.uleb128 0x2
 9585 1306 75       		.byte	0x75
 9586 1307 00       		.sleb128 0
 9587 1308 1A       		.uleb128 0x1a
 9588 1309 01       		.uleb128 0x1
 9589 130a 51       		.byte	0x51
 9590 130b 03       		.uleb128 0x3
 9591 130c F3       		.byte	0xf3
 9592 130d 01       		.uleb128 0x1
 9593 130e 52       		.byte	0x52
 9594 130f 1A       		.uleb128 0x1a
 9595 1310 01       		.uleb128 0x1
 9596 1311 52       		.byte	0x52
 9597 1312 02       		.uleb128 0x2
 9598 1313 09       		.byte	0x9
 9599 1314 FF       		.byte	0xff
 9600 1315 00       		.byte	0
 9601 1316 19       		.uleb128 0x19
 9602 1317 2E000000 		.4byte	.LVL478
 9603 131b EF0F0000 		.4byte	0xfef
 9604 131f 30130000 		.4byte	0x1330
 9605 1323 1A       		.uleb128 0x1a
 9606 1324 01       		.uleb128 0x1
 9607 1325 50       		.byte	0x50
 9608 1326 02       		.uleb128 0x2
 9609 1327 77       		.byte	0x77
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 267


 9610 1328 00       		.sleb128 0
 9611 1329 1A       		.uleb128 0x1a
 9612 132a 01       		.uleb128 0x1
 9613 132b 51       		.byte	0x51
 9614 132c 02       		.uleb128 0x2
 9615 132d 74       		.byte	0x74
 9616 132e 00       		.sleb128 0
 9617 132f 00       		.byte	0
 9618 1330 1B       		.uleb128 0x1b
 9619 1331 44000000 		.4byte	.LVL481
 9620 1335 E50E0000 		.4byte	0xee5
 9621 1339 1A       		.uleb128 0x1a
 9622 133a 01       		.uleb128 0x1
 9623 133b 50       		.byte	0x50
 9624 133c 02       		.uleb128 0x2
 9625 133d 75       		.byte	0x75
 9626 133e 00       		.sleb128 0
 9627 133f 1A       		.uleb128 0x1a
 9628 1340 01       		.uleb128 0x1
 9629 1341 51       		.byte	0x51
 9630 1342 02       		.uleb128 0x2
 9631 1343 74       		.byte	0x74
 9632 1344 00       		.sleb128 0
 9633 1345 1A       		.uleb128 0x1a
 9634 1346 01       		.uleb128 0x1
 9635 1347 52       		.byte	0x52
 9636 1348 01       		.uleb128 0x1
 9637 1349 30       		.byte	0x30
 9638 134a 00       		.byte	0
 9639 134b 00       		.byte	0
 9640 134c 10       		.uleb128 0x10
 9641 134d 0B010000 		.4byte	.LASF114
 9642 1351 01       		.byte	0x1
 9643 1352 380A     		.2byte	0xa38
 9644 1354 E1030000 		.4byte	0x3e1
 9645 1358 00000000 		.4byte	.LFB27
 9646 135c 1E000000 		.4byte	.LFE27-.LFB27
 9647 1360 01       		.uleb128 0x1
 9648 1361 9C       		.byte	0x9c
 9649 1362 A3130000 		.4byte	0x13a3
 9650 1366 11       		.uleb128 0x11
 9651 1367 647000   		.ascii	"dp\000"
 9652 136a 01       		.byte	0x1
 9653 136b 390A     		.2byte	0xa39
 9654 136d 75080000 		.4byte	0x875
 9655 1371 4D1B0000 		.4byte	.LLST107
 9656 1375 1F       		.uleb128 0x1f
 9657 1376 72657300 		.ascii	"res\000"
 9658 137a 01       		.byte	0x1
 9659 137b 3C0A     		.2byte	0xa3c
 9660 137d E1030000 		.4byte	0x3e1
 9661 1381 01       		.uleb128 0x1
 9662 1382 50       		.byte	0x50
 9663 1383 12       		.uleb128 0x12
 9664 1384 667300   		.ascii	"fs\000"
 9665 1387 01       		.byte	0x1
 9666 1388 3D0A     		.2byte	0xa3d
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 268


 9667 138a F9010000 		.4byte	0x1f9
 9668 138e 791B0000 		.4byte	.LLST108
 9669 1392 1B       		.uleb128 0x1b
 9670 1393 0E000000 		.4byte	.LVL501
 9671 1397 BC0A0000 		.4byte	0xabc
 9672 139b 1A       		.uleb128 0x1a
 9673 139c 01       		.uleb128 0x1
 9674 139d 50       		.byte	0x50
 9675 139e 02       		.uleb128 0x2
 9676 139f 75       		.byte	0x75
 9677 13a0 00       		.sleb128 0
 9678 13a1 00       		.byte	0
 9679 13a2 00       		.byte	0
 9680 13a3 10       		.uleb128 0x10
 9681 13a4 91030000 		.4byte	.LASF115
 9682 13a8 01       		.byte	0x1
 9683 13a9 6C06     		.2byte	0x66c
 9684 13ab E1030000 		.4byte	0x3e1
 9685 13af 00000000 		.4byte	.LFB18
 9686 13b3 58000000 		.4byte	.LFE18-.LFB18
 9687 13b7 01       		.uleb128 0x1
 9688 13b8 9C       		.byte	0x9c
 9689 13b9 87140000 		.4byte	0x1487
 9690 13bd 11       		.uleb128 0x11
 9691 13be 667300   		.ascii	"fs\000"
 9692 13c1 01       		.byte	0x1
 9693 13c2 6D06     		.2byte	0x66d
 9694 13c4 F9010000 		.4byte	0x1f9
 9695 13c8 8C1B0000 		.4byte	.LLST109
 9696 13cc 18       		.uleb128 0x18
 9697 13cd A3020000 		.4byte	.LASF87
 9698 13d1 01       		.byte	0x1
 9699 13d2 6E06     		.2byte	0x66e
 9700 13d4 70000000 		.4byte	0x70
 9701 13d8 B81B0000 		.4byte	.LLST110
 9702 13dc 1E       		.uleb128 0x1e
 9703 13dd 9F000000 		.4byte	.LASF40
 9704 13e1 01       		.byte	0x1
 9705 13e2 7106     		.2byte	0x671
 9706 13e4 70000000 		.4byte	0x70
 9707 13e8 FD1B0000 		.4byte	.LLST111
 9708 13ec 12       		.uleb128 0x12
 9709 13ed 6E00     		.ascii	"n\000"
 9710 13ef 01       		.byte	0x1
 9711 13f0 7206     		.2byte	0x672
 9712 13f2 2C000000 		.4byte	0x2c
 9713 13f6 1B1C0000 		.4byte	.LLST112
 9714 13fa 12       		.uleb128 0x12
 9715 13fb 737A6200 		.ascii	"szb\000"
 9716 13ff 01       		.byte	0x1
 9717 1400 7206     		.2byte	0x672
 9718 1402 2C000000 		.4byte	0x2c
 9719 1406 3A1C0000 		.4byte	.LLST113
 9720 140a 1E       		.uleb128 0x1e
 9721 140b E8030000 		.4byte	.LASF116
 9722 140f 01       		.byte	0x1
 9723 1410 7306     		.2byte	0x673
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 269


 9724 1412 80020000 		.4byte	0x280
 9725 1416 4E1C0000 		.4byte	.LLST114
 9726 141a 19       		.uleb128 0x19
 9727 141b 0A000000 		.4byte	.LVL505
 9728 141f 590A0000 		.4byte	0xa59
 9729 1423 2E140000 		.4byte	0x142e
 9730 1427 1A       		.uleb128 0x1a
 9731 1428 01       		.uleb128 0x1
 9732 1429 50       		.byte	0x50
 9733 142a 02       		.uleb128 0x2
 9734 142b 76       		.byte	0x76
 9735 142c 00       		.sleb128 0
 9736 142d 00       		.byte	0
 9737 142e 19       		.uleb128 0x19
 9738 142f 16000000 		.4byte	.LVL506
 9739 1433 DA060000 		.4byte	0x6da
 9740 1437 48140000 		.4byte	0x1448
 9741 143b 1A       		.uleb128 0x1a
 9742 143c 01       		.uleb128 0x1
 9743 143d 50       		.byte	0x50
 9744 143e 02       		.uleb128 0x2
 9745 143f 76       		.byte	0x76
 9746 1440 00       		.sleb128 0
 9747 1441 1A       		.uleb128 0x1a
 9748 1442 01       		.uleb128 0x1
 9749 1443 51       		.byte	0x51
 9750 1444 02       		.uleb128 0x2
 9751 1445 74       		.byte	0x74
 9752 1446 00       		.sleb128 0
 9753 1447 00       		.byte	0
 9754 1448 19       		.uleb128 0x19
 9755 1449 2A000000 		.4byte	.LVL509
 9756 144d 7B050000 		.4byte	0x57b
 9757 1451 68140000 		.4byte	0x1468
 9758 1455 1A       		.uleb128 0x1a
 9759 1456 01       		.uleb128 0x1
 9760 1457 50       		.byte	0x50
 9761 1458 02       		.uleb128 0x2
 9762 1459 75       		.byte	0x75
 9763 145a 00       		.sleb128 0
 9764 145b 1A       		.uleb128 0x1a
 9765 145c 01       		.uleb128 0x1
 9766 145d 51       		.byte	0x51
 9767 145e 01       		.uleb128 0x1
 9768 145f 30       		.byte	0x30
 9769 1460 1A       		.uleb128 0x1a
 9770 1461 01       		.uleb128 0x1
 9771 1462 52       		.byte	0x52
 9772 1463 03       		.uleb128 0x3
 9773 1464 0A       		.byte	0xa
 9774 1465 0002     		.2byte	0x200
 9775 1467 00       		.byte	0
 9776 1468 1B       		.uleb128 0x1b
 9777 1469 42000000 		.4byte	.LVL513
 9778 146d E12C0000 		.4byte	0x2ce1
 9779 1471 1A       		.uleb128 0x1a
 9780 1472 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 270


 9781 1473 51       		.byte	0x51
 9782 1474 02       		.uleb128 0x2
 9783 1475 75       		.byte	0x75
 9784 1476 00       		.sleb128 0
 9785 1477 1A       		.uleb128 0x1a
 9786 1478 01       		.uleb128 0x1
 9787 1479 52       		.byte	0x52
 9788 147a 05       		.uleb128 0x5
 9789 147b 74       		.byte	0x74
 9790 147c 00       		.sleb128 0
 9791 147d 77       		.byte	0x77
 9792 147e 00       		.sleb128 0
 9793 147f 22       		.byte	0x22
 9794 1480 1A       		.uleb128 0x1a
 9795 1481 01       		.uleb128 0x1
 9796 1482 53       		.byte	0x53
 9797 1483 01       		.uleb128 0x1
 9798 1484 31       		.byte	0x31
 9799 1485 00       		.byte	0
 9800 1486 00       		.byte	0
 9801 1487 10       		.uleb128 0x10
 9802 1488 E6020000 		.4byte	.LASF117
 9803 148c 01       		.byte	0x1
 9804 148d C506     		.2byte	0x6c5
 9805 148f E1030000 		.4byte	0x3e1
 9806 1493 00000000 		.4byte	.LFB20
 9807 1497 D0000000 		.4byte	.LFE20-.LFB20
 9808 149b 01       		.uleb128 0x1
 9809 149c 9C       		.byte	0x9c
 9810 149d 3D150000 		.4byte	0x153d
 9811 14a1 11       		.uleb128 0x11
 9812 14a2 647000   		.ascii	"dp\000"
 9813 14a5 01       		.byte	0x1
 9814 14a6 C606     		.2byte	0x6c6
 9815 14a8 75080000 		.4byte	0x875
 9816 14ac 611C0000 		.4byte	.LLST115
 9817 14b0 18       		.uleb128 0x18
 9818 14b1 8F010000 		.4byte	.LASF118
 9819 14b5 01       		.byte	0x1
 9820 14b6 C706     		.2byte	0x6c7
 9821 14b8 25000000 		.4byte	0x25
 9822 14bc CF1C0000 		.4byte	.LLST116
 9823 14c0 12       		.uleb128 0x12
 9824 14c1 6F667300 		.ascii	"ofs\000"
 9825 14c5 01       		.byte	0x1
 9826 14c6 CA06     		.2byte	0x6ca
 9827 14c8 70000000 		.4byte	0x70
 9828 14cc 051D0000 		.4byte	.LLST117
 9829 14d0 1E       		.uleb128 0x1e
 9830 14d1 A3020000 		.4byte	.LASF87
 9831 14d5 01       		.byte	0x1
 9832 14d6 CA06     		.2byte	0x6ca
 9833 14d8 70000000 		.4byte	0x70
 9834 14dc 181D0000 		.4byte	.LLST118
 9835 14e0 12       		.uleb128 0x12
 9836 14e1 667300   		.ascii	"fs\000"
 9837 14e4 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 271


 9838 14e5 CB06     		.2byte	0x6cb
 9839 14e7 F9010000 		.4byte	0x1f9
 9840 14eb DB1D0000 		.4byte	.LLST119
 9841 14ef 1C       		.uleb128 0x1c
 9842 14f0 4C000000 		.4byte	.LVL524
 9843 14f4 EF0F0000 		.4byte	0xfef
 9844 14f8 19       		.uleb128 0x19
 9845 14f9 72000000 		.4byte	.LVL529
 9846 14fd 7A110000 		.4byte	0x117a
 9847 1501 0C150000 		.4byte	0x150c
 9848 1505 1A       		.uleb128 0x1a
 9849 1506 01       		.uleb128 0x1
 9850 1507 50       		.byte	0x50
 9851 1508 02       		.uleb128 0x2
 9852 1509 74       		.byte	0x74
 9853 150a 00       		.sleb128 0
 9854 150b 00       		.byte	0
 9855 150c 19       		.uleb128 0x19
 9856 150d 88000000 		.4byte	.LVL532
 9857 1511 A3130000 		.4byte	0x13a3
 9858 1515 26150000 		.4byte	0x1526
 9859 1519 1A       		.uleb128 0x1a
 9860 151a 01       		.uleb128 0x1
 9861 151b 50       		.byte	0x50
 9862 151c 02       		.uleb128 0x2
 9863 151d 77       		.byte	0x77
 9864 151e 00       		.sleb128 0
 9865 151f 1A       		.uleb128 0x1a
 9866 1520 01       		.uleb128 0x1
 9867 1521 51       		.byte	0x51
 9868 1522 02       		.uleb128 0x2
 9869 1523 79       		.byte	0x79
 9870 1524 00       		.sleb128 0
 9871 1525 00       		.byte	0
 9872 1526 1B       		.uleb128 0x1b
 9873 1527 98000000 		.4byte	.LVL533
 9874 152b DA060000 		.4byte	0x6da
 9875 152f 1A       		.uleb128 0x1a
 9876 1530 01       		.uleb128 0x1
 9877 1531 50       		.byte	0x50
 9878 1532 02       		.uleb128 0x2
 9879 1533 77       		.byte	0x77
 9880 1534 00       		.sleb128 0
 9881 1535 1A       		.uleb128 0x1a
 9882 1536 01       		.uleb128 0x1
 9883 1537 51       		.byte	0x51
 9884 1538 02       		.uleb128 0x2
 9885 1539 79       		.byte	0x79
 9886 153a 00       		.sleb128 0
 9887 153b 00       		.byte	0
 9888 153c 00       		.byte	0
 9889 153d 10       		.uleb128 0x10
 9890 153e 96000000 		.4byte	.LASF119
 9891 1542 01       		.byte	0x1
 9892 1543 7B09     		.2byte	0x97b
 9893 1545 E1030000 		.4byte	0x3e1
 9894 1549 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 272


 9895 154d 58000000 		.4byte	.LFE25-.LFB25
 9896 1551 01       		.uleb128 0x1
 9897 1552 9C       		.byte	0x9c
 9898 1553 EF150000 		.4byte	0x15ef
 9899 1557 11       		.uleb128 0x11
 9900 1558 647000   		.ascii	"dp\000"
 9901 155b 01       		.byte	0x1
 9902 155c 7C09     		.2byte	0x97c
 9903 155e 75080000 		.4byte	0x875
 9904 1562 061E0000 		.4byte	.LLST120
 9905 1566 12       		.uleb128 0x12
 9906 1567 72657300 		.ascii	"res\000"
 9907 156b 01       		.byte	0x1
 9908 156c 7F09     		.2byte	0x97f
 9909 156e E1030000 		.4byte	0x3e1
 9910 1572 321E0000 		.4byte	.LLST121
 9911 1576 12       		.uleb128 0x12
 9912 1577 667300   		.ascii	"fs\000"
 9913 157a 01       		.byte	0x1
 9914 157b 8009     		.2byte	0x980
 9915 157d F9010000 		.4byte	0x1f9
 9916 1581 711E0000 		.4byte	.LLST122
 9917 1585 12       		.uleb128 0x12
 9918 1586 6300     		.ascii	"c\000"
 9919 1588 01       		.byte	0x1
 9920 1589 8109     		.2byte	0x981
 9921 158b 3E000000 		.4byte	0x3e
 9922 158f 841E0000 		.4byte	.LLST123
 9923 1593 19       		.uleb128 0x19
 9924 1594 0C000000 		.4byte	.LVL556
 9925 1598 E1100000 		.4byte	0x10e1
 9926 159c AC150000 		.4byte	0x15ac
 9927 15a0 1A       		.uleb128 0x1a
 9928 15a1 01       		.uleb128 0x1
 9929 15a2 50       		.byte	0x50
 9930 15a3 02       		.uleb128 0x2
 9931 15a4 76       		.byte	0x76
 9932 15a5 00       		.sleb128 0
 9933 15a6 1A       		.uleb128 0x1a
 9934 15a7 01       		.uleb128 0x1
 9935 15a8 51       		.byte	0x51
 9936 15a9 01       		.uleb128 0x1
 9937 15aa 30       		.byte	0x30
 9938 15ab 00       		.byte	0
 9939 15ac 19       		.uleb128 0x19
 9940 15ad 18000000 		.4byte	.LVL558
 9941 15b1 BC0A0000 		.4byte	0xabc
 9942 15b5 C0150000 		.4byte	0x15c0
 9943 15b9 1A       		.uleb128 0x1a
 9944 15ba 01       		.uleb128 0x1
 9945 15bb 50       		.byte	0x50
 9946 15bc 02       		.uleb128 0x2
 9947 15bd 75       		.byte	0x75
 9948 15be 00       		.sleb128 0
 9949 15bf 00       		.byte	0
 9950 15c0 19       		.uleb128 0x19
 9951 15c1 3C000000 		.4byte	.LVL564
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 273


 9952 15c5 CF050000 		.4byte	0x5cf
 9953 15c9 D9150000 		.4byte	0x15d9
 9954 15cd 1A       		.uleb128 0x1a
 9955 15ce 01       		.uleb128 0x1
 9956 15cf 51       		.byte	0x51
 9957 15d0 02       		.uleb128 0x2
 9958 15d1 76       		.byte	0x76
 9959 15d2 20       		.sleb128 32
 9960 15d3 1A       		.uleb128 0x1a
 9961 15d4 01       		.uleb128 0x1
 9962 15d5 52       		.byte	0x52
 9963 15d6 01       		.uleb128 0x1
 9964 15d7 3B       		.byte	0x3b
 9965 15d8 00       		.byte	0
 9966 15d9 1B       		.uleb128 0x1b
 9967 15da 48000000 		.4byte	.LVL565
 9968 15de 87140000 		.4byte	0x1487
 9969 15e2 1A       		.uleb128 0x1a
 9970 15e3 01       		.uleb128 0x1
 9971 15e4 50       		.byte	0x50
 9972 15e5 02       		.uleb128 0x2
 9973 15e6 76       		.byte	0x76
 9974 15e7 00       		.sleb128 0
 9975 15e8 1A       		.uleb128 0x1a
 9976 15e9 01       		.uleb128 0x1
 9977 15ea 51       		.byte	0x51
 9978 15eb 01       		.uleb128 0x1
 9979 15ec 30       		.byte	0x30
 9980 15ed 00       		.byte	0
 9981 15ee 00       		.byte	0
 9982 15ef 10       		.uleb128 0x10
 9983 15f0 67040000 		.4byte	.LASF120
 9984 15f4 01       		.byte	0x1
 9985 15f5 E60B     		.2byte	0xbe6
 9986 15f7 E1030000 		.4byte	0x3e1
 9987 15fb 00000000 		.4byte	.LFB30
 9988 15ff 84000000 		.4byte	.LFE30-.LFB30
 9989 1603 01       		.uleb128 0x1
 9990 1604 9C       		.byte	0x9c
 9991 1605 AE160000 		.4byte	0x16ae
 9992 1609 11       		.uleb128 0x11
 9993 160a 647000   		.ascii	"dp\000"
 9994 160d 01       		.byte	0x1
 9995 160e E70B     		.2byte	0xbe7
 9996 1610 75080000 		.4byte	0x875
 9997 1614 AE1E0000 		.4byte	.LLST124
 9998 1618 18       		.uleb128 0x18
 9999 1619 67000000 		.4byte	.LASF92
 10000 161d 01       		.byte	0x1
 10001 161e E80B     		.2byte	0xbe8
 10002 1620 87090000 		.4byte	0x987
 10003 1624 DA1E0000 		.4byte	.LLST125
 10004 1628 12       		.uleb128 0x12
 10005 1629 72657300 		.ascii	"res\000"
 10006 162d 01       		.byte	0x1
 10007 162e EB0B     		.2byte	0xbeb
 10008 1630 E1030000 		.4byte	0x3e1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 274


 10009 1634 FB1E0000 		.4byte	.LLST126
 10010 1638 12       		.uleb128 0x12
 10011 1639 6E7300   		.ascii	"ns\000"
 10012 163c 01       		.byte	0x1
 10013 163d EC0B     		.2byte	0xbec
 10014 163f 3E000000 		.4byte	0x3e
 10015 1643 3A1F0000 		.4byte	.LLST127
 10016 1647 12       		.uleb128 0x12
 10017 1648 667300   		.ascii	"fs\000"
 10018 164b 01       		.byte	0x1
 10019 164c ED0B     		.2byte	0xbed
 10020 164e F9010000 		.4byte	0x1f9
 10021 1652 7C1F0000 		.4byte	.LLST128
 10022 1656 19       		.uleb128 0x19
 10023 1657 34000000 		.4byte	.LVL575
 10024 165b E1100000 		.4byte	0x10e1
 10025 165f 6F160000 		.4byte	0x166f
 10026 1663 1A       		.uleb128 0x1a
 10027 1664 01       		.uleb128 0x1
 10028 1665 50       		.byte	0x50
 10029 1666 02       		.uleb128 0x2
 10030 1667 74       		.byte	0x74
 10031 1668 00       		.sleb128 0
 10032 1669 1A       		.uleb128 0x1a
 10033 166a 01       		.uleb128 0x1
 10034 166b 51       		.byte	0x51
 10035 166c 01       		.uleb128 0x1
 10036 166d 30       		.byte	0x30
 10037 166e 00       		.byte	0
 10038 166f 19       		.uleb128 0x19
 10039 1670 3E000000 		.4byte	.LVL577
 10040 1674 81080000 		.4byte	0x881
 10041 1678 89160000 		.4byte	0x1689
 10042 167c 1A       		.uleb128 0x1a
 10043 167d 01       		.uleb128 0x1
 10044 167e 50       		.byte	0x50
 10045 167f 02       		.uleb128 0x2
 10046 1680 74       		.byte	0x74
 10047 1681 00       		.sleb128 0
 10048 1682 1A       		.uleb128 0x1a
 10049 1683 01       		.uleb128 0x1
 10050 1684 51       		.byte	0x51
 10051 1685 02       		.uleb128 0x2
 10052 1686 91       		.byte	0x91
 10053 1687 6C       		.sleb128 -20
 10054 1688 00       		.byte	0
 10055 1689 19       		.uleb128 0x19
 10056 168a 48000000 		.4byte	.LVL579
 10057 168e 3D150000 		.4byte	0x153d
 10058 1692 9D160000 		.4byte	0x169d
 10059 1696 1A       		.uleb128 0x1a
 10060 1697 01       		.uleb128 0x1
 10061 1698 50       		.byte	0x50
 10062 1699 02       		.uleb128 0x2
 10063 169a 74       		.byte	0x74
 10064 169b 00       		.sleb128 0
 10065 169c 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 275


 10066 169d 1B       		.uleb128 0x1b
 10067 169e 76000000 		.4byte	.LVL585
 10068 16a2 14070000 		.4byte	0x714
 10069 16a6 1A       		.uleb128 0x1a
 10070 16a7 01       		.uleb128 0x1
 10071 16a8 50       		.byte	0x50
 10072 16a9 02       		.uleb128 0x2
 10073 16aa 75       		.byte	0x75
 10074 16ab 00       		.sleb128 0
 10075 16ac 00       		.byte	0
 10076 16ad 00       		.byte	0
 10077 16ae 10       		.uleb128 0x10
 10078 16af 87050000 		.4byte	.LASF121
 10079 16b3 01       		.byte	0x1
 10080 16b4 0207     		.2byte	0x702
 10081 16b6 E1030000 		.4byte	0x3e1
 10082 16ba 00000000 		.4byte	.LFB21
 10083 16be 4A000000 		.4byte	.LFE21-.LFB21
 10084 16c2 01       		.uleb128 0x1
 10085 16c3 9C       		.byte	0x9c
 10086 16c4 57170000 		.4byte	0x1757
 10087 16c8 11       		.uleb128 0x11
 10088 16c9 647000   		.ascii	"dp\000"
 10089 16cc 01       		.byte	0x1
 10090 16cd 0307     		.2byte	0x703
 10091 16cf 75080000 		.4byte	0x875
 10092 16d3 8F1F0000 		.4byte	.LLST129
 10093 16d7 18       		.uleb128 0x18
 10094 16d8 A6050000 		.4byte	.LASF122
 10095 16dc 01       		.byte	0x1
 10096 16dd 0407     		.2byte	0x704
 10097 16df 2C000000 		.4byte	0x2c
 10098 16e3 BB1F0000 		.4byte	.LLST130
 10099 16e7 12       		.uleb128 0x12
 10100 16e8 72657300 		.ascii	"res\000"
 10101 16ec 01       		.byte	0x1
 10102 16ed 0707     		.2byte	0x707
 10103 16ef E1030000 		.4byte	0x3e1
 10104 16f3 E71F0000 		.4byte	.LLST131
 10105 16f7 12       		.uleb128 0x12
 10106 16f8 6E00     		.ascii	"n\000"
 10107 16fa 01       		.byte	0x1
 10108 16fb 0807     		.2byte	0x708
 10109 16fd 2C000000 		.4byte	0x2c
 10110 1701 10200000 		.4byte	.LLST132
 10111 1705 12       		.uleb128 0x12
 10112 1706 667300   		.ascii	"fs\000"
 10113 1709 01       		.byte	0x1
 10114 170a 0907     		.2byte	0x709
 10115 170c F9010000 		.4byte	0x1f9
 10116 1710 23200000 		.4byte	.LLST133
 10117 1714 19       		.uleb128 0x19
 10118 1715 0E000000 		.4byte	.LVL595
 10119 1719 E1100000 		.4byte	0x10e1
 10120 171d 2D170000 		.4byte	0x172d
 10121 1721 1A       		.uleb128 0x1a
 10122 1722 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 276


 10123 1723 50       		.byte	0x50
 10124 1724 02       		.uleb128 0x2
 10125 1725 75       		.byte	0x75
 10126 1726 00       		.sleb128 0
 10127 1727 1A       		.uleb128 0x1a
 10128 1728 01       		.uleb128 0x1
 10129 1729 51       		.byte	0x51
 10130 172a 01       		.uleb128 0x1
 10131 172b 30       		.byte	0x30
 10132 172c 00       		.byte	0
 10133 172d 19       		.uleb128 0x19
 10134 172e 1C000000 		.4byte	.LVL597
 10135 1732 BC0A0000 		.4byte	0xabc
 10136 1736 41170000 		.4byte	0x1741
 10137 173a 1A       		.uleb128 0x1a
 10138 173b 01       		.uleb128 0x1
 10139 173c 50       		.byte	0x50
 10140 173d 02       		.uleb128 0x2
 10141 173e 74       		.byte	0x74
 10142 173f 00       		.sleb128 0
 10143 1740 00       		.byte	0
 10144 1741 1B       		.uleb128 0x1b
 10145 1742 3E000000 		.4byte	.LVL601
 10146 1746 87140000 		.4byte	0x1487
 10147 174a 1A       		.uleb128 0x1a
 10148 174b 01       		.uleb128 0x1
 10149 174c 50       		.byte	0x50
 10150 174d 02       		.uleb128 0x2
 10151 174e 75       		.byte	0x75
 10152 174f 00       		.sleb128 0
 10153 1750 1A       		.uleb128 0x1a
 10154 1751 01       		.uleb128 0x1
 10155 1752 51       		.byte	0x51
 10156 1753 01       		.uleb128 0x1
 10157 1754 31       		.byte	0x31
 10158 1755 00       		.byte	0
 10159 1756 00       		.byte	0
 10160 1757 10       		.uleb128 0x10
 10161 1758 6C000000 		.4byte	.LASF123
 10162 175c 01       		.byte	0x1
 10163 175d CD09     		.2byte	0x9cd
 10164 175f E1030000 		.4byte	0x3e1
 10165 1763 00000000 		.4byte	.LFB26
 10166 1767 3A000000 		.4byte	.LFE26-.LFB26
 10167 176b 01       		.uleb128 0x1
 10168 176c 9C       		.byte	0x9c
 10169 176d FB170000 		.4byte	0x17fb
 10170 1771 11       		.uleb128 0x11
 10171 1772 647000   		.ascii	"dp\000"
 10172 1775 01       		.byte	0x1
 10173 1776 CE09     		.2byte	0x9ce
 10174 1778 75080000 		.4byte	0x875
 10175 177c 36200000 		.4byte	.LLST134
 10176 1780 12       		.uleb128 0x12
 10177 1781 72657300 		.ascii	"res\000"
 10178 1785 01       		.byte	0x1
 10179 1786 D109     		.2byte	0x9d1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 277


 10180 1788 E1030000 		.4byte	0x3e1
 10181 178c 62200000 		.4byte	.LLST135
 10182 1790 12       		.uleb128 0x12
 10183 1791 667300   		.ascii	"fs\000"
 10184 1794 01       		.byte	0x1
 10185 1795 D209     		.2byte	0x9d2
 10186 1797 F9010000 		.4byte	0x1f9
 10187 179b 96200000 		.4byte	.LLST136
 10188 179f 19       		.uleb128 0x19
 10189 17a0 0C000000 		.4byte	.LVL609
 10190 17a4 AE160000 		.4byte	0x16ae
 10191 17a8 B8170000 		.4byte	0x17b8
 10192 17ac 1A       		.uleb128 0x1a
 10193 17ad 01       		.uleb128 0x1
 10194 17ae 50       		.byte	0x50
 10195 17af 02       		.uleb128 0x2
 10196 17b0 75       		.byte	0x75
 10197 17b1 00       		.sleb128 0
 10198 17b2 1A       		.uleb128 0x1a
 10199 17b3 01       		.uleb128 0x1
 10200 17b4 51       		.byte	0x51
 10201 17b5 01       		.uleb128 0x1
 10202 17b6 31       		.byte	0x31
 10203 17b7 00       		.byte	0
 10204 17b8 19       		.uleb128 0x19
 10205 17b9 18000000 		.4byte	.LVL612
 10206 17bd BC0A0000 		.4byte	0xabc
 10207 17c1 CC170000 		.4byte	0x17cc
 10208 17c5 1A       		.uleb128 0x1a
 10209 17c6 01       		.uleb128 0x1
 10210 17c7 50       		.byte	0x50
 10211 17c8 02       		.uleb128 0x2
 10212 17c9 76       		.byte	0x76
 10213 17ca 00       		.sleb128 0
 10214 17cb 00       		.byte	0
 10215 17cc 19       		.uleb128 0x19
 10216 17cd 26000000 		.4byte	.LVL615
 10217 17d1 7B050000 		.4byte	0x57b
 10218 17d5 E5170000 		.4byte	0x17e5
 10219 17d9 1A       		.uleb128 0x1a
 10220 17da 01       		.uleb128 0x1
 10221 17db 51       		.byte	0x51
 10222 17dc 01       		.uleb128 0x1
 10223 17dd 30       		.byte	0x30
 10224 17de 1A       		.uleb128 0x1a
 10225 17df 01       		.uleb128 0x1
 10226 17e0 52       		.byte	0x52
 10227 17e1 02       		.uleb128 0x2
 10228 17e2 08       		.byte	0x8
 10229 17e3 20       		.byte	0x20
 10230 17e4 00       		.byte	0
 10231 17e5 1B       		.uleb128 0x1b
 10232 17e6 32000000 		.4byte	.LVL616
 10233 17ea 0F050000 		.4byte	0x50f
 10234 17ee 1A       		.uleb128 0x1a
 10235 17ef 01       		.uleb128 0x1
 10236 17f0 51       		.byte	0x51
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 278


 10237 17f1 02       		.uleb128 0x2
 10238 17f2 75       		.byte	0x75
 10239 17f3 20       		.sleb128 32
 10240 17f4 1A       		.uleb128 0x1a
 10241 17f5 01       		.uleb128 0x1
 10242 17f6 52       		.byte	0x52
 10243 17f7 01       		.uleb128 0x1
 10244 17f8 3B       		.byte	0x3b
 10245 17f9 00       		.byte	0
 10246 17fa 00       		.byte	0
 10247 17fb 10       		.uleb128 0x10
 10248 17fc 63060000 		.4byte	.LASF124
 10249 1800 01       		.byte	0x1
 10250 1801 2C09     		.2byte	0x92c
 10251 1803 E1030000 		.4byte	0x3e1
 10252 1807 00000000 		.4byte	.LFB24
 10253 180b 60000000 		.4byte	.LFE24-.LFB24
 10254 180f 01       		.uleb128 0x1
 10255 1810 9C       		.byte	0x9c
 10256 1811 99180000 		.4byte	0x1899
 10257 1815 11       		.uleb128 0x11
 10258 1816 647000   		.ascii	"dp\000"
 10259 1819 01       		.byte	0x1
 10260 181a 2D09     		.2byte	0x92d
 10261 181c 75080000 		.4byte	0x875
 10262 1820 A9200000 		.4byte	.LLST137
 10263 1824 11       		.uleb128 0x11
 10264 1825 766F6C00 		.ascii	"vol\000"
 10265 1829 01       		.byte	0x1
 10266 182a 2E09     		.2byte	0x92e
 10267 182c 25000000 		.4byte	0x25
 10268 1830 D5200000 		.4byte	.LLST138
 10269 1834 12       		.uleb128 0x12
 10270 1835 72657300 		.ascii	"res\000"
 10271 1839 01       		.byte	0x1
 10272 183a 3109     		.2byte	0x931
 10273 183c E1030000 		.4byte	0x3e1
 10274 1840 01210000 		.4byte	.LLST139
 10275 1844 12       		.uleb128 0x12
 10276 1845 667300   		.ascii	"fs\000"
 10277 1848 01       		.byte	0x1
 10278 1849 3209     		.2byte	0x932
 10279 184b F9010000 		.4byte	0x1f9
 10280 184f 36210000 		.4byte	.LLST140
 10281 1853 12       		.uleb128 0x12
 10282 1854 6100     		.ascii	"a\000"
 10283 1856 01       		.byte	0x1
 10284 1857 3309     		.2byte	0x933
 10285 1859 3E000000 		.4byte	0x3e
 10286 185d 49210000 		.4byte	.LLST141
 10287 1861 12       		.uleb128 0x12
 10288 1862 6300     		.ascii	"c\000"
 10289 1864 01       		.byte	0x1
 10290 1865 3309     		.2byte	0x933
 10291 1867 3E000000 		.4byte	0x3e
 10292 186b 68210000 		.4byte	.LLST142
 10293 186f 19       		.uleb128 0x19
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 279


 10294 1870 12000000 		.4byte	.LVL627
 10295 1874 BC0A0000 		.4byte	0xabc
 10296 1878 83180000 		.4byte	0x1883
 10297 187c 1A       		.uleb128 0x1a
 10298 187d 01       		.uleb128 0x1
 10299 187e 50       		.byte	0x50
 10300 187f 02       		.uleb128 0x2
 10301 1880 74       		.byte	0x74
 10302 1881 00       		.sleb128 0
 10303 1882 00       		.byte	0
 10304 1883 1B       		.uleb128 0x1b
 10305 1884 48000000 		.4byte	.LVL633
 10306 1888 87140000 		.4byte	0x1487
 10307 188c 1A       		.uleb128 0x1a
 10308 188d 01       		.uleb128 0x1
 10309 188e 50       		.byte	0x50
 10310 188f 02       		.uleb128 0x2
 10311 1890 75       		.byte	0x75
 10312 1891 00       		.sleb128 0
 10313 1892 1A       		.uleb128 0x1a
 10314 1893 01       		.uleb128 0x1
 10315 1894 51       		.byte	0x51
 10316 1895 01       		.uleb128 0x1
 10317 1896 30       		.byte	0x30
 10318 1897 00       		.byte	0
 10319 1898 00       		.byte	0
 10320 1899 10       		.uleb128 0x10
 10321 189a A4030000 		.4byte	.LASF125
 10322 189e 01       		.byte	0x1
 10323 189f 3E04     		.2byte	0x43e
 10324 18a1 E1030000 		.4byte	0x3e1
 10325 18a5 00000000 		.4byte	.LFB12
 10326 18a9 98000000 		.4byte	.LFE12-.LFB12
 10327 18ad 01       		.uleb128 0x1
 10328 18ae 9C       		.byte	0x9c
 10329 18af B5190000 		.4byte	0x19b5
 10330 18b3 11       		.uleb128 0x11
 10331 18b4 667300   		.ascii	"fs\000"
 10332 18b7 01       		.byte	0x1
 10333 18b8 3F04     		.2byte	0x43f
 10334 18ba F9010000 		.4byte	0x1f9
 10335 18be 86210000 		.4byte	.LLST143
 10336 18c2 12       		.uleb128 0x12
 10337 18c3 72657300 		.ascii	"res\000"
 10338 18c7 01       		.byte	0x1
 10339 18c8 4204     		.2byte	0x442
 10340 18ca E1030000 		.4byte	0x3e1
 10341 18ce B2210000 		.4byte	.LLST144
 10342 18d2 19       		.uleb128 0x19
 10343 18d3 08000000 		.4byte	.LVL641
 10344 18d7 590A0000 		.4byte	0xa59
 10345 18db E6180000 		.4byte	0x18e6
 10346 18df 1A       		.uleb128 0x1a
 10347 18e0 01       		.uleb128 0x1
 10348 18e1 50       		.byte	0x50
 10349 18e2 02       		.uleb128 0x2
 10350 18e3 75       		.byte	0x75
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 280


 10351 18e4 00       		.sleb128 0
 10352 18e5 00       		.byte	0
 10353 18e6 19       		.uleb128 0x19
 10354 18e7 28000000 		.4byte	.LVL644
 10355 18eb 7B050000 		.4byte	0x57b
 10356 18ef 06190000 		.4byte	0x1906
 10357 18f3 1A       		.uleb128 0x1a
 10358 18f4 01       		.uleb128 0x1
 10359 18f5 50       		.byte	0x50
 10360 18f6 02       		.uleb128 0x2
 10361 18f7 76       		.byte	0x76
 10362 18f8 00       		.sleb128 0
 10363 18f9 1A       		.uleb128 0x1a
 10364 18fa 01       		.uleb128 0x1
 10365 18fb 51       		.byte	0x51
 10366 18fc 01       		.uleb128 0x1
 10367 18fd 30       		.byte	0x30
 10368 18fe 1A       		.uleb128 0x1a
 10369 18ff 01       		.uleb128 0x1
 10370 1900 52       		.byte	0x52
 10371 1901 03       		.uleb128 0x3
 10372 1902 0A       		.byte	0xa
 10373 1903 0002     		.2byte	0x200
 10374 1905 00       		.byte	0
 10375 1906 19       		.uleb128 0x19
 10376 1907 32000000 		.4byte	.LVL645
 10377 190b A1040000 		.4byte	0x4a1
 10378 190f 22190000 		.4byte	0x1922
 10379 1913 1A       		.uleb128 0x1a
 10380 1914 01       		.uleb128 0x1
 10381 1915 50       		.byte	0x50
 10382 1916 03       		.uleb128 0x3
 10383 1917 75       		.byte	0x75
 10384 1918 AE04     		.sleb128 558
 10385 191a 1A       		.uleb128 0x1a
 10386 191b 01       		.uleb128 0x1
 10387 191c 51       		.byte	0x51
 10388 191d 03       		.uleb128 0x3
 10389 191e 0B       		.byte	0xb
 10390 191f 55AA     		.2byte	0xaa55
 10391 1921 00       		.byte	0
 10392 1922 19       		.uleb128 0x19
 10393 1923 3A000000 		.4byte	.LVL646
 10394 1927 D8040000 		.4byte	0x4d8
 10395 192b 3F190000 		.4byte	0x193f
 10396 192f 1A       		.uleb128 0x1a
 10397 1930 01       		.uleb128 0x1
 10398 1931 50       		.byte	0x50
 10399 1932 02       		.uleb128 0x2
 10400 1933 76       		.byte	0x76
 10401 1934 00       		.sleb128 0
 10402 1935 1A       		.uleb128 0x1a
 10403 1936 01       		.uleb128 0x1
 10404 1937 51       		.byte	0x51
 10405 1938 05       		.uleb128 0x5
 10406 1939 0C       		.byte	0xc
 10407 193a 52526141 		.4byte	0x41615252
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 281


 10408 193e 00       		.byte	0
 10409 193f 19       		.uleb128 0x19
 10410 1940 46000000 		.4byte	.LVL647
 10411 1944 D8040000 		.4byte	0x4d8
 10412 1948 5D190000 		.4byte	0x195d
 10413 194c 1A       		.uleb128 0x1a
 10414 194d 01       		.uleb128 0x1
 10415 194e 50       		.byte	0x50
 10416 194f 03       		.uleb128 0x3
 10417 1950 75       		.byte	0x75
 10418 1951 9404     		.sleb128 532
 10419 1953 1A       		.uleb128 0x1a
 10420 1954 01       		.uleb128 0x1
 10421 1955 51       		.byte	0x51
 10422 1956 05       		.uleb128 0x5
 10423 1957 0C       		.byte	0xc
 10424 1958 72724161 		.4byte	0x61417272
 10425 195c 00       		.byte	0
 10426 195d 19       		.uleb128 0x19
 10427 195e 52000000 		.4byte	.LVL648
 10428 1962 D8040000 		.4byte	0x4d8
 10429 1966 72190000 		.4byte	0x1972
 10430 196a 1A       		.uleb128 0x1a
 10431 196b 01       		.uleb128 0x1
 10432 196c 50       		.byte	0x50
 10433 196d 03       		.uleb128 0x3
 10434 196e 75       		.byte	0x75
 10435 196f 9804     		.sleb128 536
 10436 1971 00       		.byte	0
 10437 1972 19       		.uleb128 0x19
 10438 1973 5E000000 		.4byte	.LVL649
 10439 1977 D8040000 		.4byte	0x4d8
 10440 197b 87190000 		.4byte	0x1987
 10441 197f 1A       		.uleb128 0x1a
 10442 1980 01       		.uleb128 0x1
 10443 1981 50       		.byte	0x50
 10444 1982 03       		.uleb128 0x3
 10445 1983 75       		.byte	0x75
 10446 1984 9C04     		.sleb128 540
 10447 1986 00       		.byte	0
 10448 1987 19       		.uleb128 0x19
 10449 1988 6E000000 		.4byte	.LVL650
 10450 198c E12C0000 		.4byte	0x2ce1
 10451 1990 A0190000 		.4byte	0x19a0
 10452 1994 1A       		.uleb128 0x1a
 10453 1995 01       		.uleb128 0x1
 10454 1996 51       		.byte	0x51
 10455 1997 02       		.uleb128 0x2
 10456 1998 76       		.byte	0x76
 10457 1999 00       		.sleb128 0
 10458 199a 1A       		.uleb128 0x1a
 10459 199b 01       		.uleb128 0x1
 10460 199c 53       		.byte	0x53
 10461 199d 01       		.uleb128 0x1
 10462 199e 31       		.byte	0x31
 10463 199f 00       		.byte	0
 10464 19a0 1B       		.uleb128 0x1b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 282


 10465 19a1 7C000000 		.4byte	.LVL651
 10466 19a5 022D0000 		.4byte	0x2d02
 10467 19a9 1A       		.uleb128 0x1a
 10468 19aa 01       		.uleb128 0x1
 10469 19ab 51       		.byte	0x51
 10470 19ac 01       		.uleb128 0x1
 10471 19ad 30       		.byte	0x30
 10472 19ae 1A       		.uleb128 0x1a
 10473 19af 01       		.uleb128 0x1
 10474 19b0 52       		.byte	0x52
 10475 19b1 01       		.uleb128 0x1
 10476 19b2 30       		.byte	0x30
 10477 19b3 00       		.byte	0
 10478 19b4 00       		.byte	0
 10479 19b5 20       		.uleb128 0x20
 10480 19b6 F5030000 		.4byte	.LASF126
 10481 19ba 01       		.byte	0x1
 10482 19bb A50D     		.2byte	0xda5
 10483 19bd E1030000 		.4byte	0x3e1
 10484 19c1 00000000 		.4byte	.LFB35
 10485 19c5 54000000 		.4byte	.LFE35-.LFB35
 10486 19c9 01       		.uleb128 0x1
 10487 19ca 9C       		.byte	0x9c
 10488 19cb 6C1A0000 		.4byte	0x1a6c
 10489 19cf 11       		.uleb128 0x11
 10490 19d0 667300   		.ascii	"fs\000"
 10491 19d3 01       		.byte	0x1
 10492 19d4 A60D     		.2byte	0xda6
 10493 19d6 F9010000 		.4byte	0x1f9
 10494 19da D0210000 		.4byte	.LLST145
 10495 19de 18       		.uleb128 0x18
 10496 19df 67000000 		.4byte	.LASF92
 10497 19e3 01       		.byte	0x1
 10498 19e4 A70D     		.2byte	0xda7
 10499 19e6 87090000 		.4byte	0x987
 10500 19ea 07220000 		.4byte	.LLST146
 10501 19ee 11       		.uleb128 0x11
 10502 19ef 6F707400 		.ascii	"opt\000"
 10503 19f3 01       		.byte	0x1
 10504 19f4 A80D     		.2byte	0xda8
 10505 19f6 3E000000 		.4byte	0x3e
 10506 19fa 32220000 		.4byte	.LLST147
 10507 19fe 12       		.uleb128 0x12
 10508 19ff 63667300 		.ascii	"cfs\000"
 10509 1a03 01       		.byte	0x1
 10510 1a04 AB0D     		.2byte	0xdab
 10511 1a06 F9010000 		.4byte	0x1f9
 10512 1a0a 53220000 		.4byte	.LLST148
 10513 1a0e 12       		.uleb128 0x12
 10514 1a0f 766F6C00 		.ascii	"vol\000"
 10515 1a13 01       		.byte	0x1
 10516 1a14 AC0D     		.2byte	0xdac
 10517 1a16 25000000 		.4byte	0x25
 10518 1a1a 66220000 		.4byte	.LLST149
 10519 1a1e 12       		.uleb128 0x12
 10520 1a1f 72657300 		.ascii	"res\000"
 10521 1a23 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 283


 10522 1a24 AD0D     		.2byte	0xdad
 10523 1a26 E1030000 		.4byte	0x3e1
 10524 1a2a 84220000 		.4byte	.LLST150
 10525 1a2e 1F       		.uleb128 0x1f
 10526 1a2f 727000   		.ascii	"rp\000"
 10527 1a32 01       		.byte	0x1
 10528 1a33 AE0D     		.2byte	0xdae
 10529 1a35 87090000 		.4byte	0x987
 10530 1a39 02       		.uleb128 0x2
 10531 1a3a 91       		.byte	0x91
 10532 1a3b 74       		.sleb128 -12
 10533 1a3c 19       		.uleb128 0x19
 10534 1a3d 12000000 		.4byte	.LVL657
 10535 1a41 92090000 		.4byte	0x992
 10536 1a45 501A0000 		.4byte	0x1a50
 10537 1a49 1A       		.uleb128 0x1a
 10538 1a4a 01       		.uleb128 0x1
 10539 1a4b 50       		.byte	0x50
 10540 1a4c 02       		.uleb128 0x2
 10541 1a4d 91       		.byte	0x91
 10542 1a4e 74       		.sleb128 -12
 10543 1a4f 00       		.byte	0
 10544 1a50 1B       		.uleb128 0x1b
 10545 1a51 44000000 		.4byte	.LVL662
 10546 1a55 E10B0000 		.4byte	0xbe1
 10547 1a59 1A       		.uleb128 0x1a
 10548 1a5a 01       		.uleb128 0x1
 10549 1a5b 50       		.byte	0x50
 10550 1a5c 02       		.uleb128 0x2
 10551 1a5d 7D       		.byte	0x7d
 10552 1a5e 00       		.sleb128 0
 10553 1a5f 1A       		.uleb128 0x1a
 10554 1a60 01       		.uleb128 0x1
 10555 1a61 51       		.byte	0x51
 10556 1a62 02       		.uleb128 0x2
 10557 1a63 91       		.byte	0x91
 10558 1a64 6C       		.sleb128 -20
 10559 1a65 1A       		.uleb128 0x1a
 10560 1a66 01       		.uleb128 0x1
 10561 1a67 52       		.byte	0x52
 10562 1a68 01       		.uleb128 0x1
 10563 1a69 30       		.byte	0x30
 10564 1a6a 00       		.byte	0
 10565 1a6b 00       		.byte	0
 10566 1a6c 20       		.uleb128 0x20
 10567 1a6d 6C060000 		.4byte	.LASF127
 10568 1a71 01       		.byte	0x1
 10569 1a72 D50D     		.2byte	0xdd5
 10570 1a74 E1030000 		.4byte	0x3e1
 10571 1a78 00000000 		.4byte	.LFB36
 10572 1a7c EC010000 		.4byte	.LFE36-.LFB36
 10573 1a80 01       		.uleb128 0x1
 10574 1a81 9C       		.byte	0x9c
 10575 1a82 AA1C0000 		.4byte	0x1caa
 10576 1a86 11       		.uleb128 0x11
 10577 1a87 667000   		.ascii	"fp\000"
 10578 1a8a 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 284


 10579 1a8b D60D     		.2byte	0xdd6
 10580 1a8d AA1C0000 		.4byte	0x1caa
 10581 1a91 97220000 		.4byte	.LLST151
 10582 1a95 18       		.uleb128 0x18
 10583 1a96 67000000 		.4byte	.LASF92
 10584 1a9a 01       		.byte	0x1
 10585 1a9b D70D     		.2byte	0xdd7
 10586 1a9d 87090000 		.4byte	0x987
 10587 1aa1 D9220000 		.4byte	.LLST152
 10588 1aa5 18       		.uleb128 0x18
 10589 1aa6 CE010000 		.4byte	.LASF100
 10590 1aaa 01       		.byte	0x1
 10591 1aab D80D     		.2byte	0xdd8
 10592 1aad 3E000000 		.4byte	0x3e
 10593 1ab1 2A230000 		.4byte	.LLST153
 10594 1ab5 12       		.uleb128 0x12
 10595 1ab6 72657300 		.ascii	"res\000"
 10596 1aba 01       		.byte	0x1
 10597 1abb DB0D     		.2byte	0xddb
 10598 1abd E1030000 		.4byte	0x3e1
 10599 1ac1 79230000 		.4byte	.LLST154
 10600 1ac5 1F       		.uleb128 0x1f
 10601 1ac6 646A00   		.ascii	"dj\000"
 10602 1ac9 01       		.byte	0x1
 10603 1aca DC0D     		.2byte	0xddc
 10604 1acc F1020000 		.4byte	0x2f1
 10605 1ad0 03       		.uleb128 0x3
 10606 1ad1 91       		.byte	0x91
 10607 1ad2 B47F     		.sleb128 -76
 10608 1ad4 1F       		.uleb128 0x1f
 10609 1ad5 667300   		.ascii	"fs\000"
 10610 1ad8 01       		.byte	0x1
 10611 1ad9 DD0D     		.2byte	0xddd
 10612 1adb F9010000 		.4byte	0x1f9
 10613 1adf 03       		.uleb128 0x3
 10614 1ae0 91       		.byte	0x91
 10615 1ae1 B07F     		.sleb128 -80
 10616 1ae3 12       		.uleb128 0x12
 10617 1ae4 647700   		.ascii	"dw\000"
 10618 1ae7 01       		.byte	0x1
 10619 1ae8 DF0D     		.2byte	0xddf
 10620 1aea 70000000 		.4byte	0x70
 10621 1aee 05240000 		.4byte	.LLST155
 10622 1af2 12       		.uleb128 0x12
 10623 1af3 636C00   		.ascii	"cl\000"
 10624 1af6 01       		.byte	0x1
 10625 1af7 DF0D     		.2byte	0xddf
 10626 1af9 70000000 		.4byte	0x70
 10627 1afd 18240000 		.4byte	.LLST156
 10628 1b01 12       		.uleb128 0x12
 10629 1b02 62637300 		.ascii	"bcs\000"
 10630 1b06 01       		.byte	0x1
 10631 1b07 DF0D     		.2byte	0xddf
 10632 1b09 70000000 		.4byte	0x70
 10633 1b0d 36240000 		.4byte	.LLST157
 10634 1b11 1E       		.uleb128 0x1e
 10635 1b12 A3020000 		.4byte	.LASF87
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 285


 10636 1b16 01       		.byte	0x1
 10637 1b17 DF0D     		.2byte	0xddf
 10638 1b19 70000000 		.4byte	0x70
 10639 1b1d 49240000 		.4byte	.LLST158
 10640 1b21 12       		.uleb128 0x12
 10641 1b22 736300   		.ascii	"sc\000"
 10642 1b25 01       		.byte	0x1
 10643 1b26 DF0D     		.2byte	0xddf
 10644 1b28 70000000 		.4byte	0x70
 10645 1b2c 72240000 		.4byte	.LLST159
 10646 1b30 12       		.uleb128 0x12
 10647 1b31 6F667300 		.ascii	"ofs\000"
 10648 1b35 01       		.byte	0x1
 10649 1b36 E00D     		.2byte	0xde0
 10650 1b38 9B000000 		.4byte	0x9b
 10651 1b3c 90240000 		.4byte	.LLST160
 10652 1b40 19       		.uleb128 0x19
 10653 1b41 24000000 		.4byte	.LVL670
 10654 1b45 E10B0000 		.4byte	0xbe1
 10655 1b49 621B0000 		.4byte	0x1b62
 10656 1b4d 1A       		.uleb128 0x1a
 10657 1b4e 01       		.uleb128 0x1
 10658 1b4f 50       		.byte	0x50
 10659 1b50 03       		.uleb128 0x3
 10660 1b51 91       		.byte	0x91
 10661 1b52 AC7F     		.sleb128 -84
 10662 1b54 1A       		.uleb128 0x1a
 10663 1b55 01       		.uleb128 0x1
 10664 1b56 51       		.byte	0x51
 10665 1b57 03       		.uleb128 0x3
 10666 1b58 91       		.byte	0x91
 10667 1b59 B07F     		.sleb128 -80
 10668 1b5b 1A       		.uleb128 0x1a
 10669 1b5c 01       		.uleb128 0x1
 10670 1b5d 52       		.byte	0x52
 10671 1b5e 02       		.uleb128 0x2
 10672 1b5f 75       		.byte	0x75
 10673 1b60 00       		.sleb128 0
 10674 1b61 00       		.byte	0
 10675 1b62 19       		.uleb128 0x19
 10676 1b63 36000000 		.4byte	.LVL673
 10677 1b67 EF150000 		.4byte	0x15ef
 10678 1b6b 771B0000 		.4byte	0x1b77
 10679 1b6f 1A       		.uleb128 0x1a
 10680 1b70 01       		.uleb128 0x1
 10681 1b71 50       		.byte	0x50
 10682 1b72 03       		.uleb128 0x3
 10683 1b73 91       		.byte	0x91
 10684 1b74 B47F     		.sleb128 -76
 10685 1b76 00       		.byte	0
 10686 1b77 19       		.uleb128 0x19
 10687 1b78 5A000000 		.4byte	.LVL676
 10688 1b7c 57170000 		.4byte	0x1757
 10689 1b80 8C1B0000 		.4byte	0x1b8c
 10690 1b84 1A       		.uleb128 0x1a
 10691 1b85 01       		.uleb128 0x1
 10692 1b86 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 286


 10693 1b87 03       		.uleb128 0x3
 10694 1b88 91       		.byte	0x91
 10695 1b89 B47F     		.sleb128 -76
 10696 1b8b 00       		.byte	0
 10697 1b8c 19       		.uleb128 0x19
 10698 1b8d 8C000000 		.4byte	.LVL683
 10699 1b91 14070000 		.4byte	0x714
 10700 1b95 A01B0000 		.4byte	0x1ba0
 10701 1b99 1A       		.uleb128 0x1a
 10702 1b9a 01       		.uleb128 0x1
 10703 1b9b 51       		.byte	0x51
 10704 1b9c 02       		.uleb128 0x2
 10705 1b9d 76       		.byte	0x76
 10706 1b9e 00       		.sleb128 0
 10707 1b9f 00       		.byte	0
 10708 1ba0 1C       		.uleb128 0x1c
 10709 1ba1 92000000 		.4byte	.LVL685
 10710 1ba5 0D2D0000 		.4byte	0x2d0d
 10711 1ba9 19       		.uleb128 0x19
 10712 1baa 9C000000 		.4byte	.LVL686
 10713 1bae D8040000 		.4byte	0x4d8
 10714 1bb2 BD1B0000 		.4byte	0x1bbd
 10715 1bb6 1A       		.uleb128 0x1a
 10716 1bb7 01       		.uleb128 0x1
 10717 1bb8 50       		.byte	0x50
 10718 1bb9 02       		.uleb128 0x2
 10719 1bba 76       		.byte	0x76
 10720 1bbb 0E       		.sleb128 14
 10721 1bbc 00       		.byte	0
 10722 1bbd 19       		.uleb128 0x19
 10723 1bbe B4000000 		.4byte	.LVL687
 10724 1bc2 81070000 		.4byte	0x781
 10725 1bc6 D71B0000 		.4byte	0x1bd7
 10726 1bca 1A       		.uleb128 0x1a
 10727 1bcb 01       		.uleb128 0x1
 10728 1bcc 51       		.byte	0x51
 10729 1bcd 03       		.uleb128 0x3
 10730 1bce 7D       		.byte	0x7d
 10731 1bcf 00       		.sleb128 0
 10732 1bd0 06       		.byte	0x6
 10733 1bd1 1A       		.uleb128 0x1a
 10734 1bd2 01       		.uleb128 0x1
 10735 1bd3 52       		.byte	0x52
 10736 1bd4 01       		.uleb128 0x1
 10737 1bd5 30       		.byte	0x30
 10738 1bd6 00       		.byte	0
 10739 1bd7 19       		.uleb128 0x19
 10740 1bd8 BE000000 		.4byte	.LVL688
 10741 1bdc D8040000 		.4byte	0x4d8
 10742 1be0 EA1B0000 		.4byte	0x1bea
 10743 1be4 1A       		.uleb128 0x1a
 10744 1be5 01       		.uleb128 0x1
 10745 1be6 51       		.byte	0x51
 10746 1be7 01       		.uleb128 0x1
 10747 1be8 30       		.byte	0x30
 10748 1be9 00       		.byte	0
 10749 1bea 19       		.uleb128 0x19
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 287


 10750 1beb D8000000 		.4byte	.LVL690
 10751 1bef 7C120000 		.4byte	0x127c
 10752 1bf3 0A1C0000 		.4byte	0x1c0a
 10753 1bf7 1A       		.uleb128 0x1a
 10754 1bf8 01       		.uleb128 0x1
 10755 1bf9 50       		.byte	0x50
 10756 1bfa 03       		.uleb128 0x3
 10757 1bfb 91       		.byte	0x91
 10758 1bfc B47F     		.sleb128 -76
 10759 1bfe 1A       		.uleb128 0x1a
 10760 1bff 01       		.uleb128 0x1
 10761 1c00 51       		.byte	0x51
 10762 1c01 02       		.uleb128 0x2
 10763 1c02 78       		.byte	0x78
 10764 1c03 00       		.sleb128 0
 10765 1c04 1A       		.uleb128 0x1a
 10766 1c05 01       		.uleb128 0x1
 10767 1c06 52       		.byte	0x52
 10768 1c07 01       		.uleb128 0x1
 10769 1c08 30       		.byte	0x30
 10770 1c09 00       		.byte	0
 10771 1c0a 19       		.uleb128 0x19
 10772 1c0b E4000000 		.4byte	.LVL693
 10773 1c0f BC0A0000 		.4byte	0xabc
 10774 1c13 1E1C0000 		.4byte	0x1c1e
 10775 1c17 1A       		.uleb128 0x1a
 10776 1c18 01       		.uleb128 0x1
 10777 1c19 51       		.byte	0x51
 10778 1c1a 02       		.uleb128 0x2
 10779 1c1b 76       		.byte	0x76
 10780 1c1c 00       		.sleb128 0
 10781 1c1d 00       		.byte	0
 10782 1c1e 19       		.uleb128 0x19
 10783 1c1f 36010000 		.4byte	.LVL701
 10784 1c23 14070000 		.4byte	0x714
 10785 1c27 381C0000 		.4byte	0x1c38
 10786 1c2b 1A       		.uleb128 0x1a
 10787 1c2c 01       		.uleb128 0x1
 10788 1c2d 50       		.byte	0x50
 10789 1c2e 02       		.uleb128 0x2
 10790 1c2f 78       		.byte	0x78
 10791 1c30 00       		.sleb128 0
 10792 1c31 1A       		.uleb128 0x1a
 10793 1c32 01       		.uleb128 0x1
 10794 1c33 51       		.byte	0x51
 10795 1c34 02       		.uleb128 0x2
 10796 1c35 76       		.byte	0x76
 10797 1c36 00       		.sleb128 0
 10798 1c37 00       		.byte	0
 10799 1c38 19       		.uleb128 0x19
 10800 1c39 40010000 		.4byte	.LVL702
 10801 1c3d 67040000 		.4byte	0x467
 10802 1c41 4C1C0000 		.4byte	0x1c4c
 10803 1c45 1A       		.uleb128 0x1a
 10804 1c46 01       		.uleb128 0x1
 10805 1c47 50       		.byte	0x50
 10806 1c48 02       		.uleb128 0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 288


 10807 1c49 76       		.byte	0x76
 10808 1c4a 1C       		.sleb128 28
 10809 1c4b 00       		.byte	0
 10810 1c4c 19       		.uleb128 0x19
 10811 1c4d 66010000 		.4byte	.LVL703
 10812 1c51 7B050000 		.4byte	0x57b
 10813 1c55 6C1C0000 		.4byte	0x1c6c
 10814 1c59 1A       		.uleb128 0x1a
 10815 1c5a 01       		.uleb128 0x1
 10816 1c5b 50       		.byte	0x50
 10817 1c5c 02       		.uleb128 0x2
 10818 1c5d 79       		.byte	0x79
 10819 1c5e 00       		.sleb128 0
 10820 1c5f 1A       		.uleb128 0x1a
 10821 1c60 01       		.uleb128 0x1
 10822 1c61 51       		.byte	0x51
 10823 1c62 01       		.uleb128 0x1
 10824 1c63 30       		.byte	0x30
 10825 1c64 1A       		.uleb128 0x1a
 10826 1c65 01       		.uleb128 0x1
 10827 1c66 52       		.byte	0x52
 10828 1c67 03       		.uleb128 0x3
 10829 1c68 0A       		.byte	0xa
 10830 1c69 0002     		.2byte	0x200
 10831 1c6b 00       		.byte	0
 10832 1c6c 19       		.uleb128 0x19
 10833 1c6d 82010000 		.4byte	.LVL707
 10834 1c71 EF0F0000 		.4byte	0xfef
 10835 1c75 801C0000 		.4byte	0x1c80
 10836 1c79 1A       		.uleb128 0x1a
 10837 1c7a 01       		.uleb128 0x1
 10838 1c7b 50       		.byte	0x50
 10839 1c7c 02       		.uleb128 0x2
 10840 1c7d 77       		.byte	0x77
 10841 1c7e 00       		.sleb128 0
 10842 1c7f 00       		.byte	0
 10843 1c80 19       		.uleb128 0x19
 10844 1c81 AE010000 		.4byte	.LVL712
 10845 1c85 DA060000 		.4byte	0x6da
 10846 1c89 941C0000 		.4byte	0x1c94
 10847 1c8d 1A       		.uleb128 0x1a
 10848 1c8e 01       		.uleb128 0x1
 10849 1c8f 50       		.byte	0x50
 10850 1c90 02       		.uleb128 0x2
 10851 1c91 78       		.byte	0x78
 10852 1c92 00       		.sleb128 0
 10853 1c93 00       		.byte	0
 10854 1c94 1B       		.uleb128 0x1b
 10855 1c95 C4010000 		.4byte	.LVL715
 10856 1c99 EC2C0000 		.4byte	0x2cec
 10857 1c9d 1A       		.uleb128 0x1a
 10858 1c9e 01       		.uleb128 0x1
 10859 1c9f 51       		.byte	0x51
 10860 1ca0 02       		.uleb128 0x2
 10861 1ca1 79       		.byte	0x79
 10862 1ca2 00       		.sleb128 0
 10863 1ca3 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 289


 10864 1ca4 01       		.uleb128 0x1
 10865 1ca5 53       		.byte	0x53
 10866 1ca6 01       		.uleb128 0x1
 10867 1ca7 31       		.byte	0x31
 10868 1ca8 00       		.byte	0
 10869 1ca9 00       		.byte	0
 10870 1caa 0B       		.uleb128 0xb
 10871 1cab 04       		.byte	0x4
 10872 1cac 86020000 		.4byte	0x286
 10873 1cb0 20       		.uleb128 0x20
 10874 1cb1 4B000000 		.4byte	.LASF128
 10875 1cb5 01       		.byte	0x1
 10876 1cb6 930E     		.2byte	0xe93
 10877 1cb8 E1030000 		.4byte	0x3e1
 10878 1cbc 00000000 		.4byte	.LFB37
 10879 1cc0 92010000 		.4byte	.LFE37-.LFB37
 10880 1cc4 01       		.uleb128 0x1
 10881 1cc5 9C       		.byte	0x9c
 10882 1cc6 621E0000 		.4byte	0x1e62
 10883 1cca 11       		.uleb128 0x11
 10884 1ccb 667000   		.ascii	"fp\000"
 10885 1cce 01       		.byte	0x1
 10886 1ccf 940E     		.2byte	0xe94
 10887 1cd1 AA1C0000 		.4byte	0x1caa
 10888 1cd5 AE240000 		.4byte	.LLST161
 10889 1cd9 18       		.uleb128 0x18
 10890 1cda C7000000 		.4byte	.LASF129
 10891 1cde 01       		.byte	0x1
 10892 1cdf 950E     		.2byte	0xe95
 10893 1ce1 72050000 		.4byte	0x572
 10894 1ce5 D8240000 		.4byte	.LLST162
 10895 1ce9 11       		.uleb128 0x11
 10896 1cea 62747200 		.ascii	"btr\000"
 10897 1cee 01       		.byte	0x1
 10898 1cef 960E     		.2byte	0xe96
 10899 1cf1 2C000000 		.4byte	0x2c
 10900 1cf5 1D250000 		.4byte	.LLST163
 10901 1cf9 11       		.uleb128 0x11
 10902 1cfa 627200   		.ascii	"br\000"
 10903 1cfd 01       		.byte	0x1
 10904 1cfe 970E     		.2byte	0xe97
 10905 1d00 621E0000 		.4byte	0x1e62
 10906 1d04 51250000 		.4byte	.LLST164
 10907 1d08 12       		.uleb128 0x12
 10908 1d09 72657300 		.ascii	"res\000"
 10909 1d0d 01       		.byte	0x1
 10910 1d0e 9A0E     		.2byte	0xe9a
 10911 1d10 E1030000 		.4byte	0x3e1
 10912 1d14 7D250000 		.4byte	.LLST165
 10913 1d18 1F       		.uleb128 0x1f
 10914 1d19 667300   		.ascii	"fs\000"
 10915 1d1c 01       		.byte	0x1
 10916 1d1d 9B0E     		.2byte	0xe9b
 10917 1d1f F9010000 		.4byte	0x1f9
 10918 1d23 02       		.uleb128 0x2
 10919 1d24 91       		.byte	0x91
 10920 1d25 54       		.sleb128 -44
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 290


 10921 1d26 1E       		.uleb128 0x1e
 10922 1d27 A3020000 		.4byte	.LASF87
 10923 1d2b 01       		.byte	0x1
 10924 1d2c 9C0E     		.2byte	0xe9c
 10925 1d2e 70000000 		.4byte	0x70
 10926 1d32 9B250000 		.4byte	.LLST166
 10927 1d36 1E       		.uleb128 0x1e
 10928 1d37 9F000000 		.4byte	.LASF40
 10929 1d3b 01       		.byte	0x1
 10930 1d3c 9C0E     		.2byte	0xe9c
 10931 1d3e 70000000 		.4byte	0x70
 10932 1d42 DC250000 		.4byte	.LLST167
 10933 1d46 1E       		.uleb128 0x1e
 10934 1d47 0E060000 		.4byte	.LASF130
 10935 1d4b 01       		.byte	0x1
 10936 1d4c 9D0E     		.2byte	0xe9d
 10937 1d4e 9B000000 		.4byte	0x9b
 10938 1d52 49260000 		.4byte	.LLST168
 10939 1d56 1E       		.uleb128 0x1e
 10940 1d57 41060000 		.4byte	.LASF131
 10941 1d5b 01       		.byte	0x1
 10942 1d5c 9E0E     		.2byte	0xe9e
 10943 1d5e 2C000000 		.4byte	0x2c
 10944 1d62 6C260000 		.4byte	.LLST169
 10945 1d66 12       		.uleb128 0x12
 10946 1d67 636300   		.ascii	"cc\000"
 10947 1d6a 01       		.byte	0x1
 10948 1d6b 9E0E     		.2byte	0xe9e
 10949 1d6d 2C000000 		.4byte	0x2c
 10950 1d71 8A260000 		.4byte	.LLST170
 10951 1d75 1E       		.uleb128 0x1e
 10952 1d76 31000000 		.4byte	.LASF132
 10953 1d7a 01       		.byte	0x1
 10954 1d7b 9E0E     		.2byte	0xe9e
 10955 1d7d 2C000000 		.4byte	0x2c
 10956 1d81 A8260000 		.4byte	.LLST171
 10957 1d85 1E       		.uleb128 0x1e
 10958 1d86 79000000 		.4byte	.LASF133
 10959 1d8a 01       		.byte	0x1
 10960 1d8b 9F0E     		.2byte	0xe9f
 10961 1d8d 80020000 		.4byte	0x280
 10962 1d91 C6260000 		.4byte	.LLST172
 10963 1d95 19       		.uleb128 0x19
 10964 1d96 22000000 		.4byte	.LVL729
 10965 1d9a F9090000 		.4byte	0x9f9
 10966 1d9e AF1D0000 		.4byte	0x1daf
 10967 1da2 1A       		.uleb128 0x1a
 10968 1da3 01       		.uleb128 0x1
 10969 1da4 50       		.byte	0x50
 10970 1da5 02       		.uleb128 0x2
 10971 1da6 74       		.byte	0x74
 10972 1da7 00       		.sleb128 0
 10973 1da8 1A       		.uleb128 0x1a
 10974 1da9 01       		.uleb128 0x1
 10975 1daa 51       		.byte	0x51
 10976 1dab 02       		.uleb128 0x2
 10977 1dac 91       		.byte	0x91
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 291


 10978 1dad 54       		.sleb128 -44
 10979 1dae 00       		.byte	0
 10980 1daf 19       		.uleb128 0x19
 10981 1db0 6E000000 		.4byte	.LVL738
 10982 1db4 EF0F0000 		.4byte	0xfef
 10983 1db8 C41D0000 		.4byte	0x1dc4
 10984 1dbc 1A       		.uleb128 0x1a
 10985 1dbd 01       		.uleb128 0x1
 10986 1dbe 50       		.byte	0x50
 10987 1dbf 03       		.uleb128 0x3
 10988 1dc0 91       		.byte	0x91
 10989 1dc1 4C       		.sleb128 -52
 10990 1dc2 06       		.byte	0x6
 10991 1dc3 00       		.byte	0
 10992 1dc4 19       		.uleb128 0x19
 10993 1dc5 94000000 		.4byte	.LVL744
 10994 1dc9 DA060000 		.4byte	0x6da
 10995 1dcd D81D0000 		.4byte	0x1dd8
 10996 1dd1 1A       		.uleb128 0x1a
 10997 1dd2 01       		.uleb128 0x1
 10998 1dd3 50       		.byte	0x50
 10999 1dd4 02       		.uleb128 0x2
 11000 1dd5 7B       		.byte	0x7b
 11001 1dd6 00       		.sleb128 0
 11002 1dd7 00       		.byte	0
 11003 1dd8 19       		.uleb128 0x19
 11004 1dd9 C6000000 		.4byte	.LVL752
 11005 1ddd EC2C0000 		.4byte	0x2cec
 11006 1de1 F81D0000 		.4byte	0x1df8
 11007 1de5 1A       		.uleb128 0x1a
 11008 1de6 01       		.uleb128 0x1
 11009 1de7 51       		.byte	0x51
 11010 1de8 02       		.uleb128 0x2
 11011 1de9 78       		.byte	0x78
 11012 1dea 00       		.sleb128 0
 11013 1deb 1A       		.uleb128 0x1a
 11014 1dec 01       		.uleb128 0x1
 11015 1ded 52       		.byte	0x52
 11016 1dee 02       		.uleb128 0x2
 11017 1def 7A       		.byte	0x7a
 11018 1df0 00       		.sleb128 0
 11019 1df1 1A       		.uleb128 0x1a
 11020 1df2 01       		.uleb128 0x1
 11021 1df3 53       		.byte	0x53
 11022 1df4 02       		.uleb128 0x2
 11023 1df5 75       		.byte	0x75
 11024 1df6 00       		.sleb128 0
 11025 1df7 00       		.byte	0
 11026 1df8 19       		.uleb128 0x19
 11027 1df9 F4000000 		.4byte	.LVL755
 11028 1dfd 0F050000 		.4byte	0x50f
 11029 1e01 131E0000 		.4byte	0x1e13
 11030 1e05 1A       		.uleb128 0x1a
 11031 1e06 01       		.uleb128 0x1
 11032 1e07 51       		.byte	0x51
 11033 1e08 02       		.uleb128 0x2
 11034 1e09 74       		.byte	0x74
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 292


 11035 1e0a 28       		.sleb128 40
 11036 1e0b 1A       		.uleb128 0x1a
 11037 1e0c 01       		.uleb128 0x1
 11038 1e0d 52       		.byte	0x52
 11039 1e0e 03       		.uleb128 0x3
 11040 1e0f 0A       		.byte	0xa
 11041 1e10 0002     		.2byte	0x200
 11042 1e12 00       		.byte	0
 11043 1e13 19       		.uleb128 0x19
 11044 1e14 14010000 		.4byte	.LVL759
 11045 1e18 E12C0000 		.4byte	0x2ce1
 11046 1e1c 2C1E0000 		.4byte	0x1e2c
 11047 1e20 1A       		.uleb128 0x1a
 11048 1e21 01       		.uleb128 0x1
 11049 1e22 51       		.byte	0x51
 11050 1e23 02       		.uleb128 0x2
 11051 1e24 74       		.byte	0x74
 11052 1e25 28       		.sleb128 40
 11053 1e26 1A       		.uleb128 0x1a
 11054 1e27 01       		.uleb128 0x1
 11055 1e28 53       		.byte	0x53
 11056 1e29 01       		.uleb128 0x1
 11057 1e2a 31       		.byte	0x31
 11058 1e2b 00       		.byte	0
 11059 1e2c 19       		.uleb128 0x19
 11060 1e2d 36010000 		.4byte	.LVL760
 11061 1e31 EC2C0000 		.4byte	0x2cec
 11062 1e35 4B1E0000 		.4byte	0x1e4b
 11063 1e39 1A       		.uleb128 0x1a
 11064 1e3a 01       		.uleb128 0x1
 11065 1e3b 51       		.byte	0x51
 11066 1e3c 02       		.uleb128 0x2
 11067 1e3d 74       		.byte	0x74
 11068 1e3e 28       		.sleb128 40
 11069 1e3f 1A       		.uleb128 0x1a
 11070 1e40 01       		.uleb128 0x1
 11071 1e41 52       		.byte	0x52
 11072 1e42 02       		.uleb128 0x2
 11073 1e43 7A       		.byte	0x7a
 11074 1e44 00       		.sleb128 0
 11075 1e45 1A       		.uleb128 0x1a
 11076 1e46 01       		.uleb128 0x1
 11077 1e47 53       		.byte	0x53
 11078 1e48 01       		.uleb128 0x1
 11079 1e49 31       		.byte	0x31
 11080 1e4a 00       		.byte	0
 11081 1e4b 1B       		.uleb128 0x1b
 11082 1e4c 66010000 		.4byte	.LVL764
 11083 1e50 0F050000 		.4byte	0x50f
 11084 1e54 1A       		.uleb128 0x1a
 11085 1e55 01       		.uleb128 0x1
 11086 1e56 50       		.byte	0x50
 11087 1e57 02       		.uleb128 0x2
 11088 1e58 78       		.byte	0x78
 11089 1e59 00       		.sleb128 0
 11090 1e5a 1A       		.uleb128 0x1a
 11091 1e5b 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 293


 11092 1e5c 52       		.byte	0x52
 11093 1e5d 02       		.uleb128 0x2
 11094 1e5e 75       		.byte	0x75
 11095 1e5f 00       		.sleb128 0
 11096 1e60 00       		.byte	0
 11097 1e61 00       		.byte	0
 11098 1e62 0B       		.uleb128 0xb
 11099 1e63 04       		.byte	0x4
 11100 1e64 2C000000 		.4byte	0x2c
 11101 1e68 20       		.uleb128 0x20
 11102 1e69 6C010000 		.4byte	.LASF134
 11103 1e6d 01       		.byte	0x1
 11104 1e6e F70E     		.2byte	0xef7
 11105 1e70 E1030000 		.4byte	0x3e1
 11106 1e74 00000000 		.4byte	.LFB38
 11107 1e78 D0010000 		.4byte	.LFE38-.LFB38
 11108 1e7c 01       		.uleb128 0x1
 11109 1e7d 9C       		.byte	0x9c
 11110 1e7e 24200000 		.4byte	0x2024
 11111 1e82 11       		.uleb128 0x11
 11112 1e83 667000   		.ascii	"fp\000"
 11113 1e86 01       		.byte	0x1
 11114 1e87 F80E     		.2byte	0xef8
 11115 1e89 AA1C0000 		.4byte	0x1caa
 11116 1e8d E4260000 		.4byte	.LLST173
 11117 1e91 18       		.uleb128 0x18
 11118 1e92 C7000000 		.4byte	.LASF129
 11119 1e96 01       		.byte	0x1
 11120 1e97 F90E     		.2byte	0xef9
 11121 1e99 74050000 		.4byte	0x574
 11122 1e9d 0E270000 		.4byte	.LLST174
 11123 1ea1 11       		.uleb128 0x11
 11124 1ea2 62747700 		.ascii	"btw\000"
 11125 1ea6 01       		.byte	0x1
 11126 1ea7 FA0E     		.2byte	0xefa
 11127 1ea9 2C000000 		.4byte	0x2c
 11128 1ead 53270000 		.4byte	.LLST175
 11129 1eb1 11       		.uleb128 0x11
 11130 1eb2 627700   		.ascii	"bw\000"
 11131 1eb5 01       		.byte	0x1
 11132 1eb6 FB0E     		.2byte	0xefb
 11133 1eb8 621E0000 		.4byte	0x1e62
 11134 1ebc 71270000 		.4byte	.LLST176
 11135 1ec0 12       		.uleb128 0x12
 11136 1ec1 72657300 		.ascii	"res\000"
 11137 1ec5 01       		.byte	0x1
 11138 1ec6 FE0E     		.2byte	0xefe
 11139 1ec8 E1030000 		.4byte	0x3e1
 11140 1ecc 9D270000 		.4byte	.LLST177
 11141 1ed0 1F       		.uleb128 0x1f
 11142 1ed1 667300   		.ascii	"fs\000"
 11143 1ed4 01       		.byte	0x1
 11144 1ed5 FF0E     		.2byte	0xeff
 11145 1ed7 F9010000 		.4byte	0x1f9
 11146 1edb 02       		.uleb128 0x2
 11147 1edc 91       		.byte	0x91
 11148 1edd 54       		.sleb128 -44
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 294


 11149 1ede 1E       		.uleb128 0x1e
 11150 1edf A3020000 		.4byte	.LASF87
 11151 1ee3 01       		.byte	0x1
 11152 1ee4 000F     		.2byte	0xf00
 11153 1ee6 70000000 		.4byte	0x70
 11154 1eea BB270000 		.4byte	.LLST178
 11155 1eee 1E       		.uleb128 0x1e
 11156 1eef 9F000000 		.4byte	.LASF40
 11157 1ef3 01       		.byte	0x1
 11158 1ef4 000F     		.2byte	0xf00
 11159 1ef6 70000000 		.4byte	0x70
 11160 1efa 20280000 		.4byte	.LLST179
 11161 1efe 1E       		.uleb128 0x1e
 11162 1eff 2E030000 		.4byte	.LASF135
 11163 1f03 01       		.byte	0x1
 11164 1f04 010F     		.2byte	0xf01
 11165 1f06 2C000000 		.4byte	0x2c
 11166 1f0a 8D280000 		.4byte	.LLST180
 11167 1f0e 12       		.uleb128 0x12
 11168 1f0f 636300   		.ascii	"cc\000"
 11169 1f12 01       		.byte	0x1
 11170 1f13 010F     		.2byte	0xf01
 11171 1f15 2C000000 		.4byte	0x2c
 11172 1f19 AB280000 		.4byte	.LLST181
 11173 1f1d 1E       		.uleb128 0x1e
 11174 1f1e 31000000 		.4byte	.LASF132
 11175 1f22 01       		.byte	0x1
 11176 1f23 010F     		.2byte	0xf01
 11177 1f25 2C000000 		.4byte	0x2c
 11178 1f29 C9280000 		.4byte	.LLST182
 11179 1f2d 1E       		.uleb128 0x1e
 11180 1f2e 37040000 		.4byte	.LASF136
 11181 1f32 01       		.byte	0x1
 11182 1f33 020F     		.2byte	0xf02
 11183 1f35 5C040000 		.4byte	0x45c
 11184 1f39 FD280000 		.4byte	.LLST183
 11185 1f3d 19       		.uleb128 0x19
 11186 1f3e 22000000 		.4byte	.LVL778
 11187 1f42 F9090000 		.4byte	0x9f9
 11188 1f46 571F0000 		.4byte	0x1f57
 11189 1f4a 1A       		.uleb128 0x1a
 11190 1f4b 01       		.uleb128 0x1
 11191 1f4c 50       		.byte	0x50
 11192 1f4d 02       		.uleb128 0x2
 11193 1f4e 74       		.byte	0x74
 11194 1f4f 00       		.sleb128 0
 11195 1f50 1A       		.uleb128 0x1a
 11196 1f51 01       		.uleb128 0x1
 11197 1f52 51       		.byte	0x51
 11198 1f53 02       		.uleb128 0x2
 11199 1f54 91       		.byte	0x91
 11200 1f55 54       		.sleb128 -44
 11201 1f56 00       		.byte	0
 11202 1f57 19       		.uleb128 0x19
 11203 1f58 6E000000 		.4byte	.LVL786
 11204 1f5c 7A110000 		.4byte	0x117a
 11205 1f60 711F0000 		.4byte	0x1f71
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 295


 11206 1f64 1A       		.uleb128 0x1a
 11207 1f65 01       		.uleb128 0x1
 11208 1f66 50       		.byte	0x50
 11209 1f67 03       		.uleb128 0x3
 11210 1f68 91       		.byte	0x91
 11211 1f69 4C       		.sleb128 -52
 11212 1f6a 06       		.byte	0x6
 11213 1f6b 1A       		.uleb128 0x1a
 11214 1f6c 01       		.uleb128 0x1
 11215 1f6d 51       		.byte	0x51
 11216 1f6e 01       		.uleb128 0x1
 11217 1f6f 30       		.byte	0x30
 11218 1f70 00       		.byte	0
 11219 1f71 19       		.uleb128 0x19
 11220 1f72 78000000 		.4byte	.LVL789
 11221 1f76 7A110000 		.4byte	0x117a
 11222 1f7a 861F0000 		.4byte	0x1f86
 11223 1f7e 1A       		.uleb128 0x1a
 11224 1f7f 01       		.uleb128 0x1
 11225 1f80 50       		.byte	0x50
 11226 1f81 03       		.uleb128 0x3
 11227 1f82 91       		.byte	0x91
 11228 1f83 4C       		.sleb128 -52
 11229 1f84 06       		.byte	0x6
 11230 1f85 00       		.byte	0
 11231 1f86 19       		.uleb128 0x19
 11232 1f87 B8000000 		.4byte	.LVL795
 11233 1f8b E12C0000 		.4byte	0x2ce1
 11234 1f8f 9F1F0000 		.4byte	0x1f9f
 11235 1f93 1A       		.uleb128 0x1a
 11236 1f94 01       		.uleb128 0x1
 11237 1f95 51       		.byte	0x51
 11238 1f96 02       		.uleb128 0x2
 11239 1f97 74       		.byte	0x74
 11240 1f98 28       		.sleb128 40
 11241 1f99 1A       		.uleb128 0x1a
 11242 1f9a 01       		.uleb128 0x1
 11243 1f9b 53       		.byte	0x53
 11244 1f9c 01       		.uleb128 0x1
 11245 1f9d 31       		.byte	0x31
 11246 1f9e 00       		.byte	0
 11247 1f9f 19       		.uleb128 0x19
 11248 1fa0 D8000000 		.4byte	.LVL796
 11249 1fa4 DA060000 		.4byte	0x6da
 11250 1fa8 B31F0000 		.4byte	0x1fb3
 11251 1fac 1A       		.uleb128 0x1a
 11252 1fad 01       		.uleb128 0x1
 11253 1fae 50       		.byte	0x50
 11254 1faf 02       		.uleb128 0x2
 11255 1fb0 7B       		.byte	0x7b
 11256 1fb1 00       		.sleb128 0
 11257 1fb2 00       		.byte	0
 11258 1fb3 19       		.uleb128 0x19
 11259 1fb4 0A010000 		.4byte	.LVL804
 11260 1fb8 E12C0000 		.4byte	0x2ce1
 11261 1fbc D31F0000 		.4byte	0x1fd3
 11262 1fc0 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 296


 11263 1fc1 01       		.uleb128 0x1
 11264 1fc2 51       		.byte	0x51
 11265 1fc3 02       		.uleb128 0x2
 11266 1fc4 78       		.byte	0x78
 11267 1fc5 00       		.sleb128 0
 11268 1fc6 1A       		.uleb128 0x1a
 11269 1fc7 01       		.uleb128 0x1
 11270 1fc8 52       		.byte	0x52
 11271 1fc9 02       		.uleb128 0x2
 11272 1fca 7A       		.byte	0x7a
 11273 1fcb 00       		.sleb128 0
 11274 1fcc 1A       		.uleb128 0x1a
 11275 1fcd 01       		.uleb128 0x1
 11276 1fce 53       		.byte	0x53
 11277 1fcf 02       		.uleb128 0x2
 11278 1fd0 75       		.byte	0x75
 11279 1fd1 00       		.sleb128 0
 11280 1fd2 00       		.byte	0
 11281 1fd3 19       		.uleb128 0x19
 11282 1fd4 30010000 		.4byte	.LVL807
 11283 1fd8 0F050000 		.4byte	0x50f
 11284 1fdc EE1F0000 		.4byte	0x1fee
 11285 1fe0 1A       		.uleb128 0x1a
 11286 1fe1 01       		.uleb128 0x1
 11287 1fe2 50       		.byte	0x50
 11288 1fe3 02       		.uleb128 0x2
 11289 1fe4 74       		.byte	0x74
 11290 1fe5 28       		.sleb128 40
 11291 1fe6 1A       		.uleb128 0x1a
 11292 1fe7 01       		.uleb128 0x1
 11293 1fe8 52       		.byte	0x52
 11294 1fe9 03       		.uleb128 0x3
 11295 1fea 0A       		.byte	0xa
 11296 1feb 0002     		.2byte	0x200
 11297 1fed 00       		.byte	0
 11298 1fee 19       		.uleb128 0x19
 11299 1fef 5A010000 		.4byte	.LVL811
 11300 1ff3 EC2C0000 		.4byte	0x2cec
 11301 1ff7 0D200000 		.4byte	0x200d
 11302 1ffb 1A       		.uleb128 0x1a
 11303 1ffc 01       		.uleb128 0x1
 11304 1ffd 51       		.byte	0x51
 11305 1ffe 02       		.uleb128 0x2
 11306 1fff 74       		.byte	0x74
 11307 2000 28       		.sleb128 40
 11308 2001 1A       		.uleb128 0x1a
 11309 2002 01       		.uleb128 0x1
 11310 2003 52       		.byte	0x52
 11311 2004 02       		.uleb128 0x2
 11312 2005 7A       		.byte	0x7a
 11313 2006 00       		.sleb128 0
 11314 2007 1A       		.uleb128 0x1a
 11315 2008 01       		.uleb128 0x1
 11316 2009 53       		.byte	0x53
 11317 200a 01       		.uleb128 0x1
 11318 200b 31       		.byte	0x31
 11319 200c 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 297


 11320 200d 1B       		.uleb128 0x1b
 11321 200e 88010000 		.4byte	.LVL815
 11322 2012 0F050000 		.4byte	0x50f
 11323 2016 1A       		.uleb128 0x1a
 11324 2017 01       		.uleb128 0x1
 11325 2018 51       		.byte	0x51
 11326 2019 02       		.uleb128 0x2
 11327 201a 78       		.byte	0x78
 11328 201b 00       		.sleb128 0
 11329 201c 1A       		.uleb128 0x1a
 11330 201d 01       		.uleb128 0x1
 11331 201e 52       		.byte	0x52
 11332 201f 02       		.uleb128 0x2
 11333 2020 75       		.byte	0x75
 11334 2021 00       		.sleb128 0
 11335 2022 00       		.byte	0
 11336 2023 00       		.byte	0
 11337 2024 20       		.uleb128 0x20
 11338 2025 47040000 		.4byte	.LASF137
 11339 2029 01       		.byte	0x1
 11340 202a 700F     		.2byte	0xf70
 11341 202c E1030000 		.4byte	0x3e1
 11342 2030 00000000 		.4byte	.LFB39
 11343 2034 98000000 		.4byte	.LFE39-.LFB39
 11344 2038 01       		.uleb128 0x1
 11345 2039 9C       		.byte	0x9c
 11346 203a 34210000 		.4byte	0x2134
 11347 203e 11       		.uleb128 0x11
 11348 203f 667000   		.ascii	"fp\000"
 11349 2042 01       		.byte	0x1
 11350 2043 710F     		.2byte	0xf71
 11351 2045 AA1C0000 		.4byte	0x1caa
 11352 2049 1B290000 		.4byte	.LLST184
 11353 204d 12       		.uleb128 0x12
 11354 204e 72657300 		.ascii	"res\000"
 11355 2052 01       		.byte	0x1
 11356 2053 740F     		.2byte	0xf74
 11357 2055 E1030000 		.4byte	0x3e1
 11358 2059 47290000 		.4byte	.LLST185
 11359 205d 1F       		.uleb128 0x1f
 11360 205e 667300   		.ascii	"fs\000"
 11361 2061 01       		.byte	0x1
 11362 2062 750F     		.2byte	0xf75
 11363 2064 F9010000 		.4byte	0x1f9
 11364 2068 02       		.uleb128 0x2
 11365 2069 91       		.byte	0x91
 11366 206a 6C       		.sleb128 -20
 11367 206b 12       		.uleb128 0x12
 11368 206c 746D00   		.ascii	"tm\000"
 11369 206f 01       		.byte	0x1
 11370 2070 760F     		.2byte	0xf76
 11371 2072 70000000 		.4byte	0x70
 11372 2076 70290000 		.4byte	.LLST186
 11373 207a 12       		.uleb128 0x12
 11374 207b 64697200 		.ascii	"dir\000"
 11375 207f 01       		.byte	0x1
 11376 2080 770F     		.2byte	0xf77
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 298


 11377 2082 80020000 		.4byte	0x280
 11378 2086 8E290000 		.4byte	.LLST187
 11379 208a 19       		.uleb128 0x19
 11380 208b 0C000000 		.4byte	.LVL826
 11381 208f F9090000 		.4byte	0x9f9
 11382 2093 A4200000 		.4byte	0x20a4
 11383 2097 1A       		.uleb128 0x1a
 11384 2098 01       		.uleb128 0x1
 11385 2099 50       		.byte	0x50
 11386 209a 02       		.uleb128 0x2
 11387 209b 74       		.byte	0x74
 11388 209c 00       		.sleb128 0
 11389 209d 1A       		.uleb128 0x1a
 11390 209e 01       		.uleb128 0x1
 11391 209f 51       		.byte	0x51
 11392 20a0 02       		.uleb128 0x2
 11393 20a1 91       		.byte	0x91
 11394 20a2 6C       		.sleb128 -20
 11395 20a3 00       		.byte	0
 11396 20a4 19       		.uleb128 0x19
 11397 20a5 2C000000 		.4byte	.LVL828
 11398 20a9 E12C0000 		.4byte	0x2ce1
 11399 20ad BD200000 		.4byte	0x20bd
 11400 20b1 1A       		.uleb128 0x1a
 11401 20b2 01       		.uleb128 0x1
 11402 20b3 51       		.byte	0x51
 11403 20b4 02       		.uleb128 0x2
 11404 20b5 74       		.byte	0x74
 11405 20b6 28       		.sleb128 40
 11406 20b7 1A       		.uleb128 0x1a
 11407 20b8 01       		.uleb128 0x1
 11408 20b9 53       		.byte	0x53
 11409 20ba 01       		.uleb128 0x1
 11410 20bb 31       		.byte	0x31
 11411 20bc 00       		.byte	0
 11412 20bd 1C       		.uleb128 0x1c
 11413 20be 3C000000 		.4byte	.LVL829
 11414 20c2 0D2D0000 		.4byte	0x2d0d
 11415 20c6 1C       		.uleb128 0x1c
 11416 20c7 46000000 		.4byte	.LVL832
 11417 20cb BC0A0000 		.4byte	0xabc
 11418 20cf 19       		.uleb128 0x19
 11419 20d0 5E000000 		.4byte	.LVL835
 11420 20d4 81070000 		.4byte	0x781
 11421 20d8 E3200000 		.4byte	0x20e3
 11422 20dc 1A       		.uleb128 0x1a
 11423 20dd 01       		.uleb128 0x1
 11424 20de 51       		.byte	0x51
 11425 20df 02       		.uleb128 0x2
 11426 20e0 75       		.byte	0x75
 11427 20e1 00       		.sleb128 0
 11428 20e2 00       		.byte	0
 11429 20e3 19       		.uleb128 0x19
 11430 20e4 68000000 		.4byte	.LVL836
 11431 20e8 D8040000 		.4byte	0x4d8
 11432 20ec F7200000 		.4byte	0x20f7
 11433 20f0 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 299


 11434 20f1 01       		.uleb128 0x1
 11435 20f2 50       		.byte	0x50
 11436 20f3 02       		.uleb128 0x2
 11437 20f4 75       		.byte	0x75
 11438 20f5 1C       		.sleb128 28
 11439 20f6 00       		.byte	0
 11440 20f7 19       		.uleb128 0x19
 11441 20f8 72000000 		.4byte	.LVL837
 11442 20fc D8040000 		.4byte	0x4d8
 11443 2100 11210000 		.4byte	0x2111
 11444 2104 1A       		.uleb128 0x1a
 11445 2105 01       		.uleb128 0x1
 11446 2106 50       		.byte	0x50
 11447 2107 02       		.uleb128 0x2
 11448 2108 75       		.byte	0x75
 11449 2109 16       		.sleb128 22
 11450 210a 1A       		.uleb128 0x1a
 11451 210b 01       		.uleb128 0x1
 11452 210c 51       		.byte	0x51
 11453 210d 02       		.uleb128 0x2
 11454 210e 76       		.byte	0x76
 11455 210f 00       		.sleb128 0
 11456 2110 00       		.byte	0
 11457 2111 19       		.uleb128 0x19
 11458 2112 7C000000 		.4byte	.LVL838
 11459 2116 A1040000 		.4byte	0x4a1
 11460 211a 2A210000 		.4byte	0x212a
 11461 211e 1A       		.uleb128 0x1a
 11462 211f 01       		.uleb128 0x1
 11463 2120 50       		.byte	0x50
 11464 2121 02       		.uleb128 0x2
 11465 2122 75       		.byte	0x75
 11466 2123 12       		.sleb128 18
 11467 2124 1A       		.uleb128 0x1a
 11468 2125 01       		.uleb128 0x1
 11469 2126 51       		.byte	0x51
 11470 2127 01       		.uleb128 0x1
 11471 2128 30       		.byte	0x30
 11472 2129 00       		.byte	0
 11473 212a 1C       		.uleb128 0x1c
 11474 212b 88000000 		.4byte	.LVL839
 11475 212f 99180000 		.4byte	0x1899
 11476 2133 00       		.byte	0
 11477 2134 20       		.uleb128 0x20
 11478 2135 69020000 		.4byte	.LASF138
 11479 2139 01       		.byte	0x1
 11480 213a C10F     		.2byte	0xfc1
 11481 213c E1030000 		.4byte	0x3e1
 11482 2140 00000000 		.4byte	.LFB40
 11483 2144 22000000 		.4byte	.LFE40-.LFB40
 11484 2148 01       		.uleb128 0x1
 11485 2149 9C       		.byte	0x9c
 11486 214a A6210000 		.4byte	0x21a6
 11487 214e 11       		.uleb128 0x11
 11488 214f 667000   		.ascii	"fp\000"
 11489 2152 01       		.byte	0x1
 11490 2153 C20F     		.2byte	0xfc2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 300


 11491 2155 AA1C0000 		.4byte	0x1caa
 11492 2159 A1290000 		.4byte	.LLST188
 11493 215d 12       		.uleb128 0x12
 11494 215e 72657300 		.ascii	"res\000"
 11495 2162 01       		.byte	0x1
 11496 2163 C50F     		.2byte	0xfc5
 11497 2165 E1030000 		.4byte	0x3e1
 11498 2169 CD290000 		.4byte	.LLST189
 11499 216d 1F       		.uleb128 0x1f
 11500 216e 667300   		.ascii	"fs\000"
 11501 2171 01       		.byte	0x1
 11502 2172 C60F     		.2byte	0xfc6
 11503 2174 F9010000 		.4byte	0x1f9
 11504 2178 02       		.uleb128 0x2
 11505 2179 91       		.byte	0x91
 11506 217a 74       		.sleb128 -12
 11507 217b 19       		.uleb128 0x19
 11508 217c 0A000000 		.4byte	.LVL843
 11509 2180 24200000 		.4byte	0x2024
 11510 2184 8F210000 		.4byte	0x218f
 11511 2188 1A       		.uleb128 0x1a
 11512 2189 01       		.uleb128 0x1
 11513 218a 50       		.byte	0x50
 11514 218b 02       		.uleb128 0x2
 11515 218c 74       		.byte	0x74
 11516 218d 00       		.sleb128 0
 11517 218e 00       		.byte	0
 11518 218f 1B       		.uleb128 0x1b
 11519 2190 16000000 		.4byte	.LVL845
 11520 2194 F9090000 		.4byte	0x9f9
 11521 2198 1A       		.uleb128 0x1a
 11522 2199 01       		.uleb128 0x1
 11523 219a 50       		.byte	0x50
 11524 219b 02       		.uleb128 0x2
 11525 219c 74       		.byte	0x74
 11526 219d 00       		.sleb128 0
 11527 219e 1A       		.uleb128 0x1a
 11528 219f 01       		.uleb128 0x1
 11529 21a0 51       		.byte	0x51
 11530 21a1 02       		.uleb128 0x2
 11531 21a2 91       		.byte	0x91
 11532 21a3 74       		.sleb128 -12
 11533 21a4 00       		.byte	0
 11534 21a5 00       		.byte	0
 11535 21a6 21       		.uleb128 0x21
 11536 21a7 18040000 		.4byte	.LASF139
 11537 21ab 01       		.byte	0x1
 11538 21ac 7C10     		.2byte	0x107c
 11539 21ae E1030000 		.4byte	0x3e1
 11540 21b2 00000000 		.4byte	.LFB41
 11541 21b6 9A010000 		.4byte	.LFE41-.LFB41
 11542 21ba 01       		.uleb128 0x1
 11543 21bb 9C       		.byte	0x9c
 11544 21bc D8220000 		.4byte	0x22d8
 11545 21c0 11       		.uleb128 0x11
 11546 21c1 667000   		.ascii	"fp\000"
 11547 21c4 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 301


 11548 21c5 7D10     		.2byte	0x107d
 11549 21c7 AA1C0000 		.4byte	0x1caa
 11550 21cb EB290000 		.4byte	.LLST190
 11551 21cf 11       		.uleb128 0x11
 11552 21d0 6F667300 		.ascii	"ofs\000"
 11553 21d4 01       		.byte	0x1
 11554 21d5 7E10     		.2byte	0x107e
 11555 21d7 9B000000 		.4byte	0x9b
 11556 21db 152A0000 		.4byte	.LLST191
 11557 21df 12       		.uleb128 0x12
 11558 21e0 72657300 		.ascii	"res\000"
 11559 21e4 01       		.byte	0x1
 11560 21e5 8110     		.2byte	0x1081
 11561 21e7 E1030000 		.4byte	0x3e1
 11562 21eb 5F2A0000 		.4byte	.LLST192
 11563 21ef 1F       		.uleb128 0x1f
 11564 21f0 667300   		.ascii	"fs\000"
 11565 21f3 01       		.byte	0x1
 11566 21f4 8210     		.2byte	0x1082
 11567 21f6 F9010000 		.4byte	0x1f9
 11568 21fa 02       		.uleb128 0x2
 11569 21fb 91       		.byte	0x91
 11570 21fc 5C       		.sleb128 -36
 11571 21fd 1E       		.uleb128 0x1e
 11572 21fe A3020000 		.4byte	.LASF87
 11573 2202 01       		.byte	0x1
 11574 2203 8310     		.2byte	0x1083
 11575 2205 70000000 		.4byte	0x70
 11576 2209 7D2A0000 		.4byte	.LLST193
 11577 220d 12       		.uleb128 0x12
 11578 220e 62637300 		.ascii	"bcs\000"
 11579 2212 01       		.byte	0x1
 11580 2213 8310     		.2byte	0x1083
 11581 2215 70000000 		.4byte	0x70
 11582 2219 472B0000 		.4byte	.LLST194
 11583 221d 1E       		.uleb128 0x1e
 11584 221e 46060000 		.4byte	.LASF140
 11585 2222 01       		.byte	0x1
 11586 2223 8310     		.2byte	0x1083
 11587 2225 70000000 		.4byte	0x70
 11588 2229 652B0000 		.4byte	.LLST195
 11589 222d 1E       		.uleb128 0x1e
 11590 222e 45000000 		.4byte	.LASF141
 11591 2232 01       		.byte	0x1
 11592 2233 8410     		.2byte	0x1084
 11593 2235 9B000000 		.4byte	0x9b
 11594 2239 C92B0000 		.4byte	.LLST196
 11595 223d 19       		.uleb128 0x19
 11596 223e 16000000 		.4byte	.LVL850
 11597 2242 F9090000 		.4byte	0x9f9
 11598 2246 57220000 		.4byte	0x2257
 11599 224a 1A       		.uleb128 0x1a
 11600 224b 01       		.uleb128 0x1
 11601 224c 50       		.byte	0x50
 11602 224d 02       		.uleb128 0x2
 11603 224e 74       		.byte	0x74
 11604 224f 00       		.sleb128 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 302


 11605 2250 1A       		.uleb128 0x1a
 11606 2251 01       		.uleb128 0x1
 11607 2252 51       		.byte	0x51
 11608 2253 02       		.uleb128 0x2
 11609 2254 91       		.byte	0x91
 11610 2255 5C       		.sleb128 -36
 11611 2256 00       		.byte	0
 11612 2257 19       		.uleb128 0x19
 11613 2258 82000000 		.4byte	.LVL865
 11614 225c 7A110000 		.4byte	0x117a
 11615 2260 70220000 		.4byte	0x2270
 11616 2264 1A       		.uleb128 0x1a
 11617 2265 01       		.uleb128 0x1
 11618 2266 50       		.byte	0x50
 11619 2267 02       		.uleb128 0x2
 11620 2268 74       		.byte	0x74
 11621 2269 00       		.sleb128 0
 11622 226a 1A       		.uleb128 0x1a
 11623 226b 01       		.uleb128 0x1
 11624 226c 51       		.byte	0x51
 11625 226d 01       		.uleb128 0x1
 11626 226e 30       		.byte	0x30
 11627 226f 00       		.byte	0
 11628 2270 19       		.uleb128 0x19
 11629 2271 BC000000 		.4byte	.LVL874
 11630 2275 7A110000 		.4byte	0x117a
 11631 2279 85220000 		.4byte	0x2285
 11632 227d 1A       		.uleb128 0x1a
 11633 227e 01       		.uleb128 0x1
 11634 227f 50       		.byte	0x50
 11635 2280 03       		.uleb128 0x3
 11636 2281 91       		.byte	0x91
 11637 2282 54       		.sleb128 -44
 11638 2283 06       		.byte	0x6
 11639 2284 00       		.byte	0
 11640 2285 19       		.uleb128 0x19
 11641 2286 CA000000 		.4byte	.LVL876
 11642 228a EF0F0000 		.4byte	0xfef
 11643 228e 9A220000 		.4byte	0x229a
 11644 2292 1A       		.uleb128 0x1a
 11645 2293 01       		.uleb128 0x1
 11646 2294 50       		.byte	0x50
 11647 2295 03       		.uleb128 0x3
 11648 2296 91       		.byte	0x91
 11649 2297 54       		.sleb128 -44
 11650 2298 06       		.byte	0x6
 11651 2299 00       		.byte	0
 11652 229a 1C       		.uleb128 0x1c
 11653 229b 06010000 		.4byte	.LVL883
 11654 229f DA060000 		.4byte	0x6da
 11655 22a3 19       		.uleb128 0x19
 11656 22a4 50010000 		.4byte	.LVL892
 11657 22a8 E12C0000 		.4byte	0x2ce1
 11658 22ac BC220000 		.4byte	0x22bc
 11659 22b0 1A       		.uleb128 0x1a
 11660 22b1 01       		.uleb128 0x1
 11661 22b2 51       		.byte	0x51
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 303


 11662 22b3 02       		.uleb128 0x2
 11663 22b4 74       		.byte	0x74
 11664 22b5 28       		.sleb128 40
 11665 22b6 1A       		.uleb128 0x1a
 11666 22b7 01       		.uleb128 0x1
 11667 22b8 53       		.byte	0x53
 11668 22b9 01       		.uleb128 0x1
 11669 22ba 31       		.byte	0x31
 11670 22bb 00       		.byte	0
 11671 22bc 1B       		.uleb128 0x1b
 11672 22bd 74010000 		.4byte	.LVL893
 11673 22c1 EC2C0000 		.4byte	0x2cec
 11674 22c5 1A       		.uleb128 0x1a
 11675 22c6 01       		.uleb128 0x1
 11676 22c7 51       		.byte	0x51
 11677 22c8 02       		.uleb128 0x2
 11678 22c9 74       		.byte	0x74
 11679 22ca 28       		.sleb128 40
 11680 22cb 1A       		.uleb128 0x1a
 11681 22cc 01       		.uleb128 0x1
 11682 22cd 52       		.byte	0x52
 11683 22ce 02       		.uleb128 0x2
 11684 22cf 75       		.byte	0x75
 11685 22d0 00       		.sleb128 0
 11686 22d1 1A       		.uleb128 0x1a
 11687 22d2 01       		.uleb128 0x1
 11688 22d3 53       		.byte	0x53
 11689 22d4 01       		.uleb128 0x1
 11690 22d5 31       		.byte	0x31
 11691 22d6 00       		.byte	0
 11692 22d7 00       		.byte	0
 11693 22d8 20       		.uleb128 0x20
 11694 22d9 C3050000 		.4byte	.LASF142
 11695 22dd 01       		.byte	0x1
 11696 22de 1D11     		.2byte	0x111d
 11697 22e0 E1030000 		.4byte	0x3e1
 11698 22e4 00000000 		.4byte	.LFB42
 11699 22e8 74000000 		.4byte	.LFE42-.LFB42
 11700 22ec 01       		.uleb128 0x1
 11701 22ed 9C       		.byte	0x9c
 11702 22ee 81230000 		.4byte	0x2381
 11703 22f2 11       		.uleb128 0x11
 11704 22f3 647000   		.ascii	"dp\000"
 11705 22f6 01       		.byte	0x1
 11706 22f7 1E11     		.2byte	0x111e
 11707 22f9 75080000 		.4byte	0x875
 11708 22fd FF2B0000 		.4byte	.LLST197
 11709 2301 18       		.uleb128 0x18
 11710 2302 67000000 		.4byte	.LASF92
 11711 2306 01       		.byte	0x1
 11712 2307 1F11     		.2byte	0x111f
 11713 2309 87090000 		.4byte	0x987
 11714 230d 412C0000 		.4byte	.LLST198
 11715 2311 12       		.uleb128 0x12
 11716 2312 72657300 		.ascii	"res\000"
 11717 2316 01       		.byte	0x1
 11718 2317 2211     		.2byte	0x1122
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 304


 11719 2319 E1030000 		.4byte	0x3e1
 11720 231d 8F2C0000 		.4byte	.LLST199
 11721 2321 1F       		.uleb128 0x1f
 11722 2322 667300   		.ascii	"fs\000"
 11723 2325 01       		.byte	0x1
 11724 2326 2311     		.2byte	0x1123
 11725 2328 F9010000 		.4byte	0x1f9
 11726 232c 02       		.uleb128 0x2
 11727 232d 91       		.byte	0x91
 11728 232e 6C       		.sleb128 -20
 11729 232f 19       		.uleb128 0x19
 11730 2330 14000000 		.4byte	.LVL902
 11731 2334 E10B0000 		.4byte	0xbe1
 11732 2338 4E230000 		.4byte	0x234e
 11733 233c 1A       		.uleb128 0x1a
 11734 233d 01       		.uleb128 0x1
 11735 233e 50       		.byte	0x50
 11736 233f 02       		.uleb128 0x2
 11737 2340 91       		.byte	0x91
 11738 2341 64       		.sleb128 -28
 11739 2342 1A       		.uleb128 0x1a
 11740 2343 01       		.uleb128 0x1
 11741 2344 51       		.byte	0x51
 11742 2345 02       		.uleb128 0x2
 11743 2346 91       		.byte	0x91
 11744 2347 6C       		.sleb128 -20
 11745 2348 1A       		.uleb128 0x1a
 11746 2349 01       		.uleb128 0x1
 11747 234a 52       		.byte	0x52
 11748 234b 01       		.uleb128 0x1
 11749 234c 30       		.byte	0x30
 11750 234d 00       		.byte	0
 11751 234e 19       		.uleb128 0x19
 11752 234f 24000000 		.4byte	.LVL905
 11753 2353 EF150000 		.4byte	0x15ef
 11754 2357 62230000 		.4byte	0x2362
 11755 235b 1A       		.uleb128 0x1a
 11756 235c 01       		.uleb128 0x1
 11757 235d 50       		.byte	0x50
 11758 235e 02       		.uleb128 0x2
 11759 235f 75       		.byte	0x75
 11760 2360 00       		.sleb128 0
 11761 2361 00       		.byte	0
 11762 2362 1C       		.uleb128 0x1c
 11763 2363 3E000000 		.4byte	.LVL908
 11764 2367 14070000 		.4byte	0x714
 11765 236b 1B       		.uleb128 0x1b
 11766 236c 56000000 		.4byte	.LVL911
 11767 2370 E1100000 		.4byte	0x10e1
 11768 2374 1A       		.uleb128 0x1a
 11769 2375 01       		.uleb128 0x1
 11770 2376 50       		.byte	0x50
 11771 2377 02       		.uleb128 0x2
 11772 2378 75       		.byte	0x75
 11773 2379 00       		.sleb128 0
 11774 237a 1A       		.uleb128 0x1a
 11775 237b 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 305


 11776 237c 51       		.byte	0x51
 11777 237d 01       		.uleb128 0x1
 11778 237e 30       		.byte	0x30
 11779 237f 00       		.byte	0
 11780 2380 00       		.byte	0
 11781 2381 20       		.uleb128 0x20
 11782 2382 7E060000 		.4byte	.LASF143
 11783 2386 01       		.byte	0x1
 11784 2387 5F11     		.2byte	0x115f
 11785 2389 E1030000 		.4byte	0x3e1
 11786 238d 00000000 		.4byte	.LFB43
 11787 2391 18000000 		.4byte	.LFE43-.LFB43
 11788 2395 01       		.uleb128 0x1
 11789 2396 9C       		.byte	0x9c
 11790 2397 DD230000 		.4byte	0x23dd
 11791 239b 11       		.uleb128 0x11
 11792 239c 647000   		.ascii	"dp\000"
 11793 239f 01       		.byte	0x1
 11794 23a0 6011     		.2byte	0x1160
 11795 23a2 75080000 		.4byte	0x875
 11796 23a6 E42C0000 		.4byte	.LLST200
 11797 23aa 1F       		.uleb128 0x1f
 11798 23ab 72657300 		.ascii	"res\000"
 11799 23af 01       		.byte	0x1
 11800 23b0 6311     		.2byte	0x1163
 11801 23b2 E1030000 		.4byte	0x3e1
 11802 23b6 01       		.uleb128 0x1
 11803 23b7 50       		.byte	0x50
 11804 23b8 1F       		.uleb128 0x1f
 11805 23b9 667300   		.ascii	"fs\000"
 11806 23bc 01       		.byte	0x1
 11807 23bd 6411     		.2byte	0x1164
 11808 23bf F9010000 		.4byte	0x1f9
 11809 23c3 02       		.uleb128 0x2
 11810 23c4 91       		.byte	0x91
 11811 23c5 74       		.sleb128 -12
 11812 23c6 1B       		.uleb128 0x1b
 11813 23c7 0C000000 		.4byte	.LVL920
 11814 23cb F9090000 		.4byte	0x9f9
 11815 23cf 1A       		.uleb128 0x1a
 11816 23d0 01       		.uleb128 0x1
 11817 23d1 50       		.byte	0x50
 11818 23d2 02       		.uleb128 0x2
 11819 23d3 74       		.byte	0x74
 11820 23d4 00       		.sleb128 0
 11821 23d5 1A       		.uleb128 0x1a
 11822 23d6 01       		.uleb128 0x1
 11823 23d7 51       		.byte	0x51
 11824 23d8 02       		.uleb128 0x2
 11825 23d9 91       		.byte	0x91
 11826 23da 74       		.sleb128 -12
 11827 23db 00       		.byte	0
 11828 23dc 00       		.byte	0
 11829 23dd 20       		.uleb128 0x20
 11830 23de B5040000 		.4byte	.LASF144
 11831 23e2 01       		.byte	0x1
 11832 23e3 7D11     		.2byte	0x117d
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 306


 11833 23e5 E1030000 		.4byte	0x3e1
 11834 23e9 00000000 		.4byte	.LFB44
 11835 23ed 50000000 		.4byte	.LFE44-.LFB44
 11836 23f1 01       		.uleb128 0x1
 11837 23f2 9C       		.byte	0x9c
 11838 23f3 B0240000 		.4byte	0x24b0
 11839 23f7 11       		.uleb128 0x11
 11840 23f8 647000   		.ascii	"dp\000"
 11841 23fb 01       		.byte	0x1
 11842 23fc 7E11     		.2byte	0x117e
 11843 23fe 75080000 		.4byte	0x875
 11844 2402 102D0000 		.4byte	.LLST201
 11845 2406 11       		.uleb128 0x11
 11846 2407 666E6F00 		.ascii	"fno\000"
 11847 240b 01       		.byte	0x1
 11848 240c 7F11     		.2byte	0x117f
 11849 240e 7B080000 		.4byte	0x87b
 11850 2412 3C2D0000 		.4byte	.LLST202
 11851 2416 12       		.uleb128 0x12
 11852 2417 72657300 		.ascii	"res\000"
 11853 241b 01       		.byte	0x1
 11854 241c 8211     		.2byte	0x1182
 11855 241e E1030000 		.4byte	0x3e1
 11856 2422 682D0000 		.4byte	.LLST203
 11857 2426 1F       		.uleb128 0x1f
 11858 2427 667300   		.ascii	"fs\000"
 11859 242a 01       		.byte	0x1
 11860 242b 8311     		.2byte	0x1183
 11861 242d F9010000 		.4byte	0x1f9
 11862 2431 02       		.uleb128 0x2
 11863 2432 91       		.byte	0x91
 11864 2433 6C       		.sleb128 -20
 11865 2434 19       		.uleb128 0x19
 11866 2435 0E000000 		.4byte	.LVL924
 11867 2439 F9090000 		.4byte	0x9f9
 11868 243d 4E240000 		.4byte	0x244e
 11869 2441 1A       		.uleb128 0x1a
 11870 2442 01       		.uleb128 0x1
 11871 2443 50       		.byte	0x50
 11872 2444 02       		.uleb128 0x2
 11873 2445 75       		.byte	0x75
 11874 2446 00       		.sleb128 0
 11875 2447 1A       		.uleb128 0x1a
 11876 2448 01       		.uleb128 0x1
 11877 2449 51       		.byte	0x51
 11878 244a 02       		.uleb128 0x2
 11879 244b 91       		.byte	0x91
 11880 244c 6C       		.sleb128 -20
 11881 244d 00       		.byte	0
 11882 244e 19       		.uleb128 0x19
 11883 244f 1E000000 		.4byte	.LVL927
 11884 2453 E1100000 		.4byte	0x10e1
 11885 2457 67240000 		.4byte	0x2467
 11886 245b 1A       		.uleb128 0x1a
 11887 245c 01       		.uleb128 0x1
 11888 245d 50       		.byte	0x50
 11889 245e 02       		.uleb128 0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 307


 11890 245f 75       		.byte	0x75
 11891 2460 00       		.sleb128 0
 11892 2461 1A       		.uleb128 0x1a
 11893 2462 01       		.uleb128 0x1
 11894 2463 51       		.byte	0x51
 11895 2464 01       		.uleb128 0x1
 11896 2465 30       		.byte	0x30
 11897 2466 00       		.byte	0
 11898 2467 19       		.uleb128 0x19
 11899 2468 2A000000 		.4byte	.LVL930
 11900 246c FB170000 		.4byte	0x17fb
 11901 2470 80240000 		.4byte	0x2480
 11902 2474 1A       		.uleb128 0x1a
 11903 2475 01       		.uleb128 0x1
 11904 2476 50       		.byte	0x50
 11905 2477 02       		.uleb128 0x2
 11906 2478 75       		.byte	0x75
 11907 2479 00       		.sleb128 0
 11908 247a 1A       		.uleb128 0x1a
 11909 247b 01       		.uleb128 0x1
 11910 247c 51       		.byte	0x51
 11911 247d 01       		.uleb128 0x1
 11912 247e 30       		.byte	0x30
 11913 247f 00       		.byte	0
 11914 2480 19       		.uleb128 0x19
 11915 2481 3C000000 		.4byte	.LVL932
 11916 2485 F8070000 		.4byte	0x7f8
 11917 2489 9A240000 		.4byte	0x249a
 11918 248d 1A       		.uleb128 0x1a
 11919 248e 01       		.uleb128 0x1
 11920 248f 50       		.byte	0x50
 11921 2490 02       		.uleb128 0x2
 11922 2491 75       		.byte	0x75
 11923 2492 00       		.sleb128 0
 11924 2493 1A       		.uleb128 0x1a
 11925 2494 01       		.uleb128 0x1
 11926 2495 51       		.byte	0x51
 11927 2496 02       		.uleb128 0x2
 11928 2497 76       		.byte	0x76
 11929 2498 00       		.sleb128 0
 11930 2499 00       		.byte	0
 11931 249a 1B       		.uleb128 0x1b
 11932 249b 44000000 		.4byte	.LVL933
 11933 249f 87140000 		.4byte	0x1487
 11934 24a3 1A       		.uleb128 0x1a
 11935 24a4 01       		.uleb128 0x1
 11936 24a5 50       		.byte	0x50
 11937 24a6 02       		.uleb128 0x2
 11938 24a7 75       		.byte	0x75
 11939 24a8 00       		.sleb128 0
 11940 24a9 1A       		.uleb128 0x1a
 11941 24aa 01       		.uleb128 0x1
 11942 24ab 51       		.byte	0x51
 11943 24ac 01       		.uleb128 0x1
 11944 24ad 30       		.byte	0x30
 11945 24ae 00       		.byte	0
 11946 24af 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 308


 11947 24b0 20       		.uleb128 0x20
 11948 24b1 7C010000 		.4byte	.LASF145
 11949 24b5 01       		.byte	0x1
 11950 24b6 D511     		.2byte	0x11d5
 11951 24b8 E1030000 		.4byte	0x3e1
 11952 24bc 00000000 		.4byte	.LFB45
 11953 24c0 42000000 		.4byte	.LFE45-.LFB45
 11954 24c4 01       		.uleb128 0x1
 11955 24c5 9C       		.byte	0x9c
 11956 24c6 53250000 		.4byte	0x2553
 11957 24ca 18       		.uleb128 0x18
 11958 24cb 67000000 		.4byte	.LASF92
 11959 24cf 01       		.byte	0x1
 11960 24d0 D611     		.2byte	0x11d6
 11961 24d2 87090000 		.4byte	0x987
 11962 24d6 C82D0000 		.4byte	.LLST204
 11963 24da 11       		.uleb128 0x11
 11964 24db 666E6F00 		.ascii	"fno\000"
 11965 24df 01       		.byte	0x1
 11966 24e0 D711     		.2byte	0x11d7
 11967 24e2 7B080000 		.4byte	0x87b
 11968 24e6 F42D0000 		.4byte	.LLST205
 11969 24ea 12       		.uleb128 0x12
 11970 24eb 72657300 		.ascii	"res\000"
 11971 24ef 01       		.byte	0x1
 11972 24f0 DA11     		.2byte	0x11da
 11973 24f2 E1030000 		.4byte	0x3e1
 11974 24f6 202E0000 		.4byte	.LLST206
 11975 24fa 1F       		.uleb128 0x1f
 11976 24fb 646A00   		.ascii	"dj\000"
 11977 24fe 01       		.byte	0x1
 11978 24ff DB11     		.2byte	0x11db
 11979 2501 F1020000 		.4byte	0x2f1
 11980 2505 02       		.uleb128 0x2
 11981 2506 91       		.byte	0x91
 11982 2507 44       		.sleb128 -60
 11983 2508 19       		.uleb128 0x19
 11984 2509 12000000 		.4byte	.LVL941
 11985 250d E10B0000 		.4byte	0xbe1
 11986 2511 28250000 		.4byte	0x2528
 11987 2515 1A       		.uleb128 0x1a
 11988 2516 01       		.uleb128 0x1
 11989 2517 50       		.byte	0x50
 11990 2518 03       		.uleb128 0x3
 11991 2519 91       		.byte	0x91
 11992 251a BC7F     		.sleb128 -68
 11993 251c 1A       		.uleb128 0x1a
 11994 251d 01       		.uleb128 0x1
 11995 251e 51       		.byte	0x51
 11996 251f 02       		.uleb128 0x2
 11997 2520 91       		.byte	0x91
 11998 2521 44       		.sleb128 -60
 11999 2522 1A       		.uleb128 0x1a
 12000 2523 01       		.uleb128 0x1
 12001 2524 52       		.byte	0x52
 12002 2525 01       		.uleb128 0x1
 12003 2526 30       		.byte	0x30
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 309


 12004 2527 00       		.byte	0
 12005 2528 19       		.uleb128 0x19
 12006 2529 1E000000 		.4byte	.LVL944
 12007 252d EF150000 		.4byte	0x15ef
 12008 2531 3C250000 		.4byte	0x253c
 12009 2535 1A       		.uleb128 0x1a
 12010 2536 01       		.uleb128 0x1
 12011 2537 50       		.byte	0x50
 12012 2538 02       		.uleb128 0x2
 12013 2539 91       		.byte	0x91
 12014 253a 44       		.sleb128 -60
 12015 253b 00       		.byte	0
 12016 253c 1B       		.uleb128 0x1b
 12017 253d 38000000 		.4byte	.LVL947
 12018 2541 F8070000 		.4byte	0x7f8
 12019 2545 1A       		.uleb128 0x1a
 12020 2546 01       		.uleb128 0x1
 12021 2547 50       		.byte	0x50
 12022 2548 02       		.uleb128 0x2
 12023 2549 91       		.byte	0x91
 12024 254a 44       		.sleb128 -60
 12025 254b 1A       		.uleb128 0x1a
 12026 254c 01       		.uleb128 0x1
 12027 254d 51       		.byte	0x51
 12028 254e 02       		.uleb128 0x2
 12029 254f 75       		.byte	0x75
 12030 2550 00       		.sleb128 0
 12031 2551 00       		.byte	0
 12032 2552 00       		.byte	0
 12033 2553 20       		.uleb128 0x20
 12034 2554 D1030000 		.4byte	.LASF146
 12035 2558 01       		.byte	0x1
 12036 2559 F811     		.2byte	0x11f8
 12037 255b E1030000 		.4byte	0x3e1
 12038 255f 00000000 		.4byte	.LFB46
 12039 2563 DA000000 		.4byte	.LFE46-.LFB46
 12040 2567 01       		.uleb128 0x1
 12041 2568 9C       		.byte	0x9c
 12042 2569 79260000 		.4byte	0x2679
 12043 256d 18       		.uleb128 0x18
 12044 256e 67000000 		.4byte	.LASF92
 12045 2572 01       		.byte	0x1
 12046 2573 F911     		.2byte	0x11f9
 12047 2575 87090000 		.4byte	0x987
 12048 2579 6A2E0000 		.4byte	.LLST207
 12049 257d 18       		.uleb128 0x18
 12050 257e 56030000 		.4byte	.LASF105
 12051 2582 01       		.byte	0x1
 12052 2583 FA11     		.2byte	0x11fa
 12053 2585 79260000 		.4byte	0x2679
 12054 2589 952E0000 		.4byte	.LLST208
 12055 258d 18       		.uleb128 0x18
 12056 258e 85030000 		.4byte	.LASF147
 12057 2592 01       		.byte	0x1
 12058 2593 FB11     		.2byte	0x11fb
 12059 2595 530A0000 		.4byte	0xa53
 12060 2599 C12E0000 		.4byte	.LLST209
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 310


 12061 259d 12       		.uleb128 0x12
 12062 259e 72657300 		.ascii	"res\000"
 12063 25a2 01       		.byte	0x1
 12064 25a3 FE11     		.2byte	0x11fe
 12065 25a5 E1030000 		.4byte	0x3e1
 12066 25a9 062F0000 		.4byte	.LLST210
 12067 25ad 1F       		.uleb128 0x1f
 12068 25ae 667300   		.ascii	"fs\000"
 12069 25b1 01       		.byte	0x1
 12070 25b2 FF11     		.2byte	0x11ff
 12071 25b4 F9010000 		.4byte	0x1f9
 12072 25b8 02       		.uleb128 0x2
 12073 25b9 91       		.byte	0x91
 12074 25ba 5C       		.sleb128 -36
 12075 25bb 1E       		.uleb128 0x1e
 12076 25bc C1000000 		.4byte	.LASF148
 12077 25c0 01       		.byte	0x1
 12078 25c1 0012     		.2byte	0x1200
 12079 25c3 70000000 		.4byte	0x70
 12080 25c7 5B2F0000 		.4byte	.LLST211
 12081 25cb 1E       		.uleb128 0x1e
 12082 25cc A3020000 		.4byte	.LASF87
 12083 25d0 01       		.byte	0x1
 12084 25d1 0012     		.2byte	0x1200
 12085 25d3 70000000 		.4byte	0x70
 12086 25d7 912F0000 		.4byte	.LLST212
 12087 25db 1E       		.uleb128 0x1e
 12088 25dc 9F000000 		.4byte	.LASF40
 12089 25e0 01       		.byte	0x1
 12090 25e1 0012     		.2byte	0x1200
 12091 25e3 70000000 		.4byte	0x70
 12092 25e7 C62F0000 		.4byte	.LLST213
 12093 25eb 1E       		.uleb128 0x1e
 12094 25ec 4C060000 		.4byte	.LASF33
 12095 25f0 01       		.byte	0x1
 12096 25f1 0012     		.2byte	0x1200
 12097 25f3 70000000 		.4byte	0x70
 12098 25f7 07300000 		.4byte	.LLST214
 12099 25fb 12       		.uleb128 0x12
 12100 25fc 6900     		.ascii	"i\000"
 12101 25fe 01       		.byte	0x1
 12102 25ff 0112     		.2byte	0x1201
 12103 2601 2C000000 		.4byte	0x2c
 12104 2605 25300000 		.4byte	.LLST215
 12105 2609 1F       		.uleb128 0x1f
 12106 260a 6F626A00 		.ascii	"obj\000"
 12107 260e 01       		.byte	0x1
 12108 260f 0212     		.2byte	0x1202
 12109 2611 FF010000 		.4byte	0x1ff
 12110 2615 02       		.uleb128 0x2
 12111 2616 91       		.byte	0x91
 12112 2617 4C       		.sleb128 -52
 12113 2618 19       		.uleb128 0x19
 12114 2619 1A000000 		.4byte	.LVL956
 12115 261d E10B0000 		.4byte	0xbe1
 12116 2621 37260000 		.4byte	0x2637
 12117 2625 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 311


 12118 2626 01       		.uleb128 0x1
 12119 2627 50       		.byte	0x50
 12120 2628 02       		.uleb128 0x2
 12121 2629 91       		.byte	0x91
 12122 262a 44       		.sleb128 -60
 12123 262b 1A       		.uleb128 0x1a
 12124 262c 01       		.uleb128 0x1
 12125 262d 51       		.byte	0x51
 12126 262e 02       		.uleb128 0x2
 12127 262f 91       		.byte	0x91
 12128 2630 5C       		.sleb128 -36
 12129 2631 1A       		.uleb128 0x1a
 12130 2632 01       		.uleb128 0x1
 12131 2633 52       		.byte	0x52
 12132 2634 01       		.uleb128 0x1
 12133 2635 30       		.byte	0x30
 12134 2636 00       		.byte	0
 12135 2637 19       		.uleb128 0x19
 12136 2638 46000000 		.4byte	.LVL962
 12137 263c EF0F0000 		.4byte	0xfef
 12138 2640 51260000 		.4byte	0x2651
 12139 2644 1A       		.uleb128 0x1a
 12140 2645 01       		.uleb128 0x1
 12141 2646 50       		.byte	0x50
 12142 2647 02       		.uleb128 0x2
 12143 2648 91       		.byte	0x91
 12144 2649 4C       		.sleb128 -52
 12145 264a 1A       		.uleb128 0x1a
 12146 264b 01       		.uleb128 0x1
 12147 264c 51       		.byte	0x51
 12148 264d 02       		.uleb128 0x2
 12149 264e 74       		.byte	0x74
 12150 264f 00       		.sleb128 0
 12151 2650 00       		.byte	0
 12152 2651 19       		.uleb128 0x19
 12153 2652 7A000000 		.4byte	.LVL970
 12154 2656 BC0A0000 		.4byte	0xabc
 12155 265a 66260000 		.4byte	0x2666
 12156 265e 1A       		.uleb128 0x1a
 12157 265f 01       		.uleb128 0x1
 12158 2660 51       		.byte	0x51
 12159 2661 03       		.uleb128 0x3
 12160 2662 7D       		.byte	0x7d
 12161 2663 00       		.sleb128 0
 12162 2664 06       		.byte	0x6
 12163 2665 00       		.byte	0
 12164 2666 1C       		.uleb128 0x1c
 12165 2667 92000000 		.4byte	.LVL973
 12166 266b 22040000 		.4byte	0x422
 12167 266f 1C       		.uleb128 0x1c
 12168 2670 A4000000 		.4byte	.LVL976
 12169 2674 67040000 		.4byte	0x467
 12170 2678 00       		.byte	0
 12171 2679 0B       		.uleb128 0xb
 12172 267a 04       		.byte	0x4
 12173 267b 70000000 		.4byte	0x70
 12174 267f 20       		.uleb128 0x20
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 312


 12175 2680 36060000 		.4byte	.LASF149
 12176 2684 01       		.byte	0x1
 12177 2685 5112     		.2byte	0x1251
 12178 2687 E1030000 		.4byte	0x3e1
 12179 268b 00000000 		.4byte	.LFB47
 12180 268f BA000000 		.4byte	.LFE47-.LFB47
 12181 2693 01       		.uleb128 0x1
 12182 2694 9C       		.byte	0x9c
 12183 2695 47270000 		.4byte	0x2747
 12184 2699 11       		.uleb128 0x11
 12185 269a 667000   		.ascii	"fp\000"
 12186 269d 01       		.byte	0x1
 12187 269e 5212     		.2byte	0x1252
 12188 26a0 AA1C0000 		.4byte	0x1caa
 12189 26a4 4F300000 		.4byte	.LLST216
 12190 26a8 12       		.uleb128 0x12
 12191 26a9 72657300 		.ascii	"res\000"
 12192 26ad 01       		.byte	0x1
 12193 26ae 5512     		.2byte	0x1255
 12194 26b0 E1030000 		.4byte	0x3e1
 12195 26b4 7B300000 		.4byte	.LLST217
 12196 26b8 1F       		.uleb128 0x1f
 12197 26b9 667300   		.ascii	"fs\000"
 12198 26bc 01       		.byte	0x1
 12199 26bd 5612     		.2byte	0x1256
 12200 26bf F9010000 		.4byte	0x1f9
 12201 26c3 02       		.uleb128 0x2
 12202 26c4 91       		.byte	0x91
 12203 26c5 6C       		.sleb128 -20
 12204 26c6 12       		.uleb128 0x12
 12205 26c7 6E636C00 		.ascii	"ncl\000"
 12206 26cb 01       		.byte	0x1
 12207 26cc 5712     		.2byte	0x1257
 12208 26ce 70000000 		.4byte	0x70
 12209 26d2 C6300000 		.4byte	.LLST218
 12210 26d6 19       		.uleb128 0x19
 12211 26d7 0C000000 		.4byte	.LVL990
 12212 26db F9090000 		.4byte	0x9f9
 12213 26df F0260000 		.4byte	0x26f0
 12214 26e3 1A       		.uleb128 0x1a
 12215 26e4 01       		.uleb128 0x1
 12216 26e5 50       		.byte	0x50
 12217 26e6 02       		.uleb128 0x2
 12218 26e7 75       		.byte	0x75
 12219 26e8 00       		.sleb128 0
 12220 26e9 1A       		.uleb128 0x1a
 12221 26ea 01       		.uleb128 0x1
 12222 26eb 51       		.byte	0x51
 12223 26ec 02       		.uleb128 0x2
 12224 26ed 91       		.byte	0x91
 12225 26ee 6C       		.sleb128 -20
 12226 26ef 00       		.byte	0
 12227 26f0 19       		.uleb128 0x19
 12228 26f1 32000000 		.4byte	.LVL992
 12229 26f5 7C120000 		.4byte	0x127c
 12230 26f9 09270000 		.4byte	0x2709
 12231 26fd 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 313


 12232 26fe 01       		.uleb128 0x1
 12233 26ff 50       		.byte	0x50
 12234 2700 02       		.uleb128 0x2
 12235 2701 75       		.byte	0x75
 12236 2702 00       		.sleb128 0
 12237 2703 1A       		.uleb128 0x1a
 12238 2704 01       		.uleb128 0x1
 12239 2705 52       		.byte	0x52
 12240 2706 01       		.uleb128 0x1
 12241 2707 30       		.byte	0x30
 12242 2708 00       		.byte	0
 12243 2709 19       		.uleb128 0x19
 12244 270a 42000000 		.4byte	.LVL995
 12245 270e EF0F0000 		.4byte	0xfef
 12246 2712 1D270000 		.4byte	0x271d
 12247 2716 1A       		.uleb128 0x1a
 12248 2717 01       		.uleb128 0x1
 12249 2718 50       		.byte	0x50
 12250 2719 02       		.uleb128 0x2
 12251 271a 75       		.byte	0x75
 12252 271b 00       		.sleb128 0
 12253 271c 00       		.byte	0
 12254 271d 19       		.uleb128 0x19
 12255 271e 64000000 		.4byte	.LVL999
 12256 2722 7C120000 		.4byte	0x127c
 12257 2726 31270000 		.4byte	0x2731
 12258 272a 1A       		.uleb128 0x1a
 12259 272b 01       		.uleb128 0x1
 12260 272c 50       		.byte	0x50
 12261 272d 02       		.uleb128 0x2
 12262 272e 75       		.byte	0x75
 12263 272f 00       		.sleb128 0
 12264 2730 00       		.byte	0
 12265 2731 1B       		.uleb128 0x1b
 12266 2732 8E000000 		.4byte	.LVL1001
 12267 2736 E12C0000 		.4byte	0x2ce1
 12268 273a 1A       		.uleb128 0x1a
 12269 273b 01       		.uleb128 0x1
 12270 273c 51       		.byte	0x51
 12271 273d 02       		.uleb128 0x2
 12272 273e 75       		.byte	0x75
 12273 273f 28       		.sleb128 40
 12274 2740 1A       		.uleb128 0x1a
 12275 2741 01       		.uleb128 0x1
 12276 2742 53       		.byte	0x53
 12277 2743 01       		.uleb128 0x1
 12278 2744 31       		.byte	0x31
 12279 2745 00       		.byte	0
 12280 2746 00       		.byte	0
 12281 2747 20       		.uleb128 0x20
 12282 2748 2E040000 		.4byte	.LASF150
 12283 274c 01       		.byte	0x1
 12284 274d 8312     		.2byte	0x1283
 12285 274f E1030000 		.4byte	0x3e1
 12286 2753 00000000 		.4byte	.LFB48
 12287 2757 AC000000 		.4byte	.LFE48-.LFB48
 12288 275b 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 314


 12289 275c 9C       		.byte	0x9c
 12290 275d 7C280000 		.4byte	0x287c
 12291 2761 18       		.uleb128 0x18
 12292 2762 67000000 		.4byte	.LASF92
 12293 2766 01       		.byte	0x1
 12294 2767 8412     		.2byte	0x1284
 12295 2769 87090000 		.4byte	0x987
 12296 276d E4300000 		.4byte	.LLST219
 12297 2771 12       		.uleb128 0x12
 12298 2772 72657300 		.ascii	"res\000"
 12299 2776 01       		.byte	0x1
 12300 2777 8712     		.2byte	0x1287
 12301 2779 E1030000 		.4byte	0x3e1
 12302 277d 10310000 		.4byte	.LLST220
 12303 2781 1F       		.uleb128 0x1f
 12304 2782 646A00   		.ascii	"dj\000"
 12305 2785 01       		.byte	0x1
 12306 2786 8812     		.2byte	0x1288
 12307 2788 F1020000 		.4byte	0x2f1
 12308 278c 03       		.uleb128 0x3
 12309 278d 91       		.byte	0x91
 12310 278e BC7F     		.sleb128 -68
 12311 2790 1F       		.uleb128 0x1f
 12312 2791 73646A00 		.ascii	"sdj\000"
 12313 2795 01       		.byte	0x1
 12314 2796 8812     		.2byte	0x1288
 12315 2798 F1020000 		.4byte	0x2f1
 12316 279c 03       		.uleb128 0x3
 12317 279d 91       		.byte	0x91
 12318 279e 907F     		.sleb128 -112
 12319 27a0 1E       		.uleb128 0x1e
 12320 27a1 FD030000 		.4byte	.LASF151
 12321 27a5 01       		.byte	0x1
 12322 27a6 8912     		.2byte	0x1289
 12323 27a8 70000000 		.4byte	0x70
 12324 27ac 86310000 		.4byte	.LLST221
 12325 27b0 1F       		.uleb128 0x1f
 12326 27b1 667300   		.ascii	"fs\000"
 12327 27b4 01       		.byte	0x1
 12328 27b5 8A12     		.2byte	0x128a
 12329 27b7 F9010000 		.4byte	0x1f9
 12330 27bb 03       		.uleb128 0x3
 12331 27bc 91       		.byte	0x91
 12332 27bd 8C7F     		.sleb128 -116
 12333 27bf 19       		.uleb128 0x19
 12334 27c0 10000000 		.4byte	.LVL1008
 12335 27c4 E10B0000 		.4byte	0xbe1
 12336 27c8 E0270000 		.4byte	0x27e0
 12337 27cc 1A       		.uleb128 0x1a
 12338 27cd 01       		.uleb128 0x1
 12339 27ce 50       		.byte	0x50
 12340 27cf 03       		.uleb128 0x3
 12341 27d0 91       		.byte	0x91
 12342 27d1 847F     		.sleb128 -124
 12343 27d3 1A       		.uleb128 0x1a
 12344 27d4 01       		.uleb128 0x1
 12345 27d5 51       		.byte	0x51
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 315


 12346 27d6 03       		.uleb128 0x3
 12347 27d7 91       		.byte	0x91
 12348 27d8 8C7F     		.sleb128 -116
 12349 27da 1A       		.uleb128 0x1a
 12350 27db 01       		.uleb128 0x1
 12351 27dc 52       		.byte	0x52
 12352 27dd 01       		.uleb128 0x1
 12353 27de 32       		.byte	0x32
 12354 27df 00       		.byte	0
 12355 27e0 19       		.uleb128 0x19
 12356 27e1 20000000 		.4byte	.LVL1011
 12357 27e5 EF150000 		.4byte	0x15ef
 12358 27e9 F5270000 		.4byte	0x27f5
 12359 27ed 1A       		.uleb128 0x1a
 12360 27ee 01       		.uleb128 0x1
 12361 27ef 50       		.byte	0x50
 12362 27f0 03       		.uleb128 0x3
 12363 27f1 91       		.byte	0x91
 12364 27f2 BC7F     		.sleb128 -68
 12365 27f4 00       		.byte	0
 12366 27f5 19       		.uleb128 0x19
 12367 27f6 4C000000 		.4byte	.LVL1014
 12368 27fa 14070000 		.4byte	0x714
 12369 27fe 09280000 		.4byte	0x2809
 12370 2802 1A       		.uleb128 0x1a
 12371 2803 01       		.uleb128 0x1
 12372 2804 50       		.byte	0x50
 12373 2805 02       		.uleb128 0x2
 12374 2806 77       		.byte	0x77
 12375 2807 00       		.sleb128 0
 12376 2808 00       		.byte	0
 12377 2809 19       		.uleb128 0x19
 12378 280a 60000000 		.4byte	.LVL1017
 12379 280e E1100000 		.4byte	0x10e1
 12380 2812 23280000 		.4byte	0x2823
 12381 2816 1A       		.uleb128 0x1a
 12382 2817 01       		.uleb128 0x1
 12383 2818 50       		.byte	0x50
 12384 2819 03       		.uleb128 0x3
 12385 281a 91       		.byte	0x91
 12386 281b 907F     		.sleb128 -112
 12387 281d 1A       		.uleb128 0x1a
 12388 281e 01       		.uleb128 0x1
 12389 281f 51       		.byte	0x51
 12390 2820 01       		.uleb128 0x1
 12391 2821 30       		.byte	0x30
 12392 2822 00       		.byte	0
 12393 2823 19       		.uleb128 0x19
 12394 2824 6C000000 		.4byte	.LVL1020
 12395 2828 FB170000 		.4byte	0x17fb
 12396 282c 3D280000 		.4byte	0x283d
 12397 2830 1A       		.uleb128 0x1a
 12398 2831 01       		.uleb128 0x1
 12399 2832 50       		.byte	0x50
 12400 2833 03       		.uleb128 0x3
 12401 2834 91       		.byte	0x91
 12402 2835 907F     		.sleb128 -112
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 316


 12403 2837 1A       		.uleb128 0x1a
 12404 2838 01       		.uleb128 0x1
 12405 2839 51       		.byte	0x51
 12406 283a 01       		.uleb128 0x1
 12407 283b 30       		.byte	0x30
 12408 283c 00       		.byte	0
 12409 283d 19       		.uleb128 0x19
 12410 283e 86000000 		.4byte	.LVL1024
 12411 2842 4C130000 		.4byte	0x134c
 12412 2846 52280000 		.4byte	0x2852
 12413 284a 1A       		.uleb128 0x1a
 12414 284b 01       		.uleb128 0x1
 12415 284c 50       		.byte	0x50
 12416 284d 03       		.uleb128 0x3
 12417 284e 91       		.byte	0x91
 12418 284f BC7F     		.sleb128 -68
 12419 2851 00       		.byte	0
 12420 2852 19       		.uleb128 0x19
 12421 2853 98000000 		.4byte	.LVL1027
 12422 2857 7C120000 		.4byte	0x127c
 12423 285b 72280000 		.4byte	0x2872
 12424 285f 1A       		.uleb128 0x1a
 12425 2860 01       		.uleb128 0x1
 12426 2861 50       		.byte	0x50
 12427 2862 03       		.uleb128 0x3
 12428 2863 91       		.byte	0x91
 12429 2864 BC7F     		.sleb128 -68
 12430 2866 1A       		.uleb128 0x1a
 12431 2867 01       		.uleb128 0x1
 12432 2868 51       		.byte	0x51
 12433 2869 02       		.uleb128 0x2
 12434 286a 76       		.byte	0x76
 12435 286b 00       		.sleb128 0
 12436 286c 1A       		.uleb128 0x1a
 12437 286d 01       		.uleb128 0x1
 12438 286e 52       		.byte	0x52
 12439 286f 01       		.uleb128 0x1
 12440 2870 30       		.byte	0x30
 12441 2871 00       		.byte	0
 12442 2872 1C       		.uleb128 0x1c
 12443 2873 A4000000 		.4byte	.LVL1029
 12444 2877 99180000 		.4byte	0x1899
 12445 287b 00       		.byte	0
 12446 287c 20       		.uleb128 0x20
 12447 287d 20030000 		.4byte	.LASF152
 12448 2881 01       		.byte	0x1
 12449 2882 E112     		.2byte	0x12e1
 12450 2884 E1030000 		.4byte	0x3e1
 12451 2888 00000000 		.4byte	.LFB49
 12452 288c 2A010000 		.4byte	.LFE49-.LFB49
 12453 2890 01       		.uleb128 0x1
 12454 2891 9C       		.byte	0x9c
 12455 2892 7E2A0000 		.4byte	0x2a7e
 12456 2896 18       		.uleb128 0x18
 12457 2897 67000000 		.4byte	.LASF92
 12458 289b 01       		.byte	0x1
 12459 289c E212     		.2byte	0x12e2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 317


 12460 289e 87090000 		.4byte	0x987
 12461 28a2 C7310000 		.4byte	.LLST222
 12462 28a6 12       		.uleb128 0x12
 12463 28a7 72657300 		.ascii	"res\000"
 12464 28ab 01       		.byte	0x1
 12465 28ac E512     		.2byte	0x12e5
 12466 28ae E1030000 		.4byte	0x3e1
 12467 28b2 F3310000 		.4byte	.LLST223
 12468 28b6 1F       		.uleb128 0x1f
 12469 28b7 646A00   		.ascii	"dj\000"
 12470 28ba 01       		.byte	0x1
 12471 28bb E612     		.2byte	0x12e6
 12472 28bd F1020000 		.4byte	0x2f1
 12473 28c1 03       		.uleb128 0x3
 12474 28c2 91       		.byte	0x91
 12475 28c3 BC7F     		.sleb128 -68
 12476 28c5 1F       		.uleb128 0x1f
 12477 28c6 667300   		.ascii	"fs\000"
 12478 28c9 01       		.byte	0x1
 12479 28ca E712     		.2byte	0x12e7
 12480 28cc F9010000 		.4byte	0x1f9
 12481 28d0 03       		.uleb128 0x3
 12482 28d1 91       		.byte	0x91
 12483 28d2 B87F     		.sleb128 -72
 12484 28d4 12       		.uleb128 0x12
 12485 28d5 64697200 		.ascii	"dir\000"
 12486 28d9 01       		.byte	0x1
 12487 28da E812     		.2byte	0x12e8
 12488 28dc 80020000 		.4byte	0x280
 12489 28e0 75320000 		.4byte	.LLST224
 12490 28e4 12       		.uleb128 0x12
 12491 28e5 64636C00 		.ascii	"dcl\000"
 12492 28e9 01       		.byte	0x1
 12493 28ea E912     		.2byte	0x12e9
 12494 28ec 70000000 		.4byte	0x70
 12495 28f0 AC320000 		.4byte	.LLST225
 12496 28f4 12       		.uleb128 0x12
 12497 28f5 70636C00 		.ascii	"pcl\000"
 12498 28f9 01       		.byte	0x1
 12499 28fa E912     		.2byte	0x12e9
 12500 28fc 70000000 		.4byte	0x70
 12501 2900 CA320000 		.4byte	.LLST226
 12502 2904 12       		.uleb128 0x12
 12503 2905 746D00   		.ascii	"tm\000"
 12504 2908 01       		.byte	0x1
 12505 2909 E912     		.2byte	0x12e9
 12506 290b 70000000 		.4byte	0x70
 12507 290f DE320000 		.4byte	.LLST227
 12508 2913 19       		.uleb128 0x19
 12509 2914 14000000 		.4byte	.LVL1034
 12510 2918 E10B0000 		.4byte	0xbe1
 12511 291c 34290000 		.4byte	0x2934
 12512 2920 1A       		.uleb128 0x1a
 12513 2921 01       		.uleb128 0x1
 12514 2922 50       		.byte	0x50
 12515 2923 03       		.uleb128 0x3
 12516 2924 91       		.byte	0x91
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 318


 12517 2925 B47F     		.sleb128 -76
 12518 2927 1A       		.uleb128 0x1a
 12519 2928 01       		.uleb128 0x1
 12520 2929 51       		.byte	0x51
 12521 292a 03       		.uleb128 0x3
 12522 292b 91       		.byte	0x91
 12523 292c B87F     		.sleb128 -72
 12524 292e 1A       		.uleb128 0x1a
 12525 292f 01       		.uleb128 0x1
 12526 2930 52       		.byte	0x52
 12527 2931 01       		.uleb128 0x1
 12528 2932 32       		.byte	0x32
 12529 2933 00       		.byte	0
 12530 2934 19       		.uleb128 0x19
 12531 2935 26000000 		.4byte	.LVL1037
 12532 2939 EF150000 		.4byte	0x15ef
 12533 293d 49290000 		.4byte	0x2949
 12534 2941 1A       		.uleb128 0x1a
 12535 2942 01       		.uleb128 0x1
 12536 2943 50       		.byte	0x50
 12537 2944 03       		.uleb128 0x3
 12538 2945 91       		.byte	0x91
 12539 2946 BC7F     		.sleb128 -68
 12540 2948 00       		.byte	0
 12541 2949 19       		.uleb128 0x19
 12542 294a 38000000 		.4byte	.LVL1040
 12543 294e 7A110000 		.4byte	0x117a
 12544 2952 63290000 		.4byte	0x2963
 12545 2956 1A       		.uleb128 0x1a
 12546 2957 01       		.uleb128 0x1
 12547 2958 50       		.byte	0x50
 12548 2959 03       		.uleb128 0x3
 12549 295a 91       		.byte	0x91
 12550 295b BC7F     		.sleb128 -68
 12551 295d 1A       		.uleb128 0x1a
 12552 295e 01       		.uleb128 0x1
 12553 295f 51       		.byte	0x51
 12554 2960 01       		.uleb128 0x1
 12555 2961 30       		.byte	0x30
 12556 2962 00       		.byte	0
 12557 2963 1C       		.uleb128 0x1c
 12558 2964 5C000000 		.4byte	.LVL1047
 12559 2968 590A0000 		.4byte	0xa59
 12560 296c 1C       		.uleb128 0x1c
 12561 296d 62000000 		.4byte	.LVL1049
 12562 2971 0D2D0000 		.4byte	0x2d0d
 12563 2975 19       		.uleb128 0x19
 12564 2976 70000000 		.4byte	.LVL1052
 12565 297a A3130000 		.4byte	0x13a3
 12566 297e 89290000 		.4byte	0x2989
 12567 2982 1A       		.uleb128 0x1a
 12568 2983 01       		.uleb128 0x1
 12569 2984 51       		.byte	0x51
 12570 2985 02       		.uleb128 0x2
 12571 2986 77       		.byte	0x77
 12572 2987 00       		.sleb128 0
 12573 2988 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 319


 12574 2989 19       		.uleb128 0x19
 12575 298a 8A000000 		.4byte	.LVL1056
 12576 298e 7B050000 		.4byte	0x57b
 12577 2992 A9290000 		.4byte	0x29a9
 12578 2996 1A       		.uleb128 0x1a
 12579 2997 01       		.uleb128 0x1
 12580 2998 50       		.byte	0x50
 12581 2999 03       		.uleb128 0x3
 12582 299a 7D       		.byte	0x7d
 12583 299b 00       		.sleb128 0
 12584 299c 06       		.byte	0x6
 12585 299d 1A       		.uleb128 0x1a
 12586 299e 01       		.uleb128 0x1
 12587 299f 51       		.byte	0x51
 12588 29a0 02       		.uleb128 0x2
 12589 29a1 08       		.byte	0x8
 12590 29a2 20       		.byte	0x20
 12591 29a3 1A       		.uleb128 0x1a
 12592 29a4 01       		.uleb128 0x1
 12593 29a5 52       		.byte	0x52
 12594 29a6 01       		.uleb128 0x1
 12595 29a7 3B       		.byte	0x3b
 12596 29a8 00       		.byte	0
 12597 29a9 19       		.uleb128 0x19
 12598 29aa A2000000 		.4byte	.LVL1057
 12599 29ae D8040000 		.4byte	0x4d8
 12600 29b2 C4290000 		.4byte	0x29c4
 12601 29b6 1A       		.uleb128 0x1a
 12602 29b7 01       		.uleb128 0x1
 12603 29b8 50       		.byte	0x50
 12604 29b9 03       		.uleb128 0x3
 12605 29ba 76       		.byte	0x76
 12606 29bb C600     		.sleb128 70
 12607 29bd 1A       		.uleb128 0x1a
 12608 29be 01       		.uleb128 0x1
 12609 29bf 51       		.byte	0x51
 12610 29c0 02       		.uleb128 0x2
 12611 29c1 75       		.byte	0x75
 12612 29c2 00       		.sleb128 0
 12613 29c3 00       		.byte	0
 12614 29c4 19       		.uleb128 0x19
 12615 29c5 AC000000 		.4byte	.LVL1058
 12616 29c9 81070000 		.4byte	0x781
 12617 29cd DF290000 		.4byte	0x29df
 12618 29d1 1A       		.uleb128 0x1a
 12619 29d2 01       		.uleb128 0x1
 12620 29d3 51       		.byte	0x51
 12621 29d4 03       		.uleb128 0x3
 12622 29d5 7D       		.byte	0x7d
 12623 29d6 00       		.sleb128 0
 12624 29d7 06       		.byte	0x6
 12625 29d8 1A       		.uleb128 0x1a
 12626 29d9 01       		.uleb128 0x1
 12627 29da 52       		.byte	0x52
 12628 29db 02       		.uleb128 0x2
 12629 29dc 77       		.byte	0x77
 12630 29dd 00       		.sleb128 0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 320


 12631 29de 00       		.byte	0
 12632 29df 19       		.uleb128 0x19
 12633 29e0 BE000000 		.4byte	.LVL1060
 12634 29e4 0F050000 		.4byte	0x50f
 12635 29e8 FA290000 		.4byte	0x29fa
 12636 29ec 1A       		.uleb128 0x1a
 12637 29ed 01       		.uleb128 0x1
 12638 29ee 50       		.byte	0x50
 12639 29ef 03       		.uleb128 0x3
 12640 29f0 7D       		.byte	0x7d
 12641 29f1 00       		.sleb128 0
 12642 29f2 06       		.byte	0x6
 12643 29f3 1A       		.uleb128 0x1a
 12644 29f4 01       		.uleb128 0x1
 12645 29f5 52       		.byte	0x52
 12646 29f6 02       		.uleb128 0x2
 12647 29f7 08       		.byte	0x8
 12648 29f8 20       		.byte	0x20
 12649 29f9 00       		.byte	0
 12650 29fa 19       		.uleb128 0x19
 12651 29fb CE000000 		.4byte	.LVL1062
 12652 29ff 81070000 		.4byte	0x781
 12653 2a03 0F2A0000 		.4byte	0x2a0f
 12654 2a07 1A       		.uleb128 0x1a
 12655 2a08 01       		.uleb128 0x1
 12656 2a09 51       		.byte	0x51
 12657 2a0a 03       		.uleb128 0x3
 12658 2a0b 7D       		.byte	0x7d
 12659 2a0c 00       		.sleb128 0
 12660 2a0d 06       		.byte	0x6
 12661 2a0e 00       		.byte	0
 12662 2a0f 19       		.uleb128 0x19
 12663 2a10 DE000000 		.4byte	.LVL1064
 12664 2a14 57170000 		.4byte	0x1757
 12665 2a18 242A0000 		.4byte	0x2a24
 12666 2a1c 1A       		.uleb128 0x1a
 12667 2a1d 01       		.uleb128 0x1
 12668 2a1e 50       		.byte	0x50
 12669 2a1f 03       		.uleb128 0x3
 12670 2a20 91       		.byte	0x91
 12671 2a21 BC7F     		.sleb128 -68
 12672 2a23 00       		.byte	0
 12673 2a24 19       		.uleb128 0x19
 12674 2a25 F0000000 		.4byte	.LVL1067
 12675 2a29 D8040000 		.4byte	0x4d8
 12676 2a2d 3E2A0000 		.4byte	0x2a3e
 12677 2a31 1A       		.uleb128 0x1a
 12678 2a32 01       		.uleb128 0x1
 12679 2a33 50       		.byte	0x50
 12680 2a34 02       		.uleb128 0x2
 12681 2a35 76       		.byte	0x76
 12682 2a36 16       		.sleb128 22
 12683 2a37 1A       		.uleb128 0x1a
 12684 2a38 01       		.uleb128 0x1
 12685 2a39 51       		.byte	0x51
 12686 2a3a 02       		.uleb128 0x2
 12687 2a3b 75       		.byte	0x75
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 321


 12688 2a3c 00       		.sleb128 0
 12689 2a3d 00       		.byte	0
 12690 2a3e 19       		.uleb128 0x19
 12691 2a3f FA000000 		.4byte	.LVL1068
 12692 2a43 81070000 		.4byte	0x781
 12693 2a47 582A0000 		.4byte	0x2a58
 12694 2a4b 1A       		.uleb128 0x1a
 12695 2a4c 01       		.uleb128 0x1
 12696 2a4d 51       		.byte	0x51
 12697 2a4e 02       		.uleb128 0x2
 12698 2a4f 76       		.byte	0x76
 12699 2a50 00       		.sleb128 0
 12700 2a51 1A       		.uleb128 0x1a
 12701 2a52 01       		.uleb128 0x1
 12702 2a53 52       		.byte	0x52
 12703 2a54 02       		.uleb128 0x2
 12704 2a55 77       		.byte	0x77
 12705 2a56 00       		.sleb128 0
 12706 2a57 00       		.byte	0
 12707 2a58 1C       		.uleb128 0x1c
 12708 2a59 0E010000 		.4byte	.LVL1069
 12709 2a5d 99180000 		.4byte	0x1899
 12710 2a61 1B       		.uleb128 0x1b
 12711 2a62 1C010000 		.4byte	.LVL1072
 12712 2a66 7C120000 		.4byte	0x127c
 12713 2a6a 1A       		.uleb128 0x1a
 12714 2a6b 01       		.uleb128 0x1
 12715 2a6c 50       		.byte	0x50
 12716 2a6d 03       		.uleb128 0x3
 12717 2a6e 91       		.byte	0x91
 12718 2a6f BC7F     		.sleb128 -68
 12719 2a71 1A       		.uleb128 0x1a
 12720 2a72 01       		.uleb128 0x1
 12721 2a73 51       		.byte	0x51
 12722 2a74 02       		.uleb128 0x2
 12723 2a75 77       		.byte	0x77
 12724 2a76 00       		.sleb128 0
 12725 2a77 1A       		.uleb128 0x1a
 12726 2a78 01       		.uleb128 0x1
 12727 2a79 52       		.byte	0x52
 12728 2a7a 01       		.uleb128 0x1
 12729 2a7b 30       		.byte	0x30
 12730 2a7c 00       		.byte	0
 12731 2a7d 00       		.byte	0
 12732 2a7e 20       		.uleb128 0x20
 12733 2a7f 9A020000 		.4byte	.LASF153
 12734 2a83 01       		.byte	0x1
 12735 2a84 3913     		.2byte	0x1339
 12736 2a86 E1030000 		.4byte	0x3e1
 12737 2a8a 00000000 		.4byte	.LFB50
 12738 2a8e 22010000 		.4byte	.LFE50-.LFB50
 12739 2a92 01       		.uleb128 0x1
 12740 2a93 9C       		.byte	0x9c
 12741 2a94 662C0000 		.4byte	0x2c66
 12742 2a98 18       		.uleb128 0x18
 12743 2a99 1D060000 		.4byte	.LASF154
 12744 2a9d 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 322


 12745 2a9e 3A13     		.2byte	0x133a
 12746 2aa0 87090000 		.4byte	0x987
 12747 2aa4 FC320000 		.4byte	.LLST228
 12748 2aa8 18       		.uleb128 0x18
 12749 2aa9 B3020000 		.4byte	.LASF155
 12750 2aad 01       		.byte	0x1
 12751 2aae 3B13     		.2byte	0x133b
 12752 2ab0 87090000 		.4byte	0x987
 12753 2ab4 35330000 		.4byte	.LLST229
 12754 2ab8 12       		.uleb128 0x12
 12755 2ab9 72657300 		.ascii	"res\000"
 12756 2abd 01       		.byte	0x1
 12757 2abe 3E13     		.2byte	0x133e
 12758 2ac0 E1030000 		.4byte	0x3e1
 12759 2ac4 6E330000 		.4byte	.LLST230
 12760 2ac8 1F       		.uleb128 0x1f
 12761 2ac9 646A6F00 		.ascii	"djo\000"
 12762 2acd 01       		.byte	0x1
 12763 2ace 3F13     		.2byte	0x133f
 12764 2ad0 F1020000 		.4byte	0x2f1
 12765 2ad4 02       		.uleb128 0x2
 12766 2ad5 91       		.byte	0x91
 12767 2ad6 44       		.sleb128 -60
 12768 2ad7 1F       		.uleb128 0x1f
 12769 2ad8 646A6E00 		.ascii	"djn\000"
 12770 2adc 01       		.byte	0x1
 12771 2add 3F13     		.2byte	0x133f
 12772 2adf F1020000 		.4byte	0x2f1
 12773 2ae3 03       		.uleb128 0x3
 12774 2ae4 91       		.byte	0x91
 12775 2ae5 987F     		.sleb128 -104
 12776 2ae7 1F       		.uleb128 0x1f
 12777 2ae8 667300   		.ascii	"fs\000"
 12778 2aeb 01       		.byte	0x1
 12779 2aec 4013     		.2byte	0x1340
 12780 2aee F9010000 		.4byte	0x1f9
 12781 2af2 03       		.uleb128 0x3
 12782 2af3 91       		.byte	0x91
 12783 2af4 947F     		.sleb128 -108
 12784 2af6 1F       		.uleb128 0x1f
 12785 2af7 62756600 		.ascii	"buf\000"
 12786 2afb 01       		.byte	0x1
 12787 2afc 4113     		.2byte	0x1341
 12788 2afe 662C0000 		.4byte	0x2c66
 12789 2b02 03       		.uleb128 0x3
 12790 2b03 91       		.byte	0x91
 12791 2b04 F47E     		.sleb128 -140
 12792 2b06 12       		.uleb128 0x12
 12793 2b07 64697200 		.ascii	"dir\000"
 12794 2b0b 01       		.byte	0x1
 12795 2b0c 4113     		.2byte	0x1341
 12796 2b0e 80020000 		.4byte	0x280
 12797 2b12 05340000 		.4byte	.LLST231
 12798 2b16 12       		.uleb128 0x12
 12799 2b17 647700   		.ascii	"dw\000"
 12800 2b1a 01       		.byte	0x1
 12801 2b1b 4213     		.2byte	0x1342
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 323


 12802 2b1d 70000000 		.4byte	0x70
 12803 2b21 2E340000 		.4byte	.LLST232
 12804 2b25 19       		.uleb128 0x19
 12805 2b26 0E000000 		.4byte	.LVL1078
 12806 2b2a 92090000 		.4byte	0x992
 12807 2b2e 3A2B0000 		.4byte	0x2b3a
 12808 2b32 1A       		.uleb128 0x1a
 12809 2b33 01       		.uleb128 0x1
 12810 2b34 50       		.byte	0x50
 12811 2b35 03       		.uleb128 0x3
 12812 2b36 91       		.byte	0x91
 12813 2b37 E87E     		.sleb128 -152
 12814 2b39 00       		.byte	0
 12815 2b3a 19       		.uleb128 0x19
 12816 2b3b 18000000 		.4byte	.LVL1080
 12817 2b3f E10B0000 		.4byte	0xbe1
 12818 2b43 5B2B0000 		.4byte	0x2b5b
 12819 2b47 1A       		.uleb128 0x1a
 12820 2b48 01       		.uleb128 0x1
 12821 2b49 50       		.byte	0x50
 12822 2b4a 03       		.uleb128 0x3
 12823 2b4b 91       		.byte	0x91
 12824 2b4c EC7E     		.sleb128 -148
 12825 2b4e 1A       		.uleb128 0x1a
 12826 2b4f 01       		.uleb128 0x1
 12827 2b50 51       		.byte	0x51
 12828 2b51 03       		.uleb128 0x3
 12829 2b52 91       		.byte	0x91
 12830 2b53 947F     		.sleb128 -108
 12831 2b55 1A       		.uleb128 0x1a
 12832 2b56 01       		.uleb128 0x1
 12833 2b57 52       		.byte	0x52
 12834 2b58 01       		.uleb128 0x1
 12835 2b59 32       		.byte	0x32
 12836 2b5a 00       		.byte	0
 12837 2b5b 19       		.uleb128 0x19
 12838 2b5c 2A000000 		.4byte	.LVL1083
 12839 2b60 EF150000 		.4byte	0x15ef
 12840 2b64 6F2B0000 		.4byte	0x2b6f
 12841 2b68 1A       		.uleb128 0x1a
 12842 2b69 01       		.uleb128 0x1
 12843 2b6a 50       		.byte	0x50
 12844 2b6b 02       		.uleb128 0x2
 12845 2b6c 91       		.byte	0x91
 12846 2b6d 44       		.sleb128 -60
 12847 2b6e 00       		.byte	0
 12848 2b6f 19       		.uleb128 0x19
 12849 2b70 4E000000 		.4byte	.LVL1086
 12850 2b74 0F050000 		.4byte	0x50f
 12851 2b78 922B0000 		.4byte	0x2b92
 12852 2b7c 1A       		.uleb128 0x1a
 12853 2b7d 01       		.uleb128 0x1
 12854 2b7e 50       		.byte	0x50
 12855 2b7f 03       		.uleb128 0x3
 12856 2b80 91       		.byte	0x91
 12857 2b81 F47E     		.sleb128 -140
 12858 2b83 1A       		.uleb128 0x1a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 324


 12859 2b84 01       		.uleb128 0x1
 12860 2b85 51       		.byte	0x51
 12861 2b86 04       		.uleb128 0x4
 12862 2b87 91       		.byte	0x91
 12863 2b88 E47E     		.sleb128 -156
 12864 2b8a 06       		.byte	0x6
 12865 2b8b 1A       		.uleb128 0x1a
 12866 2b8c 01       		.uleb128 0x1
 12867 2b8d 52       		.byte	0x52
 12868 2b8e 02       		.uleb128 0x2
 12869 2b8f 08       		.byte	0x8
 12870 2b90 20       		.byte	0x20
 12871 2b91 00       		.byte	0
 12872 2b92 19       		.uleb128 0x19
 12873 2b93 58000000 		.4byte	.LVL1087
 12874 2b97 0F050000 		.4byte	0x50f
 12875 2b9b B32B0000 		.4byte	0x2bb3
 12876 2b9f 1A       		.uleb128 0x1a
 12877 2ba0 01       		.uleb128 0x1
 12878 2ba1 50       		.byte	0x50
 12879 2ba2 03       		.uleb128 0x3
 12880 2ba3 91       		.byte	0x91
 12881 2ba4 987F     		.sleb128 -104
 12882 2ba6 1A       		.uleb128 0x1a
 12883 2ba7 01       		.uleb128 0x1
 12884 2ba8 51       		.byte	0x51
 12885 2ba9 02       		.uleb128 0x2
 12886 2baa 91       		.byte	0x91
 12887 2bab 44       		.sleb128 -60
 12888 2bac 1A       		.uleb128 0x1a
 12889 2bad 01       		.uleb128 0x1
 12890 2bae 52       		.byte	0x52
 12891 2baf 02       		.uleb128 0x2
 12892 2bb0 08       		.byte	0x8
 12893 2bb1 2C       		.byte	0x2c
 12894 2bb2 00       		.byte	0
 12895 2bb3 19       		.uleb128 0x19
 12896 2bb4 60000000 		.4byte	.LVL1088
 12897 2bb8 EF150000 		.4byte	0x15ef
 12898 2bbc C82B0000 		.4byte	0x2bc8
 12899 2bc0 1A       		.uleb128 0x1a
 12900 2bc1 01       		.uleb128 0x1
 12901 2bc2 50       		.byte	0x50
 12902 2bc3 03       		.uleb128 0x3
 12903 2bc4 91       		.byte	0x91
 12904 2bc5 987F     		.sleb128 -104
 12905 2bc7 00       		.byte	0
 12906 2bc8 19       		.uleb128 0x19
 12907 2bc9 88000000 		.4byte	.LVL1091
 12908 2bcd 57170000 		.4byte	0x1757
 12909 2bd1 DD2B0000 		.4byte	0x2bdd
 12910 2bd5 1A       		.uleb128 0x1a
 12911 2bd6 01       		.uleb128 0x1
 12912 2bd7 50       		.byte	0x50
 12913 2bd8 03       		.uleb128 0x3
 12914 2bd9 91       		.byte	0x91
 12915 2bda 987F     		.sleb128 -104
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 325


 12916 2bdc 00       		.byte	0
 12917 2bdd 19       		.uleb128 0x19
 12918 2bde A0000000 		.4byte	.LVL1096
 12919 2be2 0F050000 		.4byte	0x50f
 12920 2be6 FD2B0000 		.4byte	0x2bfd
 12921 2bea 1A       		.uleb128 0x1a
 12922 2beb 01       		.uleb128 0x1
 12923 2bec 50       		.byte	0x50
 12924 2bed 02       		.uleb128 0x2
 12925 2bee 75       		.byte	0x75
 12926 2bef 0D       		.sleb128 13
 12927 2bf0 1A       		.uleb128 0x1a
 12928 2bf1 01       		.uleb128 0x1
 12929 2bf2 51       		.byte	0x51
 12930 2bf3 03       		.uleb128 0x3
 12931 2bf4 91       		.byte	0x91
 12932 2bf5 817F     		.sleb128 -127
 12933 2bf7 1A       		.uleb128 0x1a
 12934 2bf8 01       		.uleb128 0x1
 12935 2bf9 52       		.byte	0x52
 12936 2bfa 01       		.uleb128 0x1
 12937 2bfb 43       		.byte	0x43
 12938 2bfc 00       		.byte	0
 12939 2bfd 19       		.uleb128 0x19
 12940 2bfe CE000000 		.4byte	.LVL1098
 12941 2c02 14070000 		.4byte	0x714
 12942 2c06 172C0000 		.4byte	0x2c17
 12943 2c0a 1A       		.uleb128 0x1a
 12944 2c0b 01       		.uleb128 0x1
 12945 2c0c 50       		.byte	0x50
 12946 2c0d 02       		.uleb128 0x2
 12947 2c0e 74       		.byte	0x74
 12948 2c0f 00       		.sleb128 0
 12949 2c10 1A       		.uleb128 0x1a
 12950 2c11 01       		.uleb128 0x1
 12951 2c12 51       		.byte	0x51
 12952 2c13 02       		.uleb128 0x2
 12953 2c14 75       		.byte	0x75
 12954 2c15 00       		.sleb128 0
 12955 2c16 00       		.byte	0
 12956 2c17 19       		.uleb128 0x19
 12957 2c18 D6000000 		.4byte	.LVL1099
 12958 2c1c DA060000 		.4byte	0x6da
 12959 2c20 2B2C0000 		.4byte	0x2c2b
 12960 2c24 1A       		.uleb128 0x1a
 12961 2c25 01       		.uleb128 0x1
 12962 2c26 50       		.byte	0x50
 12963 2c27 02       		.uleb128 0x2
 12964 2c28 74       		.byte	0x74
 12965 2c29 00       		.sleb128 0
 12966 2c2a 00       		.byte	0
 12967 2c2b 19       		.uleb128 0x19
 12968 2c2c E2000000 		.4byte	.LVL1101
 12969 2c30 BC0A0000 		.4byte	0xabc
 12970 2c34 3F2C0000 		.4byte	0x2c3f
 12971 2c38 1A       		.uleb128 0x1a
 12972 2c39 01       		.uleb128 0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 326


 12973 2c3a 50       		.byte	0x50
 12974 2c3b 02       		.uleb128 0x2
 12975 2c3c 74       		.byte	0x74
 12976 2c3d 00       		.sleb128 0
 12977 2c3e 00       		.byte	0
 12978 2c3f 1C       		.uleb128 0x1c
 12979 2c40 FC000000 		.4byte	.LVL1105
 12980 2c44 81070000 		.4byte	0x781
 12981 2c48 19       		.uleb128 0x19
 12982 2c49 10010000 		.4byte	.LVL1108
 12983 2c4d 4C130000 		.4byte	0x134c
 12984 2c51 5C2C0000 		.4byte	0x2c5c
 12985 2c55 1A       		.uleb128 0x1a
 12986 2c56 01       		.uleb128 0x1
 12987 2c57 50       		.byte	0x50
 12988 2c58 02       		.uleb128 0x2
 12989 2c59 91       		.byte	0x91
 12990 2c5a 44       		.sleb128 -60
 12991 2c5b 00       		.byte	0
 12992 2c5c 1C       		.uleb128 0x1c
 12993 2c5d 1A010000 		.4byte	.LVL1111
 12994 2c61 99180000 		.4byte	0x1899
 12995 2c65 00       		.byte	0
 12996 2c66 08       		.uleb128 0x8
 12997 2c67 3E000000 		.4byte	0x3e
 12998 2c6b 762C0000 		.4byte	0x2c76
 12999 2c6f 0D       		.uleb128 0xd
 13000 2c70 98010000 		.4byte	0x198
 13001 2c74 1F       		.byte	0x1f
 13002 2c75 00       		.byte	0
 13003 2c76 08       		.uleb128 0x8
 13004 2c77 F9010000 		.4byte	0x1f9
 13005 2c7b 862C0000 		.4byte	0x2c86
 13006 2c7f 0D       		.uleb128 0xd
 13007 2c80 98010000 		.4byte	0x198
 13008 2c84 00       		.byte	0
 13009 2c85 00       		.byte	0
 13010 2c86 22       		.uleb128 0x22
 13011 2c87 3F000000 		.4byte	.LASF156
 13012 2c8b 01       		.byte	0x1
 13013 2c8c AD01     		.2byte	0x1ad
 13014 2c8e 762C0000 		.4byte	0x2c76
 13015 2c92 05       		.uleb128 0x5
 13016 2c93 03       		.byte	0x3
 13017 2c94 00000000 		.4byte	FatFs
 13018 2c98 22       		.uleb128 0x22
 13019 2c99 A8060000 		.4byte	.LASF157
 13020 2c9d 01       		.byte	0x1
 13021 2c9e AE01     		.2byte	0x1ae
 13022 2ca0 57000000 		.4byte	0x57
 13023 2ca4 05       		.uleb128 0x5
 13024 2ca5 03       		.byte	0x3
 13025 2ca6 04000000 		.4byte	Fsid
 13026 2caa 08       		.uleb128 0x8
 13027 2cab 62040000 		.4byte	0x462
 13028 2caf BA2C0000 		.4byte	0x2cba
 13029 2cb3 0D       		.uleb128 0xd
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 327


 13030 2cb4 98010000 		.4byte	0x198
 13031 2cb8 09       		.byte	0x9
 13032 2cb9 00       		.byte	0
 13033 2cba 23       		.uleb128 0x23
 13034 2cbb EF020000 		.4byte	.LASF158
 13035 2cbf 01       		.byte	0x1
 13036 2cc0 2302     		.2byte	0x223
 13037 2cc2 D12C0000 		.4byte	0x2cd1
 13038 2cc6 0A       		.byte	0xa
 13039 2cc7 81       		.byte	0x81
 13040 2cc8 9F       		.byte	0x9f
 13041 2cc9 E0       		.byte	0xe0
 13042 2cca FC       		.byte	0xfc
 13043 2ccb 40       		.byte	0x40
 13044 2ccc 7E       		.byte	0x7e
 13045 2ccd 80       		.byte	0x80
 13046 2cce FC       		.byte	0xfc
 13047 2ccf 00       		.byte	0
 13048 2cd0 00       		.byte	0
 13049 2cd1 13       		.uleb128 0x13
 13050 2cd2 AA2C0000 		.4byte	0x2caa
 13051 2cd6 24       		.uleb128 0x24
 13052 2cd7 2E020000 		.4byte	.LASF159
 13053 2cdb 2E020000 		.4byte	.LASF159
 13054 2cdf 04       		.byte	0x4
 13055 2ce0 21       		.byte	0x21
 13056 2ce1 24       		.uleb128 0x24
 13057 2ce2 DD050000 		.4byte	.LASF160
 13058 2ce6 DD050000 		.4byte	.LASF160
 13059 2cea 04       		.byte	0x4
 13060 2ceb 23       		.byte	0x23
 13061 2cec 24       		.uleb128 0x24
 13062 2ced 9E060000 		.4byte	.LASF161
 13063 2cf1 9E060000 		.4byte	.LASF161
 13064 2cf5 04       		.byte	0x4
 13065 2cf6 22       		.byte	0x22
 13066 2cf7 24       		.uleb128 0x24
 13067 2cf8 9D010000 		.4byte	.LASF162
 13068 2cfc 9D010000 		.4byte	.LASF162
 13069 2d00 04       		.byte	0x4
 13070 2d01 20       		.byte	0x20
 13071 2d02 24       		.uleb128 0x24
 13072 2d03 0F030000 		.4byte	.LASF163
 13073 2d07 0F030000 		.4byte	.LASF163
 13074 2d0b 04       		.byte	0x4
 13075 2d0c 24       		.byte	0x24
 13076 2d0d 25       		.uleb128 0x25
 13077 2d0e BB030000 		.4byte	.LASF164
 13078 2d12 BB030000 		.4byte	.LASF164
 13079 2d16 03       		.byte	0x3
 13080 2d17 2C01     		.2byte	0x12c
 13081 2d19 00       		.byte	0
 13082              		.section	.debug_abbrev,"",%progbits
 13083              	.Ldebug_abbrev0:
 13084 0000 01       		.uleb128 0x1
 13085 0001 11       		.uleb128 0x11
 13086 0002 01       		.byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 328


 13087 0003 25       		.uleb128 0x25
 13088 0004 0E       		.uleb128 0xe
 13089 0005 13       		.uleb128 0x13
 13090 0006 0B       		.uleb128 0xb
 13091 0007 03       		.uleb128 0x3
 13092 0008 0E       		.uleb128 0xe
 13093 0009 1B       		.uleb128 0x1b
 13094 000a 0E       		.uleb128 0xe
 13095 000b 55       		.uleb128 0x55
 13096 000c 17       		.uleb128 0x17
 13097 000d 11       		.uleb128 0x11
 13098 000e 01       		.uleb128 0x1
 13099 000f 10       		.uleb128 0x10
 13100 0010 17       		.uleb128 0x17
 13101 0011 00       		.byte	0
 13102 0012 00       		.byte	0
 13103 0013 02       		.uleb128 0x2
 13104 0014 24       		.uleb128 0x24
 13105 0015 00       		.byte	0
 13106 0016 0B       		.uleb128 0xb
 13107 0017 0B       		.uleb128 0xb
 13108 0018 3E       		.uleb128 0x3e
 13109 0019 0B       		.uleb128 0xb
 13110 001a 03       		.uleb128 0x3
 13111 001b 08       		.uleb128 0x8
 13112 001c 00       		.byte	0
 13113 001d 00       		.byte	0
 13114 001e 03       		.uleb128 0x3
 13115 001f 16       		.uleb128 0x16
 13116 0020 00       		.byte	0
 13117 0021 03       		.uleb128 0x3
 13118 0022 0E       		.uleb128 0xe
 13119 0023 3A       		.uleb128 0x3a
 13120 0024 0B       		.uleb128 0xb
 13121 0025 3B       		.uleb128 0x3b
 13122 0026 0B       		.uleb128 0xb
 13123 0027 49       		.uleb128 0x49
 13124 0028 13       		.uleb128 0x13
 13125 0029 00       		.byte	0
 13126 002a 00       		.byte	0
 13127 002b 04       		.uleb128 0x4
 13128 002c 24       		.uleb128 0x24
 13129 002d 00       		.byte	0
 13130 002e 0B       		.uleb128 0xb
 13131 002f 0B       		.uleb128 0xb
 13132 0030 3E       		.uleb128 0x3e
 13133 0031 0B       		.uleb128 0xb
 13134 0032 03       		.uleb128 0x3
 13135 0033 0E       		.uleb128 0xe
 13136 0034 00       		.byte	0
 13137 0035 00       		.byte	0
 13138 0036 05       		.uleb128 0x5
 13139 0037 13       		.uleb128 0x13
 13140 0038 01       		.byte	0x1
 13141 0039 0B       		.uleb128 0xb
 13142 003a 05       		.uleb128 0x5
 13143 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 329


 13144 003c 0B       		.uleb128 0xb
 13145 003d 3B       		.uleb128 0x3b
 13146 003e 0B       		.uleb128 0xb
 13147 003f 01       		.uleb128 0x1
 13148 0040 13       		.uleb128 0x13
 13149 0041 00       		.byte	0
 13150 0042 00       		.byte	0
 13151 0043 06       		.uleb128 0x6
 13152 0044 0D       		.uleb128 0xd
 13153 0045 00       		.byte	0
 13154 0046 03       		.uleb128 0x3
 13155 0047 0E       		.uleb128 0xe
 13156 0048 3A       		.uleb128 0x3a
 13157 0049 0B       		.uleb128 0xb
 13158 004a 3B       		.uleb128 0x3b
 13159 004b 0B       		.uleb128 0xb
 13160 004c 49       		.uleb128 0x49
 13161 004d 13       		.uleb128 0x13
 13162 004e 38       		.uleb128 0x38
 13163 004f 0B       		.uleb128 0xb
 13164 0050 00       		.byte	0
 13165 0051 00       		.byte	0
 13166 0052 07       		.uleb128 0x7
 13167 0053 0D       		.uleb128 0xd
 13168 0054 00       		.byte	0
 13169 0055 03       		.uleb128 0x3
 13170 0056 08       		.uleb128 0x8
 13171 0057 3A       		.uleb128 0x3a
 13172 0058 0B       		.uleb128 0xb
 13173 0059 3B       		.uleb128 0x3b
 13174 005a 0B       		.uleb128 0xb
 13175 005b 49       		.uleb128 0x49
 13176 005c 13       		.uleb128 0x13
 13177 005d 38       		.uleb128 0x38
 13178 005e 0B       		.uleb128 0xb
 13179 005f 00       		.byte	0
 13180 0060 00       		.byte	0
 13181 0061 08       		.uleb128 0x8
 13182 0062 01       		.uleb128 0x1
 13183 0063 01       		.byte	0x1
 13184 0064 49       		.uleb128 0x49
 13185 0065 13       		.uleb128 0x13
 13186 0066 01       		.uleb128 0x1
 13187 0067 13       		.uleb128 0x13
 13188 0068 00       		.byte	0
 13189 0069 00       		.byte	0
 13190 006a 09       		.uleb128 0x9
 13191 006b 21       		.uleb128 0x21
 13192 006c 00       		.byte	0
 13193 006d 49       		.uleb128 0x49
 13194 006e 13       		.uleb128 0x13
 13195 006f 2F       		.uleb128 0x2f
 13196 0070 05       		.uleb128 0x5
 13197 0071 00       		.byte	0
 13198 0072 00       		.byte	0
 13199 0073 0A       		.uleb128 0xa
 13200 0074 13       		.uleb128 0x13
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 330


 13201 0075 01       		.byte	0x1
 13202 0076 0B       		.uleb128 0xb
 13203 0077 0B       		.uleb128 0xb
 13204 0078 3A       		.uleb128 0x3a
 13205 0079 0B       		.uleb128 0xb
 13206 007a 3B       		.uleb128 0x3b
 13207 007b 0B       		.uleb128 0xb
 13208 007c 01       		.uleb128 0x1
 13209 007d 13       		.uleb128 0x13
 13210 007e 00       		.byte	0
 13211 007f 00       		.byte	0
 13212 0080 0B       		.uleb128 0xb
 13213 0081 0F       		.uleb128 0xf
 13214 0082 00       		.byte	0
 13215 0083 0B       		.uleb128 0xb
 13216 0084 0B       		.uleb128 0xb
 13217 0085 49       		.uleb128 0x49
 13218 0086 13       		.uleb128 0x13
 13219 0087 00       		.byte	0
 13220 0088 00       		.byte	0
 13221 0089 0C       		.uleb128 0xc
 13222 008a 16       		.uleb128 0x16
 13223 008b 00       		.byte	0
 13224 008c 03       		.uleb128 0x3
 13225 008d 08       		.uleb128 0x8
 13226 008e 3A       		.uleb128 0x3a
 13227 008f 0B       		.uleb128 0xb
 13228 0090 3B       		.uleb128 0x3b
 13229 0091 0B       		.uleb128 0xb
 13230 0092 49       		.uleb128 0x49
 13231 0093 13       		.uleb128 0x13
 13232 0094 00       		.byte	0
 13233 0095 00       		.byte	0
 13234 0096 0D       		.uleb128 0xd
 13235 0097 21       		.uleb128 0x21
 13236 0098 00       		.byte	0
 13237 0099 49       		.uleb128 0x49
 13238 009a 13       		.uleb128 0x13
 13239 009b 2F       		.uleb128 0x2f
 13240 009c 0B       		.uleb128 0xb
 13241 009d 00       		.byte	0
 13242 009e 00       		.byte	0
 13243 009f 0E       		.uleb128 0xe
 13244 00a0 04       		.uleb128 0x4
 13245 00a1 01       		.byte	0x1
 13246 00a2 0B       		.uleb128 0xb
 13247 00a3 0B       		.uleb128 0xb
 13248 00a4 49       		.uleb128 0x49
 13249 00a5 13       		.uleb128 0x13
 13250 00a6 3A       		.uleb128 0x3a
 13251 00a7 0B       		.uleb128 0xb
 13252 00a8 3B       		.uleb128 0x3b
 13253 00a9 0B       		.uleb128 0xb
 13254 00aa 01       		.uleb128 0x1
 13255 00ab 13       		.uleb128 0x13
 13256 00ac 00       		.byte	0
 13257 00ad 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 331


 13258 00ae 0F       		.uleb128 0xf
 13259 00af 28       		.uleb128 0x28
 13260 00b0 00       		.byte	0
 13261 00b1 03       		.uleb128 0x3
 13262 00b2 0E       		.uleb128 0xe
 13263 00b3 1C       		.uleb128 0x1c
 13264 00b4 0B       		.uleb128 0xb
 13265 00b5 00       		.byte	0
 13266 00b6 00       		.byte	0
 13267 00b7 10       		.uleb128 0x10
 13268 00b8 2E       		.uleb128 0x2e
 13269 00b9 01       		.byte	0x1
 13270 00ba 03       		.uleb128 0x3
 13271 00bb 0E       		.uleb128 0xe
 13272 00bc 3A       		.uleb128 0x3a
 13273 00bd 0B       		.uleb128 0xb
 13274 00be 3B       		.uleb128 0x3b
 13275 00bf 05       		.uleb128 0x5
 13276 00c0 27       		.uleb128 0x27
 13277 00c1 19       		.uleb128 0x19
 13278 00c2 49       		.uleb128 0x49
 13279 00c3 13       		.uleb128 0x13
 13280 00c4 11       		.uleb128 0x11
 13281 00c5 01       		.uleb128 0x1
 13282 00c6 12       		.uleb128 0x12
 13283 00c7 06       		.uleb128 0x6
 13284 00c8 40       		.uleb128 0x40
 13285 00c9 18       		.uleb128 0x18
 13286 00ca 9742     		.uleb128 0x2117
 13287 00cc 19       		.uleb128 0x19
 13288 00cd 01       		.uleb128 0x1
 13289 00ce 13       		.uleb128 0x13
 13290 00cf 00       		.byte	0
 13291 00d0 00       		.byte	0
 13292 00d1 11       		.uleb128 0x11
 13293 00d2 05       		.uleb128 0x5
 13294 00d3 00       		.byte	0
 13295 00d4 03       		.uleb128 0x3
 13296 00d5 08       		.uleb128 0x8
 13297 00d6 3A       		.uleb128 0x3a
 13298 00d7 0B       		.uleb128 0xb
 13299 00d8 3B       		.uleb128 0x3b
 13300 00d9 05       		.uleb128 0x5
 13301 00da 49       		.uleb128 0x49
 13302 00db 13       		.uleb128 0x13
 13303 00dc 02       		.uleb128 0x2
 13304 00dd 17       		.uleb128 0x17
 13305 00de 00       		.byte	0
 13306 00df 00       		.byte	0
 13307 00e0 12       		.uleb128 0x12
 13308 00e1 34       		.uleb128 0x34
 13309 00e2 00       		.byte	0
 13310 00e3 03       		.uleb128 0x3
 13311 00e4 08       		.uleb128 0x8
 13312 00e5 3A       		.uleb128 0x3a
 13313 00e6 0B       		.uleb128 0xb
 13314 00e7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 332


 13315 00e8 05       		.uleb128 0x5
 13316 00e9 49       		.uleb128 0x49
 13317 00ea 13       		.uleb128 0x13
 13318 00eb 02       		.uleb128 0x2
 13319 00ec 17       		.uleb128 0x17
 13320 00ed 00       		.byte	0
 13321 00ee 00       		.byte	0
 13322 00ef 13       		.uleb128 0x13
 13323 00f0 26       		.uleb128 0x26
 13324 00f1 00       		.byte	0
 13325 00f2 49       		.uleb128 0x49
 13326 00f3 13       		.uleb128 0x13
 13327 00f4 00       		.byte	0
 13328 00f5 00       		.byte	0
 13329 00f6 14       		.uleb128 0x14
 13330 00f7 2E       		.uleb128 0x2e
 13331 00f8 01       		.byte	0x1
 13332 00f9 03       		.uleb128 0x3
 13333 00fa 0E       		.uleb128 0xe
 13334 00fb 3A       		.uleb128 0x3a
 13335 00fc 0B       		.uleb128 0xb
 13336 00fd 3B       		.uleb128 0x3b
 13337 00fe 05       		.uleb128 0x5
 13338 00ff 27       		.uleb128 0x27
 13339 0100 19       		.uleb128 0x19
 13340 0101 11       		.uleb128 0x11
 13341 0102 01       		.uleb128 0x1
 13342 0103 12       		.uleb128 0x12
 13343 0104 06       		.uleb128 0x6
 13344 0105 40       		.uleb128 0x40
 13345 0106 18       		.uleb128 0x18
 13346 0107 9742     		.uleb128 0x2117
 13347 0109 19       		.uleb128 0x19
 13348 010a 01       		.uleb128 0x1
 13349 010b 13       		.uleb128 0x13
 13350 010c 00       		.byte	0
 13351 010d 00       		.byte	0
 13352 010e 15       		.uleb128 0x15
 13353 010f 0F       		.uleb128 0xf
 13354 0110 00       		.byte	0
 13355 0111 0B       		.uleb128 0xb
 13356 0112 0B       		.uleb128 0xb
 13357 0113 00       		.byte	0
 13358 0114 00       		.byte	0
 13359 0115 16       		.uleb128 0x16
 13360 0116 26       		.uleb128 0x26
 13361 0117 00       		.byte	0
 13362 0118 00       		.byte	0
 13363 0119 00       		.byte	0
 13364 011a 17       		.uleb128 0x17
 13365 011b 05       		.uleb128 0x5
 13366 011c 00       		.byte	0
 13367 011d 03       		.uleb128 0x3
 13368 011e 08       		.uleb128 0x8
 13369 011f 3A       		.uleb128 0x3a
 13370 0120 0B       		.uleb128 0xb
 13371 0121 3B       		.uleb128 0x3b
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 333


 13372 0122 05       		.uleb128 0x5
 13373 0123 49       		.uleb128 0x49
 13374 0124 13       		.uleb128 0x13
 13375 0125 02       		.uleb128 0x2
 13376 0126 18       		.uleb128 0x18
 13377 0127 00       		.byte	0
 13378 0128 00       		.byte	0
 13379 0129 18       		.uleb128 0x18
 13380 012a 05       		.uleb128 0x5
 13381 012b 00       		.byte	0
 13382 012c 03       		.uleb128 0x3
 13383 012d 0E       		.uleb128 0xe
 13384 012e 3A       		.uleb128 0x3a
 13385 012f 0B       		.uleb128 0xb
 13386 0130 3B       		.uleb128 0x3b
 13387 0131 05       		.uleb128 0x5
 13388 0132 49       		.uleb128 0x49
 13389 0133 13       		.uleb128 0x13
 13390 0134 02       		.uleb128 0x2
 13391 0135 17       		.uleb128 0x17
 13392 0136 00       		.byte	0
 13393 0137 00       		.byte	0
 13394 0138 19       		.uleb128 0x19
 13395 0139 898201   		.uleb128 0x4109
 13396 013c 01       		.byte	0x1
 13397 013d 11       		.uleb128 0x11
 13398 013e 01       		.uleb128 0x1
 13399 013f 31       		.uleb128 0x31
 13400 0140 13       		.uleb128 0x13
 13401 0141 01       		.uleb128 0x1
 13402 0142 13       		.uleb128 0x13
 13403 0143 00       		.byte	0
 13404 0144 00       		.byte	0
 13405 0145 1A       		.uleb128 0x1a
 13406 0146 8A8201   		.uleb128 0x410a
 13407 0149 00       		.byte	0
 13408 014a 02       		.uleb128 0x2
 13409 014b 18       		.uleb128 0x18
 13410 014c 9142     		.uleb128 0x2111
 13411 014e 18       		.uleb128 0x18
 13412 014f 00       		.byte	0
 13413 0150 00       		.byte	0
 13414 0151 1B       		.uleb128 0x1b
 13415 0152 898201   		.uleb128 0x4109
 13416 0155 01       		.byte	0x1
 13417 0156 11       		.uleb128 0x11
 13418 0157 01       		.uleb128 0x1
 13419 0158 31       		.uleb128 0x31
 13420 0159 13       		.uleb128 0x13
 13421 015a 00       		.byte	0
 13422 015b 00       		.byte	0
 13423 015c 1C       		.uleb128 0x1c
 13424 015d 898201   		.uleb128 0x4109
 13425 0160 00       		.byte	0
 13426 0161 11       		.uleb128 0x11
 13427 0162 01       		.uleb128 0x1
 13428 0163 31       		.uleb128 0x31
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 334


 13429 0164 13       		.uleb128 0x13
 13430 0165 00       		.byte	0
 13431 0166 00       		.byte	0
 13432 0167 1D       		.uleb128 0x1d
 13433 0168 2E       		.uleb128 0x2e
 13434 0169 01       		.byte	0x1
 13435 016a 03       		.uleb128 0x3
 13436 016b 0E       		.uleb128 0xe
 13437 016c 3A       		.uleb128 0x3a
 13438 016d 0B       		.uleb128 0xb
 13439 016e 3B       		.uleb128 0x3b
 13440 016f 05       		.uleb128 0x5
 13441 0170 27       		.uleb128 0x27
 13442 0171 19       		.uleb128 0x19
 13443 0172 49       		.uleb128 0x49
 13444 0173 13       		.uleb128 0x13
 13445 0174 11       		.uleb128 0x11
 13446 0175 01       		.uleb128 0x1
 13447 0176 12       		.uleb128 0x12
 13448 0177 06       		.uleb128 0x6
 13449 0178 40       		.uleb128 0x40
 13450 0179 18       		.uleb128 0x18
 13451 017a 9642     		.uleb128 0x2116
 13452 017c 19       		.uleb128 0x19
 13453 017d 01       		.uleb128 0x1
 13454 017e 13       		.uleb128 0x13
 13455 017f 00       		.byte	0
 13456 0180 00       		.byte	0
 13457 0181 1E       		.uleb128 0x1e
 13458 0182 34       		.uleb128 0x34
 13459 0183 00       		.byte	0
 13460 0184 03       		.uleb128 0x3
 13461 0185 0E       		.uleb128 0xe
 13462 0186 3A       		.uleb128 0x3a
 13463 0187 0B       		.uleb128 0xb
 13464 0188 3B       		.uleb128 0x3b
 13465 0189 05       		.uleb128 0x5
 13466 018a 49       		.uleb128 0x49
 13467 018b 13       		.uleb128 0x13
 13468 018c 02       		.uleb128 0x2
 13469 018d 17       		.uleb128 0x17
 13470 018e 00       		.byte	0
 13471 018f 00       		.byte	0
 13472 0190 1F       		.uleb128 0x1f
 13473 0191 34       		.uleb128 0x34
 13474 0192 00       		.byte	0
 13475 0193 03       		.uleb128 0x3
 13476 0194 08       		.uleb128 0x8
 13477 0195 3A       		.uleb128 0x3a
 13478 0196 0B       		.uleb128 0xb
 13479 0197 3B       		.uleb128 0x3b
 13480 0198 05       		.uleb128 0x5
 13481 0199 49       		.uleb128 0x49
 13482 019a 13       		.uleb128 0x13
 13483 019b 02       		.uleb128 0x2
 13484 019c 18       		.uleb128 0x18
 13485 019d 00       		.byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 335


 13486 019e 00       		.byte	0
 13487 019f 20       		.uleb128 0x20
 13488 01a0 2E       		.uleb128 0x2e
 13489 01a1 01       		.byte	0x1
 13490 01a2 3F       		.uleb128 0x3f
 13491 01a3 19       		.uleb128 0x19
 13492 01a4 03       		.uleb128 0x3
 13493 01a5 0E       		.uleb128 0xe
 13494 01a6 3A       		.uleb128 0x3a
 13495 01a7 0B       		.uleb128 0xb
 13496 01a8 3B       		.uleb128 0x3b
 13497 01a9 05       		.uleb128 0x5
 13498 01aa 27       		.uleb128 0x27
 13499 01ab 19       		.uleb128 0x19
 13500 01ac 49       		.uleb128 0x49
 13501 01ad 13       		.uleb128 0x13
 13502 01ae 11       		.uleb128 0x11
 13503 01af 01       		.uleb128 0x1
 13504 01b0 12       		.uleb128 0x12
 13505 01b1 06       		.uleb128 0x6
 13506 01b2 40       		.uleb128 0x40
 13507 01b3 18       		.uleb128 0x18
 13508 01b4 9742     		.uleb128 0x2117
 13509 01b6 19       		.uleb128 0x19
 13510 01b7 01       		.uleb128 0x1
 13511 01b8 13       		.uleb128 0x13
 13512 01b9 00       		.byte	0
 13513 01ba 00       		.byte	0
 13514 01bb 21       		.uleb128 0x21
 13515 01bc 2E       		.uleb128 0x2e
 13516 01bd 01       		.byte	0x1
 13517 01be 3F       		.uleb128 0x3f
 13518 01bf 19       		.uleb128 0x19
 13519 01c0 03       		.uleb128 0x3
 13520 01c1 0E       		.uleb128 0xe
 13521 01c2 3A       		.uleb128 0x3a
 13522 01c3 0B       		.uleb128 0xb
 13523 01c4 3B       		.uleb128 0x3b
 13524 01c5 05       		.uleb128 0x5
 13525 01c6 27       		.uleb128 0x27
 13526 01c7 19       		.uleb128 0x19
 13527 01c8 49       		.uleb128 0x49
 13528 01c9 13       		.uleb128 0x13
 13529 01ca 11       		.uleb128 0x11
 13530 01cb 01       		.uleb128 0x1
 13531 01cc 12       		.uleb128 0x12
 13532 01cd 06       		.uleb128 0x6
 13533 01ce 40       		.uleb128 0x40
 13534 01cf 18       		.uleb128 0x18
 13535 01d0 9642     		.uleb128 0x2116
 13536 01d2 19       		.uleb128 0x19
 13537 01d3 01       		.uleb128 0x1
 13538 01d4 13       		.uleb128 0x13
 13539 01d5 00       		.byte	0
 13540 01d6 00       		.byte	0
 13541 01d7 22       		.uleb128 0x22
 13542 01d8 34       		.uleb128 0x34
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 336


 13543 01d9 00       		.byte	0
 13544 01da 03       		.uleb128 0x3
 13545 01db 0E       		.uleb128 0xe
 13546 01dc 3A       		.uleb128 0x3a
 13547 01dd 0B       		.uleb128 0xb
 13548 01de 3B       		.uleb128 0x3b
 13549 01df 05       		.uleb128 0x5
 13550 01e0 49       		.uleb128 0x49
 13551 01e1 13       		.uleb128 0x13
 13552 01e2 02       		.uleb128 0x2
 13553 01e3 18       		.uleb128 0x18
 13554 01e4 00       		.byte	0
 13555 01e5 00       		.byte	0
 13556 01e6 23       		.uleb128 0x23
 13557 01e7 34       		.uleb128 0x34
 13558 01e8 00       		.byte	0
 13559 01e9 03       		.uleb128 0x3
 13560 01ea 0E       		.uleb128 0xe
 13561 01eb 3A       		.uleb128 0x3a
 13562 01ec 0B       		.uleb128 0xb
 13563 01ed 3B       		.uleb128 0x3b
 13564 01ee 05       		.uleb128 0x5
 13565 01ef 49       		.uleb128 0x49
 13566 01f0 13       		.uleb128 0x13
 13567 01f1 1C       		.uleb128 0x1c
 13568 01f2 0A       		.uleb128 0xa
 13569 01f3 00       		.byte	0
 13570 01f4 00       		.byte	0
 13571 01f5 24       		.uleb128 0x24
 13572 01f6 2E       		.uleb128 0x2e
 13573 01f7 00       		.byte	0
 13574 01f8 3F       		.uleb128 0x3f
 13575 01f9 19       		.uleb128 0x19
 13576 01fa 3C       		.uleb128 0x3c
 13577 01fb 19       		.uleb128 0x19
 13578 01fc 6E       		.uleb128 0x6e
 13579 01fd 0E       		.uleb128 0xe
 13580 01fe 03       		.uleb128 0x3
 13581 01ff 0E       		.uleb128 0xe
 13582 0200 3A       		.uleb128 0x3a
 13583 0201 0B       		.uleb128 0xb
 13584 0202 3B       		.uleb128 0x3b
 13585 0203 0B       		.uleb128 0xb
 13586 0204 00       		.byte	0
 13587 0205 00       		.byte	0
 13588 0206 25       		.uleb128 0x25
 13589 0207 2E       		.uleb128 0x2e
 13590 0208 00       		.byte	0
 13591 0209 3F       		.uleb128 0x3f
 13592 020a 19       		.uleb128 0x19
 13593 020b 3C       		.uleb128 0x3c
 13594 020c 19       		.uleb128 0x19
 13595 020d 6E       		.uleb128 0x6e
 13596 020e 0E       		.uleb128 0xe
 13597 020f 03       		.uleb128 0x3
 13598 0210 0E       		.uleb128 0xe
 13599 0211 3A       		.uleb128 0x3a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 337


 13600 0212 0B       		.uleb128 0xb
 13601 0213 3B       		.uleb128 0x3b
 13602 0214 05       		.uleb128 0x5
 13603 0215 00       		.byte	0
 13604 0216 00       		.byte	0
 13605 0217 00       		.byte	0
 13606              		.section	.debug_loc,"",%progbits
 13607              	.Ldebug_loc0:
 13608              	.LLST0:
 13609 0000 00000000 		.4byte	.LVL0
 13610 0004 0A000000 		.4byte	.LVL3
 13611 0008 0100     		.2byte	0x1
 13612 000a 50       		.byte	0x50
 13613 000b 0A000000 		.4byte	.LVL3
 13614 000f 0C000000 		.4byte	.LFE0
 13615 0013 0400     		.2byte	0x4
 13616 0015 F3       		.byte	0xf3
 13617 0016 01       		.uleb128 0x1
 13618 0017 50       		.byte	0x50
 13619 0018 9F       		.byte	0x9f
 13620 0019 00000000 		.4byte	0
 13621 001d 00000000 		.4byte	0
 13622              	.LLST1:
 13623 0021 02000000 		.4byte	.LVL1
 13624 0025 04000000 		.4byte	.LVL2
 13625 0029 0600     		.2byte	0x6
 13626 002b 72       		.byte	0x72
 13627 002c 00       		.sleb128 0
 13628 002d 08       		.byte	0x8
 13629 002e FF       		.byte	0xff
 13630 002f 1A       		.byte	0x1a
 13631 0030 9F       		.byte	0x9f
 13632 0031 04000000 		.4byte	.LVL2
 13633 0035 0A000000 		.4byte	.LVL3
 13634 0039 0800     		.2byte	0x8
 13635 003b 70       		.byte	0x70
 13636 003c 01       		.sleb128 1
 13637 003d 94       		.byte	0x94
 13638 003e 01       		.byte	0x1
 13639 003f 08       		.byte	0x8
 13640 0040 FF       		.byte	0xff
 13641 0041 1A       		.byte	0x1a
 13642 0042 9F       		.byte	0x9f
 13643 0043 0A000000 		.4byte	.LVL3
 13644 0047 0C000000 		.4byte	.LFE0
 13645 004b 0100     		.2byte	0x1
 13646 004d 50       		.byte	0x50
 13647 004e 00000000 		.4byte	0
 13648 0052 00000000 		.4byte	0
 13649              	.LLST2:
 13650 0056 00000000 		.4byte	.LVL4
 13651 005a 12000000 		.4byte	.LVL12
 13652 005e 0100     		.2byte	0x1
 13653 0060 50       		.byte	0x50
 13654 0061 12000000 		.4byte	.LVL12
 13655 0065 16000000 		.4byte	.LFE1
 13656 0069 0400     		.2byte	0x4
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 338


 13657 006b F3       		.byte	0xf3
 13658 006c 01       		.uleb128 0x1
 13659 006d 50       		.byte	0x50
 13660 006e 9F       		.byte	0x9f
 13661 006f 00000000 		.4byte	0
 13662 0073 00000000 		.4byte	0
 13663              	.LLST3:
 13664 0077 02000000 		.4byte	.LVL5
 13665 007b 04000000 		.4byte	.LVL6
 13666 007f 0100     		.2byte	0x1
 13667 0081 53       		.byte	0x53
 13668 0082 04000000 		.4byte	.LVL6
 13669 0086 08000000 		.4byte	.LVL7
 13670 008a 0800     		.2byte	0x8
 13671 008c 70       		.byte	0x70
 13672 008d 03       		.sleb128 3
 13673 008e 94       		.byte	0x94
 13674 008f 01       		.byte	0x1
 13675 0090 08       		.byte	0x8
 13676 0091 FF       		.byte	0xff
 13677 0092 1A       		.byte	0x1a
 13678 0093 9F       		.byte	0x9f
 13679 0094 08000000 		.4byte	.LVL7
 13680 0098 0A000000 		.4byte	.LVL8
 13681 009c 0100     		.2byte	0x1
 13682 009e 53       		.byte	0x53
 13683 009f 0A000000 		.4byte	.LVL8
 13684 00a3 0C000000 		.4byte	.LVL9
 13685 00a7 0D00     		.2byte	0xd
 13686 00a9 70       		.byte	0x70
 13687 00aa 03       		.sleb128 3
 13688 00ab 94       		.byte	0x94
 13689 00ac 01       		.byte	0x1
 13690 00ad 08       		.byte	0x8
 13691 00ae FF       		.byte	0xff
 13692 00af 1A       		.byte	0x1a
 13693 00b0 38       		.byte	0x38
 13694 00b1 24       		.byte	0x24
 13695 00b2 72       		.byte	0x72
 13696 00b3 00       		.sleb128 0
 13697 00b4 21       		.byte	0x21
 13698 00b5 9F       		.byte	0x9f
 13699 00b6 0C000000 		.4byte	.LVL9
 13700 00ba 0E000000 		.4byte	.LVL10
 13701 00be 1200     		.2byte	0x12
 13702 00c0 70       		.byte	0x70
 13703 00c1 03       		.sleb128 3
 13704 00c2 94       		.byte	0x94
 13705 00c3 01       		.byte	0x1
 13706 00c4 08       		.byte	0x8
 13707 00c5 FF       		.byte	0xff
 13708 00c6 1A       		.byte	0x1a
 13709 00c7 38       		.byte	0x38
 13710 00c8 24       		.byte	0x24
 13711 00c9 70       		.byte	0x70
 13712 00ca 02       		.sleb128 2
 13713 00cb 94       		.byte	0x94
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 339


 13714 00cc 01       		.byte	0x1
 13715 00cd 08       		.byte	0x8
 13716 00ce FF       		.byte	0xff
 13717 00cf 1A       		.byte	0x1a
 13718 00d0 21       		.byte	0x21
 13719 00d1 9F       		.byte	0x9f
 13720 00d2 0E000000 		.4byte	.LVL10
 13721 00d6 10000000 		.4byte	.LVL11
 13722 00da 0100     		.2byte	0x1
 13723 00dc 53       		.byte	0x53
 13724 00dd 10000000 		.4byte	.LVL11
 13725 00e1 12000000 		.4byte	.LVL12
 13726 00e5 1700     		.2byte	0x17
 13727 00e7 70       		.byte	0x70
 13728 00e8 03       		.sleb128 3
 13729 00e9 94       		.byte	0x94
 13730 00ea 01       		.byte	0x1
 13731 00eb 08       		.byte	0x8
 13732 00ec FF       		.byte	0xff
 13733 00ed 1A       		.byte	0x1a
 13734 00ee 38       		.byte	0x38
 13735 00ef 24       		.byte	0x24
 13736 00f0 70       		.byte	0x70
 13737 00f1 02       		.sleb128 2
 13738 00f2 94       		.byte	0x94
 13739 00f3 01       		.byte	0x1
 13740 00f4 08       		.byte	0x8
 13741 00f5 FF       		.byte	0xff
 13742 00f6 1A       		.byte	0x1a
 13743 00f7 21       		.byte	0x21
 13744 00f8 38       		.byte	0x38
 13745 00f9 24       		.byte	0x24
 13746 00fa 72       		.byte	0x72
 13747 00fb 00       		.sleb128 0
 13748 00fc 21       		.byte	0x21
 13749 00fd 9F       		.byte	0x9f
 13750 00fe 12000000 		.4byte	.LVL12
 13751 0102 14000000 		.4byte	.LVL13
 13752 0106 1D00     		.2byte	0x1d
 13753 0108 F3       		.byte	0xf3
 13754 0109 01       		.uleb128 0x1
 13755 010a 50       		.byte	0x50
 13756 010b 23       		.byte	0x23
 13757 010c 03       		.uleb128 0x3
 13758 010d 94       		.byte	0x94
 13759 010e 01       		.byte	0x1
 13760 010f 08       		.byte	0x8
 13761 0110 FF       		.byte	0xff
 13762 0111 1A       		.byte	0x1a
 13763 0112 38       		.byte	0x38
 13764 0113 24       		.byte	0x24
 13765 0114 F3       		.byte	0xf3
 13766 0115 01       		.uleb128 0x1
 13767 0116 50       		.byte	0x50
 13768 0117 23       		.byte	0x23
 13769 0118 02       		.uleb128 0x2
 13770 0119 94       		.byte	0x94
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 340


 13771 011a 01       		.byte	0x1
 13772 011b 08       		.byte	0x8
 13773 011c FF       		.byte	0xff
 13774 011d 1A       		.byte	0x1a
 13775 011e 21       		.byte	0x21
 13776 011f 38       		.byte	0x38
 13777 0120 24       		.byte	0x24
 13778 0121 72       		.byte	0x72
 13779 0122 00       		.sleb128 0
 13780 0123 21       		.byte	0x21
 13781 0124 9F       		.byte	0x9f
 13782 0125 14000000 		.4byte	.LVL13
 13783 0129 16000000 		.4byte	.LFE1
 13784 012d 0100     		.2byte	0x1
 13785 012f 50       		.byte	0x50
 13786 0130 00000000 		.4byte	0
 13787 0134 00000000 		.4byte	0
 13788              	.LLST4:
 13789 0138 00000000 		.4byte	.LVL14
 13790 013c 00000000 		.4byte	.LVL14
 13791 0140 0100     		.2byte	0x1
 13792 0142 50       		.byte	0x50
 13793 0143 00000000 		.4byte	.LVL14
 13794 0147 02000000 		.4byte	.LVL15
 13795 014b 0300     		.2byte	0x3
 13796 014d 70       		.byte	0x70
 13797 014e 01       		.sleb128 1
 13798 014f 9F       		.byte	0x9f
 13799 0150 02000000 		.4byte	.LVL15
 13800 0154 08000000 		.4byte	.LFE2
 13801 0158 0300     		.2byte	0x3
 13802 015a 70       		.byte	0x70
 13803 015b 02       		.sleb128 2
 13804 015c 9F       		.byte	0x9f
 13805 015d 00000000 		.4byte	0
 13806 0161 00000000 		.4byte	0
 13807              	.LLST5:
 13808 0165 00000000 		.4byte	.LVL14
 13809 0169 02000000 		.4byte	.LVL15
 13810 016d 0100     		.2byte	0x1
 13811 016f 51       		.byte	0x51
 13812 0170 02000000 		.4byte	.LVL15
 13813 0174 04000000 		.4byte	.LVL16
 13814 0178 0500     		.2byte	0x5
 13815 017a 71       		.byte	0x71
 13816 017b 00       		.sleb128 0
 13817 017c 38       		.byte	0x38
 13818 017d 25       		.byte	0x25
 13819 017e 9F       		.byte	0x9f
 13820 017f 00000000 		.4byte	0
 13821 0183 00000000 		.4byte	0
 13822              	.LLST6:
 13823 0187 00000000 		.4byte	.LVL17
 13824 018b 00000000 		.4byte	.LVL17
 13825 018f 0100     		.2byte	0x1
 13826 0191 50       		.byte	0x50
 13827 0192 00000000 		.4byte	.LVL17
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 341


 13828 0196 04000000 		.4byte	.LVL18
 13829 019a 0300     		.2byte	0x3
 13830 019c 70       		.byte	0x70
 13831 019d 01       		.sleb128 1
 13832 019e 9F       		.byte	0x9f
 13833 019f 04000000 		.4byte	.LVL18
 13834 01a3 08000000 		.4byte	.LVL19
 13835 01a7 0300     		.2byte	0x3
 13836 01a9 70       		.byte	0x70
 13837 01aa 02       		.sleb128 2
 13838 01ab 9F       		.byte	0x9f
 13839 01ac 08000000 		.4byte	.LVL19
 13840 01b0 0A000000 		.4byte	.LVL20
 13841 01b4 0300     		.2byte	0x3
 13842 01b6 70       		.byte	0x70
 13843 01b7 03       		.sleb128 3
 13844 01b8 9F       		.byte	0x9f
 13845 01b9 0A000000 		.4byte	.LVL20
 13846 01bd 10000000 		.4byte	.LFE3
 13847 01c1 0300     		.2byte	0x3
 13848 01c3 70       		.byte	0x70
 13849 01c4 04       		.sleb128 4
 13850 01c5 9F       		.byte	0x9f
 13851 01c6 00000000 		.4byte	0
 13852 01ca 00000000 		.4byte	0
 13853              	.LLST7:
 13854 01ce 00000000 		.4byte	.LVL17
 13855 01d2 04000000 		.4byte	.LVL18
 13856 01d6 0100     		.2byte	0x1
 13857 01d8 51       		.byte	0x51
 13858 01d9 04000000 		.4byte	.LVL18
 13859 01dd 0A000000 		.4byte	.LVL20
 13860 01e1 0100     		.2byte	0x1
 13861 01e3 53       		.byte	0x53
 13862 01e4 0A000000 		.4byte	.LVL20
 13863 01e8 0C000000 		.4byte	.LVL21
 13864 01ec 0500     		.2byte	0x5
 13865 01ee 71       		.byte	0x71
 13866 01ef 00       		.sleb128 0
 13867 01f0 48       		.byte	0x48
 13868 01f1 25       		.byte	0x25
 13869 01f2 9F       		.byte	0x9f
 13870 01f3 0C000000 		.4byte	.LVL21
 13871 01f7 10000000 		.4byte	.LFE3
 13872 01fb 0100     		.2byte	0x1
 13873 01fd 51       		.byte	0x51
 13874 01fe 00000000 		.4byte	0
 13875 0202 00000000 		.4byte	0
 13876              	.LLST8:
 13877 0206 00000000 		.4byte	.LVL22
 13878 020a 04000000 		.4byte	.LVL23
 13879 020e 0100     		.2byte	0x1
 13880 0210 50       		.byte	0x50
 13881 0211 04000000 		.4byte	.LVL23
 13882 0215 14000000 		.4byte	.LFE4
 13883 0219 0400     		.2byte	0x4
 13884 021b F3       		.byte	0xf3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 342


 13885 021c 01       		.uleb128 0x1
 13886 021d 50       		.byte	0x50
 13887 021e 9F       		.byte	0x9f
 13888 021f 00000000 		.4byte	0
 13889 0223 00000000 		.4byte	0
 13890              	.LLST9:
 13891 0227 00000000 		.4byte	.LVL22
 13892 022b 04000000 		.4byte	.LVL23
 13893 022f 0100     		.2byte	0x1
 13894 0231 51       		.byte	0x51
 13895 0232 04000000 		.4byte	.LVL23
 13896 0236 14000000 		.4byte	.LFE4
 13897 023a 0400     		.2byte	0x4
 13898 023c F3       		.byte	0xf3
 13899 023d 01       		.uleb128 0x1
 13900 023e 51       		.byte	0x51
 13901 023f 9F       		.byte	0x9f
 13902 0240 00000000 		.4byte	0
 13903 0244 00000000 		.4byte	0
 13904              	.LLST10:
 13905 0248 00000000 		.4byte	.LVL22
 13906 024c 0A000000 		.4byte	.LVL24
 13907 0250 0100     		.2byte	0x1
 13908 0252 52       		.byte	0x52
 13909 0253 0A000000 		.4byte	.LVL24
 13910 0257 14000000 		.4byte	.LFE4
 13911 025b 0100     		.2byte	0x1
 13912 025d 52       		.byte	0x52
 13913 025e 00000000 		.4byte	0
 13914 0262 00000000 		.4byte	0
 13915              	.LLST11:
 13916 0266 00000000 		.4byte	.LVL22
 13917 026a 04000000 		.4byte	.LVL23
 13918 026e 0100     		.2byte	0x1
 13919 0270 50       		.byte	0x50
 13920 0271 04000000 		.4byte	.LVL23
 13921 0275 0C000000 		.4byte	.LVL25
 13922 0279 0300     		.2byte	0x3
 13923 027b 70       		.byte	0x70
 13924 027c 01       		.sleb128 1
 13925 027d 9F       		.byte	0x9f
 13926 027e 0C000000 		.4byte	.LVL25
 13927 0282 14000000 		.4byte	.LFE4
 13928 0286 0100     		.2byte	0x1
 13929 0288 50       		.byte	0x50
 13930 0289 00000000 		.4byte	0
 13931 028d 00000000 		.4byte	0
 13932              	.LLST12:
 13933 0291 00000000 		.4byte	.LVL22
 13934 0295 04000000 		.4byte	.LVL23
 13935 0299 0100     		.2byte	0x1
 13936 029b 51       		.byte	0x51
 13937 029c 04000000 		.4byte	.LVL23
 13938 02a0 0E000000 		.4byte	.LVL26
 13939 02a4 0300     		.2byte	0x3
 13940 02a6 71       		.byte	0x71
 13941 02a7 01       		.sleb128 1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 343


 13942 02a8 9F       		.byte	0x9f
 13943 02a9 0E000000 		.4byte	.LVL26
 13944 02ad 14000000 		.4byte	.LFE4
 13945 02b1 0100     		.2byte	0x1
 13946 02b3 51       		.byte	0x51
 13947 02b4 00000000 		.4byte	0
 13948 02b8 00000000 		.4byte	0
 13949              	.LLST13:
 13950 02bc 00000000 		.4byte	.LVL27
 13951 02c0 00000000 		.4byte	.LVL27
 13952 02c4 0100     		.2byte	0x1
 13953 02c6 52       		.byte	0x52
 13954 02c7 00000000 		.4byte	.LVL27
 13955 02cb 04000000 		.4byte	.LVL28
 13956 02cf 0400     		.2byte	0x4
 13957 02d1 F3       		.byte	0xf3
 13958 02d2 01       		.uleb128 0x1
 13959 02d3 52       		.byte	0x52
 13960 02d4 9F       		.byte	0x9f
 13961 02d5 04000000 		.4byte	.LVL28
 13962 02d9 0C000000 		.4byte	.LFE5
 13963 02dd 0100     		.2byte	0x1
 13964 02df 52       		.byte	0x52
 13965 02e0 00000000 		.4byte	0
 13966 02e4 00000000 		.4byte	0
 13967              	.LLST14:
 13968 02e8 00000000 		.4byte	.LVL27
 13969 02ec 06000000 		.4byte	.LVL29
 13970 02f0 0600     		.2byte	0x6
 13971 02f2 F3       		.byte	0xf3
 13972 02f3 01       		.uleb128 0x1
 13973 02f4 50       		.byte	0x50
 13974 02f5 23       		.byte	0x23
 13975 02f6 01       		.uleb128 0x1
 13976 02f7 9F       		.byte	0x9f
 13977 02f8 06000000 		.4byte	.LVL29
 13978 02fc 0C000000 		.4byte	.LFE5
 13979 0300 0100     		.2byte	0x1
 13980 0302 50       		.byte	0x50
 13981 0303 00000000 		.4byte	0
 13982 0307 00000000 		.4byte	0
 13983              	.LLST15:
 13984 030b 00000000 		.4byte	.LVL30
 13985 030f 04000000 		.4byte	.LVL31
 13986 0313 0100     		.2byte	0x1
 13987 0315 50       		.byte	0x50
 13988 0316 04000000 		.4byte	.LVL31
 13989 031a 1E000000 		.4byte	.LFE6
 13990 031e 0400     		.2byte	0x4
 13991 0320 F3       		.byte	0xf3
 13992 0321 01       		.uleb128 0x1
 13993 0322 50       		.byte	0x50
 13994 0323 9F       		.byte	0x9f
 13995 0324 00000000 		.4byte	0
 13996 0328 00000000 		.4byte	0
 13997              	.LLST16:
 13998 032c 00000000 		.4byte	.LVL30
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 344


 13999 0330 04000000 		.4byte	.LVL31
 14000 0334 0100     		.2byte	0x1
 14001 0336 51       		.byte	0x51
 14002 0337 04000000 		.4byte	.LVL31
 14003 033b 1E000000 		.4byte	.LFE6
 14004 033f 0400     		.2byte	0x4
 14005 0341 F3       		.byte	0xf3
 14006 0342 01       		.uleb128 0x1
 14007 0343 51       		.byte	0x51
 14008 0344 9F       		.byte	0x9f
 14009 0345 00000000 		.4byte	0
 14010 0349 00000000 		.4byte	0
 14011              	.LLST17:
 14012 034d 00000000 		.4byte	.LVL30
 14013 0351 10000000 		.4byte	.LVL35
 14014 0355 0100     		.2byte	0x1
 14015 0357 52       		.byte	0x52
 14016 0358 10000000 		.4byte	.LVL35
 14017 035c 1E000000 		.4byte	.LFE6
 14018 0360 0100     		.2byte	0x1
 14019 0362 52       		.byte	0x52
 14020 0363 00000000 		.4byte	0
 14021 0367 00000000 		.4byte	0
 14022              	.LLST18:
 14023 036b 04000000 		.4byte	.LVL31
 14024 036f 06000000 		.4byte	.LVL32
 14025 0373 0100     		.2byte	0x1
 14026 0375 53       		.byte	0x53
 14027 0376 06000000 		.4byte	.LVL32
 14028 037a 1C000000 		.4byte	.LVL37
 14029 037e 0100     		.2byte	0x1
 14030 0380 55       		.byte	0x55
 14031 0381 00000000 		.4byte	0
 14032 0385 00000000 		.4byte	0
 14033              	.LLST19:
 14034 0389 04000000 		.4byte	.LVL31
 14035 038d 0A000000 		.4byte	.LVL33
 14036 0391 0100     		.2byte	0x1
 14037 0393 51       		.byte	0x51
 14038 0394 0A000000 		.4byte	.LVL33
 14039 0398 1C000000 		.4byte	.LVL36
 14040 039c 0100     		.2byte	0x1
 14041 039e 54       		.byte	0x54
 14042 039f 00000000 		.4byte	0
 14043 03a3 00000000 		.4byte	0
 14044              	.LLST20:
 14045 03a7 0E000000 		.4byte	.LVL34
 14046 03ab 1E000000 		.4byte	.LFE6
 14047 03af 0100     		.2byte	0x1
 14048 03b1 50       		.byte	0x50
 14049 03b2 00000000 		.4byte	0
 14050 03b6 00000000 		.4byte	0
 14051              	.LLST21:
 14052 03ba 00000000 		.4byte	.LVL38
 14053 03be 04000000 		.4byte	.LVL39
 14054 03c2 0100     		.2byte	0x1
 14055 03c4 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 345


 14056 03c5 04000000 		.4byte	.LVL39
 14057 03c9 10000000 		.4byte	.LVL40
 14058 03cd 0100     		.2byte	0x1
 14059 03cf 50       		.byte	0x50
 14060 03d0 00000000 		.4byte	0
 14061 03d4 00000000 		.4byte	0
 14062              	.LLST22:
 14063 03d8 00000000 		.4byte	.LVL41
 14064 03dc 12000000 		.4byte	.LVL42
 14065 03e0 0100     		.2byte	0x1
 14066 03e2 50       		.byte	0x50
 14067 03e3 12000000 		.4byte	.LVL42
 14068 03e7 14000000 		.4byte	.LVL43
 14069 03eb 0400     		.2byte	0x4
 14070 03ed F3       		.byte	0xf3
 14071 03ee 01       		.uleb128 0x1
 14072 03ef 50       		.byte	0x50
 14073 03f0 9F       		.byte	0x9f
 14074 03f1 14000000 		.4byte	.LVL43
 14075 03f5 16000000 		.4byte	.LVL44
 14076 03f9 0100     		.2byte	0x1
 14077 03fb 50       		.byte	0x50
 14078 03fc 16000000 		.4byte	.LVL44
 14079 0400 18000000 		.4byte	.LVL45
 14080 0404 0400     		.2byte	0x4
 14081 0406 F3       		.byte	0xf3
 14082 0407 01       		.uleb128 0x1
 14083 0408 50       		.byte	0x50
 14084 0409 9F       		.byte	0x9f
 14085 040a 18000000 		.4byte	.LVL45
 14086 040e 1A000000 		.4byte	.LVL46
 14087 0412 0100     		.2byte	0x1
 14088 0414 50       		.byte	0x50
 14089 0415 1A000000 		.4byte	.LVL46
 14090 0419 1C000000 		.4byte	.LVL47
 14091 041d 0400     		.2byte	0x4
 14092 041f F3       		.byte	0xf3
 14093 0420 01       		.uleb128 0x1
 14094 0421 50       		.byte	0x50
 14095 0422 9F       		.byte	0x9f
 14096 0423 1C000000 		.4byte	.LVL47
 14097 0427 1E000000 		.4byte	.LVL48
 14098 042b 0100     		.2byte	0x1
 14099 042d 50       		.byte	0x50
 14100 042e 1E000000 		.4byte	.LVL48
 14101 0432 20000000 		.4byte	.LVL49
 14102 0436 0400     		.2byte	0x4
 14103 0438 F3       		.byte	0xf3
 14104 0439 01       		.uleb128 0x1
 14105 043a 50       		.byte	0x50
 14106 043b 9F       		.byte	0x9f
 14107 043c 20000000 		.4byte	.LVL49
 14108 0440 22000000 		.4byte	.LVL50
 14109 0444 0100     		.2byte	0x1
 14110 0446 50       		.byte	0x50
 14111 0447 22000000 		.4byte	.LVL50
 14112 044b 24000000 		.4byte	.LFE8
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 346


 14113 044f 0400     		.2byte	0x4
 14114 0451 F3       		.byte	0xf3
 14115 0452 01       		.uleb128 0x1
 14116 0453 50       		.byte	0x50
 14117 0454 9F       		.byte	0x9f
 14118 0455 00000000 		.4byte	0
 14119 0459 00000000 		.4byte	0
 14120              	.LLST23:
 14121 045d 00000000 		.4byte	.LVL51
 14122 0461 16000000 		.4byte	.LVL52
 14123 0465 0100     		.2byte	0x1
 14124 0467 50       		.byte	0x50
 14125 0468 16000000 		.4byte	.LVL52
 14126 046c 18000000 		.4byte	.LVL53
 14127 0470 0400     		.2byte	0x4
 14128 0472 F3       		.byte	0xf3
 14129 0473 01       		.uleb128 0x1
 14130 0474 50       		.byte	0x50
 14131 0475 9F       		.byte	0x9f
 14132 0476 18000000 		.4byte	.LVL53
 14133 047a 1A000000 		.4byte	.LVL54
 14134 047e 0100     		.2byte	0x1
 14135 0480 50       		.byte	0x50
 14136 0481 1A000000 		.4byte	.LVL54
 14137 0485 1C000000 		.4byte	.LVL55
 14138 0489 0400     		.2byte	0x4
 14139 048b F3       		.byte	0xf3
 14140 048c 01       		.uleb128 0x1
 14141 048d 50       		.byte	0x50
 14142 048e 9F       		.byte	0x9f
 14143 048f 1C000000 		.4byte	.LVL55
 14144 0493 1E000000 		.4byte	.LVL56
 14145 0497 0100     		.2byte	0x1
 14146 0499 50       		.byte	0x50
 14147 049a 1E000000 		.4byte	.LVL56
 14148 049e 20000000 		.4byte	.LVL57
 14149 04a2 0400     		.2byte	0x4
 14150 04a4 F3       		.byte	0xf3
 14151 04a5 01       		.uleb128 0x1
 14152 04a6 50       		.byte	0x50
 14153 04a7 9F       		.byte	0x9f
 14154 04a8 20000000 		.4byte	.LVL57
 14155 04ac 22000000 		.4byte	.LVL58
 14156 04b0 0100     		.2byte	0x1
 14157 04b2 50       		.byte	0x50
 14158 04b3 22000000 		.4byte	.LVL58
 14159 04b7 24000000 		.4byte	.LVL59
 14160 04bb 0400     		.2byte	0x4
 14161 04bd F3       		.byte	0xf3
 14162 04be 01       		.uleb128 0x1
 14163 04bf 50       		.byte	0x50
 14164 04c0 9F       		.byte	0x9f
 14165 04c1 24000000 		.4byte	.LVL59
 14166 04c5 26000000 		.4byte	.LVL60
 14167 04c9 0100     		.2byte	0x1
 14168 04cb 50       		.byte	0x50
 14169 04cc 26000000 		.4byte	.LVL60
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 347


 14170 04d0 28000000 		.4byte	.LFE9
 14171 04d4 0400     		.2byte	0x4
 14172 04d6 F3       		.byte	0xf3
 14173 04d7 01       		.uleb128 0x1
 14174 04d8 50       		.byte	0x50
 14175 04d9 9F       		.byte	0x9f
 14176 04da 00000000 		.4byte	0
 14177 04de 00000000 		.4byte	0
 14178              	.LLST24:
 14179 04e2 00000000 		.4byte	.LVL61
 14180 04e6 0E000000 		.4byte	.LVL63
 14181 04ea 0100     		.2byte	0x1
 14182 04ec 50       		.byte	0x50
 14183 04ed 0E000000 		.4byte	.LVL63
 14184 04f1 14000000 		.4byte	.LVL65
 14185 04f5 0400     		.2byte	0x4
 14186 04f7 F3       		.byte	0xf3
 14187 04f8 01       		.uleb128 0x1
 14188 04f9 50       		.byte	0x50
 14189 04fa 9F       		.byte	0x9f
 14190 04fb 14000000 		.4byte	.LVL65
 14191 04ff 16000000 		.4byte	.LVL66
 14192 0503 0100     		.2byte	0x1
 14193 0505 50       		.byte	0x50
 14194 0506 16000000 		.4byte	.LVL66
 14195 050a 18000000 		.4byte	.LFE13
 14196 050e 0400     		.2byte	0x4
 14197 0510 F3       		.byte	0xf3
 14198 0511 01       		.uleb128 0x1
 14199 0512 50       		.byte	0x50
 14200 0513 9F       		.byte	0x9f
 14201 0514 00000000 		.4byte	0
 14202 0518 00000000 		.4byte	0
 14203              	.LLST25:
 14204 051c 00000000 		.4byte	.LVL61
 14205 0520 02000000 		.4byte	.LVL62
 14206 0524 0100     		.2byte	0x1
 14207 0526 51       		.byte	0x51
 14208 0527 02000000 		.4byte	.LVL62
 14209 052b 10000000 		.4byte	.LVL64
 14210 052f 0100     		.2byte	0x1
 14211 0531 51       		.byte	0x51
 14212 0532 10000000 		.4byte	.LVL64
 14213 0536 14000000 		.4byte	.LVL65
 14214 053a 0600     		.2byte	0x6
 14215 053c F3       		.byte	0xf3
 14216 053d 01       		.uleb128 0x1
 14217 053e 51       		.byte	0x51
 14218 053f 32       		.byte	0x32
 14219 0540 1C       		.byte	0x1c
 14220 0541 9F       		.byte	0x9f
 14221 0542 14000000 		.4byte	.LVL65
 14222 0546 16000000 		.4byte	.LVL66
 14223 054a 0100     		.2byte	0x1
 14224 054c 51       		.byte	0x51
 14225 054d 16000000 		.4byte	.LVL66
 14226 0551 18000000 		.4byte	.LFE13
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 348


 14227 0555 0600     		.2byte	0x6
 14228 0557 F3       		.byte	0xf3
 14229 0558 01       		.uleb128 0x1
 14230 0559 51       		.byte	0x51
 14231 055a 32       		.byte	0x32
 14232 055b 1C       		.byte	0x1c
 14233 055c 9F       		.byte	0x9f
 14234 055d 00000000 		.4byte	0
 14235 0561 00000000 		.4byte	0
 14236              	.LLST26:
 14237 0565 00000000 		.4byte	.LVL67
 14238 0569 08000000 		.4byte	.LVL68
 14239 056d 0100     		.2byte	0x1
 14240 056f 50       		.byte	0x50
 14241 0570 08000000 		.4byte	.LVL68
 14242 0574 22000000 		.4byte	.LVL75
 14243 0578 0100     		.2byte	0x1
 14244 057a 56       		.byte	0x56
 14245 057b 22000000 		.4byte	.LVL75
 14246 057f 24000000 		.4byte	.LFE22
 14247 0583 0400     		.2byte	0x4
 14248 0585 F3       		.byte	0xf3
 14249 0586 01       		.uleb128 0x1
 14250 0587 50       		.byte	0x50
 14251 0588 9F       		.byte	0x9f
 14252 0589 00000000 		.4byte	0
 14253 058d 00000000 		.4byte	0
 14254              	.LLST27:
 14255 0591 00000000 		.4byte	.LVL67
 14256 0595 0D000000 		.4byte	.LVL69-1
 14257 0599 0100     		.2byte	0x1
 14258 059b 51       		.byte	0x51
 14259 059c 0D000000 		.4byte	.LVL69-1
 14260 05a0 22000000 		.4byte	.LVL74
 14261 05a4 0100     		.2byte	0x1
 14262 05a6 55       		.byte	0x55
 14263 05a7 22000000 		.4byte	.LVL74
 14264 05ab 24000000 		.4byte	.LFE22
 14265 05af 0400     		.2byte	0x4
 14266 05b1 F3       		.byte	0xf3
 14267 05b2 01       		.uleb128 0x1
 14268 05b3 51       		.byte	0x51
 14269 05b4 9F       		.byte	0x9f
 14270 05b5 00000000 		.4byte	0
 14271 05b9 00000000 		.4byte	0
 14272              	.LLST28:
 14273 05bd 10000000 		.4byte	.LVL70
 14274 05c1 18000000 		.4byte	.LVL71
 14275 05c5 0100     		.2byte	0x1
 14276 05c7 50       		.byte	0x50
 14277 05c8 18000000 		.4byte	.LVL71
 14278 05cc 22000000 		.4byte	.LVL73
 14279 05d0 0100     		.2byte	0x1
 14280 05d2 54       		.byte	0x54
 14281 05d3 22000000 		.4byte	.LVL73
 14282 05d7 24000000 		.4byte	.LFE22
 14283 05db 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 349


 14284 05dd 50       		.byte	0x50
 14285 05de 00000000 		.4byte	0
 14286 05e2 00000000 		.4byte	0
 14287              	.LLST29:
 14288 05e6 00000000 		.4byte	.LVL76
 14289 05ea 0C000000 		.4byte	.LVL78
 14290 05ee 0100     		.2byte	0x1
 14291 05f0 50       		.byte	0x50
 14292 05f1 0C000000 		.4byte	.LVL78
 14293 05f5 22000000 		.4byte	.LVL83
 14294 05f9 0100     		.2byte	0x1
 14295 05fb 56       		.byte	0x56
 14296 05fc 22000000 		.4byte	.LVL83
 14297 0600 24000000 		.4byte	.LFE23
 14298 0604 0400     		.2byte	0x4
 14299 0606 F3       		.byte	0xf3
 14300 0607 01       		.uleb128 0x1
 14301 0608 50       		.byte	0x50
 14302 0609 9F       		.byte	0x9f
 14303 060a 00000000 		.4byte	0
 14304 060e 00000000 		.4byte	0
 14305              	.LLST30:
 14306 0612 00000000 		.4byte	.LVL76
 14307 0616 0A000000 		.4byte	.LVL77
 14308 061a 0100     		.2byte	0x1
 14309 061c 51       		.byte	0x51
 14310 061d 0A000000 		.4byte	.LVL77
 14311 0621 22000000 		.4byte	.LVL81
 14312 0625 0100     		.2byte	0x1
 14313 0627 54       		.byte	0x54
 14314 0628 22000000 		.4byte	.LVL81
 14315 062c 24000000 		.4byte	.LFE23
 14316 0630 0400     		.2byte	0x4
 14317 0632 F3       		.byte	0xf3
 14318 0633 01       		.uleb128 0x1
 14319 0634 51       		.byte	0x51
 14320 0635 9F       		.byte	0x9f
 14321 0636 00000000 		.4byte	0
 14322 063a 00000000 		.4byte	0
 14323              	.LLST31:
 14324 063e 00000000 		.4byte	.LVL76
 14325 0642 11000000 		.4byte	.LVL79-1
 14326 0646 0100     		.2byte	0x1
 14327 0648 52       		.byte	0x52
 14328 0649 11000000 		.4byte	.LVL79-1
 14329 064d 22000000 		.4byte	.LVL82
 14330 0651 0100     		.2byte	0x1
 14331 0653 55       		.byte	0x55
 14332 0654 22000000 		.4byte	.LVL82
 14333 0658 24000000 		.4byte	.LFE23
 14334 065c 0400     		.2byte	0x4
 14335 065e F3       		.byte	0xf3
 14336 065f 01       		.uleb128 0x1
 14337 0660 52       		.byte	0x52
 14338 0661 9F       		.byte	0x9f
 14339 0662 00000000 		.4byte	0
 14340 0666 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 350


 14341              	.LLST32:
 14342 066a 00000000 		.4byte	.LVL84
 14343 066e 16000000 		.4byte	.LVL86
 14344 0672 0100     		.2byte	0x1
 14345 0674 50       		.byte	0x50
 14346 0675 16000000 		.4byte	.LVL86
 14347 0679 68000000 		.4byte	.LVL99
 14348 067d 0100     		.2byte	0x1
 14349 067f 54       		.byte	0x54
 14350 0680 68000000 		.4byte	.LVL99
 14351 0684 6A000000 		.4byte	.LFE28
 14352 0688 0400     		.2byte	0x4
 14353 068a F3       		.byte	0xf3
 14354 068b 01       		.uleb128 0x1
 14355 068c 50       		.byte	0x50
 14356 068d 9F       		.byte	0x9f
 14357 068e 00000000 		.4byte	0
 14358 0692 00000000 		.4byte	0
 14359              	.LLST33:
 14360 0696 00000000 		.4byte	.LVL84
 14361 069a 12000000 		.4byte	.LVL85
 14362 069e 0100     		.2byte	0x1
 14363 06a0 51       		.byte	0x51
 14364 06a1 12000000 		.4byte	.LVL85
 14365 06a5 68000000 		.4byte	.LVL100
 14366 06a9 0100     		.2byte	0x1
 14367 06ab 55       		.byte	0x55
 14368 06ac 68000000 		.4byte	.LVL100
 14369 06b0 6A000000 		.4byte	.LFE28
 14370 06b4 0400     		.2byte	0x4
 14371 06b6 F3       		.byte	0xf3
 14372 06b7 01       		.uleb128 0x1
 14373 06b8 51       		.byte	0x51
 14374 06b9 9F       		.byte	0x9f
 14375 06ba 00000000 		.4byte	0
 14376 06be 00000000 		.4byte	0
 14377              	.LLST34:
 14378 06c2 16000000 		.4byte	.LVL86
 14379 06c6 18000000 		.4byte	.LVL87
 14380 06ca 0100     		.2byte	0x1
 14381 06cc 53       		.byte	0x53
 14382 06cd 18000000 		.4byte	.LVL87
 14383 06d1 3A000000 		.4byte	.LVL93
 14384 06d5 0100     		.2byte	0x1
 14385 06d7 52       		.byte	0x52
 14386 06d8 3A000000 		.4byte	.LVL93
 14387 06dc 42000000 		.4byte	.LVL95
 14388 06e0 0100     		.2byte	0x1
 14389 06e2 53       		.byte	0x53
 14390 06e3 00000000 		.4byte	0
 14391 06e7 00000000 		.4byte	0
 14392              	.LLST35:
 14393 06eb 16000000 		.4byte	.LVL86
 14394 06ef 2A000000 		.4byte	.LVL90
 14395 06f3 0100     		.2byte	0x1
 14396 06f5 51       		.byte	0x51
 14397 06f6 2A000000 		.4byte	.LVL90
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 351


 14398 06fa 38000000 		.4byte	.LVL92
 14399 06fe 0300     		.2byte	0x3
 14400 0700 71       		.byte	0x71
 14401 0701 01       		.sleb128 1
 14402 0702 9F       		.byte	0x9f
 14403 0703 38000000 		.4byte	.LVL92
 14404 0707 40000000 		.4byte	.LVL94
 14405 070b 0100     		.2byte	0x1
 14406 070d 51       		.byte	0x51
 14407 070e 00000000 		.4byte	0
 14408 0712 00000000 		.4byte	0
 14409              	.LLST36:
 14410 0716 1C000000 		.4byte	.LVL88
 14411 071a 3A000000 		.4byte	.LVL93
 14412 071e 0100     		.2byte	0x1
 14413 0720 53       		.byte	0x53
 14414 0721 00000000 		.4byte	0
 14415 0725 00000000 		.4byte	0
 14416              	.LLST37:
 14417 0729 00000000 		.4byte	.LVL101
 14418 072d 26000000 		.4byte	.LVL106
 14419 0731 0100     		.2byte	0x1
 14420 0733 50       		.byte	0x50
 14421 0734 26000000 		.4byte	.LVL106
 14422 0738 1C010000 		.4byte	.LFE29
 14423 073c 0200     		.2byte	0x2
 14424 073e 91       		.byte	0x91
 14425 073f 54       		.sleb128 -44
 14426 0740 00000000 		.4byte	0
 14427 0744 00000000 		.4byte	0
 14428              	.LLST38:
 14429 0748 00000000 		.4byte	.LVL101
 14430 074c 24000000 		.4byte	.LVL105
 14431 0750 0100     		.2byte	0x1
 14432 0752 51       		.byte	0x51
 14433 0753 24000000 		.4byte	.LVL105
 14434 0757 CE000000 		.4byte	.LVL134
 14435 075b 0100     		.2byte	0x1
 14436 075d 5A       		.byte	0x5a
 14437 075e CE000000 		.4byte	.LVL134
 14438 0762 D0000000 		.4byte	.LVL135
 14439 0766 0100     		.2byte	0x1
 14440 0768 53       		.byte	0x53
 14441 0769 D0000000 		.4byte	.LVL135
 14442 076d 08010000 		.4byte	.LVL139
 14443 0771 0100     		.2byte	0x1
 14444 0773 5A       		.byte	0x5a
 14445 0774 08010000 		.4byte	.LVL139
 14446 0778 0A010000 		.4byte	.LVL140
 14447 077c 0100     		.2byte	0x1
 14448 077e 53       		.byte	0x53
 14449 077f 0A010000 		.4byte	.LVL140
 14450 0783 0C010000 		.4byte	.LVL145
 14451 0787 0100     		.2byte	0x1
 14452 0789 5A       		.byte	0x5a
 14453 078a 0C010000 		.4byte	.LVL145
 14454 078e 1C010000 		.4byte	.LFE29
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 352


 14455 0792 0400     		.2byte	0x4
 14456 0794 F3       		.byte	0xf3
 14457 0795 01       		.uleb128 0x1
 14458 0796 51       		.byte	0x51
 14459 0797 9F       		.byte	0x9f
 14460 0798 00000000 		.4byte	0
 14461 079c 00000000 		.4byte	0
 14462              	.LLST39:
 14463 07a0 38000000 		.4byte	.LVL110
 14464 07a4 B8000000 		.4byte	.LVL130
 14465 07a8 0100     		.2byte	0x1
 14466 07aa 54       		.byte	0x54
 14467 07ab B8000000 		.4byte	.LVL130
 14468 07af BA000000 		.4byte	.LVL131
 14469 07b3 0300     		.2byte	0x3
 14470 07b5 74       		.byte	0x74
 14471 07b6 20       		.sleb128 32
 14472 07b7 9F       		.byte	0x9f
 14473 07b8 BA000000 		.4byte	.LVL131
 14474 07bc 0C010000 		.4byte	.LVL141
 14475 07c0 0100     		.2byte	0x1
 14476 07c2 54       		.byte	0x54
 14477 07c3 00000000 		.4byte	0
 14478 07c7 00000000 		.4byte	0
 14479              	.LLST40:
 14480 07cb 82000000 		.4byte	.LVL123
 14481 07cf A0000000 		.4byte	.LVL128
 14482 07d3 0100     		.2byte	0x1
 14483 07d5 55       		.byte	0x55
 14484 07d6 FC000000 		.4byte	.LVL137
 14485 07da 04010000 		.4byte	.LVL138
 14486 07de 0100     		.2byte	0x1
 14487 07e0 55       		.byte	0x55
 14488 07e1 00000000 		.4byte	0
 14489 07e5 00000000 		.4byte	0
 14490              	.LLST41:
 14491 07e9 20000000 		.4byte	.LVL104
 14492 07ed 29000000 		.4byte	.LVL107-1
 14493 07f1 0100     		.2byte	0x1
 14494 07f3 53       		.byte	0x53
 14495 07f4 29000000 		.4byte	.LVL107-1
 14496 07f8 0C010000 		.4byte	.LVL146
 14497 07fc 0100     		.2byte	0x1
 14498 07fe 5B       		.byte	0x5b
 14499 07ff 0C010000 		.4byte	.LVL146
 14500 0803 1C010000 		.4byte	.LFE29
 14501 0807 0600     		.2byte	0x6
 14502 0809 91       		.byte	0x91
 14503 080a 54       		.sleb128 -44
 14504 080b 06       		.byte	0x6
 14505 080c 23       		.byte	0x23
 14506 080d 20       		.uleb128 0x20
 14507 080e 9F       		.byte	0x9f
 14508 080f 00000000 		.4byte	0
 14509 0813 00000000 		.4byte	0
 14510              	.LLST42:
 14511 0817 2A000000 		.4byte	.LVL107
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 353


 14512 081b 32000000 		.4byte	.LVL108
 14513 081f 0200     		.2byte	0x2
 14514 0821 38       		.byte	0x38
 14515 0822 9F       		.byte	0x9f
 14516 0823 32000000 		.4byte	.LVL108
 14517 0827 64000000 		.4byte	.LVL116
 14518 082b 0100     		.2byte	0x1
 14519 082d 59       		.byte	0x59
 14520 082e 64000000 		.4byte	.LVL116
 14521 0832 6E000000 		.4byte	.LVL118
 14522 0836 0100     		.2byte	0x1
 14523 0838 53       		.byte	0x53
 14524 0839 6E000000 		.4byte	.LVL118
 14525 083d 70000000 		.4byte	.LVL119
 14526 0841 0100     		.2byte	0x1
 14527 0843 59       		.byte	0x59
 14528 0844 72000000 		.4byte	.LVL120
 14529 0848 F4000000 		.4byte	.LVL136
 14530 084c 0100     		.2byte	0x1
 14531 084e 59       		.byte	0x59
 14532 084f F4000000 		.4byte	.LVL136
 14533 0853 FC000000 		.4byte	.LVL137
 14534 0857 0100     		.2byte	0x1
 14535 0859 53       		.byte	0x53
 14536 085a FC000000 		.4byte	.LVL137
 14537 085e 0C010000 		.4byte	.LVL144
 14538 0862 0100     		.2byte	0x1
 14539 0864 59       		.byte	0x59
 14540 0865 00000000 		.4byte	0
 14541 0869 00000000 		.4byte	0
 14542              	.LLST43:
 14543 086d 2A000000 		.4byte	.LVL107
 14544 0871 32000000 		.4byte	.LVL108
 14545 0875 0200     		.2byte	0x2
 14546 0877 30       		.byte	0x30
 14547 0878 9F       		.byte	0x9f
 14548 0879 32000000 		.4byte	.LVL108
 14549 087d 34000000 		.4byte	.LVL109
 14550 0881 0100     		.2byte	0x1
 14551 0883 56       		.byte	0x56
 14552 0884 34000000 		.4byte	.LVL109
 14553 0888 7E000000 		.4byte	.LVL122
 14554 088c 0100     		.2byte	0x1
 14555 088e 55       		.byte	0x55
 14556 088f 7E000000 		.4byte	.LVL122
 14557 0893 A0000000 		.4byte	.LVL128
 14558 0897 0100     		.2byte	0x1
 14559 0899 56       		.byte	0x56
 14560 089a A0000000 		.4byte	.LVL128
 14561 089e C6000000 		.4byte	.LVL133
 14562 08a2 0100     		.2byte	0x1
 14563 08a4 55       		.byte	0x55
 14564 08a5 F4000000 		.4byte	.LVL136
 14565 08a9 FC000000 		.4byte	.LVL137
 14566 08ad 0100     		.2byte	0x1
 14567 08af 55       		.byte	0x55
 14568 08b0 FC000000 		.4byte	.LVL137
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 354


 14569 08b4 04010000 		.4byte	.LVL138
 14570 08b8 0100     		.2byte	0x1
 14571 08ba 56       		.byte	0x56
 14572 08bb 04010000 		.4byte	.LVL138
 14573 08bf 08010000 		.4byte	.LVL139
 14574 08c3 0100     		.2byte	0x1
 14575 08c5 55       		.byte	0x55
 14576 08c6 00000000 		.4byte	0
 14577 08ca 00000000 		.4byte	0
 14578              	.LLST44:
 14579 08ce 2A000000 		.4byte	.LVL107
 14580 08d2 32000000 		.4byte	.LVL108
 14581 08d6 0200     		.2byte	0x2
 14582 08d8 30       		.byte	0x30
 14583 08d9 9F       		.byte	0x9f
 14584 08da 32000000 		.4byte	.LVL108
 14585 08de 6C000000 		.4byte	.LVL117
 14586 08e2 0100     		.2byte	0x1
 14587 08e4 57       		.byte	0x57
 14588 08e5 72000000 		.4byte	.LVL120
 14589 08e9 96000000 		.4byte	.LVL125
 14590 08ed 0100     		.2byte	0x1
 14591 08ef 57       		.byte	0x57
 14592 08f0 9A000000 		.4byte	.LVL126
 14593 08f4 9E000000 		.4byte	.LVL127
 14594 08f8 0100     		.2byte	0x1
 14595 08fa 57       		.byte	0x57
 14596 08fb 9E000000 		.4byte	.LVL127
 14597 08ff A0000000 		.4byte	.LVL128
 14598 0903 0300     		.2byte	0x3
 14599 0905 77       		.byte	0x77
 14600 0906 7E       		.sleb128 -2
 14601 0907 9F       		.byte	0x9f
 14602 0908 A0000000 		.4byte	.LVL128
 14603 090c BA000000 		.4byte	.LVL131
 14604 0910 0100     		.2byte	0x1
 14605 0912 57       		.byte	0x57
 14606 0913 BA000000 		.4byte	.LVL131
 14607 0917 C0000000 		.4byte	.LVL132
 14608 091b 0300     		.2byte	0x3
 14609 091d 77       		.byte	0x77
 14610 091e 01       		.sleb128 1
 14611 091f 9F       		.byte	0x9f
 14612 0920 C0000000 		.4byte	.LVL132
 14613 0924 0C010000 		.4byte	.LVL142
 14614 0928 0100     		.2byte	0x1
 14615 092a 57       		.byte	0x57
 14616 092b 00000000 		.4byte	0
 14617 092f 00000000 		.4byte	0
 14618              	.LLST45:
 14619 0933 16000000 		.4byte	.LVL102
 14620 0937 18000000 		.4byte	.LVL103
 14621 093b 0100     		.2byte	0x1
 14622 093d 53       		.byte	0x53
 14623 093e 18000000 		.4byte	.LVL103
 14624 0942 3C000000 		.4byte	.LVL111
 14625 0946 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 355


 14626 0948 58       		.byte	0x58
 14627 0949 3C000000 		.4byte	.LVL111
 14628 094d 46000000 		.4byte	.LVL112
 14629 0951 0100     		.2byte	0x1
 14630 0953 53       		.byte	0x53
 14631 0954 46000000 		.4byte	.LVL112
 14632 0958 56000000 		.4byte	.LVL114
 14633 095c 0100     		.2byte	0x1
 14634 095e 58       		.byte	0x58
 14635 095f 56000000 		.4byte	.LVL114
 14636 0963 60000000 		.4byte	.LVL115
 14637 0967 0100     		.2byte	0x1
 14638 0969 53       		.byte	0x53
 14639 096a 60000000 		.4byte	.LVL115
 14640 096e 72000000 		.4byte	.LVL120
 14641 0972 0100     		.2byte	0x1
 14642 0974 58       		.byte	0x58
 14643 0975 72000000 		.4byte	.LVL120
 14644 0979 77000000 		.4byte	.LVL121-1
 14645 097d 0100     		.2byte	0x1
 14646 097f 53       		.byte	0x53
 14647 0980 77000000 		.4byte	.LVL121-1
 14648 0984 0C010000 		.4byte	.LVL143
 14649 0988 0100     		.2byte	0x1
 14650 098a 58       		.byte	0x58
 14651 098b 00000000 		.4byte	0
 14652 098f 00000000 		.4byte	0
 14653              	.LLST46:
 14654 0993 00000000 		.4byte	.LVL147
 14655 0997 50000000 		.4byte	.LVL166
 14656 099b 0100     		.2byte	0x1
 14657 099d 50       		.byte	0x50
 14658 099e 50000000 		.4byte	.LVL166
 14659 09a2 52000000 		.4byte	.LFE31
 14660 09a6 0400     		.2byte	0x4
 14661 09a8 F3       		.byte	0xf3
 14662 09a9 01       		.uleb128 0x1
 14663 09aa 50       		.byte	0x50
 14664 09ab 9F       		.byte	0x9f
 14665 09ac 00000000 		.4byte	0
 14666 09b0 00000000 		.4byte	0
 14667              	.LLST47:
 14668 09b4 22000000 		.4byte	.LVL153
 14669 09b8 24000000 		.4byte	.LVL154
 14670 09bc 0100     		.2byte	0x1
 14671 09be 51       		.byte	0x51
 14672 09bf 24000000 		.4byte	.LVL154
 14673 09c3 3A000000 		.4byte	.LVL160
 14674 09c7 0100     		.2byte	0x1
 14675 09c9 54       		.byte	0x54
 14676 09ca 3E000000 		.4byte	.LVL161
 14677 09ce 4E000000 		.4byte	.LVL165
 14678 09d2 0100     		.2byte	0x1
 14679 09d4 54       		.byte	0x54
 14680 09d5 00000000 		.4byte	0
 14681 09d9 00000000 		.4byte	0
 14682              	.LLST48:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 356


 14683 09dd 0E000000 		.4byte	.LVL149
 14684 09e1 12000000 		.4byte	.LVL151
 14685 09e5 0100     		.2byte	0x1
 14686 09e7 52       		.byte	0x52
 14687 09e8 14000000 		.4byte	.LVL152
 14688 09ec 34000000 		.4byte	.LVL158
 14689 09f0 0100     		.2byte	0x1
 14690 09f2 52       		.byte	0x52
 14691 09f3 34000000 		.4byte	.LVL158
 14692 09f7 36000000 		.4byte	.LVL159
 14693 09fb 0300     		.2byte	0x3
 14694 09fd 72       		.byte	0x72
 14695 09fe 01       		.sleb128 1
 14696 09ff 9F       		.byte	0x9f
 14697 0a00 36000000 		.4byte	.LVL159
 14698 0a04 4E000000 		.4byte	.LVL165
 14699 0a08 0100     		.2byte	0x1
 14700 0a0a 52       		.byte	0x52
 14701 0a0b 00000000 		.4byte	0
 14702 0a0f 00000000 		.4byte	0
 14703              	.LLST49:
 14704 0a13 26000000 		.4byte	.LVL155
 14705 0a17 28000000 		.4byte	.LVL156
 14706 0a1b 0100     		.2byte	0x1
 14707 0a1d 53       		.byte	0x53
 14708 0a1e 28000000 		.4byte	.LVL156
 14709 0a22 30000000 		.4byte	.LVL157
 14710 0a26 0300     		.2byte	0x3
 14711 0a28 73       		.byte	0x73
 14712 0a29 30       		.sleb128 48
 14713 0a2a 9F       		.byte	0x9f
 14714 0a2b 30000000 		.4byte	.LVL157
 14715 0a2f 3A000000 		.4byte	.LVL160
 14716 0a33 0100     		.2byte	0x1
 14717 0a35 53       		.byte	0x53
 14718 0a36 3E000000 		.4byte	.LVL161
 14719 0a3a 40000000 		.4byte	.LVL162
 14720 0a3e 0300     		.2byte	0x3
 14721 0a40 73       		.byte	0x73
 14722 0a41 30       		.sleb128 48
 14723 0a42 9F       		.byte	0x9f
 14724 0a43 40000000 		.4byte	.LVL162
 14725 0a47 4A000000 		.4byte	.LVL163
 14726 0a4b 0800     		.2byte	0x8
 14727 0a4d 71       		.byte	0x71
 14728 0a4e 00       		.sleb128 0
 14729 0a4f 94       		.byte	0x94
 14730 0a50 01       		.byte	0x1
 14731 0a51 08       		.byte	0x8
 14732 0a52 FF       		.byte	0xff
 14733 0a53 1A       		.byte	0x1a
 14734 0a54 9F       		.byte	0x9f
 14735 0a55 4A000000 		.4byte	.LVL163
 14736 0a59 4C000000 		.4byte	.LVL164
 14737 0a5d 0100     		.2byte	0x1
 14738 0a5f 53       		.byte	0x53
 14739 0a60 4C000000 		.4byte	.LVL164
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 357


 14740 0a64 4E000000 		.4byte	.LVL165
 14741 0a68 0B00     		.2byte	0xb
 14742 0a6a 71       		.byte	0x71
 14743 0a6b 00       		.sleb128 0
 14744 0a6c 94       		.byte	0x94
 14745 0a6d 01       		.byte	0x1
 14746 0a6e 08       		.byte	0x8
 14747 0a6f FF       		.byte	0xff
 14748 0a70 1A       		.byte	0x1a
 14749 0a71 08       		.byte	0x8
 14750 0a72 30       		.byte	0x30
 14751 0a73 1C       		.byte	0x1c
 14752 0a74 9F       		.byte	0x9f
 14753 0a75 00000000 		.4byte	0
 14754 0a79 00000000 		.4byte	0
 14755              	.LLST50:
 14756 0a7d 02000000 		.4byte	.LVL148
 14757 0a81 34000000 		.4byte	.LVL158
 14758 0a85 0300     		.2byte	0x3
 14759 0a87 09       		.byte	0x9
 14760 0a88 FF       		.byte	0xff
 14761 0a89 9F       		.byte	0x9f
 14762 0a8a 34000000 		.4byte	.LVL158
 14763 0a8e 3A000000 		.4byte	.LVL160
 14764 0a92 0100     		.2byte	0x1
 14765 0a94 53       		.byte	0x53
 14766 0a95 3A000000 		.4byte	.LVL160
 14767 0a99 4E000000 		.4byte	.LVL165
 14768 0a9d 0300     		.2byte	0x3
 14769 0a9f 09       		.byte	0x9
 14770 0aa0 FF       		.byte	0xff
 14771 0aa1 9F       		.byte	0x9f
 14772 0aa2 4E000000 		.4byte	.LVL165
 14773 0aa6 52000000 		.4byte	.LFE31
 14774 0aaa 0100     		.2byte	0x1
 14775 0aac 53       		.byte	0x53
 14776 0aad 00000000 		.4byte	0
 14777 0ab1 00000000 		.4byte	0
 14778              	.LLST51:
 14779 0ab5 00000000 		.4byte	.LVL167
 14780 0ab9 20000000 		.4byte	.LVL170
 14781 0abd 0100     		.2byte	0x1
 14782 0abf 50       		.byte	0x50
 14783 0ac0 20000000 		.4byte	.LVL170
 14784 0ac4 2C000000 		.4byte	.LVL172
 14785 0ac8 0100     		.2byte	0x1
 14786 0aca 54       		.byte	0x54
 14787 0acb 2C000000 		.4byte	.LVL172
 14788 0acf 2E000000 		.4byte	.LVL173
 14789 0ad3 0100     		.2byte	0x1
 14790 0ad5 50       		.byte	0x50
 14791 0ad6 2E000000 		.4byte	.LVL173
 14792 0ada 30000000 		.4byte	.LVL174
 14793 0ade 0100     		.2byte	0x1
 14794 0ae0 54       		.byte	0x54
 14795 0ae1 30000000 		.4byte	.LVL174
 14796 0ae5 32000000 		.4byte	.LVL175
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 358


 14797 0ae9 0100     		.2byte	0x1
 14798 0aeb 50       		.byte	0x50
 14799 0aec 32000000 		.4byte	.LVL175
 14800 0af0 34000000 		.4byte	.LVL176
 14801 0af4 0100     		.2byte	0x1
 14802 0af6 54       		.byte	0x54
 14803 0af7 34000000 		.4byte	.LVL176
 14804 0afb 36000000 		.4byte	.LVL177
 14805 0aff 0100     		.2byte	0x1
 14806 0b01 50       		.byte	0x50
 14807 0b02 36000000 		.4byte	.LVL177
 14808 0b06 38000000 		.4byte	.LVL178
 14809 0b0a 0100     		.2byte	0x1
 14810 0b0c 54       		.byte	0x54
 14811 0b0d 38000000 		.4byte	.LVL178
 14812 0b11 3A000000 		.4byte	.LVL179
 14813 0b15 0100     		.2byte	0x1
 14814 0b17 50       		.byte	0x50
 14815 0b18 3A000000 		.4byte	.LVL179
 14816 0b1c 4A000000 		.4byte	.LVL181
 14817 0b20 0100     		.2byte	0x1
 14818 0b22 54       		.byte	0x54
 14819 0b23 4A000000 		.4byte	.LVL181
 14820 0b27 4C000000 		.4byte	.LFE34
 14821 0b2b 0400     		.2byte	0x4
 14822 0b2d F3       		.byte	0xf3
 14823 0b2e 01       		.uleb128 0x1
 14824 0b2f 50       		.byte	0x50
 14825 0b30 9F       		.byte	0x9f
 14826 0b31 00000000 		.4byte	0
 14827 0b35 00000000 		.4byte	0
 14828              	.LLST52:
 14829 0b39 00000000 		.4byte	.LVL167
 14830 0b3d 18000000 		.4byte	.LVL169
 14831 0b41 0100     		.2byte	0x1
 14832 0b43 51       		.byte	0x51
 14833 0b44 18000000 		.4byte	.LVL169
 14834 0b48 2C000000 		.4byte	.LVL172
 14835 0b4c 0100     		.2byte	0x1
 14836 0b4e 55       		.byte	0x55
 14837 0b4f 2C000000 		.4byte	.LVL172
 14838 0b53 38000000 		.4byte	.LVL178
 14839 0b57 0100     		.2byte	0x1
 14840 0b59 51       		.byte	0x51
 14841 0b5a 38000000 		.4byte	.LVL178
 14842 0b5e 4A000000 		.4byte	.LVL182
 14843 0b62 0100     		.2byte	0x1
 14844 0b64 55       		.byte	0x55
 14845 0b65 4A000000 		.4byte	.LVL182
 14846 0b69 4C000000 		.4byte	.LFE34
 14847 0b6d 0400     		.2byte	0x4
 14848 0b6f F3       		.byte	0xf3
 14849 0b70 01       		.uleb128 0x1
 14850 0b71 51       		.byte	0x51
 14851 0b72 9F       		.byte	0x9f
 14852 0b73 00000000 		.4byte	0
 14853 0b77 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 359


 14854              	.LLST53:
 14855 0b7b 06000000 		.4byte	.LVL168
 14856 0b7f 3E000000 		.4byte	.LVL180
 14857 0b83 0200     		.2byte	0x2
 14858 0b85 39       		.byte	0x39
 14859 0b86 9F       		.byte	0x9f
 14860 0b87 3E000000 		.4byte	.LVL180
 14861 0b8b 4C000000 		.4byte	.LFE34
 14862 0b8f 0100     		.2byte	0x1
 14863 0b91 50       		.byte	0x50
 14864 0b92 00000000 		.4byte	0
 14865 0b96 00000000 		.4byte	0
 14866              	.LLST54:
 14867 0b9a 00000000 		.4byte	.LVL183
 14868 0b9e 10000000 		.4byte	.LVL185
 14869 0ba2 0100     		.2byte	0x1
 14870 0ba4 50       		.byte	0x50
 14871 0ba5 10000000 		.4byte	.LVL185
 14872 0ba9 44000000 		.4byte	.LVL188
 14873 0bad 0100     		.2byte	0x1
 14874 0baf 54       		.byte	0x54
 14875 0bb0 44000000 		.4byte	.LVL188
 14876 0bb4 46000000 		.4byte	.LVL189
 14877 0bb8 0100     		.2byte	0x1
 14878 0bba 50       		.byte	0x50
 14879 0bbb 46000000 		.4byte	.LVL189
 14880 0bbf 52000000 		.4byte	.LVL191
 14881 0bc3 0100     		.2byte	0x1
 14882 0bc5 54       		.byte	0x54
 14883 0bc6 52000000 		.4byte	.LVL191
 14884 0bca 54000000 		.4byte	.LFE10
 14885 0bce 0400     		.2byte	0x4
 14886 0bd0 F3       		.byte	0xf3
 14887 0bd1 01       		.uleb128 0x1
 14888 0bd2 50       		.byte	0x50
 14889 0bd3 9F       		.byte	0x9f
 14890 0bd4 00000000 		.4byte	0
 14891 0bd8 00000000 		.4byte	0
 14892              	.LLST55:
 14893 0bdc 04000000 		.4byte	.LVL184
 14894 0be0 52000000 		.4byte	.LVL190
 14895 0be4 0200     		.2byte	0x2
 14896 0be6 30       		.byte	0x30
 14897 0be7 9F       		.byte	0x9f
 14898 0be8 52000000 		.4byte	.LVL190
 14899 0bec 54000000 		.4byte	.LFE10
 14900 0bf0 0100     		.2byte	0x1
 14901 0bf2 50       		.byte	0x50
 14902 0bf3 00000000 		.4byte	0
 14903 0bf7 00000000 		.4byte	0
 14904              	.LLST56:
 14905 0bfb 00000000 		.4byte	.LVL192
 14906 0bff 0F000000 		.4byte	.LVL194-1
 14907 0c03 0100     		.2byte	0x1
 14908 0c05 50       		.byte	0x50
 14909 0c06 0F000000 		.4byte	.LVL194-1
 14910 0c0a 30000000 		.4byte	.LVL201
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 360


 14911 0c0e 0100     		.2byte	0x1
 14912 0c10 55       		.byte	0x55
 14913 0c11 30000000 		.4byte	.LVL201
 14914 0c15 32000000 		.4byte	.LVL202
 14915 0c19 0100     		.2byte	0x1
 14916 0c1b 50       		.byte	0x50
 14917 0c1c 32000000 		.4byte	.LVL202
 14918 0c20 34000000 		.4byte	.LVL204
 14919 0c24 0100     		.2byte	0x1
 14920 0c26 55       		.byte	0x55
 14921 0c27 34000000 		.4byte	.LVL204
 14922 0c2b 36000000 		.4byte	.LFE11
 14923 0c2f 0400     		.2byte	0x4
 14924 0c31 F3       		.byte	0xf3
 14925 0c32 01       		.uleb128 0x1
 14926 0c33 50       		.byte	0x50
 14927 0c34 9F       		.byte	0x9f
 14928 0c35 00000000 		.4byte	0
 14929 0c39 00000000 		.4byte	0
 14930              	.LLST57:
 14931 0c3d 00000000 		.4byte	.LVL192
 14932 0c41 0F000000 		.4byte	.LVL194-1
 14933 0c45 0100     		.2byte	0x1
 14934 0c47 51       		.byte	0x51
 14935 0c48 0F000000 		.4byte	.LVL194-1
 14936 0c4c 2A000000 		.4byte	.LVL199
 14937 0c50 0100     		.2byte	0x1
 14938 0c52 56       		.byte	0x56
 14939 0c53 2A000000 		.4byte	.LVL199
 14940 0c57 2C000000 		.4byte	.LVL200
 14941 0c5b 0400     		.2byte	0x4
 14942 0c5d F3       		.byte	0xf3
 14943 0c5e 01       		.uleb128 0x1
 14944 0c5f 51       		.byte	0x51
 14945 0c60 9F       		.byte	0x9f
 14946 0c61 2C000000 		.4byte	.LVL200
 14947 0c65 30000000 		.4byte	.LVL201
 14948 0c69 0100     		.2byte	0x1
 14949 0c6b 56       		.byte	0x56
 14950 0c6c 30000000 		.4byte	.LVL201
 14951 0c70 32000000 		.4byte	.LVL202
 14952 0c74 0100     		.2byte	0x1
 14953 0c76 51       		.byte	0x51
 14954 0c77 32000000 		.4byte	.LVL202
 14955 0c7b 34000000 		.4byte	.LVL205
 14956 0c7f 0100     		.2byte	0x1
 14957 0c81 56       		.byte	0x56
 14958 0c82 00000000 		.4byte	0
 14959 0c86 00000000 		.4byte	0
 14960              	.LLST58:
 14961 0c8a 06000000 		.4byte	.LVL193
 14962 0c8e 12000000 		.4byte	.LVL195
 14963 0c92 0200     		.2byte	0x2
 14964 0c94 30       		.byte	0x30
 14965 0c95 9F       		.byte	0x9f
 14966 0c96 12000000 		.4byte	.LVL195
 14967 0c9a 1A000000 		.4byte	.LVL196
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 361


 14968 0c9e 0100     		.2byte	0x1
 14969 0ca0 50       		.byte	0x50
 14970 0ca1 1A000000 		.4byte	.LVL196
 14971 0ca5 28000000 		.4byte	.LVL198
 14972 0ca9 0100     		.2byte	0x1
 14973 0cab 54       		.byte	0x54
 14974 0cac 28000000 		.4byte	.LVL198
 14975 0cb0 2C000000 		.4byte	.LVL200
 14976 0cb4 0300     		.2byte	0x3
 14977 0cb6 74       		.byte	0x74
 14978 0cb7 7F       		.sleb128 -1
 14979 0cb8 9F       		.byte	0x9f
 14980 0cb9 2C000000 		.4byte	.LVL200
 14981 0cbd 30000000 		.4byte	.LVL201
 14982 0cc1 0100     		.2byte	0x1
 14983 0cc3 54       		.byte	0x54
 14984 0cc4 30000000 		.4byte	.LVL201
 14985 0cc8 32000000 		.4byte	.LVL202
 14986 0ccc 0200     		.2byte	0x2
 14987 0cce 30       		.byte	0x30
 14988 0ccf 9F       		.byte	0x9f
 14989 0cd0 32000000 		.4byte	.LVL202
 14990 0cd4 34000000 		.4byte	.LVL203
 14991 0cd8 0100     		.2byte	0x1
 14992 0cda 54       		.byte	0x54
 14993 0cdb 00000000 		.4byte	0
 14994 0cdf 00000000 		.4byte	0
 14995              	.LLST59:
 14996 0ce3 00000000 		.4byte	.LVL206
 14997 0ce7 0F000000 		.4byte	.LVL207-1
 14998 0ceb 0100     		.2byte	0x1
 14999 0ced 50       		.byte	0x50
 15000 0cee 0F000000 		.4byte	.LVL207-1
 15001 0cf2 66000000 		.4byte	.LVL211
 15002 0cf6 0100     		.2byte	0x1
 15003 0cf8 54       		.byte	0x54
 15004 0cf9 66000000 		.4byte	.LVL211
 15005 0cfd 78000000 		.4byte	.LFE32
 15006 0d01 0400     		.2byte	0x4
 15007 0d03 F3       		.byte	0xf3
 15008 0d04 01       		.uleb128 0x1
 15009 0d05 50       		.byte	0x50
 15010 0d06 9F       		.byte	0x9f
 15011 0d07 00000000 		.4byte	0
 15012 0d0b 00000000 		.4byte	0
 15013              	.LLST60:
 15014 0d0f 00000000 		.4byte	.LVL206
 15015 0d13 0F000000 		.4byte	.LVL207-1
 15016 0d17 0100     		.2byte	0x1
 15017 0d19 51       		.byte	0x51
 15018 0d1a 0F000000 		.4byte	.LVL207-1
 15019 0d1e 78000000 		.4byte	.LFE32
 15020 0d22 0400     		.2byte	0x4
 15021 0d24 F3       		.byte	0xf3
 15022 0d25 01       		.uleb128 0x1
 15023 0d26 51       		.byte	0x51
 15024 0d27 9F       		.byte	0x9f
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 362


 15025 0d28 00000000 		.4byte	0
 15026 0d2c 00000000 		.4byte	0
 15027              	.LLST61:
 15028 0d30 00000000 		.4byte	.LVL212
 15029 0d34 19000000 		.4byte	.LVL213-1
 15030 0d38 0100     		.2byte	0x1
 15031 0d3a 50       		.byte	0x50
 15032 0d3b 19000000 		.4byte	.LVL213-1
 15033 0d3f 2C030000 		.4byte	.LFE33
 15034 0d43 0400     		.2byte	0x4
 15035 0d45 F3       		.byte	0xf3
 15036 0d46 01       		.uleb128 0x1
 15037 0d47 50       		.byte	0x50
 15038 0d48 9F       		.byte	0x9f
 15039 0d49 00000000 		.4byte	0
 15040 0d4d 00000000 		.4byte	0
 15041              	.LLST62:
 15042 0d51 00000000 		.4byte	.LVL212
 15043 0d55 19000000 		.4byte	.LVL213-1
 15044 0d59 0100     		.2byte	0x1
 15045 0d5b 51       		.byte	0x51
 15046 0d5c 19000000 		.4byte	.LVL213-1
 15047 0d60 AE000000 		.4byte	.LVL234
 15048 0d64 0100     		.2byte	0x1
 15049 0d66 56       		.byte	0x56
 15050 0d67 AE000000 		.4byte	.LVL234
 15051 0d6b A6020000 		.4byte	.LVL282
 15052 0d6f 0400     		.2byte	0x4
 15053 0d71 F3       		.byte	0xf3
 15054 0d72 01       		.uleb128 0x1
 15055 0d73 51       		.byte	0x51
 15056 0d74 9F       		.byte	0x9f
 15057 0d75 A6020000 		.4byte	.LVL282
 15058 0d79 BE020000 		.4byte	.LVL294
 15059 0d7d 0100     		.2byte	0x1
 15060 0d7f 56       		.byte	0x56
 15061 0d80 BE020000 		.4byte	.LVL294
 15062 0d84 2C030000 		.4byte	.LFE33
 15063 0d88 0400     		.2byte	0x4
 15064 0d8a F3       		.byte	0xf3
 15065 0d8b 01       		.uleb128 0x1
 15066 0d8c 51       		.byte	0x51
 15067 0d8d 9F       		.byte	0x9f
 15068 0d8e 00000000 		.4byte	0
 15069 0d92 00000000 		.4byte	0
 15070              	.LLST63:
 15071 0d96 00000000 		.4byte	.LVL212
 15072 0d9a 19000000 		.4byte	.LVL213-1
 15073 0d9e 0100     		.2byte	0x1
 15074 0da0 52       		.byte	0x52
 15075 0da1 19000000 		.4byte	.LVL213-1
 15076 0da5 32000000 		.4byte	.LVL216
 15077 0da9 0400     		.2byte	0x4
 15078 0dab F3       		.byte	0xf3
 15079 0dac 01       		.uleb128 0x1
 15080 0dad 52       		.byte	0x52
 15081 0dae 9F       		.byte	0x9f
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 363


 15082 0daf 32000000 		.4byte	.LVL216
 15083 0db3 40010000 		.4byte	.LVL250
 15084 0db7 0100     		.2byte	0x1
 15085 0db9 57       		.byte	0x57
 15086 0dba A6020000 		.4byte	.LVL282
 15087 0dbe AE020000 		.4byte	.LVL286
 15088 0dc2 0400     		.2byte	0x4
 15089 0dc4 F3       		.byte	0xf3
 15090 0dc5 01       		.uleb128 0x1
 15091 0dc6 52       		.byte	0x52
 15092 0dc7 9F       		.byte	0x9f
 15093 0dc8 AE020000 		.4byte	.LVL286
 15094 0dcc D6020000 		.4byte	.LVL301
 15095 0dd0 0100     		.2byte	0x1
 15096 0dd2 57       		.byte	0x57
 15097 0dd3 00000000 		.4byte	0
 15098 0dd7 00000000 		.4byte	0
 15099              	.LLST64:
 15100 0ddb 76000000 		.4byte	.LVL223
 15101 0ddf 7E000000 		.4byte	.LVL225
 15102 0de3 0100     		.2byte	0x1
 15103 0de5 50       		.byte	0x50
 15104 0de6 A6000000 		.4byte	.LVL232
 15105 0dea A8000000 		.4byte	.LVL233
 15106 0dee 0100     		.2byte	0x1
 15107 0df0 50       		.byte	0x50
 15108 0df1 C4000000 		.4byte	.LVL237
 15109 0df5 DC000000 		.4byte	.LVL240
 15110 0df9 0100     		.2byte	0x1
 15111 0dfb 50       		.byte	0x50
 15112 0dfc 8E010000 		.4byte	.LVL261
 15113 0e00 9E010000 		.4byte	.LVL262
 15114 0e04 0200     		.2byte	0x2
 15115 0e06 30       		.byte	0x30
 15116 0e07 9F       		.byte	0x9f
 15117 0e08 9E010000 		.4byte	.LVL262
 15118 0e0c A6020000 		.4byte	.LVL282
 15119 0e10 0100     		.2byte	0x1
 15120 0e12 58       		.byte	0x58
 15121 0e13 BE020000 		.4byte	.LVL294
 15122 0e17 C0020000 		.4byte	.LVL295
 15123 0e1b 0100     		.2byte	0x1
 15124 0e1d 50       		.byte	0x50
 15125 0e1e C2020000 		.4byte	.LVL296
 15126 0e22 C4020000 		.4byte	.LVL297
 15127 0e26 0100     		.2byte	0x1
 15128 0e28 50       		.byte	0x50
 15129 0e29 E6020000 		.4byte	.LVL308
 15130 0e2d F8020000 		.4byte	.LVL314
 15131 0e31 0100     		.2byte	0x1
 15132 0e33 58       		.byte	0x58
 15133 0e34 00000000 		.4byte	0
 15134 0e38 00000000 		.4byte	0
 15135              	.LLST65:
 15136 0e3c 8C000000 		.4byte	.LVL226
 15137 0e40 94000000 		.4byte	.LVL227
 15138 0e44 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 364


 15139 0e46 50       		.byte	0x50
 15140 0e47 94000000 		.4byte	.LVL227
 15141 0e4b 97000000 		.4byte	.LVL228-1
 15142 0e4f 0300     		.2byte	0x3
 15143 0e51 70       		.byte	0x70
 15144 0e52 78       		.sleb128 -8
 15145 0e53 9F       		.byte	0x9f
 15146 0e54 97000000 		.4byte	.LVL228-1
 15147 0e58 9A000000 		.4byte	.LVL229
 15148 0e5c 0B00     		.2byte	0xb
 15149 0e5e 75       		.byte	0x75
 15150 0e5f 00       		.sleb128 0
 15151 0e60 34       		.byte	0x34
 15152 0e61 24       		.byte	0x24
 15153 0e62 74       		.byte	0x74
 15154 0e63 00       		.sleb128 0
 15155 0e64 22       		.byte	0x22
 15156 0e65 23       		.byte	0x23
 15157 0e66 EE03     		.uleb128 0x1ee
 15158 0e68 9F       		.byte	0x9f
 15159 0e69 9A000000 		.4byte	.LVL229
 15160 0e6d 9C000000 		.4byte	.LVL230
 15161 0e71 0100     		.2byte	0x1
 15162 0e73 50       		.byte	0x50
 15163 0e74 9C000000 		.4byte	.LVL230
 15164 0e78 A4000000 		.4byte	.LVL231
 15165 0e7c 0B00     		.2byte	0xb
 15166 0e7e 75       		.byte	0x75
 15167 0e7f 00       		.sleb128 0
 15168 0e80 34       		.byte	0x34
 15169 0e81 24       		.byte	0x24
 15170 0e82 74       		.byte	0x74
 15171 0e83 00       		.sleb128 0
 15172 0e84 22       		.byte	0x22
 15173 0e85 23       		.byte	0x23
 15174 0e86 EE03     		.uleb128 0x1ee
 15175 0e88 9F       		.byte	0x9f
 15176 0e89 A4000000 		.4byte	.LVL231
 15177 0e8d A6000000 		.4byte	.LVL232
 15178 0e91 0B00     		.2byte	0xb
 15179 0e93 75       		.byte	0x75
 15180 0e94 7F       		.sleb128 -1
 15181 0e95 34       		.byte	0x34
 15182 0e96 24       		.byte	0x24
 15183 0e97 74       		.byte	0x74
 15184 0e98 00       		.sleb128 0
 15185 0e99 22       		.byte	0x22
 15186 0e9a 23       		.byte	0x23
 15187 0e9b EE03     		.uleb128 0x1ee
 15188 0e9d 9F       		.byte	0x9f
 15189 0e9e 00000000 		.4byte	0
 15190 0ea2 00000000 		.4byte	0
 15191              	.LLST66:
 15192 0ea6 1C000000 		.4byte	.LVL214
 15193 0eaa 3A000000 		.4byte	.LVL217
 15194 0eae 0100     		.2byte	0x1
 15195 0eb0 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 365


 15196 0eb1 3A000000 		.4byte	.LVL217
 15197 0eb5 7C000000 		.4byte	.LVL224
 15198 0eb9 0100     		.2byte	0x1
 15199 0ebb 55       		.byte	0x55
 15200 0ebc A6000000 		.4byte	.LVL232
 15201 0ec0 A8000000 		.4byte	.LVL233
 15202 0ec4 0100     		.2byte	0x1
 15203 0ec6 55       		.byte	0x55
 15204 0ec7 A6020000 		.4byte	.LVL282
 15205 0ecb A8020000 		.4byte	.LVL283
 15206 0ecf 0100     		.2byte	0x1
 15207 0ed1 50       		.byte	0x50
 15208 0ed2 A8020000 		.4byte	.LVL283
 15209 0ed6 AA020000 		.4byte	.LVL284
 15210 0eda 0100     		.2byte	0x1
 15211 0edc 55       		.byte	0x55
 15212 0edd AA020000 		.4byte	.LVL284
 15213 0ee1 AC020000 		.4byte	.LVL285
 15214 0ee5 0100     		.2byte	0x1
 15215 0ee7 50       		.byte	0x50
 15216 0ee8 AC020000 		.4byte	.LVL285
 15217 0eec BE020000 		.4byte	.LVL294
 15218 0ef0 0100     		.2byte	0x1
 15219 0ef2 55       		.byte	0x55
 15220 0ef3 00000000 		.4byte	0
 15221 0ef7 00000000 		.4byte	0
 15222              	.LLST67:
 15223 0efb 3E000000 		.4byte	.LVL218
 15224 0eff 50000000 		.4byte	.LVL219
 15225 0f03 0100     		.2byte	0x1
 15226 0f05 50       		.byte	0x50
 15227 0f06 5E000000 		.4byte	.LVL220
 15228 0f0a 72000000 		.4byte	.LVL222
 15229 0f0e 0100     		.2byte	0x1
 15230 0f10 50       		.byte	0x50
 15231 0f11 AE020000 		.4byte	.LVL286
 15232 0f15 B0020000 		.4byte	.LVL287
 15233 0f19 0100     		.2byte	0x1
 15234 0f1b 50       		.byte	0x50
 15235 0f1c B2020000 		.4byte	.LVL288
 15236 0f20 B4020000 		.4byte	.LVL289
 15237 0f24 0100     		.2byte	0x1
 15238 0f26 50       		.byte	0x50
 15239 0f27 B6020000 		.4byte	.LVL290
 15240 0f2b B8020000 		.4byte	.LVL291
 15241 0f2f 0100     		.2byte	0x1
 15242 0f31 50       		.byte	0x50
 15243 0f32 BA020000 		.4byte	.LVL292
 15244 0f36 BC020000 		.4byte	.LVL293
 15245 0f3a 0100     		.2byte	0x1
 15246 0f3c 50       		.byte	0x50
 15247 0f3d 00000000 		.4byte	0
 15248 0f41 00000000 		.4byte	0
 15249              	.LLST68:
 15250 0f45 6E000000 		.4byte	.LVL221
 15251 0f49 AE000000 		.4byte	.LVL234
 15252 0f4d 0200     		.2byte	0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 366


 15253 0f4f 30       		.byte	0x30
 15254 0f50 9F       		.byte	0x9f
 15255 0f51 B4000000 		.4byte	.LVL235
 15256 0f55 A6020000 		.4byte	.LVL282
 15257 0f59 0100     		.2byte	0x1
 15258 0f5b 55       		.byte	0x55
 15259 0f5c BE020000 		.4byte	.LVL294
 15260 0f60 F8020000 		.4byte	.LVL314
 15261 0f64 0100     		.2byte	0x1
 15262 0f66 55       		.byte	0x55
 15263 0f67 00000000 		.4byte	0
 15264 0f6b 00000000 		.4byte	0
 15265              	.LLST69:
 15266 0f6f F6000000 		.4byte	.LVL243
 15267 0f73 FC000000 		.4byte	.LVL244
 15268 0f77 0100     		.2byte	0x1
 15269 0f79 50       		.byte	0x50
 15270 0f7a FC000000 		.4byte	.LVL244
 15271 0f7e 1E010000 		.4byte	.LVL247
 15272 0f82 0100     		.2byte	0x1
 15273 0f84 5A       		.byte	0x5a
 15274 0f85 1E010000 		.4byte	.LVL247
 15275 0f89 30010000 		.4byte	.LVL248
 15276 0f8d 0100     		.2byte	0x1
 15277 0f8f 52       		.byte	0x52
 15278 0f90 30010000 		.4byte	.LVL248
 15279 0f94 A6020000 		.4byte	.LVL282
 15280 0f98 0100     		.2byte	0x1
 15281 0f9a 5B       		.byte	0x5b
 15282 0f9b CA020000 		.4byte	.LVL298
 15283 0f9f CE020000 		.4byte	.LVL299
 15284 0fa3 0100     		.2byte	0x1
 15285 0fa5 5A       		.byte	0x5a
 15286 0fa6 CE020000 		.4byte	.LVL299
 15287 0faa D2020000 		.4byte	.LVL300
 15288 0fae 0100     		.2byte	0x1
 15289 0fb0 52       		.byte	0x52
 15290 0fb1 D2020000 		.4byte	.LVL300
 15291 0fb5 F8020000 		.4byte	.LVL314
 15292 0fb9 0100     		.2byte	0x1
 15293 0fbb 5B       		.byte	0x5b
 15294 0fbc 00000000 		.4byte	0
 15295 0fc0 00000000 		.4byte	0
 15296              	.LLST70:
 15297 0fc4 54010000 		.4byte	.LVL252
 15298 0fc8 58010000 		.4byte	.LVL253
 15299 0fcc 0100     		.2byte	0x1
 15300 0fce 50       		.byte	0x50
 15301 0fcf 58010000 		.4byte	.LVL253
 15302 0fd3 BC010000 		.4byte	.LVL265
 15303 0fd7 0100     		.2byte	0x1
 15304 0fd9 56       		.byte	0x56
 15305 0fda DA020000 		.4byte	.LVL302
 15306 0fde EA020000 		.4byte	.LVL310
 15307 0fe2 0100     		.2byte	0x1
 15308 0fe4 56       		.byte	0x56
 15309 0fe5 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 367


 15310 0fe9 00000000 		.4byte	0
 15311              	.LLST71:
 15312 0fed 7A010000 		.4byte	.LVL258
 15313 0ff1 C8010000 		.4byte	.LVL266
 15314 0ff5 0100     		.2byte	0x1
 15315 0ff7 57       		.byte	0x57
 15316 0ff8 C8010000 		.4byte	.LVL266
 15317 0ffc A6020000 		.4byte	.LVL282
 15318 1000 1000     		.2byte	0x10
 15319 1002 91       		.byte	0x91
 15320 1003 44       		.sleb128 -60
 15321 1004 06       		.byte	0x6
 15322 1005 34       		.byte	0x34
 15323 1006 25       		.byte	0x25
 15324 1007 0A       		.byte	0xa
 15325 1008 FFFF     		.2byte	0xffff
 15326 100a 1A       		.byte	0x1a
 15327 100b 79       		.byte	0x79
 15328 100c 00       		.sleb128 0
 15329 100d 22       		.byte	0x22
 15330 100e 7B       		.byte	0x7b
 15331 100f 00       		.sleb128 0
 15332 1010 22       		.byte	0x22
 15333 1011 9F       		.byte	0x9f
 15334 1012 DE020000 		.4byte	.LVL304
 15335 1016 EA020000 		.4byte	.LVL310
 15336 101a 0100     		.2byte	0x1
 15337 101c 57       		.byte	0x57
 15338 101d EA020000 		.4byte	.LVL310
 15339 1021 F8020000 		.4byte	.LVL314
 15340 1025 1000     		.2byte	0x10
 15341 1027 91       		.byte	0x91
 15342 1028 44       		.sleb128 -60
 15343 1029 06       		.byte	0x6
 15344 102a 34       		.byte	0x34
 15345 102b 25       		.byte	0x25
 15346 102c 0A       		.byte	0xa
 15347 102d FFFF     		.2byte	0xffff
 15348 102f 1A       		.byte	0x1a
 15349 1030 79       		.byte	0x79
 15350 1031 00       		.sleb128 0
 15351 1032 22       		.byte	0x22
 15352 1033 7B       		.byte	0x7b
 15353 1034 00       		.sleb128 0
 15354 1035 22       		.byte	0x22
 15355 1036 9F       		.byte	0x9f
 15356 1037 00000000 		.4byte	0
 15357 103b 00000000 		.4byte	0
 15358              	.LLST72:
 15359 103f 88010000 		.4byte	.LVL260
 15360 1043 D2010000 		.4byte	.LVL267
 15361 1047 0100     		.2byte	0x1
 15362 1049 50       		.byte	0x50
 15363 104a D2010000 		.4byte	.LVL267
 15364 104e F2010000 		.4byte	.LVL270
 15365 1052 0300     		.2byte	0x3
 15366 1054 76       		.byte	0x76
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 368


 15367 1055 7E       		.sleb128 -2
 15368 1056 9F       		.byte	0x9f
 15369 1057 F4010000 		.4byte	.LVL271
 15370 105b 14020000 		.4byte	.LVL272
 15371 105f 0100     		.2byte	0x1
 15372 1061 50       		.byte	0x50
 15373 1062 E2020000 		.4byte	.LVL306
 15374 1066 E4020000 		.4byte	.LVL307
 15375 106a 0100     		.2byte	0x1
 15376 106c 50       		.byte	0x50
 15377 106d E6020000 		.4byte	.LVL308
 15378 1071 E8020000 		.4byte	.LVL309
 15379 1075 0100     		.2byte	0x1
 15380 1077 50       		.byte	0x50
 15381 1078 EA020000 		.4byte	.LVL310
 15382 107c F2020000 		.4byte	.LVL311
 15383 1080 0300     		.2byte	0x3
 15384 1082 76       		.byte	0x76
 15385 1083 7E       		.sleb128 -2
 15386 1084 9F       		.byte	0x9f
 15387 1085 F2020000 		.4byte	.LVL311
 15388 1089 F4020000 		.4byte	.LVL312
 15389 108d 0100     		.2byte	0x1
 15390 108f 50       		.byte	0x50
 15391 1090 F4020000 		.4byte	.LVL312
 15392 1094 F6020000 		.4byte	.LVL313
 15393 1098 0300     		.2byte	0x3
 15394 109a 76       		.byte	0x76
 15395 109b 7E       		.sleb128 -2
 15396 109c 9F       		.byte	0x9f
 15397 109d 00000000 		.4byte	0
 15398 10a1 00000000 		.4byte	0
 15399              	.LLST73:
 15400 10a5 F2010000 		.4byte	.LVL270
 15401 10a9 F4010000 		.4byte	.LVL271
 15402 10ad 0100     		.2byte	0x1
 15403 10af 56       		.byte	0x56
 15404 10b0 14020000 		.4byte	.LVL272
 15405 10b4 1A020000 		.4byte	.LVL273
 15406 10b8 0100     		.2byte	0x1
 15407 10ba 56       		.byte	0x56
 15408 10bb 1A020000 		.4byte	.LVL273
 15409 10bf 1C020000 		.4byte	.LVL274
 15410 10c3 0400     		.2byte	0x4
 15411 10c5 76       		.byte	0x76
 15412 10c6 817C     		.sleb128 -511
 15413 10c8 9F       		.byte	0x9f
 15414 10c9 00000000 		.4byte	0
 15415 10cd 00000000 		.4byte	0
 15416              	.LLST74:
 15417 10d1 6A010000 		.4byte	.LVL257
 15418 10d5 82010000 		.4byte	.LVL259
 15419 10d9 0100     		.2byte	0x1
 15420 10db 50       		.byte	0x50
 15421 10dc DA020000 		.4byte	.LVL302
 15422 10e0 DC020000 		.4byte	.LVL303
 15423 10e4 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 369


 15424 10e6 50       		.byte	0x50
 15425 10e7 DE020000 		.4byte	.LVL304
 15426 10eb E0020000 		.4byte	.LVL305
 15427 10ef 0100     		.2byte	0x1
 15428 10f1 50       		.byte	0x50
 15429 10f2 00000000 		.4byte	0
 15430 10f6 00000000 		.4byte	0
 15431              	.LLST75:
 15432 10fa 26000000 		.4byte	.LVL215
 15433 10fe A6020000 		.4byte	.LVL282
 15434 1102 0100     		.2byte	0x1
 15435 1104 54       		.byte	0x54
 15436 1105 AA020000 		.4byte	.LVL284
 15437 1109 F8020000 		.4byte	.LVL314
 15438 110d 0100     		.2byte	0x1
 15439 110f 54       		.byte	0x54
 15440 1110 00000000 		.4byte	0
 15441 1114 00000000 		.4byte	0
 15442              	.LLST76:
 15443 1118 7E000000 		.4byte	.LVL225
 15444 111c A6000000 		.4byte	.LVL232
 15445 1120 0100     		.2byte	0x1
 15446 1122 55       		.byte	0x55
 15447 1123 A8000000 		.4byte	.LVL233
 15448 1127 AE000000 		.4byte	.LVL234
 15449 112b 0100     		.2byte	0x1
 15450 112d 55       		.byte	0x55
 15451 112e AE000000 		.4byte	.LVL234
 15452 1132 CE000000 		.4byte	.LVL239
 15453 1136 0100     		.2byte	0x1
 15454 1138 56       		.byte	0x56
 15455 1139 00000000 		.4byte	0
 15456 113d 00000000 		.4byte	0
 15457              	.LLST77:
 15458 1141 00000000 		.4byte	.LVL315
 15459 1145 3F000000 		.4byte	.LVL320-1
 15460 1149 0100     		.2byte	0x1
 15461 114b 50       		.byte	0x50
 15462 114c 3F000000 		.4byte	.LVL320-1
 15463 1150 B0000000 		.4byte	.LVL336
 15464 1154 0100     		.2byte	0x1
 15465 1156 56       		.byte	0x56
 15466 1157 B0000000 		.4byte	.LVL336
 15467 115b BB000000 		.4byte	.LVL338-1
 15468 115f 0100     		.2byte	0x1
 15469 1161 50       		.byte	0x50
 15470 1162 BB000000 		.4byte	.LVL338-1
 15471 1166 DA000000 		.4byte	.LVL343
 15472 116a 0100     		.2byte	0x1
 15473 116c 56       		.byte	0x56
 15474 116d DA000000 		.4byte	.LVL343
 15475 1171 E5000000 		.4byte	.LVL345-1
 15476 1175 0100     		.2byte	0x1
 15477 1177 50       		.byte	0x50
 15478 1178 E5000000 		.4byte	.LVL345-1
 15479 117c 14010000 		.4byte	.LVL353
 15480 1180 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 370


 15481 1182 56       		.byte	0x56
 15482 1183 14010000 		.4byte	.LVL353
 15483 1187 1E010000 		.4byte	.LVL354
 15484 118b 0100     		.2byte	0x1
 15485 118d 50       		.byte	0x50
 15486 118e 1E010000 		.4byte	.LVL354
 15487 1192 20010000 		.4byte	.LVL356
 15488 1196 0100     		.2byte	0x1
 15489 1198 56       		.byte	0x56
 15490 1199 20010000 		.4byte	.LVL356
 15491 119d 2A010000 		.4byte	.LFE15
 15492 11a1 0400     		.2byte	0x4
 15493 11a3 F3       		.byte	0xf3
 15494 11a4 01       		.uleb128 0x1
 15495 11a5 50       		.byte	0x50
 15496 11a6 9F       		.byte	0x9f
 15497 11a7 00000000 		.4byte	0
 15498 11ab 00000000 		.4byte	0
 15499              	.LLST78:
 15500 11af 00000000 		.4byte	.LVL315
 15501 11b3 36000000 		.4byte	.LVL319
 15502 11b7 0100     		.2byte	0x1
 15503 11b9 51       		.byte	0x51
 15504 11ba 36000000 		.4byte	.LVL319
 15505 11be 5C000000 		.4byte	.LVL325
 15506 11c2 0100     		.2byte	0x1
 15507 11c4 54       		.byte	0x54
 15508 11c5 5C000000 		.4byte	.LVL325
 15509 11c9 B0000000 		.4byte	.LVL336
 15510 11cd 0400     		.2byte	0x4
 15511 11cf F3       		.byte	0xf3
 15512 11d0 01       		.uleb128 0x1
 15513 11d1 51       		.byte	0x51
 15514 11d2 9F       		.byte	0x9f
 15515 11d3 B0000000 		.4byte	.LVL336
 15516 11d7 B2000000 		.4byte	.LVL337
 15517 11db 0100     		.2byte	0x1
 15518 11dd 51       		.byte	0x51
 15519 11de B2000000 		.4byte	.LVL337
 15520 11e2 C6000000 		.4byte	.LVL340
 15521 11e6 0100     		.2byte	0x1
 15522 11e8 54       		.byte	0x54
 15523 11e9 C6000000 		.4byte	.LVL340
 15524 11ed DA000000 		.4byte	.LVL343
 15525 11f1 0400     		.2byte	0x4
 15526 11f3 F3       		.byte	0xf3
 15527 11f4 01       		.uleb128 0x1
 15528 11f5 51       		.byte	0x51
 15529 11f6 9F       		.byte	0x9f
 15530 11f7 DA000000 		.4byte	.LVL343
 15531 11fb DC000000 		.4byte	.LVL344
 15532 11ff 0100     		.2byte	0x1
 15533 1201 51       		.byte	0x51
 15534 1202 DC000000 		.4byte	.LVL344
 15535 1206 F4000000 		.4byte	.LVL348
 15536 120a 0100     		.2byte	0x1
 15537 120c 54       		.byte	0x54
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 371


 15538 120d F4000000 		.4byte	.LVL348
 15539 1211 14010000 		.4byte	.LVL353
 15540 1215 0400     		.2byte	0x4
 15541 1217 F3       		.byte	0xf3
 15542 1218 01       		.uleb128 0x1
 15543 1219 51       		.byte	0x51
 15544 121a 9F       		.byte	0x9f
 15545 121b 14010000 		.4byte	.LVL353
 15546 121f 1E010000 		.4byte	.LVL354
 15547 1223 0100     		.2byte	0x1
 15548 1225 51       		.byte	0x51
 15549 1226 1E010000 		.4byte	.LVL354
 15550 122a 2A010000 		.4byte	.LFE15
 15551 122e 0400     		.2byte	0x4
 15552 1230 F3       		.byte	0xf3
 15553 1231 01       		.uleb128 0x1
 15554 1232 51       		.byte	0x51
 15555 1233 9F       		.byte	0x9f
 15556 1234 00000000 		.4byte	0
 15557 1238 00000000 		.4byte	0
 15558              	.LLST79:
 15559 123c 00000000 		.4byte	.LVL315
 15560 1240 3F000000 		.4byte	.LVL320-1
 15561 1244 0100     		.2byte	0x1
 15562 1246 52       		.byte	0x52
 15563 1247 3F000000 		.4byte	.LVL320-1
 15564 124b 96000000 		.4byte	.LVL331
 15565 124f 0100     		.2byte	0x1
 15566 1251 57       		.byte	0x57
 15567 1252 96000000 		.4byte	.LVL331
 15568 1256 9A000000 		.4byte	.LVL332
 15569 125a 0400     		.2byte	0x4
 15570 125c F3       		.byte	0xf3
 15571 125d 01       		.uleb128 0x1
 15572 125e 52       		.byte	0x52
 15573 125f 9F       		.byte	0x9f
 15574 1260 9A000000 		.4byte	.LVL332
 15575 1264 A4000000 		.4byte	.LVL334
 15576 1268 0100     		.2byte	0x1
 15577 126a 57       		.byte	0x57
 15578 126b A4000000 		.4byte	.LVL334
 15579 126f B0000000 		.4byte	.LVL336
 15580 1273 0400     		.2byte	0x4
 15581 1275 F3       		.byte	0xf3
 15582 1276 01       		.uleb128 0x1
 15583 1277 52       		.byte	0x52
 15584 1278 9F       		.byte	0x9f
 15585 1279 B0000000 		.4byte	.LVL336
 15586 127d BB000000 		.4byte	.LVL338-1
 15587 1281 0100     		.2byte	0x1
 15588 1283 52       		.byte	0x52
 15589 1284 BB000000 		.4byte	.LVL338-1
 15590 1288 DA000000 		.4byte	.LVL343
 15591 128c 0100     		.2byte	0x1
 15592 128e 57       		.byte	0x57
 15593 128f DA000000 		.4byte	.LVL343
 15594 1293 E5000000 		.4byte	.LVL345-1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 372


 15595 1297 0100     		.2byte	0x1
 15596 1299 52       		.byte	0x52
 15597 129a E5000000 		.4byte	.LVL345-1
 15598 129e EC000000 		.4byte	.LVL347
 15599 12a2 0100     		.2byte	0x1
 15600 12a4 57       		.byte	0x57
 15601 12a5 EC000000 		.4byte	.LVL347
 15602 12a9 08010000 		.4byte	.LVL351
 15603 12ad 0400     		.2byte	0x4
 15604 12af F3       		.byte	0xf3
 15605 12b0 01       		.uleb128 0x1
 15606 12b1 52       		.byte	0x52
 15607 12b2 9F       		.byte	0x9f
 15608 12b3 08010000 		.4byte	.LVL351
 15609 12b7 0D010000 		.4byte	.LVL352-1
 15610 12bb 0100     		.2byte	0x1
 15611 12bd 51       		.byte	0x51
 15612 12be 14010000 		.4byte	.LVL353
 15613 12c2 1E010000 		.4byte	.LVL354
 15614 12c6 0100     		.2byte	0x1
 15615 12c8 52       		.byte	0x52
 15616 12c9 00000000 		.4byte	0
 15617 12cd 00000000 		.4byte	0
 15618              	.LLST80:
 15619 12d1 2C000000 		.4byte	.LVL317
 15620 12d5 32000000 		.4byte	.LVL318
 15621 12d9 0100     		.2byte	0x1
 15622 12db 51       		.byte	0x51
 15623 12dc 32000000 		.4byte	.LVL318
 15624 12e0 50000000 		.4byte	.LVL322
 15625 12e4 0100     		.2byte	0x1
 15626 12e6 58       		.byte	0x58
 15627 12e7 50000000 		.4byte	.LVL322
 15628 12eb 52000000 		.4byte	.LVL323
 15629 12ef 0100     		.2byte	0x1
 15630 12f1 53       		.byte	0x53
 15631 12f2 52000000 		.4byte	.LVL323
 15632 12f6 B0000000 		.4byte	.LVL336
 15633 12fa 0100     		.2byte	0x1
 15634 12fc 59       		.byte	0x59
 15635 12fd 00000000 		.4byte	0
 15636 1301 00000000 		.4byte	0
 15637              	.LLST81:
 15638 1305 58000000 		.4byte	.LVL324
 15639 1309 72000000 		.4byte	.LVL326
 15640 130d 0100     		.2byte	0x1
 15641 130f 53       		.byte	0x53
 15642 1310 72000000 		.4byte	.LVL326
 15643 1314 90000000 		.4byte	.LVL330
 15644 1318 0A00     		.2byte	0xa
 15645 131a 78       		.byte	0x78
 15646 131b 00       		.sleb128 0
 15647 131c 47       		.byte	0x47
 15648 131d 24       		.byte	0x24
 15649 131e 47       		.byte	0x47
 15650 131f 25       		.byte	0x25
 15651 1320 7A       		.byte	0x7a
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 373


 15652 1321 00       		.sleb128 0
 15653 1322 22       		.byte	0x22
 15654 1323 9F       		.byte	0x9f
 15655 1324 90000000 		.4byte	.LVL330
 15656 1328 AC000000 		.4byte	.LVL335
 15657 132c 0100     		.2byte	0x1
 15658 132e 53       		.byte	0x53
 15659 132f AC000000 		.4byte	.LVL335
 15660 1333 B0000000 		.4byte	.LVL336
 15661 1337 0A00     		.2byte	0xa
 15662 1339 79       		.byte	0x79
 15663 133a 00       		.sleb128 0
 15664 133b 47       		.byte	0x47
 15665 133c 24       		.byte	0x24
 15666 133d 47       		.byte	0x47
 15667 133e 25       		.byte	0x25
 15668 133f 7A       		.byte	0x7a
 15669 1340 00       		.sleb128 0
 15670 1341 22       		.byte	0x22
 15671 1342 9F       		.byte	0x9f
 15672 1343 00000000 		.4byte	0
 15673 1347 00000000 		.4byte	0
 15674              	.LLST82:
 15675 134b 10000000 		.4byte	.LVL316
 15676 134f 42000000 		.4byte	.LVL321
 15677 1353 0200     		.2byte	0x2
 15678 1355 32       		.byte	0x32
 15679 1356 9F       		.byte	0x9f
 15680 1357 42000000 		.4byte	.LVL321
 15681 135b 80000000 		.4byte	.LVL327
 15682 135f 0100     		.2byte	0x1
 15683 1361 50       		.byte	0x50
 15684 1362 80000000 		.4byte	.LVL327
 15685 1366 86000000 		.4byte	.LVL329
 15686 136a 0100     		.2byte	0x1
 15687 136c 55       		.byte	0x55
 15688 136d 86000000 		.4byte	.LVL329
 15689 1371 A0000000 		.4byte	.LVL333
 15690 1375 0100     		.2byte	0x1
 15691 1377 50       		.byte	0x50
 15692 1378 A0000000 		.4byte	.LVL333
 15693 137c B0000000 		.4byte	.LVL336
 15694 1380 0100     		.2byte	0x1
 15695 1382 55       		.byte	0x55
 15696 1383 B0000000 		.4byte	.LVL336
 15697 1387 BE000000 		.4byte	.LVL339
 15698 138b 0200     		.2byte	0x2
 15699 138d 32       		.byte	0x32
 15700 138e 9F       		.byte	0x9f
 15701 138f BE000000 		.4byte	.LVL339
 15702 1393 D0000000 		.4byte	.LVL341
 15703 1397 0100     		.2byte	0x1
 15704 1399 50       		.byte	0x50
 15705 139a D0000000 		.4byte	.LVL341
 15706 139e DA000000 		.4byte	.LVL343
 15707 13a2 0100     		.2byte	0x1
 15708 13a4 55       		.byte	0x55
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 374


 15709 13a5 DA000000 		.4byte	.LVL343
 15710 13a9 E8000000 		.4byte	.LVL346
 15711 13ad 0200     		.2byte	0x2
 15712 13af 32       		.byte	0x32
 15713 13b0 9F       		.byte	0x9f
 15714 13b1 E8000000 		.4byte	.LVL346
 15715 13b5 FE000000 		.4byte	.LVL349
 15716 13b9 0100     		.2byte	0x1
 15717 13bb 50       		.byte	0x50
 15718 13bc FE000000 		.4byte	.LVL349
 15719 13c0 14010000 		.4byte	.LVL353
 15720 13c4 0100     		.2byte	0x1
 15721 13c6 55       		.byte	0x55
 15722 13c7 14010000 		.4byte	.LVL353
 15723 13cb 1E010000 		.4byte	.LVL354
 15724 13cf 0200     		.2byte	0x2
 15725 13d1 32       		.byte	0x32
 15726 13d2 9F       		.byte	0x9f
 15727 13d3 1E010000 		.4byte	.LVL354
 15728 13d7 20010000 		.4byte	.LVL355
 15729 13db 0100     		.2byte	0x1
 15730 13dd 55       		.byte	0x55
 15731 13de 00000000 		.4byte	0
 15732 13e2 00000000 		.4byte	0
 15733              	.LLST83:
 15734 13e6 00000000 		.4byte	.LVL357
 15735 13ea 2C000000 		.4byte	.LVL363
 15736 13ee 0100     		.2byte	0x1
 15737 13f0 50       		.byte	0x50
 15738 13f1 2C000000 		.4byte	.LVL363
 15739 13f5 6E000000 		.4byte	.LVL374
 15740 13f9 0400     		.2byte	0x4
 15741 13fb F3       		.byte	0xf3
 15742 13fc 01       		.uleb128 0x1
 15743 13fd 50       		.byte	0x50
 15744 13fe 9F       		.byte	0x9f
 15745 13ff 6E000000 		.4byte	.LVL374
 15746 1403 78000000 		.4byte	.LVL376
 15747 1407 0100     		.2byte	0x1
 15748 1409 50       		.byte	0x50
 15749 140a 78000000 		.4byte	.LVL376
 15750 140e 92000000 		.4byte	.LVL381
 15751 1412 0400     		.2byte	0x4
 15752 1414 F3       		.byte	0xf3
 15753 1415 01       		.uleb128 0x1
 15754 1416 50       		.byte	0x50
 15755 1417 9F       		.byte	0x9f
 15756 1418 92000000 		.4byte	.LVL381
 15757 141c 9C000000 		.4byte	.LVL383
 15758 1420 0100     		.2byte	0x1
 15759 1422 50       		.byte	0x50
 15760 1423 9C000000 		.4byte	.LVL383
 15761 1427 BA000000 		.4byte	.LVL389
 15762 142b 0400     		.2byte	0x4
 15763 142d F3       		.byte	0xf3
 15764 142e 01       		.uleb128 0x1
 15765 142f 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 375


 15766 1430 9F       		.byte	0x9f
 15767 1431 BA000000 		.4byte	.LVL389
 15768 1435 BC000000 		.4byte	.LVL390
 15769 1439 0100     		.2byte	0x1
 15770 143b 50       		.byte	0x50
 15771 143c BC000000 		.4byte	.LVL390
 15772 1440 BE000000 		.4byte	.LVL391
 15773 1444 0400     		.2byte	0x4
 15774 1446 F3       		.byte	0xf3
 15775 1447 01       		.uleb128 0x1
 15776 1448 50       		.byte	0x50
 15777 1449 9F       		.byte	0x9f
 15778 144a BE000000 		.4byte	.LVL391
 15779 144e C0000000 		.4byte	.LVL392
 15780 1452 0100     		.2byte	0x1
 15781 1454 50       		.byte	0x50
 15782 1455 C0000000 		.4byte	.LVL392
 15783 1459 C2000000 		.4byte	.LVL393
 15784 145d 0400     		.2byte	0x4
 15785 145f F3       		.byte	0xf3
 15786 1460 01       		.uleb128 0x1
 15787 1461 50       		.byte	0x50
 15788 1462 9F       		.byte	0x9f
 15789 1463 C2000000 		.4byte	.LVL393
 15790 1467 C4000000 		.4byte	.LVL394
 15791 146b 0100     		.2byte	0x1
 15792 146d 50       		.byte	0x50
 15793 146e C4000000 		.4byte	.LVL394
 15794 1472 DE000000 		.4byte	.LFE14
 15795 1476 0400     		.2byte	0x4
 15796 1478 F3       		.byte	0xf3
 15797 1479 01       		.uleb128 0x1
 15798 147a 50       		.byte	0x50
 15799 147b 9F       		.byte	0x9f
 15800 147c 00000000 		.4byte	0
 15801 1480 00000000 		.4byte	0
 15802              	.LLST84:
 15803 1484 00000000 		.4byte	.LVL357
 15804 1488 24000000 		.4byte	.LVL362
 15805 148c 0100     		.2byte	0x1
 15806 148e 51       		.byte	0x51
 15807 148f 24000000 		.4byte	.LVL362
 15808 1493 6E000000 		.4byte	.LVL374
 15809 1497 0100     		.2byte	0x1
 15810 1499 54       		.byte	0x54
 15811 149a 6E000000 		.4byte	.LVL374
 15812 149e 70000000 		.4byte	.LVL375
 15813 14a2 0100     		.2byte	0x1
 15814 14a4 51       		.byte	0x51
 15815 14a5 70000000 		.4byte	.LVL375
 15816 14a9 84000000 		.4byte	.LVL379
 15817 14ad 0100     		.2byte	0x1
 15818 14af 54       		.byte	0x54
 15819 14b0 84000000 		.4byte	.LVL379
 15820 14b4 92000000 		.4byte	.LVL381
 15821 14b8 0400     		.2byte	0x4
 15822 14ba F3       		.byte	0xf3
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 376


 15823 14bb 01       		.uleb128 0x1
 15824 14bc 51       		.byte	0x51
 15825 14bd 9F       		.byte	0x9f
 15826 14be 92000000 		.4byte	.LVL381
 15827 14c2 94000000 		.4byte	.LVL382
 15828 14c6 0100     		.2byte	0x1
 15829 14c8 51       		.byte	0x51
 15830 14c9 94000000 		.4byte	.LVL382
 15831 14cd A8000000 		.4byte	.LVL386
 15832 14d1 0100     		.2byte	0x1
 15833 14d3 54       		.byte	0x54
 15834 14d4 A8000000 		.4byte	.LVL386
 15835 14d8 BA000000 		.4byte	.LVL389
 15836 14dc 0400     		.2byte	0x4
 15837 14de F3       		.byte	0xf3
 15838 14df 01       		.uleb128 0x1
 15839 14e0 51       		.byte	0x51
 15840 14e1 9F       		.byte	0x9f
 15841 14e2 BA000000 		.4byte	.LVL389
 15842 14e6 C6000000 		.4byte	.LVL395
 15843 14ea 0100     		.2byte	0x1
 15844 14ec 51       		.byte	0x51
 15845 14ed C6000000 		.4byte	.LVL395
 15846 14f1 DC000000 		.4byte	.LVL398
 15847 14f5 0100     		.2byte	0x1
 15848 14f7 54       		.byte	0x54
 15849 14f8 DC000000 		.4byte	.LVL398
 15850 14fc DE000000 		.4byte	.LFE14
 15851 1500 0400     		.2byte	0x4
 15852 1502 F3       		.byte	0xf3
 15853 1503 01       		.uleb128 0x1
 15854 1504 51       		.byte	0x51
 15855 1505 9F       		.byte	0x9f
 15856 1506 00000000 		.4byte	0
 15857 150a 00000000 		.4byte	0
 15858              	.LLST85:
 15859 150e 40000000 		.4byte	.LVL366
 15860 1512 60000000 		.4byte	.LVL370
 15861 1516 0100     		.2byte	0x1
 15862 1518 56       		.byte	0x56
 15863 1519 60000000 		.4byte	.LVL370
 15864 151d 66000000 		.4byte	.LVL371
 15865 1521 0100     		.2byte	0x1
 15866 1523 50       		.byte	0x50
 15867 1524 66000000 		.4byte	.LVL371
 15868 1528 68000000 		.4byte	.LVL372
 15869 152c 0D00     		.2byte	0xd
 15870 152e 75       		.byte	0x75
 15871 152f 00       		.sleb128 0
 15872 1530 94       		.byte	0x94
 15873 1531 01       		.byte	0x1
 15874 1532 08       		.byte	0x8
 15875 1533 FF       		.byte	0xff
 15876 1534 1A       		.byte	0x1a
 15877 1535 38       		.byte	0x38
 15878 1536 24       		.byte	0x24
 15879 1537 76       		.byte	0x76
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 377


 15880 1538 00       		.sleb128 0
 15881 1539 21       		.byte	0x21
 15882 153a 9F       		.byte	0x9f
 15883 153b 68000000 		.4byte	.LVL372
 15884 153f 6A000000 		.4byte	.LVL373
 15885 1543 0100     		.2byte	0x1
 15886 1545 50       		.byte	0x50
 15887 1546 6A000000 		.4byte	.LVL373
 15888 154a 6E000000 		.4byte	.LVL374
 15889 154e 0D00     		.2byte	0xd
 15890 1550 75       		.byte	0x75
 15891 1551 00       		.sleb128 0
 15892 1552 94       		.byte	0x94
 15893 1553 01       		.byte	0x1
 15894 1554 08       		.byte	0x8
 15895 1555 FF       		.byte	0xff
 15896 1556 1A       		.byte	0x1a
 15897 1557 38       		.byte	0x38
 15898 1558 24       		.byte	0x24
 15899 1559 76       		.byte	0x76
 15900 155a 00       		.sleb128 0
 15901 155b 21       		.byte	0x21
 15902 155c 9F       		.byte	0x9f
 15903 155d CC000000 		.4byte	.LVL396
 15904 1561 D2000000 		.4byte	.LVL397
 15905 1565 0100     		.2byte	0x1
 15906 1567 56       		.byte	0x56
 15907 1568 00000000 		.4byte	0
 15908 156c 00000000 		.4byte	0
 15909              	.LLST86:
 15910 1570 1E000000 		.4byte	.LVL360
 15911 1574 22000000 		.4byte	.LVL361
 15912 1578 0100     		.2byte	0x1
 15913 157a 51       		.byte	0x51
 15914 157b 22000000 		.4byte	.LVL361
 15915 157f 36000000 		.4byte	.LVL365
 15916 1583 0100     		.2byte	0x1
 15917 1585 56       		.byte	0x56
 15918 1586 36000000 		.4byte	.LVL365
 15919 158a 54000000 		.4byte	.LVL368
 15920 158e 0100     		.2byte	0x1
 15921 1590 57       		.byte	0x57
 15922 1591 54000000 		.4byte	.LVL368
 15923 1595 6E000000 		.4byte	.LVL374
 15924 1599 0A00     		.2byte	0xa
 15925 159b 74       		.byte	0x74
 15926 159c 00       		.sleb128 0
 15927 159d 31       		.byte	0x31
 15928 159e 25       		.byte	0x25
 15929 159f 74       		.byte	0x74
 15930 15a0 00       		.sleb128 0
 15931 15a1 22       		.byte	0x22
 15932 15a2 23       		.byte	0x23
 15933 15a3 01       		.uleb128 0x1
 15934 15a4 9F       		.byte	0x9f
 15935 15a5 C6000000 		.4byte	.LVL395
 15936 15a9 CC000000 		.4byte	.LVL396
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 378


 15937 15ad 0100     		.2byte	0x1
 15938 15af 56       		.byte	0x56
 15939 15b0 CC000000 		.4byte	.LVL396
 15940 15b4 D2000000 		.4byte	.LVL397
 15941 15b8 0100     		.2byte	0x1
 15942 15ba 57       		.byte	0x57
 15943 15bb 00000000 		.4byte	0
 15944 15bf 00000000 		.4byte	0
 15945              	.LLST87:
 15946 15c3 10000000 		.4byte	.LVL359
 15947 15c7 90000000 		.4byte	.LVL380
 15948 15cb 0300     		.2byte	0x3
 15949 15cd 09       		.byte	0x9
 15950 15ce FF       		.byte	0xff
 15951 15cf 9F       		.byte	0x9f
 15952 15d0 90000000 		.4byte	.LVL380
 15953 15d4 92000000 		.4byte	.LVL381
 15954 15d8 0100     		.2byte	0x1
 15955 15da 50       		.byte	0x50
 15956 15db 92000000 		.4byte	.LVL381
 15957 15df B8000000 		.4byte	.LVL388
 15958 15e3 0300     		.2byte	0x3
 15959 15e5 09       		.byte	0x9
 15960 15e6 FF       		.byte	0xff
 15961 15e7 9F       		.byte	0x9f
 15962 15e8 B8000000 		.4byte	.LVL388
 15963 15ec BA000000 		.4byte	.LVL389
 15964 15f0 0100     		.2byte	0x1
 15965 15f2 50       		.byte	0x50
 15966 15f3 C2000000 		.4byte	.LVL393
 15967 15f7 DC000000 		.4byte	.LVL398
 15968 15fb 0300     		.2byte	0x3
 15969 15fd 09       		.byte	0x9
 15970 15fe FF       		.byte	0xff
 15971 15ff 9F       		.byte	0x9f
 15972 1600 DC000000 		.4byte	.LVL398
 15973 1604 DE000000 		.4byte	.LFE14
 15974 1608 0100     		.2byte	0x1
 15975 160a 50       		.byte	0x50
 15976 160b 00000000 		.4byte	0
 15977 160f 00000000 		.4byte	0
 15978              	.LLST88:
 15979 1613 06000000 		.4byte	.LVL358
 15980 1617 58000000 		.4byte	.LVL369
 15981 161b 0100     		.2byte	0x1
 15982 161d 55       		.byte	0x55
 15983 161e 6E000000 		.4byte	.LVL374
 15984 1622 82000000 		.4byte	.LVL378
 15985 1626 0100     		.2byte	0x1
 15986 1628 55       		.byte	0x55
 15987 1629 82000000 		.4byte	.LVL378
 15988 162d 92000000 		.4byte	.LVL381
 15989 1631 0300     		.2byte	0x3
 15990 1633 75       		.byte	0x75
 15991 1634 50       		.sleb128 -48
 15992 1635 9F       		.byte	0x9f
 15993 1636 92000000 		.4byte	.LVL381
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 379


 15994 163a A6000000 		.4byte	.LVL385
 15995 163e 0100     		.2byte	0x1
 15996 1640 55       		.byte	0x55
 15997 1641 A6000000 		.4byte	.LVL385
 15998 1645 BA000000 		.4byte	.LVL389
 15999 1649 0300     		.2byte	0x3
 16000 164b 75       		.byte	0x75
 16001 164c 50       		.sleb128 -48
 16002 164d 9F       		.byte	0x9f
 16003 164e BA000000 		.4byte	.LVL389
 16004 1652 DC000000 		.4byte	.LVL398
 16005 1656 0100     		.2byte	0x1
 16006 1658 55       		.byte	0x55
 16007 1659 00000000 		.4byte	0
 16008 165d 00000000 		.4byte	0
 16009              	.LLST89:
 16010 1661 00000000 		.4byte	.LVL399
 16011 1665 40000000 		.4byte	.LVL404
 16012 1669 0100     		.2byte	0x1
 16013 166b 50       		.byte	0x50
 16014 166c 40000000 		.4byte	.LVL404
 16015 1670 86000000 		.4byte	.LVL412
 16016 1674 0100     		.2byte	0x1
 16017 1676 56       		.byte	0x56
 16018 1677 86000000 		.4byte	.LVL412
 16019 167b 88000000 		.4byte	.LVL413
 16020 167f 0100     		.2byte	0x1
 16021 1681 50       		.byte	0x50
 16022 1682 88000000 		.4byte	.LVL413
 16023 1686 8A000000 		.4byte	.LVL414
 16024 168a 0100     		.2byte	0x1
 16025 168c 56       		.byte	0x56
 16026 168d 8A000000 		.4byte	.LVL414
 16027 1691 8C000000 		.4byte	.LVL415
 16028 1695 0100     		.2byte	0x1
 16029 1697 50       		.byte	0x50
 16030 1698 8C000000 		.4byte	.LVL415
 16031 169c 8E000000 		.4byte	.LVL416
 16032 16a0 0100     		.2byte	0x1
 16033 16a2 56       		.byte	0x56
 16034 16a3 8E000000 		.4byte	.LVL416
 16035 16a7 90000000 		.4byte	.LVL417
 16036 16ab 0100     		.2byte	0x1
 16037 16ad 50       		.byte	0x50
 16038 16ae 90000000 		.4byte	.LVL417
 16039 16b2 A0000000 		.4byte	.LVL426
 16040 16b6 0100     		.2byte	0x1
 16041 16b8 56       		.byte	0x56
 16042 16b9 A0000000 		.4byte	.LVL426
 16043 16bd AC000000 		.4byte	.LFE19
 16044 16c1 0400     		.2byte	0x4
 16045 16c3 F3       		.byte	0xf3
 16046 16c4 01       		.uleb128 0x1
 16047 16c5 50       		.byte	0x50
 16048 16c6 9F       		.byte	0x9f
 16049 16c7 00000000 		.4byte	0
 16050 16cb 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 380


 16051              	.LLST90:
 16052 16cf 00000000 		.4byte	.LVL399
 16053 16d3 40000000 		.4byte	.LVL404
 16054 16d7 0100     		.2byte	0x1
 16055 16d9 51       		.byte	0x51
 16056 16da 40000000 		.4byte	.LVL404
 16057 16de 7C000000 		.4byte	.LVL411
 16058 16e2 0100     		.2byte	0x1
 16059 16e4 54       		.byte	0x54
 16060 16e5 86000000 		.4byte	.LVL412
 16061 16e9 92000000 		.4byte	.LVL418
 16062 16ed 0100     		.2byte	0x1
 16063 16ef 51       		.byte	0x51
 16064 16f0 92000000 		.4byte	.LVL418
 16065 16f4 A0000000 		.4byte	.LVL425
 16066 16f8 0100     		.2byte	0x1
 16067 16fa 54       		.byte	0x54
 16068 16fb 00000000 		.4byte	0
 16069 16ff 00000000 		.4byte	0
 16070              	.LLST91:
 16071 1703 3E000000 		.4byte	.LVL403
 16072 1707 47000000 		.4byte	.LVL405-1
 16073 170b 0100     		.2byte	0x1
 16074 170d 53       		.byte	0x53
 16075 170e 47000000 		.4byte	.LVL405-1
 16076 1712 5C000000 		.4byte	.LVL407
 16077 1716 0100     		.2byte	0x1
 16078 1718 58       		.byte	0x58
 16079 1719 5C000000 		.4byte	.LVL407
 16080 171d 67000000 		.4byte	.LVL408-1
 16081 1721 0100     		.2byte	0x1
 16082 1723 53       		.byte	0x53
 16083 1724 67000000 		.4byte	.LVL408-1
 16084 1728 6A000000 		.4byte	.LVL409
 16085 172c 0100     		.2byte	0x1
 16086 172e 58       		.byte	0x58
 16087 172f 92000000 		.4byte	.LVL418
 16088 1733 9E000000 		.4byte	.LVL424
 16089 1737 0100     		.2byte	0x1
 16090 1739 58       		.byte	0x58
 16091 173a 00000000 		.4byte	0
 16092 173e 00000000 		.4byte	0
 16093              	.LLST92:
 16094 1742 1A000000 		.4byte	.LVL401
 16095 1746 4A000000 		.4byte	.LVL406
 16096 174a 0100     		.2byte	0x1
 16097 174c 55       		.byte	0x55
 16098 174d 4A000000 		.4byte	.LVL406
 16099 1751 5C000000 		.4byte	.LVL407
 16100 1755 0100     		.2byte	0x1
 16101 1757 50       		.byte	0x50
 16102 1758 5C000000 		.4byte	.LVL407
 16103 175c 86000000 		.4byte	.LVL412
 16104 1760 0100     		.2byte	0x1
 16105 1762 55       		.byte	0x55
 16106 1763 8E000000 		.4byte	.LVL416
 16107 1767 92000000 		.4byte	.LVL418
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 381


 16108 176b 0100     		.2byte	0x1
 16109 176d 55       		.byte	0x55
 16110 176e 92000000 		.4byte	.LVL418
 16111 1772 94000000 		.4byte	.LVL419
 16112 1776 0100     		.2byte	0x1
 16113 1778 50       		.byte	0x50
 16114 1779 94000000 		.4byte	.LVL419
 16115 177d 96000000 		.4byte	.LVL420
 16116 1781 0100     		.2byte	0x1
 16117 1783 55       		.byte	0x55
 16118 1784 96000000 		.4byte	.LVL420
 16119 1788 98000000 		.4byte	.LVL421
 16120 178c 0100     		.2byte	0x1
 16121 178e 50       		.byte	0x50
 16122 178f 98000000 		.4byte	.LVL421
 16123 1793 9A000000 		.4byte	.LVL422
 16124 1797 0100     		.2byte	0x1
 16125 1799 55       		.byte	0x55
 16126 179a 9A000000 		.4byte	.LVL422
 16127 179e 9C000000 		.4byte	.LVL423
 16128 17a2 0100     		.2byte	0x1
 16129 17a4 50       		.byte	0x50
 16130 17a5 9C000000 		.4byte	.LVL423
 16131 17a9 A0000000 		.4byte	.LVL425
 16132 17ad 0100     		.2byte	0x1
 16133 17af 55       		.byte	0x55
 16134 17b0 00000000 		.4byte	0
 16135 17b4 00000000 		.4byte	0
 16136              	.LLST93:
 16137 17b8 0C000000 		.4byte	.LVL400
 16138 17bc 7A000000 		.4byte	.LVL410
 16139 17c0 0100     		.2byte	0x1
 16140 17c2 57       		.byte	0x57
 16141 17c3 7A000000 		.4byte	.LVL410
 16142 17c7 86000000 		.4byte	.LVL412
 16143 17cb 0300     		.2byte	0x3
 16144 17cd 77       		.byte	0x77
 16145 17ce 50       		.sleb128 -48
 16146 17cf 9F       		.byte	0x9f
 16147 17d0 86000000 		.4byte	.LVL412
 16148 17d4 A0000000 		.4byte	.LVL425
 16149 17d8 0100     		.2byte	0x1
 16150 17da 57       		.byte	0x57
 16151 17db 00000000 		.4byte	0
 16152 17df 00000000 		.4byte	0
 16153              	.LLST94:
 16154 17e3 00000000 		.4byte	.LVL427
 16155 17e7 21000000 		.4byte	.LVL431-1
 16156 17eb 0100     		.2byte	0x1
 16157 17ed 50       		.byte	0x50
 16158 17ee 21000000 		.4byte	.LVL431-1
 16159 17f2 34000000 		.4byte	.LVL432
 16160 17f6 0100     		.2byte	0x1
 16161 17f8 55       		.byte	0x55
 16162 17f9 34000000 		.4byte	.LVL432
 16163 17fd 3A000000 		.4byte	.LVL435
 16164 1801 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 382


 16165 1803 50       		.byte	0x50
 16166 1804 3A000000 		.4byte	.LVL435
 16167 1808 02010000 		.4byte	.LVL468
 16168 180c 0100     		.2byte	0x1
 16169 180e 55       		.byte	0x55
 16170 180f 02010000 		.4byte	.LVL468
 16171 1813 08010000 		.4byte	.LFE17
 16172 1817 0400     		.2byte	0x4
 16173 1819 F3       		.byte	0xf3
 16174 181a 01       		.uleb128 0x1
 16175 181b 50       		.byte	0x50
 16176 181c 9F       		.byte	0x9f
 16177 181d 00000000 		.4byte	0
 16178 1821 00000000 		.4byte	0
 16179              	.LLST95:
 16180 1825 00000000 		.4byte	.LVL427
 16181 1829 21000000 		.4byte	.LVL431-1
 16182 182d 0100     		.2byte	0x1
 16183 182f 51       		.byte	0x51
 16184 1830 21000000 		.4byte	.LVL431-1
 16185 1834 34000000 		.4byte	.LVL432
 16186 1838 0100     		.2byte	0x1
 16187 183a 58       		.byte	0x58
 16188 183b 34000000 		.4byte	.LVL432
 16189 183f 3A000000 		.4byte	.LVL435
 16190 1843 0100     		.2byte	0x1
 16191 1845 51       		.byte	0x51
 16192 1846 3A000000 		.4byte	.LVL435
 16193 184a C2000000 		.4byte	.LVL455
 16194 184e 0100     		.2byte	0x1
 16195 1850 58       		.byte	0x58
 16196 1851 C2000000 		.4byte	.LVL455
 16197 1855 CB000000 		.4byte	.LVL457-1
 16198 1859 0100     		.2byte	0x1
 16199 185b 53       		.byte	0x53
 16200 185c CB000000 		.4byte	.LVL457-1
 16201 1860 02010000 		.4byte	.LVL470
 16202 1864 0100     		.2byte	0x1
 16203 1866 58       		.byte	0x58
 16204 1867 02010000 		.4byte	.LVL470
 16205 186b 08010000 		.4byte	.LFE17
 16206 186f 0400     		.2byte	0x4
 16207 1871 F3       		.byte	0xf3
 16208 1872 01       		.uleb128 0x1
 16209 1873 51       		.byte	0x51
 16210 1874 9F       		.byte	0x9f
 16211 1875 00000000 		.4byte	0
 16212 1879 00000000 		.4byte	0
 16213              	.LLST96:
 16214 187d 22000000 		.4byte	.LVL431
 16215 1881 34000000 		.4byte	.LVL432
 16216 1885 0100     		.2byte	0x1
 16217 1887 50       		.byte	0x50
 16218 1888 56000000 		.4byte	.LVL439
 16219 188c 64000000 		.4byte	.LVL440
 16220 1890 0100     		.2byte	0x1
 16221 1892 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 383


 16222 1893 64000000 		.4byte	.LVL440
 16223 1897 72000000 		.4byte	.LVL442
 16224 189b 0100     		.2byte	0x1
 16225 189d 53       		.byte	0x53
 16226 189e 76000000 		.4byte	.LVL443
 16227 18a2 7E000000 		.4byte	.LVL447
 16228 18a6 0100     		.2byte	0x1
 16229 18a8 53       		.byte	0x53
 16230 18a9 9A000000 		.4byte	.LVL452
 16231 18ad AC000000 		.4byte	.LVL453
 16232 18b1 0100     		.2byte	0x1
 16233 18b3 50       		.byte	0x50
 16234 18b4 F4000000 		.4byte	.LVL461
 16235 18b8 F6000000 		.4byte	.LVL462
 16236 18bc 0100     		.2byte	0x1
 16237 18be 50       		.byte	0x50
 16238 18bf FC000000 		.4byte	.LVL464
 16239 18c3 FE000000 		.4byte	.LVL465
 16240 18c7 0100     		.2byte	0x1
 16241 18c9 50       		.byte	0x50
 16242 18ca 00000000 		.4byte	0
 16243 18ce 00000000 		.4byte	0
 16244              	.LLST97:
 16245 18d2 40000000 		.4byte	.LVL436
 16246 18d6 46000000 		.4byte	.LVL437
 16247 18da 0200     		.2byte	0x2
 16248 18dc 30       		.byte	0x30
 16249 18dd 9F       		.byte	0x9f
 16250 18de 46000000 		.4byte	.LVL437
 16251 18e2 70000000 		.4byte	.LVL441
 16252 18e6 0100     		.2byte	0x1
 16253 18e8 54       		.byte	0x54
 16254 18e9 72000000 		.4byte	.LVL442
 16255 18ed 76000000 		.4byte	.LVL443
 16256 18f1 0200     		.2byte	0x2
 16257 18f3 30       		.byte	0x30
 16258 18f4 9F       		.byte	0x9f
 16259 18f5 76000000 		.4byte	.LVL443
 16260 18f9 78000000 		.4byte	.LVL444
 16261 18fd 0100     		.2byte	0x1
 16262 18ff 54       		.byte	0x54
 16263 1900 7A000000 		.4byte	.LVL445
 16264 1904 8C000000 		.4byte	.LVL450
 16265 1908 0100     		.2byte	0x1
 16266 190a 54       		.byte	0x54
 16267 190b 8C000000 		.4byte	.LVL450
 16268 190f 92000000 		.4byte	.LVL451
 16269 1913 0200     		.2byte	0x2
 16270 1915 32       		.byte	0x32
 16271 1916 9F       		.byte	0x9f
 16272 1917 92000000 		.4byte	.LVL451
 16273 191b F4000000 		.4byte	.LVL461
 16274 191f 0100     		.2byte	0x1
 16275 1921 54       		.byte	0x54
 16276 1922 F8000000 		.4byte	.LVL463
 16277 1926 FC000000 		.4byte	.LVL464
 16278 192a 0200     		.2byte	0x2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 384


 16279 192c 32       		.byte	0x32
 16280 192d 9F       		.byte	0x9f
 16281 192e FC000000 		.4byte	.LVL464
 16282 1932 02010000 		.4byte	.LVL467
 16283 1936 0100     		.2byte	0x1
 16284 1938 54       		.byte	0x54
 16285 1939 00000000 		.4byte	0
 16286 193d 00000000 		.4byte	0
 16287              	.LLST98:
 16288 1941 12000000 		.4byte	.LVL429
 16289 1945 1E000000 		.4byte	.LVL430
 16290 1949 0100     		.2byte	0x1
 16291 194b 56       		.byte	0x56
 16292 194c 34000000 		.4byte	.LVL432
 16293 1950 36000000 		.4byte	.LVL433
 16294 1954 0100     		.2byte	0x1
 16295 1956 56       		.byte	0x56
 16296 1957 36000000 		.4byte	.LVL433
 16297 195b 38000000 		.4byte	.LVL434
 16298 195f 0200     		.2byte	0x2
 16299 1961 77       		.byte	0x77
 16300 1962 0C       		.sleb128 12
 16301 1963 38000000 		.4byte	.LVL434
 16302 1967 7C000000 		.4byte	.LVL446
 16303 196b 0100     		.2byte	0x1
 16304 196d 56       		.byte	0x56
 16305 196e 7E000000 		.4byte	.LVL447
 16306 1972 F4000000 		.4byte	.LVL461
 16307 1976 0100     		.2byte	0x1
 16308 1978 56       		.byte	0x56
 16309 1979 F8000000 		.4byte	.LVL463
 16310 197d 02010000 		.4byte	.LVL467
 16311 1981 0100     		.2byte	0x1
 16312 1983 56       		.byte	0x56
 16313 1984 00000000 		.4byte	0
 16314 1988 00000000 		.4byte	0
 16315              	.LLST99:
 16316 198c B8000000 		.4byte	.LVL454
 16317 1990 C8000000 		.4byte	.LVL456
 16318 1994 0100     		.2byte	0x1
 16319 1996 50       		.byte	0x50
 16320 1997 CC000000 		.4byte	.LVL457
 16321 199b EA000000 		.4byte	.LVL458
 16322 199f 0100     		.2byte	0x1
 16323 19a1 50       		.byte	0x50
 16324 19a2 EC000000 		.4byte	.LVL459
 16325 19a6 F2000000 		.4byte	.LVL460
 16326 19aa 0100     		.2byte	0x1
 16327 19ac 50       		.byte	0x50
 16328 19ad 00010000 		.4byte	.LVL466
 16329 19b1 02010000 		.4byte	.LVL467
 16330 19b5 0100     		.2byte	0x1
 16331 19b7 50       		.byte	0x50
 16332 19b8 00000000 		.4byte	0
 16333 19bc 00000000 		.4byte	0
 16334              	.LLST100:
 16335 19c0 0C000000 		.4byte	.LVL428
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 385


 16336 19c4 02010000 		.4byte	.LVL469
 16337 19c8 0100     		.2byte	0x1
 16338 19ca 57       		.byte	0x57
 16339 19cb 00000000 		.4byte	0
 16340 19cf 00000000 		.4byte	0
 16341              	.LLST101:
 16342 19d3 00000000 		.4byte	.LVL471
 16343 19d7 1E000000 		.4byte	.LVL475
 16344 19db 0100     		.2byte	0x1
 16345 19dd 50       		.byte	0x50
 16346 19de 1E000000 		.4byte	.LVL475
 16347 19e2 68000000 		.4byte	.LVL485
 16348 19e6 0100     		.2byte	0x1
 16349 19e8 57       		.byte	0x57
 16350 19e9 68000000 		.4byte	.LVL485
 16351 19ed 6A000000 		.4byte	.LVL486
 16352 19f1 0100     		.2byte	0x1
 16353 19f3 50       		.byte	0x50
 16354 19f4 6A000000 		.4byte	.LVL486
 16355 19f8 6C000000 		.4byte	.LVL487
 16356 19fc 0100     		.2byte	0x1
 16357 19fe 57       		.byte	0x57
 16358 19ff 6C000000 		.4byte	.LVL487
 16359 1a03 6E000000 		.4byte	.LVL488
 16360 1a07 0100     		.2byte	0x1
 16361 1a09 50       		.byte	0x50
 16362 1a0a 6E000000 		.4byte	.LVL488
 16363 1a0e 7A000000 		.4byte	.LVL497
 16364 1a12 0100     		.2byte	0x1
 16365 1a14 57       		.byte	0x57
 16366 1a15 7A000000 		.4byte	.LVL497
 16367 1a19 7C000000 		.4byte	.LFE16
 16368 1a1d 0400     		.2byte	0x4
 16369 1a1f F3       		.byte	0xf3
 16370 1a20 01       		.uleb128 0x1
 16371 1a21 50       		.byte	0x50
 16372 1a22 9F       		.byte	0x9f
 16373 1a23 00000000 		.4byte	0
 16374 1a27 00000000 		.4byte	0
 16375              	.LLST102:
 16376 1a2b 00000000 		.4byte	.LVL471
 16377 1a2f 08000000 		.4byte	.LVL472
 16378 1a33 0100     		.2byte	0x1
 16379 1a35 51       		.byte	0x51
 16380 1a36 08000000 		.4byte	.LVL472
 16381 1a3a 5E000000 		.4byte	.LVL482
 16382 1a3e 0100     		.2byte	0x1
 16383 1a40 54       		.byte	0x54
 16384 1a41 5E000000 		.4byte	.LVL482
 16385 1a45 64000000 		.4byte	.LVL483
 16386 1a49 0100     		.2byte	0x1
 16387 1a4b 56       		.byte	0x56
 16388 1a4c 64000000 		.4byte	.LVL483
 16389 1a50 7A000000 		.4byte	.LVL495
 16390 1a54 0100     		.2byte	0x1
 16391 1a56 54       		.byte	0x54
 16392 1a57 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 386


 16393 1a5b 00000000 		.4byte	0
 16394              	.LLST103:
 16395 1a5f 00000000 		.4byte	.LVL471
 16396 1a63 1A000000 		.4byte	.LVL474
 16397 1a67 0100     		.2byte	0x1
 16398 1a69 52       		.byte	0x52
 16399 1a6a 1A000000 		.4byte	.LVL474
 16400 1a6e 21000000 		.4byte	.LVL476-1
 16401 1a72 0100     		.2byte	0x1
 16402 1a74 51       		.byte	0x51
 16403 1a75 21000000 		.4byte	.LVL476-1
 16404 1a79 68000000 		.4byte	.LVL485
 16405 1a7d 0400     		.2byte	0x4
 16406 1a7f F3       		.byte	0xf3
 16407 1a80 01       		.uleb128 0x1
 16408 1a81 52       		.byte	0x52
 16409 1a82 9F       		.byte	0x9f
 16410 1a83 68000000 		.4byte	.LVL485
 16411 1a87 70000000 		.4byte	.LVL489
 16412 1a8b 0100     		.2byte	0x1
 16413 1a8d 51       		.byte	0x51
 16414 1a8e 70000000 		.4byte	.LVL489
 16415 1a92 7C000000 		.4byte	.LFE16
 16416 1a96 0400     		.2byte	0x4
 16417 1a98 F3       		.byte	0xf3
 16418 1a99 01       		.uleb128 0x1
 16419 1a9a 52       		.byte	0x52
 16420 1a9b 9F       		.byte	0x9f
 16421 1a9c 00000000 		.4byte	0
 16422 1aa0 00000000 		.4byte	0
 16423              	.LLST104:
 16424 1aa4 08000000 		.4byte	.LVL472
 16425 1aa8 22000000 		.4byte	.LVL476
 16426 1aac 0200     		.2byte	0x2
 16427 1aae 30       		.byte	0x30
 16428 1aaf 9F       		.byte	0x9f
 16429 1ab0 22000000 		.4byte	.LVL476
 16430 1ab4 26000000 		.4byte	.LVL477
 16431 1ab8 0100     		.2byte	0x1
 16432 1aba 50       		.byte	0x50
 16433 1abb 44000000 		.4byte	.LVL481
 16434 1abf 66000000 		.4byte	.LVL484
 16435 1ac3 0100     		.2byte	0x1
 16436 1ac5 50       		.byte	0x50
 16437 1ac6 68000000 		.4byte	.LVL485
 16438 1aca 70000000 		.4byte	.LVL489
 16439 1ace 0200     		.2byte	0x2
 16440 1ad0 30       		.byte	0x30
 16441 1ad1 9F       		.byte	0x9f
 16442 1ad2 00000000 		.4byte	0
 16443 1ad6 00000000 		.4byte	0
 16444              	.LLST105:
 16445 1ada 30000000 		.4byte	.LVL479
 16446 1ade 40000000 		.4byte	.LVL480
 16447 1ae2 0100     		.2byte	0x1
 16448 1ae4 50       		.byte	0x50
 16449 1ae5 40000000 		.4byte	.LVL480
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 387


 16450 1ae9 64000000 		.4byte	.LVL483
 16451 1aed 0100     		.2byte	0x1
 16452 1aef 56       		.byte	0x56
 16453 1af0 64000000 		.4byte	.LVL483
 16454 1af4 68000000 		.4byte	.LVL485
 16455 1af8 0100     		.2byte	0x1
 16456 1afa 54       		.byte	0x54
 16457 1afb 70000000 		.4byte	.LVL489
 16458 1aff 72000000 		.4byte	.LVL490
 16459 1b03 0100     		.2byte	0x1
 16460 1b05 50       		.byte	0x50
 16461 1b06 72000000 		.4byte	.LVL490
 16462 1b0a 74000000 		.4byte	.LVL491
 16463 1b0e 0100     		.2byte	0x1
 16464 1b10 56       		.byte	0x56
 16465 1b11 74000000 		.4byte	.LVL491
 16466 1b15 76000000 		.4byte	.LVL492
 16467 1b19 0100     		.2byte	0x1
 16468 1b1b 50       		.byte	0x50
 16469 1b1c 76000000 		.4byte	.LVL492
 16470 1b20 78000000 		.4byte	.LVL493
 16471 1b24 0100     		.2byte	0x1
 16472 1b26 56       		.byte	0x56
 16473 1b27 78000000 		.4byte	.LVL493
 16474 1b2b 7A000000 		.4byte	.LVL494
 16475 1b2f 0100     		.2byte	0x1
 16476 1b31 50       		.byte	0x50
 16477 1b32 00000000 		.4byte	0
 16478 1b36 00000000 		.4byte	0
 16479              	.LLST106:
 16480 1b3a 0A000000 		.4byte	.LVL473
 16481 1b3e 7A000000 		.4byte	.LVL496
 16482 1b42 0100     		.2byte	0x1
 16483 1b44 55       		.byte	0x55
 16484 1b45 00000000 		.4byte	0
 16485 1b49 00000000 		.4byte	0
 16486              	.LLST107:
 16487 1b4d 00000000 		.4byte	.LVL498
 16488 1b51 0A000000 		.4byte	.LVL500
 16489 1b55 0100     		.2byte	0x1
 16490 1b57 50       		.byte	0x50
 16491 1b58 0A000000 		.4byte	.LVL500
 16492 1b5c 1C000000 		.4byte	.LVL502
 16493 1b60 0100     		.2byte	0x1
 16494 1b62 54       		.byte	0x54
 16495 1b63 1C000000 		.4byte	.LVL502
 16496 1b67 1E000000 		.4byte	.LFE27
 16497 1b6b 0400     		.2byte	0x4
 16498 1b6d F3       		.byte	0xf3
 16499 1b6e 01       		.uleb128 0x1
 16500 1b6f 50       		.byte	0x50
 16501 1b70 9F       		.byte	0x9f
 16502 1b71 00000000 		.4byte	0
 16503 1b75 00000000 		.4byte	0
 16504              	.LLST108:
 16505 1b79 06000000 		.4byte	.LVL499
 16506 1b7d 1C000000 		.4byte	.LVL503
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 388


 16507 1b81 0100     		.2byte	0x1
 16508 1b83 55       		.byte	0x55
 16509 1b84 00000000 		.4byte	0
 16510 1b88 00000000 		.4byte	0
 16511              	.LLST109:
 16512 1b8c 00000000 		.4byte	.LVL504
 16513 1b90 09000000 		.4byte	.LVL505-1
 16514 1b94 0100     		.2byte	0x1
 16515 1b96 50       		.byte	0x50
 16516 1b97 09000000 		.4byte	.LVL505-1
 16517 1b9b 56000000 		.4byte	.LVL517
 16518 1b9f 0100     		.2byte	0x1
 16519 1ba1 56       		.byte	0x56
 16520 1ba2 56000000 		.4byte	.LVL517
 16521 1ba6 58000000 		.4byte	.LFE18
 16522 1baa 0400     		.2byte	0x4
 16523 1bac F3       		.byte	0xf3
 16524 1bad 01       		.uleb128 0x1
 16525 1bae 50       		.byte	0x50
 16526 1baf 9F       		.byte	0x9f
 16527 1bb0 00000000 		.4byte	0
 16528 1bb4 00000000 		.4byte	0
 16529              	.LLST110:
 16530 1bb8 00000000 		.4byte	.LVL504
 16531 1bbc 09000000 		.4byte	.LVL505-1
 16532 1bc0 0100     		.2byte	0x1
 16533 1bc2 51       		.byte	0x51
 16534 1bc3 09000000 		.4byte	.LVL505-1
 16535 1bc7 2C000000 		.4byte	.LVL510
 16536 1bcb 0100     		.2byte	0x1
 16537 1bcd 54       		.byte	0x54
 16538 1bce 2C000000 		.4byte	.LVL510
 16539 1bd2 54000000 		.4byte	.LVL515
 16540 1bd6 0400     		.2byte	0x4
 16541 1bd8 F3       		.byte	0xf3
 16542 1bd9 01       		.uleb128 0x1
 16543 1bda 51       		.byte	0x51
 16544 1bdb 9F       		.byte	0x9f
 16545 1bdc 54000000 		.4byte	.LVL515
 16546 1be0 56000000 		.4byte	.LVL516
 16547 1be4 0100     		.2byte	0x1
 16548 1be6 54       		.byte	0x54
 16549 1be7 56000000 		.4byte	.LVL516
 16550 1beb 58000000 		.4byte	.LFE18
 16551 1bef 0400     		.2byte	0x4
 16552 1bf1 F3       		.byte	0xf3
 16553 1bf2 01       		.uleb128 0x1
 16554 1bf3 51       		.byte	0x51
 16555 1bf4 9F       		.byte	0x9f
 16556 1bf5 00000000 		.4byte	0
 16557 1bf9 00000000 		.4byte	0
 16558              	.LLST111:
 16559 1bfd 18000000 		.4byte	.LVL507
 16560 1c01 26000000 		.4byte	.LVL508
 16561 1c05 0100     		.2byte	0x1
 16562 1c07 50       		.byte	0x50
 16563 1c08 26000000 		.4byte	.LVL508
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 389


 16564 1c0c 54000000 		.4byte	.LVL515
 16565 1c10 0100     		.2byte	0x1
 16566 1c12 57       		.byte	0x57
 16567 1c13 00000000 		.4byte	0
 16568 1c17 00000000 		.4byte	0
 16569              	.LLST112:
 16570 1c1b 2A000000 		.4byte	.LVL509
 16571 1c1f 2E000000 		.4byte	.LVL511
 16572 1c23 0200     		.2byte	0x2
 16573 1c25 30       		.byte	0x30
 16574 1c26 9F       		.byte	0x9f
 16575 1c27 2E000000 		.4byte	.LVL511
 16576 1c2b 4C000000 		.4byte	.LVL514
 16577 1c2f 0100     		.2byte	0x1
 16578 1c31 54       		.byte	0x54
 16579 1c32 00000000 		.4byte	0
 16580 1c36 00000000 		.4byte	0
 16581              	.LLST113:
 16582 1c3a 2A000000 		.4byte	.LVL509
 16583 1c3e 54000000 		.4byte	.LVL515
 16584 1c42 0200     		.2byte	0x2
 16585 1c44 31       		.byte	0x31
 16586 1c45 9F       		.byte	0x9f
 16587 1c46 00000000 		.4byte	0
 16588 1c4a 00000000 		.4byte	0
 16589              	.LLST114:
 16590 1c4e 2A000000 		.4byte	.LVL509
 16591 1c52 54000000 		.4byte	.LVL515
 16592 1c56 0100     		.2byte	0x1
 16593 1c58 55       		.byte	0x55
 16594 1c59 00000000 		.4byte	0
 16595 1c5d 00000000 		.4byte	0
 16596              	.LLST115:
 16597 1c61 00000000 		.4byte	.LVL518
 16598 1c65 3C000000 		.4byte	.LVL522
 16599 1c69 0100     		.2byte	0x1
 16600 1c6b 50       		.byte	0x50
 16601 1c6c 3C000000 		.4byte	.LVL522
 16602 1c70 3E000000 		.4byte	.LVL523
 16603 1c74 0100     		.2byte	0x1
 16604 1c76 54       		.byte	0x54
 16605 1c77 3E000000 		.4byte	.LVL523
 16606 1c7b 4B000000 		.4byte	.LVL524-1
 16607 1c7f 0100     		.2byte	0x1
 16608 1c81 50       		.byte	0x50
 16609 1c82 4B000000 		.4byte	.LVL524-1
 16610 1c86 A6000000 		.4byte	.LVL537
 16611 1c8a 0100     		.2byte	0x1
 16612 1c8c 54       		.byte	0x54
 16613 1c8d A6000000 		.4byte	.LVL537
 16614 1c91 A8000000 		.4byte	.LVL538
 16615 1c95 0100     		.2byte	0x1
 16616 1c97 50       		.byte	0x50
 16617 1c98 A8000000 		.4byte	.LVL538
 16618 1c9c AA000000 		.4byte	.LVL539
 16619 1ca0 0100     		.2byte	0x1
 16620 1ca2 54       		.byte	0x54
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 390


 16621 1ca3 AA000000 		.4byte	.LVL539
 16622 1ca7 AC000000 		.4byte	.LVL540
 16623 1cab 0100     		.2byte	0x1
 16624 1cad 50       		.byte	0x50
 16625 1cae AC000000 		.4byte	.LVL540
 16626 1cb2 C6000000 		.4byte	.LVL552
 16627 1cb6 0100     		.2byte	0x1
 16628 1cb8 54       		.byte	0x54
 16629 1cb9 C6000000 		.4byte	.LVL552
 16630 1cbd D0000000 		.4byte	.LFE20
 16631 1cc1 0400     		.2byte	0x4
 16632 1cc3 F3       		.byte	0xf3
 16633 1cc4 01       		.uleb128 0x1
 16634 1cc5 50       		.byte	0x50
 16635 1cc6 9F       		.byte	0x9f
 16636 1cc7 00000000 		.4byte	0
 16637 1ccb 00000000 		.4byte	0
 16638              	.LLST116:
 16639 1ccf 00000000 		.4byte	.LVL518
 16640 1cd3 2A000000 		.4byte	.LVL521
 16641 1cd7 0100     		.2byte	0x1
 16642 1cd9 51       		.byte	0x51
 16643 1cda 2A000000 		.4byte	.LVL521
 16644 1cde A6000000 		.4byte	.LVL537
 16645 1ce2 0200     		.2byte	0x2
 16646 1ce4 91       		.byte	0x91
 16647 1ce5 64       		.sleb128 -28
 16648 1ce6 A6000000 		.4byte	.LVL537
 16649 1cea AE000000 		.4byte	.LVL541
 16650 1cee 0100     		.2byte	0x1
 16651 1cf0 51       		.byte	0x51
 16652 1cf1 AE000000 		.4byte	.LVL541
 16653 1cf5 D0000000 		.4byte	.LFE20
 16654 1cf9 0200     		.2byte	0x2
 16655 1cfb 91       		.byte	0x91
 16656 1cfc 64       		.sleb128 -28
 16657 1cfd 00000000 		.4byte	0
 16658 1d01 00000000 		.4byte	0
 16659              	.LLST117:
 16660 1d05 12000000 		.4byte	.LVL520
 16661 1d09 C6000000 		.4byte	.LVL553
 16662 1d0d 0100     		.2byte	0x1
 16663 1d0f 55       		.byte	0x55
 16664 1d10 00000000 		.4byte	0
 16665 1d14 00000000 		.4byte	0
 16666              	.LLST118:
 16667 1d18 4E000000 		.4byte	.LVL525
 16668 1d1c 68000000 		.4byte	.LVL526
 16669 1d20 0100     		.2byte	0x1
 16670 1d22 50       		.byte	0x50
 16671 1d23 68000000 		.4byte	.LVL526
 16672 1d27 6A000000 		.4byte	.LVL527
 16673 1d2b 0100     		.2byte	0x1
 16674 1d2d 59       		.byte	0x59
 16675 1d2e 6A000000 		.4byte	.LVL527
 16676 1d32 6E000000 		.4byte	.LVL528
 16677 1d36 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 391


 16678 1d38 50       		.byte	0x50
 16679 1d39 6E000000 		.4byte	.LVL528
 16680 1d3d 74000000 		.4byte	.LVL530
 16681 1d41 0100     		.2byte	0x1
 16682 1d43 59       		.byte	0x59
 16683 1d44 74000000 		.4byte	.LVL530
 16684 1d48 84000000 		.4byte	.LVL531
 16685 1d4c 0100     		.2byte	0x1
 16686 1d4e 50       		.byte	0x50
 16687 1d4f 84000000 		.4byte	.LVL531
 16688 1d53 87000000 		.4byte	.LVL532-1
 16689 1d57 0100     		.2byte	0x1
 16690 1d59 51       		.byte	0x51
 16691 1d5a 87000000 		.4byte	.LVL532-1
 16692 1d5e 9A000000 		.4byte	.LVL534
 16693 1d62 0100     		.2byte	0x1
 16694 1d64 59       		.byte	0x59
 16695 1d65 AE000000 		.4byte	.LVL541
 16696 1d69 B0000000 		.4byte	.LVL542
 16697 1d6d 0100     		.2byte	0x1
 16698 1d6f 50       		.byte	0x50
 16699 1d70 B0000000 		.4byte	.LVL542
 16700 1d74 B2000000 		.4byte	.LVL543
 16701 1d78 0100     		.2byte	0x1
 16702 1d7a 53       		.byte	0x53
 16703 1d7b B2000000 		.4byte	.LVL543
 16704 1d7f B4000000 		.4byte	.LVL544
 16705 1d83 0100     		.2byte	0x1
 16706 1d85 50       		.byte	0x50
 16707 1d86 B4000000 		.4byte	.LVL544
 16708 1d8a B6000000 		.4byte	.LVL545
 16709 1d8e 0100     		.2byte	0x1
 16710 1d90 59       		.byte	0x59
 16711 1d91 B6000000 		.4byte	.LVL545
 16712 1d95 B8000000 		.4byte	.LVL546
 16713 1d99 0100     		.2byte	0x1
 16714 1d9b 50       		.byte	0x50
 16715 1d9c B8000000 		.4byte	.LVL546
 16716 1da0 BA000000 		.4byte	.LVL547
 16717 1da4 0100     		.2byte	0x1
 16718 1da6 53       		.byte	0x53
 16719 1da7 BA000000 		.4byte	.LVL547
 16720 1dab BC000000 		.4byte	.LVL548
 16721 1daf 0100     		.2byte	0x1
 16722 1db1 50       		.byte	0x50
 16723 1db2 BC000000 		.4byte	.LVL548
 16724 1db6 BE000000 		.4byte	.LVL549
 16725 1dba 0100     		.2byte	0x1
 16726 1dbc 53       		.byte	0x53
 16727 1dbd BE000000 		.4byte	.LVL549
 16728 1dc1 C0000000 		.4byte	.LVL550
 16729 1dc5 0100     		.2byte	0x1
 16730 1dc7 50       		.byte	0x50
 16731 1dc8 C0000000 		.4byte	.LVL550
 16732 1dcc C4000000 		.4byte	.LVL551
 16733 1dd0 0100     		.2byte	0x1
 16734 1dd2 59       		.byte	0x59
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 392


 16735 1dd3 00000000 		.4byte	0
 16736 1dd7 00000000 		.4byte	0
 16737              	.LLST119:
 16738 1ddb 0E000000 		.4byte	.LVL519
 16739 1ddf 9E000000 		.4byte	.LVL535
 16740 1de3 0100     		.2byte	0x1
 16741 1de5 57       		.byte	0x57
 16742 1de6 9E000000 		.4byte	.LVL535
 16743 1dea A0000000 		.4byte	.LVL536
 16744 1dee 0300     		.2byte	0x3
 16745 1df0 77       		.byte	0x77
 16746 1df1 50       		.sleb128 -48
 16747 1df2 9F       		.byte	0x9f
 16748 1df3 A6000000 		.4byte	.LVL537
 16749 1df7 C4000000 		.4byte	.LVL551
 16750 1dfb 0100     		.2byte	0x1
 16751 1dfd 57       		.byte	0x57
 16752 1dfe 00000000 		.4byte	0
 16753 1e02 00000000 		.4byte	0
 16754              	.LLST120:
 16755 1e06 00000000 		.4byte	.LVL554
 16756 1e0a 0B000000 		.4byte	.LVL556-1
 16757 1e0e 0100     		.2byte	0x1
 16758 1e10 50       		.byte	0x50
 16759 1e11 0B000000 		.4byte	.LVL556-1
 16760 1e15 56000000 		.4byte	.LVL570
 16761 1e19 0100     		.2byte	0x1
 16762 1e1b 56       		.byte	0x56
 16763 1e1c 56000000 		.4byte	.LVL570
 16764 1e20 58000000 		.4byte	.LFE25
 16765 1e24 0400     		.2byte	0x4
 16766 1e26 F3       		.byte	0xf3
 16767 1e27 01       		.uleb128 0x1
 16768 1e28 50       		.byte	0x50
 16769 1e29 9F       		.byte	0x9f
 16770 1e2a 00000000 		.4byte	0
 16771 1e2e 00000000 		.4byte	0
 16772              	.LLST121:
 16773 1e32 0C000000 		.4byte	.LVL556
 16774 1e36 10000000 		.4byte	.LVL557
 16775 1e3a 0100     		.2byte	0x1
 16776 1e3c 50       		.byte	0x50
 16777 1e3d 1A000000 		.4byte	.LVL559
 16778 1e41 1E000000 		.4byte	.LVL560
 16779 1e45 0100     		.2byte	0x1
 16780 1e47 50       		.byte	0x50
 16781 1e48 1E000000 		.4byte	.LVL560
 16782 1e4c 48000000 		.4byte	.LVL565
 16783 1e50 0100     		.2byte	0x1
 16784 1e52 54       		.byte	0x54
 16785 1e53 48000000 		.4byte	.LVL565
 16786 1e57 50000000 		.4byte	.LVL566
 16787 1e5b 0100     		.2byte	0x1
 16788 1e5d 50       		.byte	0x50
 16789 1e5e 50000000 		.4byte	.LVL566
 16790 1e62 56000000 		.4byte	.LVL568
 16791 1e66 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 393


 16792 1e68 54       		.byte	0x54
 16793 1e69 00000000 		.4byte	0
 16794 1e6d 00000000 		.4byte	0
 16795              	.LLST122:
 16796 1e71 06000000 		.4byte	.LVL555
 16797 1e75 56000000 		.4byte	.LVL569
 16798 1e79 0100     		.2byte	0x1
 16799 1e7b 55       		.byte	0x55
 16800 1e7c 00000000 		.4byte	0
 16801 1e80 00000000 		.4byte	0
 16802              	.LLST123:
 16803 1e84 20000000 		.4byte	.LVL561
 16804 1e88 26000000 		.4byte	.LVL562
 16805 1e8c 0100     		.2byte	0x1
 16806 1e8e 53       		.byte	0x53
 16807 1e8f 26000000 		.4byte	.LVL562
 16808 1e93 2C000000 		.4byte	.LVL563
 16809 1e97 0200     		.2byte	0x2
 16810 1e99 70       		.byte	0x70
 16811 1e9a 00       		.sleb128 0
 16812 1e9b 50000000 		.4byte	.LVL566
 16813 1e9f 54000000 		.4byte	.LVL567
 16814 1ea3 0100     		.2byte	0x1
 16815 1ea5 53       		.byte	0x53
 16816 1ea6 00000000 		.4byte	0
 16817 1eaa 00000000 		.4byte	0
 16818              	.LLST124:
 16819 1eae 00000000 		.4byte	.LVL571
 16820 1eb2 30000000 		.4byte	.LVL574
 16821 1eb6 0100     		.2byte	0x1
 16822 1eb8 50       		.byte	0x50
 16823 1eb9 30000000 		.4byte	.LVL574
 16824 1ebd 82000000 		.4byte	.LVL590
 16825 1ec1 0100     		.2byte	0x1
 16826 1ec3 54       		.byte	0x54
 16827 1ec4 82000000 		.4byte	.LVL590
 16828 1ec8 84000000 		.4byte	.LFE30
 16829 1ecc 0400     		.2byte	0x4
 16830 1ece F3       		.byte	0xf3
 16831 1ecf 01       		.uleb128 0x1
 16832 1ed0 50       		.byte	0x50
 16833 1ed1 9F       		.byte	0x9f
 16834 1ed2 00000000 		.4byte	0
 16835 1ed6 00000000 		.4byte	0
 16836              	.LLST125:
 16837 1eda 00000000 		.4byte	.LVL571
 16838 1ede 2E000000 		.4byte	.LVL573
 16839 1ee2 0100     		.2byte	0x1
 16840 1ee4 51       		.byte	0x51
 16841 1ee5 2E000000 		.4byte	.LVL573
 16842 1ee9 36000000 		.4byte	.LVL576
 16843 1eed 0400     		.2byte	0x4
 16844 1eef F3       		.byte	0xf3
 16845 1ef0 01       		.uleb128 0x1
 16846 1ef1 51       		.byte	0x51
 16847 1ef2 9F       		.byte	0x9f
 16848 1ef3 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 394


 16849 1ef7 00000000 		.4byte	0
 16850              	.LLST126:
 16851 1efb 34000000 		.4byte	.LVL575
 16852 1eff 36000000 		.4byte	.LVL576
 16853 1f03 0100     		.2byte	0x1
 16854 1f05 50       		.byte	0x50
 16855 1f06 3E000000 		.4byte	.LVL577
 16856 1f0a 44000000 		.4byte	.LVL578
 16857 1f0e 0100     		.2byte	0x1
 16858 1f10 50       		.byte	0x50
 16859 1f11 48000000 		.4byte	.LVL579
 16860 1f15 72000000 		.4byte	.LVL584
 16861 1f19 0100     		.2byte	0x1
 16862 1f1b 50       		.byte	0x50
 16863 1f1c 7A000000 		.4byte	.LVL586
 16864 1f20 7C000000 		.4byte	.LVL587
 16865 1f24 0100     		.2byte	0x1
 16866 1f26 50       		.byte	0x50
 16867 1f27 7E000000 		.4byte	.LVL588
 16868 1f2b 84000000 		.4byte	.LFE30
 16869 1f2f 0100     		.2byte	0x1
 16870 1f31 50       		.byte	0x50
 16871 1f32 00000000 		.4byte	0
 16872 1f36 00000000 		.4byte	0
 16873              	.LLST127:
 16874 1f3a 4C000000 		.4byte	.LVL580
 16875 1f3e 58000000 		.4byte	.LVL581
 16876 1f42 0100     		.2byte	0x1
 16877 1f44 53       		.byte	0x53
 16878 1f45 58000000 		.4byte	.LVL581
 16879 1f49 5A000000 		.4byte	.LVL582
 16880 1f4d 0200     		.2byte	0x2
 16881 1f4f 74       		.byte	0x74
 16882 1f50 2B       		.sleb128 43
 16883 1f51 5A000000 		.4byte	.LVL582
 16884 1f55 5E000000 		.4byte	.LVL583
 16885 1f59 0100     		.2byte	0x1
 16886 1f5b 53       		.byte	0x53
 16887 1f5c 5E000000 		.4byte	.LVL583
 16888 1f60 75000000 		.4byte	.LVL585-1
 16889 1f64 0200     		.2byte	0x2
 16890 1f66 74       		.byte	0x74
 16891 1f67 2B       		.sleb128 43
 16892 1f68 7A000000 		.4byte	.LVL586
 16893 1f6c 80000000 		.4byte	.LVL589
 16894 1f70 0200     		.2byte	0x2
 16895 1f72 74       		.byte	0x74
 16896 1f73 2B       		.sleb128 43
 16897 1f74 00000000 		.4byte	0
 16898 1f78 00000000 		.4byte	0
 16899              	.LLST128:
 16900 1f7c 0A000000 		.4byte	.LVL572
 16901 1f80 82000000 		.4byte	.LVL591
 16902 1f84 0100     		.2byte	0x1
 16903 1f86 55       		.byte	0x55
 16904 1f87 00000000 		.4byte	0
 16905 1f8b 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 395


 16906              	.LLST129:
 16907 1f8f 00000000 		.4byte	.LVL592
 16908 1f93 0D000000 		.4byte	.LVL595-1
 16909 1f97 0100     		.2byte	0x1
 16910 1f99 50       		.byte	0x50
 16911 1f9a 0D000000 		.4byte	.LVL595-1
 16912 1f9e 48000000 		.4byte	.LVL605
 16913 1fa2 0100     		.2byte	0x1
 16914 1fa4 55       		.byte	0x55
 16915 1fa5 48000000 		.4byte	.LVL605
 16916 1fa9 4A000000 		.4byte	.LFE21
 16917 1fad 0400     		.2byte	0x4
 16918 1faf F3       		.byte	0xf3
 16919 1fb0 01       		.uleb128 0x1
 16920 1fb1 50       		.byte	0x50
 16921 1fb2 9F       		.byte	0x9f
 16922 1fb3 00000000 		.4byte	0
 16923 1fb7 00000000 		.4byte	0
 16924              	.LLST130:
 16925 1fbb 00000000 		.4byte	.LVL592
 16926 1fbf 0A000000 		.4byte	.LVL594
 16927 1fc3 0100     		.2byte	0x1
 16928 1fc5 51       		.byte	0x51
 16929 1fc6 0A000000 		.4byte	.LVL594
 16930 1fca 48000000 		.4byte	.LVL606
 16931 1fce 0100     		.2byte	0x1
 16932 1fd0 56       		.byte	0x56
 16933 1fd1 48000000 		.4byte	.LVL606
 16934 1fd5 4A000000 		.4byte	.LFE21
 16935 1fd9 0400     		.2byte	0x4
 16936 1fdb F3       		.byte	0xf3
 16937 1fdc 01       		.uleb128 0x1
 16938 1fdd 51       		.byte	0x51
 16939 1fde 9F       		.byte	0x9f
 16940 1fdf 00000000 		.4byte	0
 16941 1fe3 00000000 		.4byte	0
 16942              	.LLST131:
 16943 1fe7 0E000000 		.4byte	.LVL595
 16944 1feb 14000000 		.4byte	.LVL596
 16945 1fef 0100     		.2byte	0x1
 16946 1ff1 50       		.byte	0x50
 16947 1ff2 1C000000 		.4byte	.LVL597
 16948 1ff6 3A000000 		.4byte	.LVL600
 16949 1ffa 0100     		.2byte	0x1
 16950 1ffc 50       		.byte	0x50
 16951 1ffd 3E000000 		.4byte	.LVL601
 16952 2001 4A000000 		.4byte	.LFE21
 16953 2005 0100     		.2byte	0x1
 16954 2007 50       		.byte	0x50
 16955 2008 00000000 		.4byte	0
 16956 200c 00000000 		.4byte	0
 16957              	.LLST132:
 16958 2010 14000000 		.4byte	.LVL596
 16959 2014 42000000 		.4byte	.LVL602
 16960 2018 0100     		.2byte	0x1
 16961 201a 57       		.byte	0x57
 16962 201b 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 396


 16963 201f 00000000 		.4byte	0
 16964              	.LLST133:
 16965 2023 08000000 		.4byte	.LVL593
 16966 2027 48000000 		.4byte	.LVL604
 16967 202b 0100     		.2byte	0x1
 16968 202d 54       		.byte	0x54
 16969 202e 00000000 		.4byte	0
 16970 2032 00000000 		.4byte	0
 16971              	.LLST134:
 16972 2036 00000000 		.4byte	.LVL607
 16973 203a 0B000000 		.4byte	.LVL609-1
 16974 203e 0100     		.2byte	0x1
 16975 2040 50       		.byte	0x50
 16976 2041 0B000000 		.4byte	.LVL609-1
 16977 2045 38000000 		.4byte	.LVL619
 16978 2049 0100     		.2byte	0x1
 16979 204b 55       		.byte	0x55
 16980 204c 38000000 		.4byte	.LVL619
 16981 2050 3A000000 		.4byte	.LFE26
 16982 2054 0400     		.2byte	0x4
 16983 2056 F3       		.byte	0xf3
 16984 2057 01       		.uleb128 0x1
 16985 2058 50       		.byte	0x50
 16986 2059 9F       		.byte	0x9f
 16987 205a 00000000 		.4byte	0
 16988 205e 00000000 		.4byte	0
 16989              	.LLST135:
 16990 2062 0E000000 		.4byte	.LVL610
 16991 2066 14000000 		.4byte	.LVL611
 16992 206a 0100     		.2byte	0x1
 16993 206c 50       		.byte	0x50
 16994 206d 14000000 		.4byte	.LVL611
 16995 2071 1A000000 		.4byte	.LVL613
 16996 2075 0100     		.2byte	0x1
 16997 2077 54       		.byte	0x54
 16998 2078 1A000000 		.4byte	.LVL613
 16999 207c 22000000 		.4byte	.LVL614
 17000 2080 0100     		.2byte	0x1
 17001 2082 50       		.byte	0x50
 17002 2083 22000000 		.4byte	.LVL614
 17003 2087 38000000 		.4byte	.LVL618
 17004 208b 0100     		.2byte	0x1
 17005 208d 54       		.byte	0x54
 17006 208e 00000000 		.4byte	0
 17007 2092 00000000 		.4byte	0
 17008              	.LLST136:
 17009 2096 06000000 		.4byte	.LVL608
 17010 209a 38000000 		.4byte	.LVL620
 17011 209e 0100     		.2byte	0x1
 17012 20a0 56       		.byte	0x56
 17013 20a1 00000000 		.4byte	0
 17014 20a5 00000000 		.4byte	0
 17015              	.LLST137:
 17016 20a9 00000000 		.4byte	.LVL621
 17017 20ad 0A000000 		.4byte	.LVL624
 17018 20b1 0100     		.2byte	0x1
 17019 20b3 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 397


 17020 20b4 0A000000 		.4byte	.LVL624
 17021 20b8 5E000000 		.4byte	.LVL638
 17022 20bc 0100     		.2byte	0x1
 17023 20be 55       		.byte	0x55
 17024 20bf 5E000000 		.4byte	.LVL638
 17025 20c3 60000000 		.4byte	.LFE24
 17026 20c7 0400     		.2byte	0x4
 17027 20c9 F3       		.byte	0xf3
 17028 20ca 01       		.uleb128 0x1
 17029 20cb 50       		.byte	0x50
 17030 20cc 9F       		.byte	0x9f
 17031 20cd 00000000 		.4byte	0
 17032 20d1 00000000 		.4byte	0
 17033              	.LLST138:
 17034 20d5 00000000 		.4byte	.LVL621
 17035 20d9 0C000000 		.4byte	.LVL625
 17036 20dd 0100     		.2byte	0x1
 17037 20df 51       		.byte	0x51
 17038 20e0 0C000000 		.4byte	.LVL625
 17039 20e4 5E000000 		.4byte	.LVL639
 17040 20e8 0100     		.2byte	0x1
 17041 20ea 56       		.byte	0x56
 17042 20eb 5E000000 		.4byte	.LVL639
 17043 20ef 60000000 		.4byte	.LFE24
 17044 20f3 0400     		.2byte	0x4
 17045 20f5 F3       		.byte	0xf3
 17046 20f6 01       		.uleb128 0x1
 17047 20f7 51       		.byte	0x51
 17048 20f8 9F       		.byte	0x9f
 17049 20f9 00000000 		.4byte	0
 17050 20fd 00000000 		.4byte	0
 17051              	.LLST139:
 17052 2101 06000000 		.4byte	.LVL622
 17053 2105 0C000000 		.4byte	.LVL625
 17054 2109 0200     		.2byte	0x2
 17055 210b 34       		.byte	0x34
 17056 210c 9F       		.byte	0x9f
 17057 210d 0C000000 		.4byte	.LVL625
 17058 2111 0E000000 		.4byte	.LVL626
 17059 2115 0100     		.2byte	0x1
 17060 2117 50       		.byte	0x50
 17061 2118 12000000 		.4byte	.LVL627
 17062 211c 44000000 		.4byte	.LVL632
 17063 2120 0100     		.2byte	0x1
 17064 2122 50       		.byte	0x50
 17065 2123 48000000 		.4byte	.LVL633
 17066 2127 60000000 		.4byte	.LFE24
 17067 212b 0100     		.2byte	0x1
 17068 212d 50       		.byte	0x50
 17069 212e 00000000 		.4byte	0
 17070 2132 00000000 		.4byte	0
 17071              	.LLST140:
 17072 2136 08000000 		.4byte	.LVL623
 17073 213a 5E000000 		.4byte	.LVL637
 17074 213e 0100     		.2byte	0x1
 17075 2140 54       		.byte	0x54
 17076 2141 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 398


 17077 2145 00000000 		.4byte	0
 17078              	.LLST141:
 17079 2149 24000000 		.4byte	.LVL629
 17080 214d 36000000 		.4byte	.LVL631
 17081 2151 0100     		.2byte	0x1
 17082 2153 53       		.byte	0x53
 17083 2154 36000000 		.4byte	.LVL631
 17084 2158 47000000 		.4byte	.LVL633-1
 17085 215c 0200     		.2byte	0x2
 17086 215e 75       		.byte	0x75
 17087 215f 06       		.sleb128 6
 17088 2160 00000000 		.4byte	0
 17089 2164 00000000 		.4byte	0
 17090              	.LLST142:
 17091 2168 1A000000 		.4byte	.LVL628
 17092 216c 34000000 		.4byte	.LVL630
 17093 2170 0100     		.2byte	0x1
 17094 2172 52       		.byte	0x52
 17095 2173 54000000 		.4byte	.LVL635
 17096 2177 56000000 		.4byte	.LVL636
 17097 217b 0100     		.2byte	0x1
 17098 217d 52       		.byte	0x52
 17099 217e 00000000 		.4byte	0
 17100 2182 00000000 		.4byte	0
 17101              	.LLST143:
 17102 2186 00000000 		.4byte	.LVL640
 17103 218a 07000000 		.4byte	.LVL641-1
 17104 218e 0100     		.2byte	0x1
 17105 2190 50       		.byte	0x50
 17106 2191 07000000 		.4byte	.LVL641-1
 17107 2195 84000000 		.4byte	.LVL654
 17108 2199 0100     		.2byte	0x1
 17109 219b 55       		.byte	0x55
 17110 219c 84000000 		.4byte	.LVL654
 17111 21a0 98000000 		.4byte	.LFE12
 17112 21a4 0400     		.2byte	0x4
 17113 21a6 F3       		.byte	0xf3
 17114 21a7 01       		.uleb128 0x1
 17115 21a8 50       		.byte	0x50
 17116 21a9 9F       		.byte	0x9f
 17117 21aa 00000000 		.4byte	0
 17118 21ae 00000000 		.4byte	0
 17119              	.LLST144:
 17120 21b2 0A000000 		.4byte	.LVL642
 17121 21b6 24000000 		.4byte	.LVL643
 17122 21ba 0100     		.2byte	0x1
 17123 21bc 50       		.byte	0x50
 17124 21bd 24000000 		.4byte	.LVL643
 17125 21c1 84000000 		.4byte	.LVL653
 17126 21c5 0100     		.2byte	0x1
 17127 21c7 54       		.byte	0x54
 17128 21c8 00000000 		.4byte	0
 17129 21cc 00000000 		.4byte	0
 17130              	.LLST145:
 17131 21d0 00000000 		.4byte	.LVL655
 17132 21d4 0E000000 		.4byte	.LVL656
 17133 21d8 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 399


 17134 21da 50       		.byte	0x50
 17135 21db 0E000000 		.4byte	.LVL656
 17136 21df 3E000000 		.4byte	.LVL661
 17137 21e3 0200     		.2byte	0x2
 17138 21e5 91       		.byte	0x91
 17139 21e6 6C       		.sleb128 -20
 17140 21e7 3E000000 		.4byte	.LVL661
 17141 21eb 43000000 		.4byte	.LVL662-1
 17142 21ef 0200     		.2byte	0x2
 17143 21f1 71       		.byte	0x71
 17144 21f2 00       		.sleb128 0
 17145 21f3 43000000 		.4byte	.LVL662-1
 17146 21f7 54000000 		.4byte	.LFE35
 17147 21fb 0200     		.2byte	0x2
 17148 21fd 91       		.byte	0x91
 17149 21fe 6C       		.sleb128 -20
 17150 21ff 00000000 		.4byte	0
 17151 2203 00000000 		.4byte	0
 17152              	.LLST146:
 17153 2207 00000000 		.4byte	.LVL655
 17154 220b 11000000 		.4byte	.LVL657-1
 17155 220f 0100     		.2byte	0x1
 17156 2211 51       		.byte	0x51
 17157 2212 11000000 		.4byte	.LVL657-1
 17158 2216 4E000000 		.4byte	.LVL665
 17159 221a 0200     		.2byte	0x2
 17160 221c 7D       		.byte	0x7d
 17161 221d 00       		.sleb128 0
 17162 221e 4E000000 		.4byte	.LVL665
 17163 2222 54000000 		.4byte	.LFE35
 17164 2226 0200     		.2byte	0x2
 17165 2228 91       		.byte	0x91
 17166 2229 68       		.sleb128 -24
 17167 222a 00000000 		.4byte	0
 17168 222e 00000000 		.4byte	0
 17169              	.LLST147:
 17170 2232 00000000 		.4byte	.LVL655
 17171 2236 11000000 		.4byte	.LVL657-1
 17172 223a 0100     		.2byte	0x1
 17173 223c 52       		.byte	0x52
 17174 223d 11000000 		.4byte	.LVL657-1
 17175 2241 54000000 		.4byte	.LFE35
 17176 2245 0400     		.2byte	0x4
 17177 2247 F3       		.byte	0xf3
 17178 2248 01       		.uleb128 0x1
 17179 2249 52       		.byte	0x52
 17180 224a 9F       		.byte	0x9f
 17181 224b 00000000 		.4byte	0
 17182 224f 00000000 		.4byte	0
 17183              	.LLST148:
 17184 2253 1C000000 		.4byte	.LVL658
 17185 2257 26000000 		.4byte	.LVL659
 17186 225b 0100     		.2byte	0x1
 17187 225d 53       		.byte	0x53
 17188 225e 00000000 		.4byte	0
 17189 2262 00000000 		.4byte	0
 17190              	.LLST149:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 400


 17191 2266 12000000 		.4byte	.LVL657
 17192 226a 30000000 		.4byte	.LVL660
 17193 226e 0100     		.2byte	0x1
 17194 2270 50       		.byte	0x50
 17195 2271 46000000 		.4byte	.LVL663
 17196 2275 48000000 		.4byte	.LVL664
 17197 2279 0100     		.2byte	0x1
 17198 227b 50       		.byte	0x50
 17199 227c 00000000 		.4byte	0
 17200 2280 00000000 		.4byte	0
 17201              	.LLST150:
 17202 2284 44000000 		.4byte	.LVL662
 17203 2288 46000000 		.4byte	.LVL663
 17204 228c 0100     		.2byte	0x1
 17205 228e 50       		.byte	0x50
 17206 228f 00000000 		.4byte	0
 17207 2293 00000000 		.4byte	0
 17208              	.LLST151:
 17209 2297 00000000 		.4byte	.LVL666
 17210 229b 20000000 		.4byte	.LVL669
 17211 229f 0100     		.2byte	0x1
 17212 22a1 50       		.byte	0x50
 17213 22a2 20000000 		.4byte	.LVL669
 17214 22a6 DC010000 		.4byte	.LVL720
 17215 22aa 0100     		.2byte	0x1
 17216 22ac 57       		.byte	0x57
 17217 22ad DC010000 		.4byte	.LVL720
 17218 22b1 DE010000 		.4byte	.LVL721
 17219 22b5 0100     		.2byte	0x1
 17220 22b7 50       		.byte	0x50
 17221 22b8 DE010000 		.4byte	.LVL721
 17222 22bc E4010000 		.4byte	.LVL724
 17223 22c0 0100     		.2byte	0x1
 17224 22c2 57       		.byte	0x57
 17225 22c3 E4010000 		.4byte	.LVL724
 17226 22c7 EC010000 		.4byte	.LFE36
 17227 22cb 0400     		.2byte	0x4
 17228 22cd F3       		.byte	0xf3
 17229 22ce 01       		.uleb128 0x1
 17230 22cf 50       		.byte	0x50
 17231 22d0 9F       		.byte	0x9f
 17232 22d1 00000000 		.4byte	0
 17233 22d5 00000000 		.4byte	0
 17234              	.LLST152:
 17235 22d9 00000000 		.4byte	.LVL666
 17236 22dd 1E000000 		.4byte	.LVL668
 17237 22e1 0100     		.2byte	0x1
 17238 22e3 51       		.byte	0x51
 17239 22e4 1E000000 		.4byte	.LVL668
 17240 22e8 20000000 		.4byte	.LVL669
 17241 22ec 0300     		.2byte	0x3
 17242 22ee 91       		.byte	0x91
 17243 22ef AC7F     		.sleb128 -84
 17244 22f1 20000000 		.4byte	.LVL669
 17245 22f5 23000000 		.4byte	.LVL670-1
 17246 22f9 0200     		.2byte	0x2
 17247 22fb 70       		.byte	0x70
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 401


 17248 22fc 00       		.sleb128 0
 17249 22fd 23000000 		.4byte	.LVL670-1
 17250 2301 DC010000 		.4byte	.LVL720
 17251 2305 0300     		.2byte	0x3
 17252 2307 91       		.byte	0x91
 17253 2308 AC7F     		.sleb128 -84
 17254 230a DC010000 		.4byte	.LVL720
 17255 230e E0010000 		.4byte	.LVL722
 17256 2312 0100     		.2byte	0x1
 17257 2314 51       		.byte	0x51
 17258 2315 E0010000 		.4byte	.LVL722
 17259 2319 EC010000 		.4byte	.LFE36
 17260 231d 0300     		.2byte	0x3
 17261 231f 91       		.byte	0x91
 17262 2320 AC7F     		.sleb128 -84
 17263 2322 00000000 		.4byte	0
 17264 2326 00000000 		.4byte	0
 17265              	.LLST153:
 17266 232a 00000000 		.4byte	.LVL666
 17267 232e 1A000000 		.4byte	.LVL667
 17268 2332 0100     		.2byte	0x1
 17269 2334 52       		.byte	0x52
 17270 2335 1A000000 		.4byte	.LVL667
 17271 2339 60000000 		.4byte	.LVL678
 17272 233d 0100     		.2byte	0x1
 17273 233f 55       		.byte	0x55
 17274 2340 60000000 		.4byte	.LVL678
 17275 2344 62000000 		.4byte	.LVL679
 17276 2348 0600     		.2byte	0x6
 17277 234a 76       		.byte	0x76
 17278 234b 00       		.sleb128 0
 17279 234c 08       		.byte	0x8
 17280 234d 3F       		.byte	0x3f
 17281 234e 1A       		.byte	0x1a
 17282 234f 9F       		.byte	0x9f
 17283 2350 62000000 		.4byte	.LVL679
 17284 2354 18010000 		.4byte	.LVL699
 17285 2358 0100     		.2byte	0x1
 17286 235a 55       		.byte	0x55
 17287 235b 1A010000 		.4byte	.LVL700
 17288 235f 6C010000 		.4byte	.LVL704
 17289 2363 0100     		.2byte	0x1
 17290 2365 55       		.byte	0x55
 17291 2366 DC010000 		.4byte	.LVL720
 17292 236a E0010000 		.4byte	.LVL722
 17293 236e 0100     		.2byte	0x1
 17294 2370 52       		.byte	0x52
 17295 2371 00000000 		.4byte	0
 17296 2375 00000000 		.4byte	0
 17297              	.LLST154:
 17298 2379 26000000 		.4byte	.LVL671
 17299 237d 32000000 		.4byte	.LVL672
 17300 2381 0100     		.2byte	0x1
 17301 2383 50       		.byte	0x50
 17302 2384 32000000 		.4byte	.LVL672
 17303 2388 38000000 		.4byte	.LVL674
 17304 238c 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 402


 17305 238e 54       		.byte	0x54
 17306 238f 38000000 		.4byte	.LVL674
 17307 2393 46000000 		.4byte	.LVL675
 17308 2397 0100     		.2byte	0x1
 17309 2399 50       		.byte	0x50
 17310 239a 46000000 		.4byte	.LVL675
 17311 239e 76000000 		.4byte	.LVL680
 17312 23a2 0100     		.2byte	0x1
 17313 23a4 54       		.byte	0x54
 17314 23a5 78000000 		.4byte	.LVL681
 17315 23a9 DA000000 		.4byte	.LVL691
 17316 23ad 0100     		.2byte	0x1
 17317 23af 54       		.byte	0x54
 17318 23b0 DA000000 		.4byte	.LVL691
 17319 23b4 E0000000 		.4byte	.LVL692
 17320 23b8 0100     		.2byte	0x1
 17321 23ba 50       		.byte	0x50
 17322 23bb E0000000 		.4byte	.LVL692
 17323 23bf E6000000 		.4byte	.LVL694
 17324 23c3 0100     		.2byte	0x1
 17325 23c5 54       		.byte	0x54
 17326 23c6 E6000000 		.4byte	.LVL694
 17327 23ca F0000000 		.4byte	.LVL695
 17328 23ce 0100     		.2byte	0x1
 17329 23d0 50       		.byte	0x50
 17330 23d1 F0000000 		.4byte	.LVL695
 17331 23d5 08010000 		.4byte	.LVL696
 17332 23d9 0100     		.2byte	0x1
 17333 23db 54       		.byte	0x54
 17334 23dc 0A010000 		.4byte	.LVL697
 17335 23e0 CC010000 		.4byte	.LVL717
 17336 23e4 0100     		.2byte	0x1
 17337 23e6 54       		.byte	0x54
 17338 23e7 CE010000 		.4byte	.LVL718
 17339 23eb DC010000 		.4byte	.LVL720
 17340 23ef 0100     		.2byte	0x1
 17341 23f1 54       		.byte	0x54
 17342 23f2 E0010000 		.4byte	.LVL722
 17343 23f6 E2010000 		.4byte	.LVL723
 17344 23fa 0100     		.2byte	0x1
 17345 23fc 54       		.byte	0x54
 17346 23fd 00000000 		.4byte	0
 17347 2401 00000000 		.4byte	0
 17348              	.LLST155:
 17349 2405 CE000000 		.4byte	.LVL689
 17350 2409 F0000000 		.4byte	.LVL695
 17351 240d 0100     		.2byte	0x1
 17352 240f 56       		.byte	0x56
 17353 2410 00000000 		.4byte	0
 17354 2414 00000000 		.4byte	0
 17355              	.LLST156:
 17356 2418 8E000000 		.4byte	.LVL684
 17357 241c 91000000 		.4byte	.LVL685-1
 17358 2420 0100     		.2byte	0x1
 17359 2422 50       		.byte	0x50
 17360 2423 91000000 		.4byte	.LVL685-1
 17361 2427 F0000000 		.4byte	.LVL695
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 403


 17362 242b 0100     		.2byte	0x1
 17363 242d 58       		.byte	0x58
 17364 242e 00000000 		.4byte	0
 17365 2432 00000000 		.4byte	0
 17366              	.LLST157:
 17367 2436 78010000 		.4byte	.LVL705
 17368 243a D0010000 		.4byte	.LVL719
 17369 243e 0100     		.2byte	0x1
 17370 2440 56       		.byte	0x56
 17371 2441 00000000 		.4byte	0
 17372 2445 00000000 		.4byte	0
 17373              	.LLST158:
 17374 2449 7A010000 		.4byte	.LVL706
 17375 244d 81010000 		.4byte	.LVL707-1
 17376 2451 0100     		.2byte	0x1
 17377 2453 51       		.byte	0x51
 17378 2454 84010000 		.4byte	.LVL708
 17379 2458 92010000 		.4byte	.LVL711
 17380 245c 0100     		.2byte	0x1
 17381 245e 50       		.byte	0x50
 17382 245f 92010000 		.4byte	.LVL711
 17383 2463 AD010000 		.4byte	.LVL712-1
 17384 2467 0100     		.2byte	0x1
 17385 2469 51       		.byte	0x51
 17386 246a 00000000 		.4byte	0
 17387 246e 00000000 		.4byte	0
 17388              	.LLST159:
 17389 2472 AE010000 		.4byte	.LVL712
 17390 2476 BC010000 		.4byte	.LVL714
 17391 247a 0100     		.2byte	0x1
 17392 247c 50       		.byte	0x50
 17393 247d CA010000 		.4byte	.LVL716
 17394 2481 CE010000 		.4byte	.LVL718
 17395 2485 0100     		.2byte	0x1
 17396 2487 50       		.byte	0x50
 17397 2488 00000000 		.4byte	0
 17398 248c 00000000 		.4byte	0
 17399              	.LLST160:
 17400 2490 7A010000 		.4byte	.LVL706
 17401 2494 B4010000 		.4byte	.LVL713
 17402 2498 0100     		.2byte	0x1
 17403 249a 55       		.byte	0x55
 17404 249b CA010000 		.4byte	.LVL716
 17405 249f CE010000 		.4byte	.LVL718
 17406 24a3 0100     		.2byte	0x1
 17407 24a5 55       		.byte	0x55
 17408 24a6 00000000 		.4byte	0
 17409 24aa 00000000 		.4byte	0
 17410              	.LLST161:
 17411 24ae 00000000 		.4byte	.LVL725
 17412 24b2 21000000 		.4byte	.LVL729-1
 17413 24b6 0100     		.2byte	0x1
 17414 24b8 50       		.byte	0x50
 17415 24b9 21000000 		.4byte	.LVL729-1
 17416 24bd 86010000 		.4byte	.LVL771
 17417 24c1 0100     		.2byte	0x1
 17418 24c3 54       		.byte	0x54
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 404


 17419 24c4 86010000 		.4byte	.LVL771
 17420 24c8 92010000 		.4byte	.LFE37
 17421 24cc 0200     		.2byte	0x2
 17422 24ce 91       		.byte	0x91
 17423 24cf 4C       		.sleb128 -52
 17424 24d0 00000000 		.4byte	0
 17425 24d4 00000000 		.4byte	0
 17426              	.LLST162:
 17427 24d8 00000000 		.4byte	.LVL725
 17428 24dc 1E000000 		.4byte	.LVL728
 17429 24e0 0100     		.2byte	0x1
 17430 24e2 51       		.byte	0x51
 17431 24e3 1E000000 		.4byte	.LVL728
 17432 24e7 48000000 		.4byte	.LVL733
 17433 24eb 0100     		.2byte	0x1
 17434 24ed 58       		.byte	0x58
 17435 24ee 48000000 		.4byte	.LVL733
 17436 24f2 82010000 		.4byte	.LVL769
 17437 24f6 0400     		.2byte	0x4
 17438 24f8 F3       		.byte	0xf3
 17439 24f9 01       		.uleb128 0x1
 17440 24fa 51       		.byte	0x51
 17441 24fb 9F       		.byte	0x9f
 17442 24fc 82010000 		.4byte	.LVL769
 17443 2500 84010000 		.4byte	.LVL770
 17444 2504 0100     		.2byte	0x1
 17445 2506 58       		.byte	0x58
 17446 2507 84010000 		.4byte	.LVL770
 17447 250b 92010000 		.4byte	.LFE37
 17448 250f 0400     		.2byte	0x4
 17449 2511 F3       		.byte	0xf3
 17450 2512 01       		.uleb128 0x1
 17451 2513 51       		.byte	0x51
 17452 2514 9F       		.byte	0x9f
 17453 2515 00000000 		.4byte	0
 17454 2519 00000000 		.4byte	0
 17455              	.LLST163:
 17456 251d 00000000 		.4byte	.LVL725
 17457 2521 21000000 		.4byte	.LVL729-1
 17458 2525 0100     		.2byte	0x1
 17459 2527 52       		.byte	0x52
 17460 2528 21000000 		.4byte	.LVL729-1
 17461 252c 48000000 		.4byte	.LVL733
 17462 2530 0100     		.2byte	0x1
 17463 2532 55       		.byte	0x55
 17464 2533 48000000 		.4byte	.LVL733
 17465 2537 82010000 		.4byte	.LVL769
 17466 253b 0100     		.2byte	0x1
 17467 253d 56       		.byte	0x56
 17468 253e 82010000 		.4byte	.LVL769
 17469 2542 84010000 		.4byte	.LVL770
 17470 2546 0100     		.2byte	0x1
 17471 2548 55       		.byte	0x55
 17472 2549 00000000 		.4byte	0
 17473 254d 00000000 		.4byte	0
 17474              	.LLST164:
 17475 2551 00000000 		.4byte	.LVL725
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 405


 17476 2555 18000000 		.4byte	.LVL727
 17477 2559 0100     		.2byte	0x1
 17478 255b 53       		.byte	0x53
 17479 255c 18000000 		.4byte	.LVL727
 17480 2560 86010000 		.4byte	.LVL772
 17481 2564 0100     		.2byte	0x1
 17482 2566 57       		.byte	0x57
 17483 2567 86010000 		.4byte	.LVL772
 17484 256b 92010000 		.4byte	.LFE37
 17485 256f 0400     		.2byte	0x4
 17486 2571 F3       		.byte	0xf3
 17487 2572 01       		.uleb128 0x1
 17488 2573 53       		.byte	0x53
 17489 2574 9F       		.byte	0x9f
 17490 2575 00000000 		.4byte	0
 17491 2579 00000000 		.4byte	0
 17492              	.LLST165:
 17493 257d 22000000 		.4byte	.LVL729
 17494 2581 48000000 		.4byte	.LVL733
 17495 2585 0100     		.2byte	0x1
 17496 2587 50       		.byte	0x50
 17497 2588 82010000 		.4byte	.LVL769
 17498 258c 84010000 		.4byte	.LVL770
 17499 2590 0100     		.2byte	0x1
 17500 2592 50       		.byte	0x50
 17501 2593 00000000 		.4byte	0
 17502 2597 00000000 		.4byte	0
 17503              	.LLST166:
 17504 259b 64000000 		.4byte	.LVL735
 17505 259f 66000000 		.4byte	.LVL736
 17506 25a3 0100     		.2byte	0x1
 17507 25a5 50       		.byte	0x50
 17508 25a6 6E000000 		.4byte	.LVL738
 17509 25aa 78000000 		.4byte	.LVL739
 17510 25ae 0100     		.2byte	0x1
 17511 25b0 50       		.byte	0x50
 17512 25b1 7A000000 		.4byte	.LVL740
 17513 25b5 84000000 		.4byte	.LVL741
 17514 25b9 0100     		.2byte	0x1
 17515 25bb 50       		.byte	0x50
 17516 25bc 84000000 		.4byte	.LVL741
 17517 25c0 86000000 		.4byte	.LVL742
 17518 25c4 0300     		.2byte	0x3
 17519 25c6 70       		.byte	0x70
 17520 25c7 7E       		.sleb128 -2
 17521 25c8 9F       		.byte	0x9f
 17522 25c9 86000000 		.4byte	.LVL742
 17523 25cd 88000000 		.4byte	.LVL743
 17524 25d1 0100     		.2byte	0x1
 17525 25d3 50       		.byte	0x50
 17526 25d4 00000000 		.4byte	0
 17527 25d8 00000000 		.4byte	0
 17528              	.LLST167:
 17529 25dc 94000000 		.4byte	.LVL744
 17530 25e0 9E000000 		.4byte	.LVL745
 17531 25e4 0100     		.2byte	0x1
 17532 25e6 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 406


 17533 25e7 9E000000 		.4byte	.LVL745
 17534 25eb A0000000 		.4byte	.LVL746
 17535 25ef 0300     		.2byte	0x3
 17536 25f1 70       		.byte	0x70
 17537 25f2 7E       		.sleb128 -2
 17538 25f3 9F       		.byte	0x9f
 17539 25f4 A0000000 		.4byte	.LVL746
 17540 25f8 A2000000 		.4byte	.LVL747
 17541 25fc 0100     		.2byte	0x1
 17542 25fe 50       		.byte	0x50
 17543 25ff A4000000 		.4byte	.LVL748
 17544 2603 BC000000 		.4byte	.LVL751
 17545 2607 0100     		.2byte	0x1
 17546 2609 50       		.byte	0x50
 17547 260a BC000000 		.4byte	.LVL751
 17548 260e E4000000 		.4byte	.LVL753
 17549 2612 0100     		.2byte	0x1
 17550 2614 5A       		.byte	0x5a
 17551 2615 E4000000 		.4byte	.LVL753
 17552 2619 EE000000 		.4byte	.LVL754
 17553 261d 0100     		.2byte	0x1
 17554 261f 52       		.byte	0x52
 17555 2620 EE000000 		.4byte	.LVL754
 17556 2624 F8000000 		.4byte	.LVL757
 17557 2628 0100     		.2byte	0x1
 17558 262a 5A       		.byte	0x5a
 17559 262b F8000000 		.4byte	.LVL757
 17560 262f 0E010000 		.4byte	.LVL758
 17561 2633 0100     		.2byte	0x1
 17562 2635 50       		.byte	0x50
 17563 2636 0E010000 		.4byte	.LVL758
 17564 263a 46010000 		.4byte	.LVL761
 17565 263e 0100     		.2byte	0x1
 17566 2640 5A       		.byte	0x5a
 17567 2641 00000000 		.4byte	0
 17568 2645 00000000 		.4byte	0
 17569              	.LLST168:
 17570 2649 3E000000 		.4byte	.LVL731
 17571 264d 46000000 		.4byte	.LVL732
 17572 2651 0100     		.2byte	0x1
 17573 2653 56       		.byte	0x56
 17574 2654 46000000 		.4byte	.LVL732
 17575 2658 48000000 		.4byte	.LVL733
 17576 265c 0600     		.2byte	0x6
 17577 265e 73       		.byte	0x73
 17578 265f 00       		.sleb128 0
 17579 2660 72       		.byte	0x72
 17580 2661 00       		.sleb128 0
 17581 2662 1C       		.byte	0x1c
 17582 2663 9F       		.byte	0x9f
 17583 2664 00000000 		.4byte	0
 17584 2668 00000000 		.4byte	0
 17585              	.LLST169:
 17586 266c F6000000 		.4byte	.LVL756
 17587 2670 F8000000 		.4byte	.LVL757
 17588 2674 0100     		.2byte	0x1
 17589 2676 55       		.byte	0x55
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 407


 17590 2677 52010000 		.4byte	.LVL762
 17591 267b 76010000 		.4byte	.LVL767
 17592 267f 0100     		.2byte	0x1
 17593 2681 55       		.byte	0x55
 17594 2682 00000000 		.4byte	0
 17595 2686 00000000 		.4byte	0
 17596              	.LLST170:
 17597 268a A6000000 		.4byte	.LVL749
 17598 268e F6000000 		.4byte	.LVL756
 17599 2692 0100     		.2byte	0x1
 17600 2694 55       		.byte	0x55
 17601 2695 F8000000 		.4byte	.LVL757
 17602 2699 46010000 		.4byte	.LVL761
 17603 269d 0100     		.2byte	0x1
 17604 269f 55       		.byte	0x55
 17605 26a0 00000000 		.4byte	0
 17606 26a4 00000000 		.4byte	0
 17607              	.LLST171:
 17608 26a8 5C000000 		.4byte	.LVL734
 17609 26ac 68000000 		.4byte	.LVL737
 17610 26b0 0100     		.2byte	0x1
 17611 26b2 51       		.byte	0x51
 17612 26b3 68000000 		.4byte	.LVL737
 17613 26b7 46010000 		.4byte	.LVL761
 17614 26bb 0100     		.2byte	0x1
 17615 26bd 59       		.byte	0x59
 17616 26be 00000000 		.4byte	0
 17617 26c2 00000000 		.4byte	0
 17618              	.LLST172:
 17619 26c6 16000000 		.4byte	.LVL726
 17620 26ca 1E000000 		.4byte	.LVL728
 17621 26ce 0100     		.2byte	0x1
 17622 26d0 51       		.byte	0x51
 17623 26d1 1E000000 		.4byte	.LVL728
 17624 26d5 86010000 		.4byte	.LVL773
 17625 26d9 0100     		.2byte	0x1
 17626 26db 58       		.byte	0x58
 17627 26dc 00000000 		.4byte	0
 17628 26e0 00000000 		.4byte	0
 17629              	.LLST173:
 17630 26e4 00000000 		.4byte	.LVL774
 17631 26e8 21000000 		.4byte	.LVL778-1
 17632 26ec 0100     		.2byte	0x1
 17633 26ee 50       		.byte	0x50
 17634 26ef 21000000 		.4byte	.LVL778-1
 17635 26f3 C4010000 		.4byte	.LVL821
 17636 26f7 0100     		.2byte	0x1
 17637 26f9 54       		.byte	0x54
 17638 26fa C4010000 		.4byte	.LVL821
 17639 26fe D0010000 		.4byte	.LFE38
 17640 2702 0200     		.2byte	0x2
 17641 2704 91       		.byte	0x91
 17642 2705 4C       		.sleb128 -52
 17643 2706 00000000 		.4byte	0
 17644 270a 00000000 		.4byte	0
 17645              	.LLST174:
 17646 270e 00000000 		.4byte	.LVL774
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 408


 17647 2712 1E000000 		.4byte	.LVL777
 17648 2716 0100     		.2byte	0x1
 17649 2718 51       		.byte	0x51
 17650 2719 1E000000 		.4byte	.LVL777
 17651 271d 46000000 		.4byte	.LVL781
 17652 2721 0100     		.2byte	0x1
 17653 2723 58       		.byte	0x58
 17654 2724 46000000 		.4byte	.LVL781
 17655 2728 C0010000 		.4byte	.LVL819
 17656 272c 0400     		.2byte	0x4
 17657 272e F3       		.byte	0xf3
 17658 272f 01       		.uleb128 0x1
 17659 2730 51       		.byte	0x51
 17660 2731 9F       		.byte	0x9f
 17661 2732 C0010000 		.4byte	.LVL819
 17662 2736 C2010000 		.4byte	.LVL820
 17663 273a 0100     		.2byte	0x1
 17664 273c 58       		.byte	0x58
 17665 273d C2010000 		.4byte	.LVL820
 17666 2741 D0010000 		.4byte	.LFE38
 17667 2745 0400     		.2byte	0x4
 17668 2747 F3       		.byte	0xf3
 17669 2748 01       		.uleb128 0x1
 17670 2749 51       		.byte	0x51
 17671 274a 9F       		.byte	0x9f
 17672 274b 00000000 		.4byte	0
 17673 274f 00000000 		.4byte	0
 17674              	.LLST175:
 17675 2753 00000000 		.4byte	.LVL774
 17676 2757 21000000 		.4byte	.LVL778-1
 17677 275b 0100     		.2byte	0x1
 17678 275d 52       		.byte	0x52
 17679 275e 21000000 		.4byte	.LVL778-1
 17680 2762 C4010000 		.4byte	.LVL822
 17681 2766 0100     		.2byte	0x1
 17682 2768 56       		.byte	0x56
 17683 2769 00000000 		.4byte	0
 17684 276d 00000000 		.4byte	0
 17685              	.LLST176:
 17686 2771 00000000 		.4byte	.LVL774
 17687 2775 18000000 		.4byte	.LVL776
 17688 2779 0100     		.2byte	0x1
 17689 277b 53       		.byte	0x53
 17690 277c 18000000 		.4byte	.LVL776
 17691 2780 C4010000 		.4byte	.LVL823
 17692 2784 0100     		.2byte	0x1
 17693 2786 57       		.byte	0x57
 17694 2787 C4010000 		.4byte	.LVL823
 17695 278b D0010000 		.4byte	.LFE38
 17696 278f 0400     		.2byte	0x4
 17697 2791 F3       		.byte	0xf3
 17698 2792 01       		.uleb128 0x1
 17699 2793 53       		.byte	0x53
 17700 2794 9F       		.byte	0x9f
 17701 2795 00000000 		.4byte	0
 17702 2799 00000000 		.4byte	0
 17703              	.LLST177:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 409


 17704 279d 22000000 		.4byte	.LVL778
 17705 27a1 46000000 		.4byte	.LVL781
 17706 27a5 0100     		.2byte	0x1
 17707 27a7 50       		.byte	0x50
 17708 27a8 C0010000 		.4byte	.LVL819
 17709 27ac C2010000 		.4byte	.LVL820
 17710 27b0 0100     		.2byte	0x1
 17711 27b2 50       		.byte	0x50
 17712 27b3 00000000 		.4byte	0
 17713 27b7 00000000 		.4byte	0
 17714              	.LLST178:
 17715 27bb 62000000 		.4byte	.LVL783
 17716 27bf 6A000000 		.4byte	.LVL785
 17717 27c3 0100     		.2byte	0x1
 17718 27c5 50       		.byte	0x50
 17719 27c6 6A000000 		.4byte	.LVL785
 17720 27ca 6D000000 		.4byte	.LVL786-1
 17721 27ce 0200     		.2byte	0x2
 17722 27d0 74       		.byte	0x74
 17723 27d1 08       		.sleb128 8
 17724 27d2 6E000000 		.4byte	.LVL786
 17725 27d6 70000000 		.4byte	.LVL787
 17726 27da 0100     		.2byte	0x1
 17727 27dc 50       		.byte	0x50
 17728 27dd 78000000 		.4byte	.LVL789
 17729 27e1 88000000 		.4byte	.LVL790
 17730 27e5 0100     		.2byte	0x1
 17731 27e7 50       		.byte	0x50
 17732 27e8 88000000 		.4byte	.LVL790
 17733 27ec 8A000000 		.4byte	.LVL791
 17734 27f0 0300     		.2byte	0x3
 17735 27f2 70       		.byte	0x70
 17736 27f3 7F       		.sleb128 -1
 17737 27f4 9F       		.byte	0x9f
 17738 27f5 8A000000 		.4byte	.LVL791
 17739 27f9 94000000 		.4byte	.LVL792
 17740 27fd 0100     		.2byte	0x1
 17741 27ff 50       		.byte	0x50
 17742 2800 94000000 		.4byte	.LVL792
 17743 2804 96000000 		.4byte	.LVL793
 17744 2808 0300     		.2byte	0x3
 17745 280a 70       		.byte	0x70
 17746 280b 7E       		.sleb128 -2
 17747 280c 9F       		.byte	0x9f
 17748 280d 96000000 		.4byte	.LVL793
 17749 2811 A0000000 		.4byte	.LVL794
 17750 2815 0100     		.2byte	0x1
 17751 2817 50       		.byte	0x50
 17752 2818 00000000 		.4byte	0
 17753 281c 00000000 		.4byte	0
 17754              	.LLST179:
 17755 2820 D8000000 		.4byte	.LVL796
 17756 2824 E2000000 		.4byte	.LVL797
 17757 2828 0100     		.2byte	0x1
 17758 282a 50       		.byte	0x50
 17759 282b E2000000 		.4byte	.LVL797
 17760 282f E4000000 		.4byte	.LVL798
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 410


 17761 2833 0300     		.2byte	0x3
 17762 2835 70       		.byte	0x70
 17763 2836 7E       		.sleb128 -2
 17764 2837 9F       		.byte	0x9f
 17765 2838 E4000000 		.4byte	.LVL798
 17766 283c E6000000 		.4byte	.LVL799
 17767 2840 0100     		.2byte	0x1
 17768 2842 50       		.byte	0x50
 17769 2843 E8000000 		.4byte	.LVL800
 17770 2847 00010000 		.4byte	.LVL803
 17771 284b 0100     		.2byte	0x1
 17772 284d 50       		.byte	0x50
 17773 284e 00010000 		.4byte	.LVL803
 17774 2852 20010000 		.4byte	.LVL805
 17775 2856 0100     		.2byte	0x1
 17776 2858 5A       		.byte	0x5a
 17777 2859 20010000 		.4byte	.LVL805
 17778 285d 2A010000 		.4byte	.LVL806
 17779 2861 0100     		.2byte	0x1
 17780 2863 52       		.byte	0x52
 17781 2864 2A010000 		.4byte	.LVL806
 17782 2868 3C010000 		.4byte	.LVL809
 17783 286c 0100     		.2byte	0x1
 17784 286e 5A       		.byte	0x5a
 17785 286f 3C010000 		.4byte	.LVL809
 17786 2873 52010000 		.4byte	.LVL810
 17787 2877 0100     		.2byte	0x1
 17788 2879 50       		.byte	0x50
 17789 287a 52010000 		.4byte	.LVL810
 17790 287e 68010000 		.4byte	.LVL812
 17791 2882 0100     		.2byte	0x1
 17792 2884 5A       		.byte	0x5a
 17793 2885 00000000 		.4byte	0
 17794 2889 00000000 		.4byte	0
 17795              	.LLST180:
 17796 288d 3A010000 		.4byte	.LVL808
 17797 2891 3C010000 		.4byte	.LVL809
 17798 2895 0100     		.2byte	0x1
 17799 2897 55       		.byte	0x55
 17800 2898 74010000 		.4byte	.LVL813
 17801 289c A2010000 		.4byte	.LVL818
 17802 28a0 0100     		.2byte	0x1
 17803 28a2 55       		.byte	0x55
 17804 28a3 00000000 		.4byte	0
 17805 28a7 00000000 		.4byte	0
 17806              	.LLST181:
 17807 28ab EA000000 		.4byte	.LVL801
 17808 28af 3A010000 		.4byte	.LVL808
 17809 28b3 0100     		.2byte	0x1
 17810 28b5 55       		.byte	0x55
 17811 28b6 3C010000 		.4byte	.LVL809
 17812 28ba 68010000 		.4byte	.LVL812
 17813 28be 0100     		.2byte	0x1
 17814 28c0 55       		.byte	0x55
 17815 28c1 00000000 		.4byte	0
 17816 28c5 00000000 		.4byte	0
 17817              	.LLST182:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 411


 17818 28c9 5A000000 		.4byte	.LVL782
 17819 28cd 68000000 		.4byte	.LVL784
 17820 28d1 0100     		.2byte	0x1
 17821 28d3 51       		.byte	0x51
 17822 28d4 68000000 		.4byte	.LVL784
 17823 28d8 70000000 		.4byte	.LVL787
 17824 28dc 0100     		.2byte	0x1
 17825 28de 59       		.byte	0x59
 17826 28df 70000000 		.4byte	.LVL787
 17827 28e3 72000000 		.4byte	.LVL788
 17828 28e7 0100     		.2byte	0x1
 17829 28e9 51       		.byte	0x51
 17830 28ea 72000000 		.4byte	.LVL788
 17831 28ee 68010000 		.4byte	.LVL812
 17832 28f2 0100     		.2byte	0x1
 17833 28f4 59       		.byte	0x59
 17834 28f5 00000000 		.4byte	0
 17835 28f9 00000000 		.4byte	0
 17836              	.LLST183:
 17837 28fd 16000000 		.4byte	.LVL775
 17838 2901 1E000000 		.4byte	.LVL777
 17839 2905 0100     		.2byte	0x1
 17840 2907 51       		.byte	0x51
 17841 2908 1E000000 		.4byte	.LVL777
 17842 290c C4010000 		.4byte	.LVL824
 17843 2910 0100     		.2byte	0x1
 17844 2912 58       		.byte	0x58
 17845 2913 00000000 		.4byte	0
 17846 2917 00000000 		.4byte	0
 17847              	.LLST184:
 17848 291b 00000000 		.4byte	.LVL825
 17849 291f 0B000000 		.4byte	.LVL826-1
 17850 2923 0100     		.2byte	0x1
 17851 2925 50       		.byte	0x50
 17852 2926 0B000000 		.4byte	.LVL826-1
 17853 292a 96000000 		.4byte	.LVL841
 17854 292e 0100     		.2byte	0x1
 17855 2930 54       		.byte	0x54
 17856 2931 96000000 		.4byte	.LVL841
 17857 2935 98000000 		.4byte	.LFE39
 17858 2939 0400     		.2byte	0x4
 17859 293b F3       		.byte	0xf3
 17860 293c 01       		.uleb128 0x1
 17861 293d 50       		.byte	0x50
 17862 293e 9F       		.byte	0x9f
 17863 293f 00000000 		.4byte	0
 17864 2943 00000000 		.4byte	0
 17865              	.LLST185:
 17866 2947 0C000000 		.4byte	.LVL826
 17867 294b 24000000 		.4byte	.LVL827
 17868 294f 0100     		.2byte	0x1
 17869 2951 50       		.byte	0x50
 17870 2952 46000000 		.4byte	.LVL832
 17871 2956 5A000000 		.4byte	.LVL834
 17872 295a 0100     		.2byte	0x1
 17873 295c 50       		.byte	0x50
 17874 295d 88000000 		.4byte	.LVL839
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 412


 17875 2961 92000000 		.4byte	.LVL840
 17876 2965 0100     		.2byte	0x1
 17877 2967 50       		.byte	0x50
 17878 2968 00000000 		.4byte	0
 17879 296c 00000000 		.4byte	0
 17880              	.LLST186:
 17881 2970 3E000000 		.4byte	.LVL830
 17882 2974 42000000 		.4byte	.LVL831
 17883 2978 0100     		.2byte	0x1
 17884 297a 50       		.byte	0x50
 17885 297b 42000000 		.4byte	.LVL831
 17886 297f 92000000 		.4byte	.LVL840
 17887 2983 0100     		.2byte	0x1
 17888 2985 56       		.byte	0x56
 17889 2986 00000000 		.4byte	0
 17890 298a 00000000 		.4byte	0
 17891              	.LLST187:
 17892 298e 4C000000 		.4byte	.LVL833
 17893 2992 92000000 		.4byte	.LVL840
 17894 2996 0100     		.2byte	0x1
 17895 2998 55       		.byte	0x55
 17896 2999 00000000 		.4byte	0
 17897 299d 00000000 		.4byte	0
 17898              	.LLST188:
 17899 29a1 00000000 		.4byte	.LVL842
 17900 29a5 09000000 		.4byte	.LVL843-1
 17901 29a9 0100     		.2byte	0x1
 17902 29ab 50       		.byte	0x50
 17903 29ac 09000000 		.4byte	.LVL843-1
 17904 29b0 20000000 		.4byte	.LVL847
 17905 29b4 0100     		.2byte	0x1
 17906 29b6 54       		.byte	0x54
 17907 29b7 20000000 		.4byte	.LVL847
 17908 29bb 22000000 		.4byte	.LFE40
 17909 29bf 0400     		.2byte	0x4
 17910 29c1 F3       		.byte	0xf3
 17911 29c2 01       		.uleb128 0x1
 17912 29c3 50       		.byte	0x50
 17913 29c4 9F       		.byte	0x9f
 17914 29c5 00000000 		.4byte	0
 17915 29c9 00000000 		.4byte	0
 17916              	.LLST189:
 17917 29cd 0A000000 		.4byte	.LVL843
 17918 29d1 12000000 		.4byte	.LVL844
 17919 29d5 0100     		.2byte	0x1
 17920 29d7 50       		.byte	0x50
 17921 29d8 16000000 		.4byte	.LVL845
 17922 29dc 22000000 		.4byte	.LFE40
 17923 29e0 0100     		.2byte	0x1
 17924 29e2 50       		.byte	0x50
 17925 29e3 00000000 		.4byte	0
 17926 29e7 00000000 		.4byte	0
 17927              	.LLST190:
 17928 29eb 00000000 		.4byte	.LVL848
 17929 29ef 15000000 		.4byte	.LVL850-1
 17930 29f3 0100     		.2byte	0x1
 17931 29f5 50       		.byte	0x50
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 413


 17932 29f6 15000000 		.4byte	.LVL850-1
 17933 29fa 92010000 		.4byte	.LVL897
 17934 29fe 0100     		.2byte	0x1
 17935 2a00 54       		.byte	0x54
 17936 2a01 92010000 		.4byte	.LVL897
 17937 2a05 9A010000 		.4byte	.LFE41
 17938 2a09 0200     		.2byte	0x2
 17939 2a0b 91       		.byte	0x91
 17940 2a0c 54       		.sleb128 -44
 17941 2a0d 00000000 		.4byte	0
 17942 2a11 00000000 		.4byte	0
 17943              	.LLST191:
 17944 2a15 00000000 		.4byte	.LVL848
 17945 2a19 12000000 		.4byte	.LVL849
 17946 2a1d 0100     		.2byte	0x1
 17947 2a1f 51       		.byte	0x51
 17948 2a20 12000000 		.4byte	.LVL849
 17949 2a24 A4000000 		.4byte	.LVL870
 17950 2a28 0100     		.2byte	0x1
 17951 2a2a 55       		.byte	0x55
 17952 2a2b A6000000 		.4byte	.LVL871
 17953 2a2f 14010000 		.4byte	.LVL886
 17954 2a33 0100     		.2byte	0x1
 17955 2a35 55       		.byte	0x55
 17956 2a36 18010000 		.4byte	.LVL888
 17957 2a3a 1A010000 		.4byte	.LVL889
 17958 2a3e 0100     		.2byte	0x1
 17959 2a40 55       		.byte	0x55
 17960 2a41 1C010000 		.4byte	.LVL890
 17961 2a45 1E010000 		.4byte	.LVL891
 17962 2a49 0100     		.2byte	0x1
 17963 2a4b 55       		.byte	0x55
 17964 2a4c 86010000 		.4byte	.LVL894
 17965 2a50 8A010000 		.4byte	.LVL895
 17966 2a54 0100     		.2byte	0x1
 17967 2a56 55       		.byte	0x55
 17968 2a57 00000000 		.4byte	0
 17969 2a5b 00000000 		.4byte	0
 17970              	.LLST192:
 17971 2a5f 18000000 		.4byte	.LVL851
 17972 2a63 1C000000 		.4byte	.LVL852
 17973 2a67 0100     		.2byte	0x1
 17974 2a69 50       		.byte	0x50
 17975 2a6a 1C000000 		.4byte	.LVL852
 17976 2a6e 92010000 		.4byte	.LVL898
 17977 2a72 0100     		.2byte	0x1
 17978 2a74 57       		.byte	0x57
 17979 2a75 00000000 		.4byte	0
 17980 2a79 00000000 		.4byte	0
 17981              	.LLST193:
 17982 2a7d 72000000 		.4byte	.LVL861
 17983 2a81 74000000 		.4byte	.LVL862
 17984 2a85 0100     		.2byte	0x1
 17985 2a87 50       		.byte	0x50
 17986 2a88 76000000 		.4byte	.LVL863
 17987 2a8c 7E000000 		.4byte	.LVL864
 17988 2a90 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 414


 17989 2a92 50       		.byte	0x50
 17990 2a93 7E000000 		.4byte	.LVL864
 17991 2a97 81000000 		.4byte	.LVL865-1
 17992 2a9b 0200     		.2byte	0x2
 17993 2a9d 70       		.byte	0x70
 17994 2a9e 08       		.sleb128 8
 17995 2a9f 82000000 		.4byte	.LVL865
 17996 2aa3 8C000000 		.4byte	.LVL866
 17997 2aa7 0100     		.2byte	0x1
 17998 2aa9 50       		.byte	0x50
 17999 2aaa 8C000000 		.4byte	.LVL866
 18000 2aae 8E000000 		.4byte	.LVL867
 18001 2ab2 0300     		.2byte	0x3
 18002 2ab4 70       		.byte	0x70
 18003 2ab5 7F       		.sleb128 -1
 18004 2ab6 9F       		.byte	0x9f
 18005 2ab7 8E000000 		.4byte	.LVL867
 18006 2abb 98000000 		.4byte	.LVL868
 18007 2abf 0100     		.2byte	0x1
 18008 2ac1 50       		.byte	0x50
 18009 2ac2 98000000 		.4byte	.LVL868
 18010 2ac6 9A000000 		.4byte	.LVL869
 18011 2aca 0300     		.2byte	0x3
 18012 2acc 70       		.byte	0x70
 18013 2acd 7E       		.sleb128 -2
 18014 2ace 9F       		.byte	0x9f
 18015 2acf 9A000000 		.4byte	.LVL869
 18016 2ad3 B8000000 		.4byte	.LVL873
 18017 2ad7 0100     		.2byte	0x1
 18018 2ad9 50       		.byte	0x50
 18019 2ada B8000000 		.4byte	.LVL873
 18020 2ade BB000000 		.4byte	.LVL874-1
 18021 2ae2 0100     		.2byte	0x1
 18022 2ae4 51       		.byte	0x51
 18023 2ae5 BC000000 		.4byte	.LVL874
 18024 2ae9 C6000000 		.4byte	.LVL875
 18025 2aed 0100     		.2byte	0x1
 18026 2aef 50       		.byte	0x50
 18027 2af0 C6000000 		.4byte	.LVL875
 18028 2af4 C9000000 		.4byte	.LVL876-1
 18029 2af8 0100     		.2byte	0x1
 18030 2afa 51       		.byte	0x51
 18031 2afb CA000000 		.4byte	.LVL876
 18032 2aff D4000000 		.4byte	.LVL877
 18033 2b03 0100     		.2byte	0x1
 18034 2b05 50       		.byte	0x50
 18035 2b06 D4000000 		.4byte	.LVL877
 18036 2b0a D6000000 		.4byte	.LVL878
 18037 2b0e 0300     		.2byte	0x3
 18038 2b10 70       		.byte	0x70
 18039 2b11 7E       		.sleb128 -2
 18040 2b12 9F       		.byte	0x9f
 18041 2b13 D6000000 		.4byte	.LVL878
 18042 2b17 E8000000 		.4byte	.LVL879
 18043 2b1b 0100     		.2byte	0x1
 18044 2b1d 50       		.byte	0x50
 18045 2b1e EA000000 		.4byte	.LVL880
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 415


 18046 2b22 02010000 		.4byte	.LVL882
 18047 2b26 0100     		.2byte	0x1
 18048 2b28 50       		.byte	0x50
 18049 2b29 02010000 		.4byte	.LVL882
 18050 2b2d 05010000 		.4byte	.LVL883-1
 18051 2b31 0100     		.2byte	0x1
 18052 2b33 51       		.byte	0x51
 18053 2b34 1C010000 		.4byte	.LVL890
 18054 2b38 1E010000 		.4byte	.LVL891
 18055 2b3c 0100     		.2byte	0x1
 18056 2b3e 50       		.byte	0x50
 18057 2b3f 00000000 		.4byte	0
 18058 2b43 00000000 		.4byte	0
 18059              	.LLST194:
 18060 2b47 42000000 		.4byte	.LVL856
 18061 2b4b 18010000 		.4byte	.LVL888
 18062 2b4f 0100     		.2byte	0x1
 18063 2b51 56       		.byte	0x56
 18064 2b52 1C010000 		.4byte	.LVL890
 18065 2b56 1E010000 		.4byte	.LVL891
 18066 2b5a 0100     		.2byte	0x1
 18067 2b5c 56       		.byte	0x56
 18068 2b5d 00000000 		.4byte	0
 18069 2b61 00000000 		.4byte	0
 18070              	.LLST195:
 18071 2b65 34000000 		.4byte	.LVL854
 18072 2b69 06010000 		.4byte	.LVL883
 18073 2b6d 0200     		.2byte	0x2
 18074 2b6f 30       		.byte	0x30
 18075 2b70 9F       		.byte	0x9f
 18076 2b71 06010000 		.4byte	.LVL883
 18077 2b75 10010000 		.4byte	.LVL884
 18078 2b79 0100     		.2byte	0x1
 18079 2b7b 50       		.byte	0x50
 18080 2b7c 10010000 		.4byte	.LVL884
 18081 2b80 12010000 		.4byte	.LVL885
 18082 2b84 0300     		.2byte	0x3
 18083 2b86 70       		.byte	0x70
 18084 2b87 7E       		.sleb128 -2
 18085 2b88 9F       		.byte	0x9f
 18086 2b89 12010000 		.4byte	.LVL885
 18087 2b8d 16010000 		.4byte	.LVL887
 18088 2b91 0100     		.2byte	0x1
 18089 2b93 50       		.byte	0x50
 18090 2b94 16010000 		.4byte	.LVL887
 18091 2b98 18010000 		.4byte	.LVL888
 18092 2b9c 0100     		.2byte	0x1
 18093 2b9e 55       		.byte	0x55
 18094 2b9f 18010000 		.4byte	.LVL888
 18095 2ba3 1E010000 		.4byte	.LVL891
 18096 2ba7 0200     		.2byte	0x2
 18097 2ba9 30       		.byte	0x30
 18098 2baa 9F       		.byte	0x9f
 18099 2bab 1E010000 		.4byte	.LVL891
 18100 2baf 86010000 		.4byte	.LVL894
 18101 2bb3 0100     		.2byte	0x1
 18102 2bb5 55       		.byte	0x55
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 416


 18103 2bb6 8A010000 		.4byte	.LVL895
 18104 2bba 90010000 		.4byte	.LVL896
 18105 2bbe 0100     		.2byte	0x1
 18106 2bc0 55       		.byte	0x55
 18107 2bc1 00000000 		.4byte	0
 18108 2bc5 00000000 		.4byte	0
 18109              	.LLST196:
 18110 2bc9 34000000 		.4byte	.LVL854
 18111 2bcd 36000000 		.4byte	.LVL855
 18112 2bd1 0100     		.2byte	0x1
 18113 2bd3 53       		.byte	0x53
 18114 2bd4 36000000 		.4byte	.LVL855
 18115 2bd8 5A000000 		.4byte	.LVL858
 18116 2bdc 0100     		.2byte	0x1
 18117 2bde 59       		.byte	0x59
 18118 2bdf 5A000000 		.4byte	.LVL858
 18119 2be3 74000000 		.4byte	.LVL862
 18120 2be7 0300     		.2byte	0x3
 18121 2be9 79       		.byte	0x79
 18122 2bea 01       		.sleb128 1
 18123 2beb 9F       		.byte	0x9f
 18124 2bec 18010000 		.4byte	.LVL888
 18125 2bf0 1C010000 		.4byte	.LVL890
 18126 2bf4 0100     		.2byte	0x1
 18127 2bf6 59       		.byte	0x59
 18128 2bf7 00000000 		.4byte	0
 18129 2bfb 00000000 		.4byte	0
 18130              	.LLST197:
 18131 2bff 00000000 		.4byte	.LVL899
 18132 2c03 10000000 		.4byte	.LVL901
 18133 2c07 0100     		.2byte	0x1
 18134 2c09 50       		.byte	0x50
 18135 2c0a 10000000 		.4byte	.LVL901
 18136 2c0e 6A000000 		.4byte	.LVL914
 18137 2c12 0100     		.2byte	0x1
 18138 2c14 55       		.byte	0x55
 18139 2c15 6A000000 		.4byte	.LVL914
 18140 2c19 6C000000 		.4byte	.LVL915
 18141 2c1d 0100     		.2byte	0x1
 18142 2c1f 50       		.byte	0x50
 18143 2c20 6C000000 		.4byte	.LVL915
 18144 2c24 72000000 		.4byte	.LVL918
 18145 2c28 0100     		.2byte	0x1
 18146 2c2a 55       		.byte	0x55
 18147 2c2b 72000000 		.4byte	.LVL918
 18148 2c2f 74000000 		.4byte	.LFE42
 18149 2c33 0400     		.2byte	0x4
 18150 2c35 F3       		.byte	0xf3
 18151 2c36 01       		.uleb128 0x1
 18152 2c37 50       		.byte	0x50
 18153 2c38 9F       		.byte	0x9f
 18154 2c39 00000000 		.4byte	0
 18155 2c3d 00000000 		.4byte	0
 18156              	.LLST198:
 18157 2c41 00000000 		.4byte	.LVL899
 18158 2c45 0E000000 		.4byte	.LVL900
 18159 2c49 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 417


 18160 2c4b 51       		.byte	0x51
 18161 2c4c 0E000000 		.4byte	.LVL900
 18162 2c50 10000000 		.4byte	.LVL901
 18163 2c54 0200     		.2byte	0x2
 18164 2c56 91       		.byte	0x91
 18165 2c57 64       		.sleb128 -28
 18166 2c58 10000000 		.4byte	.LVL901
 18167 2c5c 13000000 		.4byte	.LVL902-1
 18168 2c60 0200     		.2byte	0x2
 18169 2c62 70       		.byte	0x70
 18170 2c63 00       		.sleb128 0
 18171 2c64 13000000 		.4byte	.LVL902-1
 18172 2c68 6A000000 		.4byte	.LVL914
 18173 2c6c 0200     		.2byte	0x2
 18174 2c6e 91       		.byte	0x91
 18175 2c6f 64       		.sleb128 -28
 18176 2c70 6A000000 		.4byte	.LVL914
 18177 2c74 6E000000 		.4byte	.LVL916
 18178 2c78 0100     		.2byte	0x1
 18179 2c7a 51       		.byte	0x51
 18180 2c7b 6E000000 		.4byte	.LVL916
 18181 2c7f 74000000 		.4byte	.LFE42
 18182 2c83 0200     		.2byte	0x2
 18183 2c85 91       		.byte	0x91
 18184 2c86 64       		.sleb128 -28
 18185 2c87 00000000 		.4byte	0
 18186 2c8b 00000000 		.4byte	0
 18187              	.LLST199:
 18188 2c8f 16000000 		.4byte	.LVL903
 18189 2c93 20000000 		.4byte	.LVL904
 18190 2c97 0100     		.2byte	0x1
 18191 2c99 50       		.byte	0x50
 18192 2c9a 20000000 		.4byte	.LVL904
 18193 2c9e 26000000 		.4byte	.LVL906
 18194 2ca2 0100     		.2byte	0x1
 18195 2ca4 54       		.byte	0x54
 18196 2ca5 26000000 		.4byte	.LVL906
 18197 2ca9 3A000000 		.4byte	.LVL907
 18198 2cad 0100     		.2byte	0x1
 18199 2caf 50       		.byte	0x50
 18200 2cb0 3A000000 		.4byte	.LVL907
 18201 2cb4 42000000 		.4byte	.LVL909
 18202 2cb8 0100     		.2byte	0x1
 18203 2cba 54       		.byte	0x54
 18204 2cbb 42000000 		.4byte	.LVL909
 18205 2cbf 44000000 		.4byte	.LVL910
 18206 2cc3 0100     		.2byte	0x1
 18207 2cc5 50       		.byte	0x50
 18208 2cc6 44000000 		.4byte	.LVL910
 18209 2cca 6A000000 		.4byte	.LVL914
 18210 2cce 0100     		.2byte	0x1
 18211 2cd0 54       		.byte	0x54
 18212 2cd1 6E000000 		.4byte	.LVL916
 18213 2cd5 70000000 		.4byte	.LVL917
 18214 2cd9 0100     		.2byte	0x1
 18215 2cdb 54       		.byte	0x54
 18216 2cdc 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 418


 18217 2ce0 00000000 		.4byte	0
 18218              	.LLST200:
 18219 2ce4 00000000 		.4byte	.LVL919
 18220 2ce8 0B000000 		.4byte	.LVL920-1
 18221 2cec 0100     		.2byte	0x1
 18222 2cee 50       		.byte	0x50
 18223 2cef 0B000000 		.4byte	.LVL920-1
 18224 2cf3 16000000 		.4byte	.LVL921
 18225 2cf7 0100     		.2byte	0x1
 18226 2cf9 54       		.byte	0x54
 18227 2cfa 16000000 		.4byte	.LVL921
 18228 2cfe 18000000 		.4byte	.LFE43
 18229 2d02 0400     		.2byte	0x4
 18230 2d04 F3       		.byte	0xf3
 18231 2d05 01       		.uleb128 0x1
 18232 2d06 50       		.byte	0x50
 18233 2d07 9F       		.byte	0x9f
 18234 2d08 00000000 		.4byte	0
 18235 2d0c 00000000 		.4byte	0
 18236              	.LLST201:
 18237 2d10 00000000 		.4byte	.LVL922
 18238 2d14 0D000000 		.4byte	.LVL924-1
 18239 2d18 0100     		.2byte	0x1
 18240 2d1a 50       		.byte	0x50
 18241 2d1b 0D000000 		.4byte	.LVL924-1
 18242 2d1f 4E000000 		.4byte	.LVL936
 18243 2d23 0100     		.2byte	0x1
 18244 2d25 55       		.byte	0x55
 18245 2d26 4E000000 		.4byte	.LVL936
 18246 2d2a 50000000 		.4byte	.LFE44
 18247 2d2e 0400     		.2byte	0x4
 18248 2d30 F3       		.byte	0xf3
 18249 2d31 01       		.uleb128 0x1
 18250 2d32 50       		.byte	0x50
 18251 2d33 9F       		.byte	0x9f
 18252 2d34 00000000 		.4byte	0
 18253 2d38 00000000 		.4byte	0
 18254              	.LLST202:
 18255 2d3c 00000000 		.4byte	.LVL922
 18256 2d40 0A000000 		.4byte	.LVL923
 18257 2d44 0100     		.2byte	0x1
 18258 2d46 51       		.byte	0x51
 18259 2d47 0A000000 		.4byte	.LVL923
 18260 2d4b 4E000000 		.4byte	.LVL937
 18261 2d4f 0100     		.2byte	0x1
 18262 2d51 56       		.byte	0x56
 18263 2d52 4E000000 		.4byte	.LVL937
 18264 2d56 50000000 		.4byte	.LFE44
 18265 2d5a 0400     		.2byte	0x4
 18266 2d5c F3       		.byte	0xf3
 18267 2d5d 01       		.uleb128 0x1
 18268 2d5e 51       		.byte	0x51
 18269 2d5f 9F       		.byte	0x9f
 18270 2d60 00000000 		.4byte	0
 18271 2d64 00000000 		.4byte	0
 18272              	.LLST203:
 18273 2d68 10000000 		.4byte	.LVL925
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 419


 18274 2d6c 1A000000 		.4byte	.LVL926
 18275 2d70 0100     		.2byte	0x1
 18276 2d72 50       		.byte	0x50
 18277 2d73 1A000000 		.4byte	.LVL926
 18278 2d77 20000000 		.4byte	.LVL928
 18279 2d7b 0100     		.2byte	0x1
 18280 2d7d 54       		.byte	0x54
 18281 2d7e 20000000 		.4byte	.LVL928
 18282 2d82 26000000 		.4byte	.LVL929
 18283 2d86 0100     		.2byte	0x1
 18284 2d88 50       		.byte	0x50
 18285 2d89 26000000 		.4byte	.LVL929
 18286 2d8d 2A000000 		.4byte	.LVL930
 18287 2d91 0100     		.2byte	0x1
 18288 2d93 54       		.byte	0x54
 18289 2d94 2A000000 		.4byte	.LVL930
 18290 2d98 30000000 		.4byte	.LVL931
 18291 2d9c 0100     		.2byte	0x1
 18292 2d9e 50       		.byte	0x50
 18293 2d9f 30000000 		.4byte	.LVL931
 18294 2da3 44000000 		.4byte	.LVL933
 18295 2da7 0100     		.2byte	0x1
 18296 2da9 54       		.byte	0x54
 18297 2daa 44000000 		.4byte	.LVL933
 18298 2dae 4A000000 		.4byte	.LVL934
 18299 2db2 0100     		.2byte	0x1
 18300 2db4 50       		.byte	0x50
 18301 2db5 4A000000 		.4byte	.LVL934
 18302 2db9 4E000000 		.4byte	.LVL935
 18303 2dbd 0100     		.2byte	0x1
 18304 2dbf 54       		.byte	0x54
 18305 2dc0 00000000 		.4byte	0
 18306 2dc4 00000000 		.4byte	0
 18307              	.LLST204:
 18308 2dc8 00000000 		.4byte	.LVL938
 18309 2dcc 0E000000 		.4byte	.LVL940
 18310 2dd0 0100     		.2byte	0x1
 18311 2dd2 50       		.byte	0x50
 18312 2dd3 0E000000 		.4byte	.LVL940
 18313 2dd7 11000000 		.4byte	.LVL941-1
 18314 2ddb 0200     		.2byte	0x2
 18315 2ddd 70       		.byte	0x70
 18316 2dde 00       		.sleb128 0
 18317 2ddf 11000000 		.4byte	.LVL941-1
 18318 2de3 42000000 		.4byte	.LFE45
 18319 2de7 0300     		.2byte	0x3
 18320 2de9 91       		.byte	0x91
 18321 2dea BC7F     		.sleb128 -68
 18322 2dec 00000000 		.4byte	0
 18323 2df0 00000000 		.4byte	0
 18324              	.LLST205:
 18325 2df4 00000000 		.4byte	.LVL938
 18326 2df8 0C000000 		.4byte	.LVL939
 18327 2dfc 0100     		.2byte	0x1
 18328 2dfe 51       		.byte	0x51
 18329 2dff 0C000000 		.4byte	.LVL939
 18330 2e03 40000000 		.4byte	.LVL951
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 420


 18331 2e07 0100     		.2byte	0x1
 18332 2e09 55       		.byte	0x55
 18333 2e0a 40000000 		.4byte	.LVL951
 18334 2e0e 42000000 		.4byte	.LFE45
 18335 2e12 0400     		.2byte	0x4
 18336 2e14 F3       		.byte	0xf3
 18337 2e15 01       		.uleb128 0x1
 18338 2e16 51       		.byte	0x51
 18339 2e17 9F       		.byte	0x9f
 18340 2e18 00000000 		.4byte	0
 18341 2e1c 00000000 		.4byte	0
 18342              	.LLST206:
 18343 2e20 14000000 		.4byte	.LVL942
 18344 2e24 1A000000 		.4byte	.LVL943
 18345 2e28 0100     		.2byte	0x1
 18346 2e2a 50       		.byte	0x50
 18347 2e2b 1A000000 		.4byte	.LVL943
 18348 2e2f 20000000 		.4byte	.LVL945
 18349 2e33 0100     		.2byte	0x1
 18350 2e35 54       		.byte	0x54
 18351 2e36 20000000 		.4byte	.LVL945
 18352 2e3a 34000000 		.4byte	.LVL946
 18353 2e3e 0100     		.2byte	0x1
 18354 2e40 50       		.byte	0x50
 18355 2e41 34000000 		.4byte	.LVL946
 18356 2e45 3A000000 		.4byte	.LVL948
 18357 2e49 0100     		.2byte	0x1
 18358 2e4b 54       		.byte	0x54
 18359 2e4c 3A000000 		.4byte	.LVL948
 18360 2e50 3C000000 		.4byte	.LVL949
 18361 2e54 0100     		.2byte	0x1
 18362 2e56 50       		.byte	0x50
 18363 2e57 3C000000 		.4byte	.LVL949
 18364 2e5b 40000000 		.4byte	.LVL950
 18365 2e5f 0100     		.2byte	0x1
 18366 2e61 54       		.byte	0x54
 18367 2e62 00000000 		.4byte	0
 18368 2e66 00000000 		.4byte	0
 18369              	.LLST207:
 18370 2e6a 00000000 		.4byte	.LVL952
 18371 2e6e 16000000 		.4byte	.LVL955
 18372 2e72 0100     		.2byte	0x1
 18373 2e74 50       		.byte	0x50
 18374 2e75 16000000 		.4byte	.LVL955
 18375 2e79 19000000 		.4byte	.LVL956-1
 18376 2e7d 0200     		.2byte	0x2
 18377 2e7f 70       		.byte	0x70
 18378 2e80 00       		.sleb128 0
 18379 2e81 19000000 		.4byte	.LVL956-1
 18380 2e85 DA000000 		.4byte	.LFE46
 18381 2e89 0200     		.2byte	0x2
 18382 2e8b 91       		.byte	0x91
 18383 2e8c 44       		.sleb128 -60
 18384 2e8d 00000000 		.4byte	0
 18385 2e91 00000000 		.4byte	0
 18386              	.LLST208:
 18387 2e95 00000000 		.4byte	.LVL952
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 421


 18388 2e99 14000000 		.4byte	.LVL954
 18389 2e9d 0100     		.2byte	0x1
 18390 2e9f 51       		.byte	0x51
 18391 2ea0 14000000 		.4byte	.LVL954
 18392 2ea4 D2000000 		.4byte	.LVL988
 18393 2ea8 0100     		.2byte	0x1
 18394 2eaa 59       		.byte	0x59
 18395 2eab D2000000 		.4byte	.LVL988
 18396 2eaf DA000000 		.4byte	.LFE46
 18397 2eb3 0400     		.2byte	0x4
 18398 2eb5 F3       		.byte	0xf3
 18399 2eb6 01       		.uleb128 0x1
 18400 2eb7 51       		.byte	0x51
 18401 2eb8 9F       		.byte	0x9f
 18402 2eb9 00000000 		.4byte	0
 18403 2ebd 00000000 		.4byte	0
 18404              	.LLST209:
 18405 2ec1 00000000 		.4byte	.LVL952
 18406 2ec5 12000000 		.4byte	.LVL953
 18407 2ec9 0100     		.2byte	0x1
 18408 2ecb 52       		.byte	0x52
 18409 2ecc 12000000 		.4byte	.LVL953
 18410 2ed0 3C000000 		.4byte	.LVL960
 18411 2ed4 0100     		.2byte	0x1
 18412 2ed6 54       		.byte	0x54
 18413 2ed7 3C000000 		.4byte	.LVL960
 18414 2edb 60000000 		.4byte	.LVL965
 18415 2edf 0400     		.2byte	0x4
 18416 2ee1 F3       		.byte	0xf3
 18417 2ee2 01       		.uleb128 0x1
 18418 2ee3 52       		.byte	0x52
 18419 2ee4 9F       		.byte	0x9f
 18420 2ee5 60000000 		.4byte	.LVL965
 18421 2ee9 66000000 		.4byte	.LVL967
 18422 2eed 0100     		.2byte	0x1
 18423 2eef 54       		.byte	0x54
 18424 2ef0 66000000 		.4byte	.LVL967
 18425 2ef4 DA000000 		.4byte	.LFE46
 18426 2ef8 0400     		.2byte	0x4
 18427 2efa F3       		.byte	0xf3
 18428 2efb 01       		.uleb128 0x1
 18429 2efc 52       		.byte	0x52
 18430 2efd 9F       		.byte	0x9f
 18431 2efe 00000000 		.4byte	0
 18432 2f02 00000000 		.4byte	0
 18433              	.LLST210:
 18434 2f06 1C000000 		.4byte	.LVL957
 18435 2f0a 3E000000 		.4byte	.LVL961
 18436 2f0e 0100     		.2byte	0x1
 18437 2f10 50       		.byte	0x50
 18438 2f11 3E000000 		.4byte	.LVL961
 18439 2f15 60000000 		.4byte	.LVL965
 18440 2f19 0100     		.2byte	0x1
 18441 2f1b 55       		.byte	0x55
 18442 2f1c 60000000 		.4byte	.LVL965
 18443 2f20 68000000 		.4byte	.LVL968
 18444 2f24 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 422


 18445 2f26 50       		.byte	0x50
 18446 2f27 68000000 		.4byte	.LVL968
 18447 2f2b 7C000000 		.4byte	.LVL971
 18448 2f2f 0100     		.2byte	0x1
 18449 2f31 55       		.byte	0x55
 18450 2f32 7C000000 		.4byte	.LVL971
 18451 2f36 82000000 		.4byte	.LVL972
 18452 2f3a 0100     		.2byte	0x1
 18453 2f3c 50       		.byte	0x50
 18454 2f3d 82000000 		.4byte	.LVL972
 18455 2f41 BA000000 		.4byte	.LVL983
 18456 2f45 0100     		.2byte	0x1
 18457 2f47 55       		.byte	0x55
 18458 2f48 BC000000 		.4byte	.LVL984
 18459 2f4c D2000000 		.4byte	.LVL987
 18460 2f50 0100     		.2byte	0x1
 18461 2f52 55       		.byte	0x55
 18462 2f53 00000000 		.4byte	0
 18463 2f57 00000000 		.4byte	0
 18464              	.LLST211:
 18465 2f5b 32000000 		.4byte	.LVL958
 18466 2f5f 3E000000 		.4byte	.LVL961
 18467 2f63 0200     		.2byte	0x2
 18468 2f65 30       		.byte	0x30
 18469 2f66 9F       		.byte	0x9f
 18470 2f67 3E000000 		.4byte	.LVL961
 18471 2f6b 60000000 		.4byte	.LVL965
 18472 2f6f 0100     		.2byte	0x1
 18473 2f71 56       		.byte	0x56
 18474 2f72 60000000 		.4byte	.LVL965
 18475 2f76 68000000 		.4byte	.LVL968
 18476 2f7a 0200     		.2byte	0x2
 18477 2f7c 30       		.byte	0x30
 18478 2f7d 9F       		.byte	0x9f
 18479 2f7e 68000000 		.4byte	.LVL968
 18480 2f82 CE000000 		.4byte	.LVL986
 18481 2f86 0100     		.2byte	0x1
 18482 2f88 56       		.byte	0x56
 18483 2f89 00000000 		.4byte	0
 18484 2f8d 00000000 		.4byte	0
 18485              	.LLST212:
 18486 2f91 38000000 		.4byte	.LVL959
 18487 2f95 3E000000 		.4byte	.LVL961
 18488 2f99 0200     		.2byte	0x2
 18489 2f9b 32       		.byte	0x32
 18490 2f9c 9F       		.byte	0x9f
 18491 2f9d 3E000000 		.4byte	.LVL961
 18492 2fa1 60000000 		.4byte	.LVL965
 18493 2fa5 0100     		.2byte	0x1
 18494 2fa7 54       		.byte	0x54
 18495 2fa8 60000000 		.4byte	.LVL965
 18496 2fac B8000000 		.4byte	.LVL982
 18497 2fb0 0100     		.2byte	0x1
 18498 2fb2 57       		.byte	0x57
 18499 2fb3 B8000000 		.4byte	.LVL982
 18500 2fb7 BE000000 		.4byte	.LVL985
 18501 2fbb 0100     		.2byte	0x1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 423


 18502 2fbd 54       		.byte	0x54
 18503 2fbe 00000000 		.4byte	0
 18504 2fc2 00000000 		.4byte	0
 18505              	.LLST213:
 18506 2fc6 64000000 		.4byte	.LVL966
 18507 2fca 68000000 		.4byte	.LVL968
 18508 2fce 0100     		.2byte	0x1
 18509 2fd0 53       		.byte	0x53
 18510 2fd1 68000000 		.4byte	.LVL968
 18511 2fd5 72000000 		.4byte	.LVL969
 18512 2fd9 0200     		.2byte	0x2
 18513 2fdb 7D       		.byte	0x7d
 18514 2fdc 00       		.sleb128 0
 18515 2fdd 72000000 		.4byte	.LVL969
 18516 2fe1 79000000 		.4byte	.LVL970-1
 18517 2fe5 0100     		.2byte	0x1
 18518 2fe7 52       		.byte	0x52
 18519 2fe8 79000000 		.4byte	.LVL970-1
 18520 2fec 82000000 		.4byte	.LVL972
 18521 2ff0 0100     		.2byte	0x1
 18522 2ff2 5A       		.byte	0x5a
 18523 2ff3 82000000 		.4byte	.LVL972
 18524 2ff7 B8000000 		.4byte	.LVL982
 18525 2ffb 0200     		.2byte	0x2
 18526 2ffd 7D       		.byte	0x7d
 18527 2ffe 00       		.sleb128 0
 18528 2fff 00000000 		.4byte	0
 18529 3003 00000000 		.4byte	0
 18530              	.LLST214:
 18531 3007 46000000 		.4byte	.LVL962
 18532 300b 60000000 		.4byte	.LVL965
 18533 300f 0100     		.2byte	0x1
 18534 3011 50       		.byte	0x50
 18535 3012 B8000000 		.4byte	.LVL982
 18536 3016 BE000000 		.4byte	.LVL985
 18537 301a 0100     		.2byte	0x1
 18538 301c 50       		.byte	0x50
 18539 301d 00000000 		.4byte	0
 18540 3021 00000000 		.4byte	0
 18541              	.LLST215:
 18542 3025 64000000 		.4byte	.LVL966
 18543 3029 68000000 		.4byte	.LVL968
 18544 302d 0200     		.2byte	0x2
 18545 302f 30       		.byte	0x30
 18546 3030 9F       		.byte	0x9f
 18547 3031 68000000 		.4byte	.LVL968
 18548 3035 AE000000 		.4byte	.LVL979
 18549 3039 0100     		.2byte	0x1
 18550 303b 54       		.byte	0x54
 18551 303c B0000000 		.4byte	.LVL980
 18552 3040 B8000000 		.4byte	.LVL982
 18553 3044 0100     		.2byte	0x1
 18554 3046 54       		.byte	0x54
 18555 3047 00000000 		.4byte	0
 18556 304b 00000000 		.4byte	0
 18557              	.LLST216:
 18558 304f 00000000 		.4byte	.LVL989
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 424


 18559 3053 0B000000 		.4byte	.LVL990-1
 18560 3057 0100     		.2byte	0x1
 18561 3059 50       		.byte	0x50
 18562 305a 0B000000 		.4byte	.LVL990-1
 18563 305e B8000000 		.4byte	.LVL1004
 18564 3062 0100     		.2byte	0x1
 18565 3064 55       		.byte	0x55
 18566 3065 B8000000 		.4byte	.LVL1004
 18567 3069 BA000000 		.4byte	.LFE47
 18568 306d 0400     		.2byte	0x4
 18569 306f F3       		.byte	0xf3
 18570 3070 01       		.uleb128 0x1
 18571 3071 50       		.byte	0x50
 18572 3072 9F       		.byte	0x9f
 18573 3073 00000000 		.4byte	0
 18574 3077 00000000 		.4byte	0
 18575              	.LLST217:
 18576 307b 0C000000 		.4byte	.LVL990
 18577 307f 12000000 		.4byte	.LVL991
 18578 3083 0100     		.2byte	0x1
 18579 3085 50       		.byte	0x50
 18580 3086 12000000 		.4byte	.LVL991
 18581 308a 34000000 		.4byte	.LVL993
 18582 308e 0100     		.2byte	0x1
 18583 3090 54       		.byte	0x54
 18584 3091 34000000 		.4byte	.LVL993
 18585 3095 3A000000 		.4byte	.LVL994
 18586 3099 0100     		.2byte	0x1
 18587 309b 50       		.byte	0x50
 18588 309c 3A000000 		.4byte	.LVL994
 18589 30a0 42000000 		.4byte	.LVL995
 18590 30a4 0100     		.2byte	0x1
 18591 30a6 54       		.byte	0x54
 18592 30a7 42000000 		.4byte	.LVL995
 18593 30ab 48000000 		.4byte	.LVL996
 18594 30af 0200     		.2byte	0x2
 18595 30b1 30       		.byte	0x30
 18596 30b2 9F       		.byte	0x9f
 18597 30b3 48000000 		.4byte	.LVL996
 18598 30b7 B6000000 		.4byte	.LVL1003
 18599 30bb 0100     		.2byte	0x1
 18600 30bd 54       		.byte	0x54
 18601 30be 00000000 		.4byte	0
 18602 30c2 00000000 		.4byte	0
 18603              	.LLST218:
 18604 30c6 42000000 		.4byte	.LVL995
 18605 30ca 60000000 		.4byte	.LVL998
 18606 30ce 0100     		.2byte	0x1
 18607 30d0 50       		.byte	0x50
 18608 30d1 60000000 		.4byte	.LVL998
 18609 30d5 63000000 		.4byte	.LVL999-1
 18610 30d9 0100     		.2byte	0x1
 18611 30db 51       		.byte	0x51
 18612 30dc 00000000 		.4byte	0
 18613 30e0 00000000 		.4byte	0
 18614              	.LLST219:
 18615 30e4 00000000 		.4byte	.LVL1005
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 425


 18616 30e8 0C000000 		.4byte	.LVL1007
 18617 30ec 0100     		.2byte	0x1
 18618 30ee 50       		.byte	0x50
 18619 30ef 0C000000 		.4byte	.LVL1007
 18620 30f3 0F000000 		.4byte	.LVL1008-1
 18621 30f7 0200     		.2byte	0x2
 18622 30f9 70       		.byte	0x70
 18623 30fa 00       		.sleb128 0
 18624 30fb 0F000000 		.4byte	.LVL1008-1
 18625 30ff AC000000 		.4byte	.LFE48
 18626 3103 0300     		.2byte	0x3
 18627 3105 91       		.byte	0x91
 18628 3106 847F     		.sleb128 -124
 18629 3108 00000000 		.4byte	0
 18630 310c 00000000 		.4byte	0
 18631              	.LLST220:
 18632 3110 12000000 		.4byte	.LVL1009
 18633 3114 1C000000 		.4byte	.LVL1010
 18634 3118 0100     		.2byte	0x1
 18635 311a 50       		.byte	0x50
 18636 311b 1C000000 		.4byte	.LVL1010
 18637 311f 22000000 		.4byte	.LVL1012
 18638 3123 0100     		.2byte	0x1
 18639 3125 54       		.byte	0x54
 18640 3126 22000000 		.4byte	.LVL1012
 18641 312a 3C000000 		.4byte	.LVL1013
 18642 312e 0100     		.2byte	0x1
 18643 3130 50       		.byte	0x50
 18644 3131 3C000000 		.4byte	.LVL1013
 18645 3135 62000000 		.4byte	.LVL1018
 18646 3139 0100     		.2byte	0x1
 18647 313b 54       		.byte	0x54
 18648 313c 62000000 		.4byte	.LVL1018
 18649 3140 68000000 		.4byte	.LVL1019
 18650 3144 0100     		.2byte	0x1
 18651 3146 50       		.byte	0x50
 18652 3147 68000000 		.4byte	.LVL1019
 18653 314b 6C000000 		.4byte	.LVL1020
 18654 314f 0100     		.2byte	0x1
 18655 3151 54       		.byte	0x54
 18656 3152 6C000000 		.4byte	.LVL1020
 18657 3156 7A000000 		.4byte	.LVL1022
 18658 315a 0100     		.2byte	0x1
 18659 315c 50       		.byte	0x50
 18660 315d 7A000000 		.4byte	.LVL1022
 18661 3161 88000000 		.4byte	.LVL1025
 18662 3165 0100     		.2byte	0x1
 18663 3167 54       		.byte	0x54
 18664 3168 88000000 		.4byte	.LVL1025
 18665 316c 94000000 		.4byte	.LVL1026
 18666 3170 0100     		.2byte	0x1
 18667 3172 50       		.byte	0x50
 18668 3173 94000000 		.4byte	.LVL1026
 18669 3177 AA000000 		.4byte	.LVL1031
 18670 317b 0100     		.2byte	0x1
 18671 317d 54       		.byte	0x54
 18672 317e 00000000 		.4byte	0
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 426


 18673 3182 00000000 		.4byte	0
 18674              	.LLST221:
 18675 3186 06000000 		.4byte	.LVL1006
 18676 318a 4E000000 		.4byte	.LVL1015
 18677 318e 0200     		.2byte	0x2
 18678 3190 30       		.byte	0x30
 18679 3191 9F       		.byte	0x9f
 18680 3192 4E000000 		.4byte	.LVL1015
 18681 3196 5C000000 		.4byte	.LVL1016
 18682 319a 0100     		.2byte	0x1
 18683 319c 50       		.byte	0x50
 18684 319d 5C000000 		.4byte	.LVL1016
 18685 31a1 7A000000 		.4byte	.LVL1022
 18686 31a5 0100     		.2byte	0x1
 18687 31a7 56       		.byte	0x56
 18688 31a8 7A000000 		.4byte	.LVL1022
 18689 31ac 7C000000 		.4byte	.LVL1023
 18690 31b0 0200     		.2byte	0x2
 18691 31b2 30       		.byte	0x30
 18692 31b3 9F       		.byte	0x9f
 18693 31b4 7C000000 		.4byte	.LVL1023
 18694 31b8 A6000000 		.4byte	.LVL1030
 18695 31bc 0100     		.2byte	0x1
 18696 31be 56       		.byte	0x56
 18697 31bf 00000000 		.4byte	0
 18698 31c3 00000000 		.4byte	0
 18699              	.LLST222:
 18700 31c7 00000000 		.4byte	.LVL1032
 18701 31cb 10000000 		.4byte	.LVL1033
 18702 31cf 0100     		.2byte	0x1
 18703 31d1 50       		.byte	0x50
 18704 31d2 10000000 		.4byte	.LVL1033
 18705 31d6 13000000 		.4byte	.LVL1034-1
 18706 31da 0200     		.2byte	0x2
 18707 31dc 70       		.byte	0x70
 18708 31dd 00       		.sleb128 0
 18709 31de 13000000 		.4byte	.LVL1034-1
 18710 31e2 2A010000 		.4byte	.LFE49
 18711 31e6 0300     		.2byte	0x3
 18712 31e8 91       		.byte	0x91
 18713 31e9 B47F     		.sleb128 -76
 18714 31eb 00000000 		.4byte	0
 18715 31ef 00000000 		.4byte	0
 18716              	.LLST223:
 18717 31f3 16000000 		.4byte	.LVL1035
 18718 31f7 22000000 		.4byte	.LVL1036
 18719 31fb 0100     		.2byte	0x1
 18720 31fd 50       		.byte	0x50
 18721 31fe 22000000 		.4byte	.LVL1036
 18722 3202 26000000 		.4byte	.LVL1037
 18723 3206 0100     		.2byte	0x1
 18724 3208 54       		.byte	0x54
 18725 3209 26000000 		.4byte	.LVL1037
 18726 320d 34000000 		.4byte	.LVL1039
 18727 3211 0100     		.2byte	0x1
 18728 3213 50       		.byte	0x50
 18729 3214 42000000 		.4byte	.LVL1043
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 427


 18730 3218 48000000 		.4byte	.LVL1044
 18731 321c 0200     		.2byte	0x2
 18732 321e 30       		.byte	0x30
 18733 321f 9F       		.byte	0x9f
 18734 3220 48000000 		.4byte	.LVL1044
 18735 3224 72000000 		.4byte	.LVL1053
 18736 3228 0100     		.2byte	0x1
 18737 322a 54       		.byte	0x54
 18738 322b 72000000 		.4byte	.LVL1053
 18739 322f 86000000 		.4byte	.LVL1055
 18740 3233 0100     		.2byte	0x1
 18741 3235 50       		.byte	0x50
 18742 3236 86000000 		.4byte	.LVL1055
 18743 323a 10010000 		.4byte	.LVL1070
 18744 323e 0100     		.2byte	0x1
 18745 3240 54       		.byte	0x54
 18746 3241 10010000 		.4byte	.LVL1070
 18747 3245 12010000 		.4byte	.LVL1071
 18748 3249 0100     		.2byte	0x1
 18749 324b 50       		.byte	0x50
 18750 324c 12010000 		.4byte	.LVL1071
 18751 3250 1E010000 		.4byte	.LVL1073
 18752 3254 0100     		.2byte	0x1
 18753 3256 54       		.byte	0x54
 18754 3257 1E010000 		.4byte	.LVL1073
 18755 325b 20010000 		.4byte	.LVL1074
 18756 325f 0100     		.2byte	0x1
 18757 3261 50       		.byte	0x50
 18758 3262 20010000 		.4byte	.LVL1074
 18759 3266 24010000 		.4byte	.LVL1075
 18760 326a 0100     		.2byte	0x1
 18761 326c 54       		.byte	0x54
 18762 326d 00000000 		.4byte	0
 18763 3271 00000000 		.4byte	0
 18764              	.LLST224:
 18765 3275 7E000000 		.4byte	.LVL1054
 18766 3279 89000000 		.4byte	.LVL1056-1
 18767 327d 0100     		.2byte	0x1
 18768 327f 53       		.byte	0x53
 18769 3280 89000000 		.4byte	.LVL1056-1
 18770 3284 BA000000 		.4byte	.LVL1059
 18771 3288 0200     		.2byte	0x2
 18772 328a 7D       		.byte	0x7d
 18773 328b 00       		.sleb128 0
 18774 328c BA000000 		.4byte	.LVL1059
 18775 3290 D4000000 		.4byte	.LVL1063
 18776 3294 0300     		.2byte	0x3
 18777 3296 76       		.byte	0x76
 18778 3297 30       		.sleb128 48
 18779 3298 9F       		.byte	0x9f
 18780 3299 E6000000 		.4byte	.LVL1066
 18781 329d 12010000 		.4byte	.LVL1071
 18782 32a1 0100     		.2byte	0x1
 18783 32a3 56       		.byte	0x56
 18784 32a4 00000000 		.4byte	0
 18785 32a8 00000000 		.4byte	0
 18786              	.LLST225:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 428


 18787 32ac 3A000000 		.4byte	.LVL1041
 18788 32b0 3C000000 		.4byte	.LVL1042
 18789 32b4 0100     		.2byte	0x1
 18790 32b6 50       		.byte	0x50
 18791 32b7 3C000000 		.4byte	.LVL1042
 18792 32bb 1E010000 		.4byte	.LVL1073
 18793 32bf 0100     		.2byte	0x1
 18794 32c1 57       		.byte	0x57
 18795 32c2 00000000 		.4byte	0
 18796 32c6 00000000 		.4byte	0
 18797              	.LLST226:
 18798 32ca C4000000 		.4byte	.LVL1061
 18799 32ce CD000000 		.4byte	.LVL1062-1
 18800 32d2 0200     		.2byte	0x2
 18801 32d4 91       		.byte	0x91
 18802 32d5 44       		.sleb128 -60
 18803 32d6 00000000 		.4byte	0
 18804 32da 00000000 		.4byte	0
 18805              	.LLST227:
 18806 32de 64000000 		.4byte	.LVL1050
 18807 32e2 6C000000 		.4byte	.LVL1051
 18808 32e6 0100     		.2byte	0x1
 18809 32e8 50       		.byte	0x50
 18810 32e9 6C000000 		.4byte	.LVL1051
 18811 32ed 1E010000 		.4byte	.LVL1073
 18812 32f1 0100     		.2byte	0x1
 18813 32f3 55       		.byte	0x55
 18814 32f4 00000000 		.4byte	0
 18815 32f8 00000000 		.4byte	0
 18816              	.LLST228:
 18817 32fc 00000000 		.4byte	.LVL1076
 18818 3300 0A000000 		.4byte	.LVL1077
 18819 3304 0100     		.2byte	0x1
 18820 3306 50       		.byte	0x50
 18821 3307 0A000000 		.4byte	.LVL1077
 18822 330b 14000000 		.4byte	.LVL1079
 18823 330f 0300     		.2byte	0x3
 18824 3311 91       		.byte	0x91
 18825 3312 EC7E     		.sleb128 -148
 18826 3314 14000000 		.4byte	.LVL1079
 18827 3318 17000000 		.4byte	.LVL1080-1
 18828 331c 0200     		.2byte	0x2
 18829 331e 70       		.byte	0x70
 18830 331f 00       		.sleb128 0
 18831 3320 17000000 		.4byte	.LVL1080-1
 18832 3324 22010000 		.4byte	.LFE50
 18833 3328 0300     		.2byte	0x3
 18834 332a 91       		.byte	0x91
 18835 332b EC7E     		.sleb128 -148
 18836 332d 00000000 		.4byte	0
 18837 3331 00000000 		.4byte	0
 18838              	.LLST229:
 18839 3335 00000000 		.4byte	.LVL1076
 18840 3339 0D000000 		.4byte	.LVL1078-1
 18841 333d 0100     		.2byte	0x1
 18842 333f 51       		.byte	0x51
 18843 3340 0D000000 		.4byte	.LVL1078-1
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 429


 18844 3344 98000000 		.4byte	.LVL1095
 18845 3348 0300     		.2byte	0x3
 18846 334a 91       		.byte	0x91
 18847 334b E87E     		.sleb128 -152
 18848 334d 98000000 		.4byte	.LVL1095
 18849 3351 9F000000 		.4byte	.LVL1096-1
 18850 3355 0200     		.2byte	0x2
 18851 3357 73       		.byte	0x73
 18852 3358 00       		.sleb128 0
 18853 3359 9F000000 		.4byte	.LVL1096-1
 18854 335d 22010000 		.4byte	.LFE50
 18855 3361 0300     		.2byte	0x3
 18856 3363 91       		.byte	0x91
 18857 3364 E87E     		.sleb128 -152
 18858 3366 00000000 		.4byte	0
 18859 336a 00000000 		.4byte	0
 18860              	.LLST230:
 18861 336e 1A000000 		.4byte	.LVL1081
 18862 3372 26000000 		.4byte	.LVL1082
 18863 3376 0100     		.2byte	0x1
 18864 3378 50       		.byte	0x50
 18865 3379 26000000 		.4byte	.LVL1082
 18866 337d 2C000000 		.4byte	.LVL1084
 18867 3381 0100     		.2byte	0x1
 18868 3383 54       		.byte	0x54
 18869 3384 2C000000 		.4byte	.LVL1084
 18870 3388 3C000000 		.4byte	.LVL1085
 18871 338c 0100     		.2byte	0x1
 18872 338e 50       		.byte	0x50
 18873 338f 3C000000 		.4byte	.LVL1085
 18874 3393 62000000 		.4byte	.LVL1089
 18875 3397 0100     		.2byte	0x1
 18876 3399 54       		.byte	0x54
 18877 339a 62000000 		.4byte	.LVL1089
 18878 339e 7E000000 		.4byte	.LVL1090
 18879 33a2 0100     		.2byte	0x1
 18880 33a4 50       		.byte	0x50
 18881 33a5 7E000000 		.4byte	.LVL1090
 18882 33a9 8A000000 		.4byte	.LVL1092
 18883 33ad 0100     		.2byte	0x1
 18884 33af 54       		.byte	0x54
 18885 33b0 8A000000 		.4byte	.LVL1092
 18886 33b4 90000000 		.4byte	.LVL1094
 18887 33b8 0100     		.2byte	0x1
 18888 33ba 50       		.byte	0x50
 18889 33bb 90000000 		.4byte	.LVL1094
 18890 33bf C6000000 		.4byte	.LVL1097
 18891 33c3 0100     		.2byte	0x1
 18892 33c5 54       		.byte	0x54
 18893 33c6 E4000000 		.4byte	.LVL1102
 18894 33ca E6000000 		.4byte	.LVL1103
 18895 33ce 0100     		.2byte	0x1
 18896 33d0 50       		.byte	0x50
 18897 33d1 E6000000 		.4byte	.LVL1103
 18898 33d5 04010000 		.4byte	.LVL1106
 18899 33d9 0100     		.2byte	0x1
 18900 33db 54       		.byte	0x54
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 430


 18901 33dc 06010000 		.4byte	.LVL1107
 18902 33e0 12010000 		.4byte	.LVL1109
 18903 33e4 0100     		.2byte	0x1
 18904 33e6 54       		.byte	0x54
 18905 33e7 12010000 		.4byte	.LVL1109
 18906 33eb 16010000 		.4byte	.LVL1110
 18907 33ef 0100     		.2byte	0x1
 18908 33f1 50       		.byte	0x50
 18909 33f2 16010000 		.4byte	.LVL1110
 18910 33f6 20010000 		.4byte	.LVL1113
 18911 33fa 0100     		.2byte	0x1
 18912 33fc 54       		.byte	0x54
 18913 33fd 00000000 		.4byte	0
 18914 3401 00000000 		.4byte	0
 18915              	.LLST231:
 18916 3405 8E000000 		.4byte	.LVL1093
 18917 3409 EA000000 		.4byte	.LVL1104
 18918 340d 0100     		.2byte	0x1
 18919 340f 55       		.byte	0x55
 18920 3410 EA000000 		.4byte	.LVL1104
 18921 3414 FB000000 		.4byte	.LVL1105-1
 18922 3418 0100     		.2byte	0x1
 18923 341a 51       		.byte	0x51
 18924 341b 04010000 		.4byte	.LVL1106
 18925 341f 06010000 		.4byte	.LVL1107
 18926 3423 0100     		.2byte	0x1
 18927 3425 55       		.byte	0x55
 18928 3426 00000000 		.4byte	0
 18929 342a 00000000 		.4byte	0
 18930              	.LLST232:
 18931 342e D6000000 		.4byte	.LVL1099
 18932 3432 DE000000 		.4byte	.LVL1100
 18933 3436 0100     		.2byte	0x1
 18934 3438 50       		.byte	0x50
 18935 3439 DE000000 		.4byte	.LVL1100
 18936 343d E1000000 		.4byte	.LVL1101-1
 18937 3441 0100     		.2byte	0x1
 18938 3443 51       		.byte	0x51
 18939 3444 04010000 		.4byte	.LVL1106
 18940 3448 06010000 		.4byte	.LVL1107
 18941 344c 0100     		.2byte	0x1
 18942 344e 50       		.byte	0x50
 18943 344f 00000000 		.4byte	0
 18944 3453 00000000 		.4byte	0
 18945              		.section	.debug_aranges,"",%progbits
 18946 0000 AC010000 		.4byte	0x1ac
 18947 0004 0200     		.2byte	0x2
 18948 0006 00000000 		.4byte	.Ldebug_info0
 18949 000a 04       		.byte	0x4
 18950 000b 00       		.byte	0
 18951 000c 0000     		.2byte	0
 18952 000e 0000     		.2byte	0
 18953 0010 00000000 		.4byte	.LFB0
 18954 0014 0C000000 		.4byte	.LFE0-.LFB0
 18955 0018 00000000 		.4byte	.LFB1
 18956 001c 16000000 		.4byte	.LFE1-.LFB1
 18957 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 431


 18958 0024 08000000 		.4byte	.LFE2-.LFB2
 18959 0028 00000000 		.4byte	.LFB3
 18960 002c 10000000 		.4byte	.LFE3-.LFB3
 18961 0030 00000000 		.4byte	.LFB4
 18962 0034 14000000 		.4byte	.LFE4-.LFB4
 18963 0038 00000000 		.4byte	.LFB5
 18964 003c 0C000000 		.4byte	.LFE5-.LFB5
 18965 0040 00000000 		.4byte	.LFB6
 18966 0044 1E000000 		.4byte	.LFE6-.LFB6
 18967 0048 00000000 		.4byte	.LFB7
 18968 004c 12000000 		.4byte	.LFE7-.LFB7
 18969 0050 00000000 		.4byte	.LFB8
 18970 0054 24000000 		.4byte	.LFE8-.LFB8
 18971 0058 00000000 		.4byte	.LFB9
 18972 005c 28000000 		.4byte	.LFE9-.LFB9
 18973 0060 00000000 		.4byte	.LFB13
 18974 0064 18000000 		.4byte	.LFE13-.LFB13
 18975 0068 00000000 		.4byte	.LFB22
 18976 006c 24000000 		.4byte	.LFE22-.LFB22
 18977 0070 00000000 		.4byte	.LFB23
 18978 0074 24000000 		.4byte	.LFE23-.LFB23
 18979 0078 00000000 		.4byte	.LFB28
 18980 007c 6A000000 		.4byte	.LFE28-.LFB28
 18981 0080 00000000 		.4byte	.LFB29
 18982 0084 1C010000 		.4byte	.LFE29-.LFB29
 18983 0088 00000000 		.4byte	.LFB31
 18984 008c 52000000 		.4byte	.LFE31-.LFB31
 18985 0090 00000000 		.4byte	.LFB34
 18986 0094 4C000000 		.4byte	.LFE34-.LFB34
 18987 0098 00000000 		.4byte	.LFB10
 18988 009c 54000000 		.4byte	.LFE10-.LFB10
 18989 00a0 00000000 		.4byte	.LFB11
 18990 00a4 36000000 		.4byte	.LFE11-.LFB11
 18991 00a8 00000000 		.4byte	.LFB32
 18992 00ac 78000000 		.4byte	.LFE32-.LFB32
 18993 00b0 00000000 		.4byte	.LFB33
 18994 00b4 2C030000 		.4byte	.LFE33-.LFB33
 18995 00b8 00000000 		.4byte	.LFB15
 18996 00bc 2A010000 		.4byte	.LFE15-.LFB15
 18997 00c0 00000000 		.4byte	.LFB14
 18998 00c4 DE000000 		.4byte	.LFE14-.LFB14
 18999 00c8 00000000 		.4byte	.LFB19
 19000 00cc AC000000 		.4byte	.LFE19-.LFB19
 19001 00d0 00000000 		.4byte	.LFB17
 19002 00d4 08010000 		.4byte	.LFE17-.LFB17
 19003 00d8 00000000 		.4byte	.LFB16
 19004 00dc 7C000000 		.4byte	.LFE16-.LFB16
 19005 00e0 00000000 		.4byte	.LFB27
 19006 00e4 1E000000 		.4byte	.LFE27-.LFB27
 19007 00e8 00000000 		.4byte	.LFB18
 19008 00ec 58000000 		.4byte	.LFE18-.LFB18
 19009 00f0 00000000 		.4byte	.LFB20
 19010 00f4 D0000000 		.4byte	.LFE20-.LFB20
 19011 00f8 00000000 		.4byte	.LFB25
 19012 00fc 58000000 		.4byte	.LFE25-.LFB25
 19013 0100 00000000 		.4byte	.LFB30
 19014 0104 84000000 		.4byte	.LFE30-.LFB30
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 432


 19015 0108 00000000 		.4byte	.LFB21
 19016 010c 4A000000 		.4byte	.LFE21-.LFB21
 19017 0110 00000000 		.4byte	.LFB26
 19018 0114 3A000000 		.4byte	.LFE26-.LFB26
 19019 0118 00000000 		.4byte	.LFB24
 19020 011c 60000000 		.4byte	.LFE24-.LFB24
 19021 0120 00000000 		.4byte	.LFB12
 19022 0124 98000000 		.4byte	.LFE12-.LFB12
 19023 0128 00000000 		.4byte	.LFB35
 19024 012c 54000000 		.4byte	.LFE35-.LFB35
 19025 0130 00000000 		.4byte	.LFB36
 19026 0134 EC010000 		.4byte	.LFE36-.LFB36
 19027 0138 00000000 		.4byte	.LFB37
 19028 013c 92010000 		.4byte	.LFE37-.LFB37
 19029 0140 00000000 		.4byte	.LFB38
 19030 0144 D0010000 		.4byte	.LFE38-.LFB38
 19031 0148 00000000 		.4byte	.LFB39
 19032 014c 98000000 		.4byte	.LFE39-.LFB39
 19033 0150 00000000 		.4byte	.LFB40
 19034 0154 22000000 		.4byte	.LFE40-.LFB40
 19035 0158 00000000 		.4byte	.LFB41
 19036 015c 9A010000 		.4byte	.LFE41-.LFB41
 19037 0160 00000000 		.4byte	.LFB42
 19038 0164 74000000 		.4byte	.LFE42-.LFB42
 19039 0168 00000000 		.4byte	.LFB43
 19040 016c 18000000 		.4byte	.LFE43-.LFB43
 19041 0170 00000000 		.4byte	.LFB44
 19042 0174 50000000 		.4byte	.LFE44-.LFB44
 19043 0178 00000000 		.4byte	.LFB45
 19044 017c 42000000 		.4byte	.LFE45-.LFB45
 19045 0180 00000000 		.4byte	.LFB46
 19046 0184 DA000000 		.4byte	.LFE46-.LFB46
 19047 0188 00000000 		.4byte	.LFB47
 19048 018c BA000000 		.4byte	.LFE47-.LFB47
 19049 0190 00000000 		.4byte	.LFB48
 19050 0194 AC000000 		.4byte	.LFE48-.LFB48
 19051 0198 00000000 		.4byte	.LFB49
 19052 019c 2A010000 		.4byte	.LFE49-.LFB49
 19053 01a0 00000000 		.4byte	.LFB50
 19054 01a4 22010000 		.4byte	.LFE50-.LFB50
 19055 01a8 00000000 		.4byte	0
 19056 01ac 00000000 		.4byte	0
 19057              		.section	.debug_ranges,"",%progbits
 19058              	.Ldebug_ranges0:
 19059 0000 00000000 		.4byte	.LFB0
 19060 0004 0C000000 		.4byte	.LFE0
 19061 0008 00000000 		.4byte	.LFB1
 19062 000c 16000000 		.4byte	.LFE1
 19063 0010 00000000 		.4byte	.LFB2
 19064 0014 08000000 		.4byte	.LFE2
 19065 0018 00000000 		.4byte	.LFB3
 19066 001c 10000000 		.4byte	.LFE3
 19067 0020 00000000 		.4byte	.LFB4
 19068 0024 14000000 		.4byte	.LFE4
 19069 0028 00000000 		.4byte	.LFB5
 19070 002c 0C000000 		.4byte	.LFE5
 19071 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 433


 19072 0034 1E000000 		.4byte	.LFE6
 19073 0038 00000000 		.4byte	.LFB7
 19074 003c 12000000 		.4byte	.LFE7
 19075 0040 00000000 		.4byte	.LFB8
 19076 0044 24000000 		.4byte	.LFE8
 19077 0048 00000000 		.4byte	.LFB9
 19078 004c 28000000 		.4byte	.LFE9
 19079 0050 00000000 		.4byte	.LFB13
 19080 0054 18000000 		.4byte	.LFE13
 19081 0058 00000000 		.4byte	.LFB22
 19082 005c 24000000 		.4byte	.LFE22
 19083 0060 00000000 		.4byte	.LFB23
 19084 0064 24000000 		.4byte	.LFE23
 19085 0068 00000000 		.4byte	.LFB28
 19086 006c 6A000000 		.4byte	.LFE28
 19087 0070 00000000 		.4byte	.LFB29
 19088 0074 1C010000 		.4byte	.LFE29
 19089 0078 00000000 		.4byte	.LFB31
 19090 007c 52000000 		.4byte	.LFE31
 19091 0080 00000000 		.4byte	.LFB34
 19092 0084 4C000000 		.4byte	.LFE34
 19093 0088 00000000 		.4byte	.LFB10
 19094 008c 54000000 		.4byte	.LFE10
 19095 0090 00000000 		.4byte	.LFB11
 19096 0094 36000000 		.4byte	.LFE11
 19097 0098 00000000 		.4byte	.LFB32
 19098 009c 78000000 		.4byte	.LFE32
 19099 00a0 00000000 		.4byte	.LFB33
 19100 00a4 2C030000 		.4byte	.LFE33
 19101 00a8 00000000 		.4byte	.LFB15
 19102 00ac 2A010000 		.4byte	.LFE15
 19103 00b0 00000000 		.4byte	.LFB14
 19104 00b4 DE000000 		.4byte	.LFE14
 19105 00b8 00000000 		.4byte	.LFB19
 19106 00bc AC000000 		.4byte	.LFE19
 19107 00c0 00000000 		.4byte	.LFB17
 19108 00c4 08010000 		.4byte	.LFE17
 19109 00c8 00000000 		.4byte	.LFB16
 19110 00cc 7C000000 		.4byte	.LFE16
 19111 00d0 00000000 		.4byte	.LFB27
 19112 00d4 1E000000 		.4byte	.LFE27
 19113 00d8 00000000 		.4byte	.LFB18
 19114 00dc 58000000 		.4byte	.LFE18
 19115 00e0 00000000 		.4byte	.LFB20
 19116 00e4 D0000000 		.4byte	.LFE20
 19117 00e8 00000000 		.4byte	.LFB25
 19118 00ec 58000000 		.4byte	.LFE25
 19119 00f0 00000000 		.4byte	.LFB30
 19120 00f4 84000000 		.4byte	.LFE30
 19121 00f8 00000000 		.4byte	.LFB21
 19122 00fc 4A000000 		.4byte	.LFE21
 19123 0100 00000000 		.4byte	.LFB26
 19124 0104 3A000000 		.4byte	.LFE26
 19125 0108 00000000 		.4byte	.LFB24
 19126 010c 60000000 		.4byte	.LFE24
 19127 0110 00000000 		.4byte	.LFB12
 19128 0114 98000000 		.4byte	.LFE12
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 434


 19129 0118 00000000 		.4byte	.LFB35
 19130 011c 54000000 		.4byte	.LFE35
 19131 0120 00000000 		.4byte	.LFB36
 19132 0124 EC010000 		.4byte	.LFE36
 19133 0128 00000000 		.4byte	.LFB37
 19134 012c 92010000 		.4byte	.LFE37
 19135 0130 00000000 		.4byte	.LFB38
 19136 0134 D0010000 		.4byte	.LFE38
 19137 0138 00000000 		.4byte	.LFB39
 19138 013c 98000000 		.4byte	.LFE39
 19139 0140 00000000 		.4byte	.LFB40
 19140 0144 22000000 		.4byte	.LFE40
 19141 0148 00000000 		.4byte	.LFB41
 19142 014c 9A010000 		.4byte	.LFE41
 19143 0150 00000000 		.4byte	.LFB42
 19144 0154 74000000 		.4byte	.LFE42
 19145 0158 00000000 		.4byte	.LFB43
 19146 015c 18000000 		.4byte	.LFE43
 19147 0160 00000000 		.4byte	.LFB44
 19148 0164 50000000 		.4byte	.LFE44
 19149 0168 00000000 		.4byte	.LFB45
 19150 016c 42000000 		.4byte	.LFE45
 19151 0170 00000000 		.4byte	.LFB46
 19152 0174 DA000000 		.4byte	.LFE46
 19153 0178 00000000 		.4byte	.LFB47
 19154 017c BA000000 		.4byte	.LFE47
 19155 0180 00000000 		.4byte	.LFB48
 19156 0184 AC000000 		.4byte	.LFE48
 19157 0188 00000000 		.4byte	.LFB49
 19158 018c 2A010000 		.4byte	.LFE49
 19159 0190 00000000 		.4byte	.LFB50
 19160 0194 22010000 		.4byte	.LFE50
 19161 0198 00000000 		.4byte	0
 19162 019c 00000000 		.4byte	0
 19163              		.section	.debug_line,"",%progbits
 19164              	.Ldebug_line0:
 19165 0000 430C0000 		.section	.debug_str,"MS",%progbits,1
 19165      02005600 
 19165      00000201 
 19165      FB0E0D00 
 19165      01010101 
 19166              	.LASF73:
 19167 0000 5245535F 		.ascii	"RES_WRPRT\000"
 19167      57525052 
 19167      5400
 19168              	.LASF67:
 19169 000a 46525F54 		.ascii	"FR_TOO_MANY_OPEN_FILES\000"
 19169      4F4F5F4D 
 19169      414E595F 
 19169      4F50454E 
 19169      5F46494C 
 19170              	.LASF108:
 19171 0021 7075745F 		.ascii	"put_fat\000"
 19171      66617400 
 19172              	.LASF14:
 19173 0029 66735F74 		.ascii	"fs_type\000"
 19173      79706500 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 435


 19174              	.LASF132:
 19175 0031 63736563 		.ascii	"csect\000"
 19175      7400
 19176              	.LASF83:
 19177 0037 63686B5F 		.ascii	"chk_chr\000"
 19177      63687200 
 19178              	.LASF156:
 19179 003f 46617446 		.ascii	"FatFs\000"
 19179      7300
 19180              	.LASF141:
 19181 0045 69667074 		.ascii	"ifptr\000"
 19181      7200
 19182              	.LASF128:
 19183 004b 665F7265 		.ascii	"f_read\000"
 19183      616400
 19184              	.LASF74:
 19185 0052 5245535F 		.ascii	"RES_NOTRDY\000"
 19185      4E4F5452 
 19185      445900
 19186              	.LASF19:
 19187 005d 6E5F726F 		.ascii	"n_rootdir\000"
 19187      6F746469 
 19187      7200
 19188              	.LASF92:
 19189 0067 70617468 		.ascii	"path\000"
 19189      00
 19190              	.LASF123:
 19191 006c 6469725F 		.ascii	"dir_register\000"
 19191      72656769 
 19191      73746572 
 19191      00
 19192              	.LASF133:
 19193 0079 72627566 		.ascii	"rbuff\000"
 19193      6600
 19194              	.LASF10:
 19195 007f 6C6F6E67 		.ascii	"long long unsigned int\000"
 19195      206C6F6E 
 19195      6720756E 
 19195      7369676E 
 19195      65642069 
 19196              	.LASF119:
 19197 0096 6469725F 		.ascii	"dir_find\000"
 19197      66696E64 
 19197      00
 19198              	.LASF40:
 19199 009f 73656374 		.ascii	"sect\000"
 19199      00
 19200              	.LASF102:
 19201 00a4 66617369 		.ascii	"fasize\000"
 19201      7A6500
 19202              	.LASF107:
 19203 00ab 6E727376 		.ascii	"nrsv\000"
 19203      00
 19204              	.LASF41:
 19205 00b0 6469725F 		.ascii	"dir_sect\000"
 19205      73656374 
 19205      00
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 436


 19206              	.LASF27:
 19207 00b9 64697262 		.ascii	"dirbase\000"
 19207      61736500 
 19208              	.LASF148:
 19209 00c1 6E667265 		.ascii	"nfree\000"
 19209      6500
 19210              	.LASF129:
 19211 00c7 62756666 		.ascii	"buff\000"
 19211      00
 19212              	.LASF68:
 19213 00cc 46525F49 		.ascii	"FR_INVALID_PARAMETER\000"
 19213      4E56414C 
 19213      49445F50 
 19213      4152414D 
 19213      45544552 
 19214              	.LASF24:
 19215 00e1 6673697A 		.ascii	"fsize\000"
 19215      6500
 19216              	.LASF23:
 19217 00e7 6E5F6661 		.ascii	"n_fatent\000"
 19217      74656E74 
 19217      00
 19218              	.LASF58:
 19219 00f0 46525F49 		.ascii	"FR_INVALID_OBJECT\000"
 19219      4E56414C 
 19219      49445F4F 
 19219      424A4543 
 19219      5400
 19220              	.LASF7:
 19221 0102 6C6F6E67 		.ascii	"long int\000"
 19221      20696E74 
 19221      00
 19222              	.LASF114:
 19223 010b 6469725F 		.ascii	"dir_remove\000"
 19223      72656D6F 
 19223      766500
 19224              	.LASF75:
 19225 0116 5245535F 		.ascii	"RES_PARERR\000"
 19225      50415245 
 19225      525200
 19226              	.LASF16:
 19227 0121 6E5F6661 		.ascii	"n_fats\000"
 19227      747300
 19228              	.LASF89:
 19229 0128 73745F63 		.ascii	"st_clust\000"
 19229      6C757374 
 19229      00
 19230              	.LASF62:
 19231 0131 46525F4E 		.ascii	"FR_NO_FILESYSTEM\000"
 19231      4F5F4649 
 19231      4C455359 
 19231      5354454D 
 19231      00
 19232              	.LASF66:
 19233 0142 46525F4E 		.ascii	"FR_NOT_ENOUGH_CORE\000"
 19233      4F545F45 
 19233      4E4F5547 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 437


 19233      485F434F 
 19233      524500
 19234              	.LASF57:
 19235 0155 46525F45 		.ascii	"FR_EXIST\000"
 19235      58495354 
 19235      00
 19236              	.LASF26:
 19237 015e 66617462 		.ascii	"fatbase\000"
 19237      61736500 
 19238              	.LASF8:
 19239 0166 44574F52 		.ascii	"DWORD\000"
 19239      4400
 19240              	.LASF134:
 19241 016c 665F7772 		.ascii	"f_write\000"
 19241      69746500 
 19242              	.LASF13:
 19243 0174 4653495A 		.ascii	"FSIZE_t\000"
 19243      455F7400 
 19244              	.LASF145:
 19245 017c 665F7374 		.ascii	"f_stat\000"
 19245      617400
 19246              	.LASF95:
 19247 0183 73796E63 		.ascii	"sync_window\000"
 19247      5F77696E 
 19247      646F7700 
 19248              	.LASF118:
 19249 018f 73747265 		.ascii	"stretch\000"
 19249      74636800 
 19250              	.LASF20:
 19251 0197 6373697A 		.ascii	"csize\000"
 19251      6500
 19252              	.LASF162:
 19253 019d 6469736B 		.ascii	"disk_initialize\000"
 19253      5F696E69 
 19253      7469616C 
 19253      697A6500 
 19254              	.LASF15:
 19255 01ad 70647276 		.ascii	"pdrv\000"
 19255      00
 19256              	.LASF22:
 19257 01b2 66726565 		.ascii	"free_clst\000"
 19257      5F636C73 
 19257      7400
 19258              	.LASF2:
 19259 01bc 42595445 		.ascii	"BYTE\000"
 19259      00
 19260              	.LASF42:
 19261 01c1 6469725F 		.ascii	"dir_ptr\000"
 19261      70747200 
 19262              	.LASF32:
 19263 01c9 61747472 		.ascii	"attr\000"
 19263      00
 19264              	.LASF100:
 19265 01ce 6D6F6465 		.ascii	"mode\000"
 19265      00
 19266              	.LASF86:
 19267 01d3 636C7374 		.ascii	"clst2sect\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 438


 19267      32736563 
 19267      7400
 19268              	.LASF110:
 19269 01dd 6469725F 		.ascii	"dir_sdi\000"
 19269      73646900 
 19270              	.LASF0:
 19271 01e5 756E7369 		.ascii	"unsigned int\000"
 19271      676E6564 
 19271      20696E74 
 19271      00
 19272              	.LASF166:
 19273 01f2 2E2E5C2E 		.ascii	"..\\..\\FatFS-master\\source\\ff.c\000"
 19273      2E5C4661 
 19273      7446532D 
 19273      6D617374 
 19273      65725C73 
 19274              	.LASF1:
 19275 0211 55494E54 		.ascii	"UINT\000"
 19275      00
 19276              	.LASF45:
 19277 0216 6674696D 		.ascii	"ftime\000"
 19277      6500
 19278              	.LASF9:
 19279 021c 6C6F6E67 		.ascii	"long unsigned int\000"
 19279      20756E73 
 19279      69676E65 
 19279      6420696E 
 19279      7400
 19280              	.LASF159:
 19281 022e 6469736B 		.ascii	"disk_status\000"
 19281      5F737461 
 19281      74757300 
 19282              	.LASF167:
 19283 023a 433A5C55 		.ascii	"C:\\Users\\Nusair Islam\\Desktop\\PSOC\\SD\\SD.cyds"
 19283      73657273 
 19283      5C4E7573 
 19283      61697220 
 19283      49736C61 
 19284 0267 6E00     		.ascii	"n\000"
 19285              	.LASF138:
 19286 0269 665F636C 		.ascii	"f_close\000"
 19286      6F736500 
 19287              	.LASF101:
 19288 0271 62736563 		.ascii	"bsect\000"
 19288      7400
 19289              	.LASF104:
 19290 0277 73797365 		.ascii	"sysect\000"
 19290      637400
 19291              	.LASF6:
 19292 027e 73686F72 		.ascii	"short unsigned int\000"
 19292      7420756E 
 19292      7369676E 
 19292      65642069 
 19292      6E7400
 19293              	.LASF28:
 19294 0291 64617461 		.ascii	"database\000"
 19294      62617365 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 439


 19294      00
 19295              	.LASF153:
 19296 029a 665F7265 		.ascii	"f_rename\000"
 19296      6E616D65 
 19296      00
 19297              	.LASF87:
 19298 02a3 636C7374 		.ascii	"clst\000"
 19298      00
 19299              	.LASF51:
 19300 02a8 46525F49 		.ascii	"FR_INT_ERR\000"
 19300      4E545F45 
 19300      525200
 19301              	.LASF155:
 19302 02b3 70617468 		.ascii	"path_new\000"
 19302      5F6E6577 
 19302      00
 19303              	.LASF50:
 19304 02bc 46525F44 		.ascii	"FR_DISK_ERR\000"
 19304      49534B5F 
 19304      45525200 
 19305              	.LASF29:
 19306 02c8 77696E73 		.ascii	"winsect\000"
 19306      65637400 
 19307              	.LASF82:
 19308 02d0 6D656D5F 		.ascii	"mem_cmp\000"
 19308      636D7000 
 19309              	.LASF97:
 19310 02d8 73656374 		.ascii	"sector\000"
 19310      6F7200
 19311              	.LASF106:
 19312 02df 737A6266 		.ascii	"szbfat\000"
 19312      617400
 19313              	.LASF117:
 19314 02e6 6469725F 		.ascii	"dir_next\000"
 19314      6E657874 
 19314      00
 19315              	.LASF158:
 19316 02ef 44626354 		.ascii	"DbcTbl\000"
 19316      626C00
 19317              	.LASF47:
 19318 02f6 666E616D 		.ascii	"fname\000"
 19318      6500
 19319              	.LASF59:
 19320 02fc 46525F57 		.ascii	"FR_WRITE_PROTECTED\000"
 19320      52495445 
 19320      5F50524F 
 19320      54454354 
 19320      454400
 19321              	.LASF163:
 19322 030f 6469736B 		.ascii	"disk_ioctl\000"
 19322      5F696F63 
 19322      746C00
 19323              	.LASF31:
 19324 031a 46415446 		.ascii	"FATFS\000"
 19324      5300
 19325              	.LASF152:
 19326 0320 665F6D6B 		.ascii	"f_mkdir\000"
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 440


 19326      64697200 
 19327              	.LASF44:
 19328 0328 66646174 		.ascii	"fdate\000"
 19328      6500
 19329              	.LASF135:
 19330 032e 77636E74 		.ascii	"wcnt\000"
 19330      00
 19331              	.LASF38:
 19332 0333 66707472 		.ascii	"fptr\000"
 19332      00
 19333              	.LASF81:
 19334 0338 6D656D5F 		.ascii	"mem_set\000"
 19334      73657400 
 19335              	.LASF30:
 19336 0340 73697A65 		.ascii	"sizetype\000"
 19336      74797065 
 19336      00
 19337              	.LASF90:
 19338 0349 6765745F 		.ascii	"get_fileinfo\000"
 19338      66696C65 
 19338      696E666F 
 19338      00
 19339              	.LASF105:
 19340 0356 6E636C73 		.ascii	"nclst\000"
 19340      7400
 19341              	.LASF64:
 19342 035c 46525F54 		.ascii	"FR_TIMEOUT\000"
 19342      494D454F 
 19342      555400
 19343              	.LASF5:
 19344 0367 574F5244 		.ascii	"WORD\000"
 19344      00
 19345              	.LASF34:
 19346 036c 73636C75 		.ascii	"sclust\000"
 19346      737400
 19347              	.LASF71:
 19348 0373 5245535F 		.ascii	"RES_OK\000"
 19348      4F4B00
 19349              	.LASF53:
 19350 037a 46525F4E 		.ascii	"FR_NO_FILE\000"
 19350      4F5F4649 
 19350      4C4500
 19351              	.LASF147:
 19352 0385 66617466 		.ascii	"fatfs\000"
 19352      7300
 19353              	.LASF11:
 19354 038b 54434841 		.ascii	"TCHAR\000"
 19354      5200
 19355              	.LASF115:
 19356 0391 6469725F 		.ascii	"dir_clear\000"
 19356      636C6561 
 19356      7200
 19357              	.LASF79:
 19358 039b 73745F64 		.ascii	"st_dword\000"
 19358      776F7264 
 19358      00
 19359              	.LASF125:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 441


 19360 03a4 73796E63 		.ascii	"sync_fs\000"
 19360      5F667300 
 19361              	.LASF61:
 19362 03ac 46525F4E 		.ascii	"FR_NOT_ENABLED\000"
 19362      4F545F45 
 19362      4E41424C 
 19362      454400
 19363              	.LASF164:
 19364 03bb 6765745F 		.ascii	"get_fattime\000"
 19364      66617474 
 19364      696D6500 
 19365              	.LASF21:
 19366 03c7 6C617374 		.ascii	"last_clst\000"
 19366      5F636C73 
 19366      7400
 19367              	.LASF146:
 19368 03d1 665F6765 		.ascii	"f_getfree\000"
 19368      74667265 
 19368      6500
 19369              	.LASF93:
 19370 03db 6765745F 		.ascii	"get_ldnumber\000"
 19370      6C646E75 
 19370      6D626572 
 19370      00
 19371              	.LASF116:
 19372 03e8 69627566 		.ascii	"ibuf\000"
 19372      00
 19373              	.LASF35:
 19374 03ed 6F626A73 		.ascii	"objsize\000"
 19374      697A6500 
 19375              	.LASF126:
 19376 03f5 665F6D6F 		.ascii	"f_mount\000"
 19376      756E7400 
 19377              	.LASF151:
 19378 03fd 64636C73 		.ascii	"dclst\000"
 19378      7400
 19379              	.LASF109:
 19380 0403 6765745F 		.ascii	"get_fat\000"
 19380      66617400 
 19381              	.LASF111:
 19382 040b 63726561 		.ascii	"create_chain\000"
 19382      74655F63 
 19382      6861696E 
 19382      00
 19383              	.LASF139:
 19384 0418 665F6C73 		.ascii	"f_lseek\000"
 19384      65656B00 
 19385              	.LASF3:
 19386 0420 756E7369 		.ascii	"unsigned char\000"
 19386      676E6564 
 19386      20636861 
 19386      7200
 19387              	.LASF150:
 19388 042e 665F756E 		.ascii	"f_unlink\000"
 19388      6C696E6B 
 19388      00
 19389              	.LASF136:
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 442


 19390 0437 77627566 		.ascii	"wbuff\000"
 19390      6600
 19391              	.LASF4:
 19392 043d 73686F72 		.ascii	"short int\000"
 19392      7420696E 
 19392      7400
 19393              	.LASF137:
 19394 0447 665F7379 		.ascii	"f_sync\000"
 19394      6E6300
 19395              	.LASF99:
 19396 044e 66696E64 		.ascii	"find_volume\000"
 19396      5F766F6C 
 19396      756D6500 
 19397              	.LASF84:
 19398 045a 6462635F 		.ascii	"dbc_1st\000"
 19398      31737400 
 19399              	.LASF37:
 19400 0462 666C6167 		.ascii	"flag\000"
 19400      00
 19401              	.LASF120:
 19402 0467 666F6C6C 		.ascii	"follow_path\000"
 19402      6F775F70 
 19402      61746800 
 19403              	.LASF98:
 19404 0473 63686563 		.ascii	"check_fs\000"
 19404      6B5F6673 
 19404      00
 19405              	.LASF60:
 19406 047c 46525F49 		.ascii	"FR_INVALID_DRIVE\000"
 19406      4E56414C 
 19406      49445F44 
 19406      52495645 
 19406      00
 19407              	.LASF56:
 19408 048d 46525F44 		.ascii	"FR_DENIED\000"
 19408      454E4945 
 19408      4400
 19409              	.LASF94:
 19410 0497 76616C69 		.ascii	"validate\000"
 19410      64617465 
 19410      00
 19411              	.LASF43:
 19412 04a0 64707472 		.ascii	"dptr\000"
 19412      00
 19413              	.LASF63:
 19414 04a5 46525F4D 		.ascii	"FR_MKFS_ABORTED\000"
 19414      4B46535F 
 19414      41424F52 
 19414      54454400 
 19415              	.LASF144:
 19416 04b5 665F7265 		.ascii	"f_readdir\000"
 19416      61646469 
 19416      7200
 19417              	.LASF65:
 19418 04bf 46525F4C 		.ascii	"FR_LOCKED\000"
 19418      4F434B45 
 19418      4400
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 443


 19419              	.LASF17:
 19420 04c9 77666C61 		.ascii	"wflag\000"
 19420      6700
 19421              	.LASF165:
 19422 04cf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 19422      43313120 
 19422      352E342E 
 19422      31203230 
 19422      31363036 
 19423 0502 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 19423      20726576 
 19423      6973696F 
 19423      6E203233 
 19423      37373135 
 19424 0535 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 19424      67202D66 
 19424      66756E63 
 19424      74696F6E 
 19424      2D736563 
 19425              	.LASF88:
 19426 0561 6C645F63 		.ascii	"ld_clust\000"
 19426      6C757374 
 19426      00
 19427              	.LASF12:
 19428 056a 63686172 		.ascii	"char\000"
 19428      00
 19429              	.LASF91:
 19430 056f 63726561 		.ascii	"create_name\000"
 19430      74655F6E 
 19430      616D6500 
 19431              	.LASF49:
 19432 057b 46525F4F 		.ascii	"FR_OK\000"
 19432      4B00
 19433              	.LASF113:
 19434 0581 70636C73 		.ascii	"pclst\000"
 19434      7400
 19435              	.LASF121:
 19436 0587 6469725F 		.ascii	"dir_alloc\000"
 19436      616C6C6F 
 19436      6300
 19437              	.LASF112:
 19438 0591 72656D6F 		.ascii	"remove_chain\000"
 19438      76655F63 
 19438      6861696E 
 19438      00
 19439              	.LASF70:
 19440 059e 44535441 		.ascii	"DSTATUS\000"
 19440      54555300 
 19441              	.LASF122:
 19442 05a6 6E656E74 		.ascii	"nent\000"
 19442      00
 19443              	.LASF85:
 19444 05ab 6462635F 		.ascii	"dbc_2nd\000"
 19444      326E6400 
 19445              	.LASF25:
 19446 05b3 766F6C62 		.ascii	"volbase\000"
 19446      61736500 
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 444


 19447              	.LASF76:
 19448 05bb 6C645F77 		.ascii	"ld_word\000"
 19448      6F726400 
 19449              	.LASF142:
 19450 05c3 665F6F70 		.ascii	"f_opendir\000"
 19450      656E6469 
 19450      7200
 19451              	.LASF55:
 19452 05cd 46525F49 		.ascii	"FR_INVALID_NAME\000"
 19452      4E56414C 
 19452      49445F4E 
 19452      414D4500 
 19453              	.LASF160:
 19454 05dd 6469736B 		.ascii	"disk_write\000"
 19454      5F777269 
 19454      746500
 19455              	.LASF96:
 19456 05e8 6D6F7665 		.ascii	"move_window\000"
 19456      5F77696E 
 19456      646F7700 
 19457              	.LASF77:
 19458 05f4 6C645F64 		.ascii	"ld_dword\000"
 19458      776F7264 
 19458      00
 19459              	.LASF18:
 19460 05fd 6673695F 		.ascii	"fsi_flag\000"
 19460      666C6167 
 19460      00
 19461              	.LASF80:
 19462 0606 6D656D5F 		.ascii	"mem_cpy\000"
 19462      63707900 
 19463              	.LASF130:
 19464 060e 72656D61 		.ascii	"remain\000"
 19464      696E00
 19465              	.LASF46:
 19466 0615 66617474 		.ascii	"fattrib\000"
 19466      72696200 
 19467              	.LASF154:
 19468 061d 70617468 		.ascii	"path_old\000"
 19468      5F6F6C64 
 19468      00
 19469              	.LASF78:
 19470 0626 73745F77 		.ascii	"st_word\000"
 19470      6F726400 
 19471              	.LASF48:
 19472 062e 46494C49 		.ascii	"FILINFO\000"
 19472      4E464F00 
 19473              	.LASF149:
 19474 0636 665F7472 		.ascii	"f_truncate\000"
 19474      756E6361 
 19474      746500
 19475              	.LASF131:
 19476 0641 72636E74 		.ascii	"rcnt\000"
 19476      00
 19477              	.LASF140:
 19478 0646 6E736563 		.ascii	"nsect\000"
 19478      7400
ARM GAS  C:\Users\NUSAIR~1\AppData\Local\Temp\ccFqg92r.s 			page 445


 19479              	.LASF33:
 19480 064c 73746174 		.ascii	"stat\000"
 19480      00
 19481              	.LASF69:
 19482 0651 46524553 		.ascii	"FRESULT\000"
 19482      554C5400 
 19483              	.LASF72:
 19484 0659 5245535F 		.ascii	"RES_ERROR\000"
 19484      4552524F 
 19484      5200
 19485              	.LASF124:
 19486 0663 6469725F 		.ascii	"dir_read\000"
 19486      72656164 
 19486      00
 19487              	.LASF127:
 19488 066c 665F6F70 		.ascii	"f_open\000"
 19488      656E00
 19489              	.LASF54:
 19490 0673 46525F4E 		.ascii	"FR_NO_PATH\000"
 19490      4F5F5041 
 19490      544800
 19491              	.LASF143:
 19492 067e 665F636C 		.ascii	"f_closedir\000"
 19492      6F736564 
 19492      697200
 19493              	.LASF52:
 19494 0689 46525F4E 		.ascii	"FR_NOT_READY\000"
 19494      4F545F52 
 19494      45414459 
 19494      00
 19495              	.LASF36:
 19496 0696 46464F42 		.ascii	"FFOBJID\000"
 19496      4A494400 
 19497              	.LASF161:
 19498 069e 6469736B 		.ascii	"disk_read\000"
 19498      5F726561 
 19498      6400
 19499              	.LASF157:
 19500 06a8 46736964 		.ascii	"Fsid\000"
 19500      00
 19501              	.LASF39:
 19502 06ad 636C7573 		.ascii	"clust\000"
 19502      7400
 19503              	.LASF103:
 19504 06b3 74736563 		.ascii	"tsect\000"
 19504      7400
 19505              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
